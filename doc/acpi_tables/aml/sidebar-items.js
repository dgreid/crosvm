initSidebarItems({"constant":[["ONE","One object in ASL."],["ONES","Ones object represents all bits 1."],["ZERO","Zero object in ASL."]],"enum":[["AddressSpaceCachable","AddressSpaceCachable represent cache types for AddressSpace object"],["FieldAccessType","FiledAccessType defines the filed accessing types."],["FieldEntry","FiledEntry defines the filed entry."],["FieldUpdateRule","FiledUpdateRule defines the rules to update the filed."],["OpRegionSpace","The space type for OperationRegion object"]],"struct":[["Acquire","Acquire object with a Mutex object and timeout value."],["Add","General operation object with the operator a/b and a target."],["AddressSpace","AddressSpace structure with type, resouce range and flags to construct Memory/IO/BusNumber objects"],["And","General operation object with the operator a/b and a target."],["Arg","Argx object."],["Buffer","Buffer object with the data in it."],["Concat","General operation object with the operator a/b and a target."],["ConcatRes","General operation object with the operator a/b and a target."],["CreateDWordField","General operation object with the operator a/b and a target."],["Device","Device object with its device name and children objects in it."],["EISAName","EISAName object. ‘value’ means the encoded u32 EisaIdString."],["Else","Else object"],["Equal","Equal object with its right part and left part, which are both ACPI objects."],["Field","Field object with the region name, filed entries, access type and update rules."],["IO","IO resouce object with the IO range, alignment and length"],["If","If object with the if condition(predicate) and the body presented by the if_children objects."],["Index","General operation object with the operator a/b and a target."],["Interrupt","Interrupt resouce object with the interrupt characters."],["LessThan","LessThan object with its right part and left part, which are both ACPI objects."],["Local","Localx object."],["Memory32Fixed","Memory32Fixed object with read_write accessing type, and the base address/length."],["Method","Method object with its name, children objects, arguments and serialized character."],["MethodCall","MethodCall object with the method name and parameter objects."],["Mod","General operation object with the operator a/b and a target."],["Multiply","General operation object with the operator a/b and a target."],["Mutex","Mutex object with a mutex name and a synchronization level."],["Name","Name object. bytes represents the raw AML data for it."],["Nand","General operation object with the operator a/b and a target."],["Nor","General operation object with the operator a/b and a target."],["Notify","Notify object with an object which is to be notified with the value."],["One",""],["Ones",""],["OpRegion","OperationRegion object with region name, region space type, its offset and length."],["Or","General operation object with the operator a/b and a target."],["Package","Package object. ‘children’ represents the ACPI objects contained in this package."],["Path","Represents Namestring to construct ACPI objects like Name/Device/Method/Scope and so on…"],["Release","Release object with a Mutex object to release."],["ResourceTemplate","ResouceTemplate object. ‘children’ represents the ACPI objects in it."],["Return","Return object with its return value."],["Scope","Scope object with its name and children objects in it."],["ShiftLeft","General operation object with the operator a/b and a target."],["ShiftRight","General operation object with the operator a/b and a target."],["Store","Store object with the ACPI object name which can be stored to and the ACPI object value which is to store."],["Subtract","General operation object with the operator a/b and a target."],["ToString","General operation object with the operator a/b and a target."],["Uuid",""],["While","While object with the while condition objects(predicate) and the while body objects(while_children)."],["Xor","General operation object with the operator a/b and a target."],["Zero",""]],"trait":[["Aml","The trait Aml can be implemented by the ACPI objects to translate itself into the AML raw data. So that these AML raw data can be added into the ACPI DSDT for guest."]],"type":[["AmlStr","implement Aml trait for ‘str’ so that ‘str’ can be directly append to the aml vector"],["AmlString","implement Aml trait for ‘String’. So purpose with str."],["Byte",""],["DWord",""],["QWord",""],["Usize",""],["Word",""]]});