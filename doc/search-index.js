var searchIndex = JSON.parse('{\
"acpi_tables":{"doc":"","t":[0,0,0,0,11,11,11,11,11,11,11,12,12,3,3,3,4,8,6,6,3,13,3,3,13,6,13,13,3,3,3,6,13,3,3,3,13,3,3,4,4,4,13,13,3,13,3,3,3,3,3,3,3,3,3,3,3,3,13,3,3,13,3,17,17,3,3,3,4,3,13,3,3,13,13,13,6,13,3,13,3,3,13,3,3,3,3,3,13,13,13,3,6,3,3,6,13,13,13,13,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,12,12,11,11,11,11,11,12,11,12,11,11,12,12,11,12,12,11,11,11,11,12,12,12,3,11,11,12,11,11,11,12,11,11,11,12,11,12,12,12,11,11,11,11,12,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["aml","facs","rsdp","sdt","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","0","0","Acquire","Add","AddressSpace","AddressSpaceCachable","Aml","AmlStr","AmlString","And","Any","Arg","Buffer","Buffer","Byte","Byte","Cacheable","Concat","ConcatRes","CreateDWordField","DWord","DWord","Device","EISAName","Else","EmbeddedControl","Equal","Field","FieldAccessType","FieldEntry","FieldUpdateRule","GeneralPurposeIO","GenericSerialBus","IO","IPMI","If","Index","Interrupt","LessThan","Local","Memory32Fixed","Method","MethodCall","Mod","Multiply","Mutex","Name","Named","Nand","Nor","NotCacheable","Notify","ONE","ONES","One","Ones","OpRegion","OpRegionSpace","Or","PCIConfig","Package","Path","PciBarTarget","PreFetchable","Preserve","QWord","QWord","Release","Reserved","ResourceTemplate","Return","SMBus","Scope","ShiftLeft","ShiftRight","Store","Subtract","SystemCMOS","SystemIO","SystemMemory","ToString","Usize","Uuid","While","Word","Word","WriteAsOnes","WriteAsZeroes","WriteCombining","Xor","ZERO","Zero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_bus_number","new_field_name","new_io","new_memory","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_aml_bytes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","1","FACS","_reserved1","_reserved2","borrow","borrow_mut","clone","clone_into","default","flags","from","hardware_signature","into","len","length","lock","new","ospm_flags","signature","to_owned","try_from","try_into","type_id","version","waking","x_waking","RSDP","borrow","borrow_mut","checksum","clone","clone_into","default","extended_checksum","from","into","len","length","new","oem_id","revision","signature","to_owned","try_from","try_into","type_id","xsdt_addr","HEADER_LEN","SDT","append","append_slice","as_slice","borrow","borrow_mut","clone","clone_into","from","from_file","into","is_signature","len","new","to_owned","try_from","try_into","type_id","write"],"q":["acpi_tables","","","","","","","","","","","acpi_tables::amlacpi_tables::aml::FieldEntry","","","acpi_tables::facs","","","","","","","","","","","","","","","","","","","","","","","","","acpi_tables::rsdp","","","","","","","","","","","","","","","","","","","","","acpi_tables::sdt","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Acquire object with a Mutex object and timeout value.","General operation object with the operator a/b and a …","AddressSpace structure with type, resouce range and flags …","AddressSpaceCachable represent cache types for …","The trait Aml can be implemented by the ACPI objects to …","implement Aml trait for ‘str’ so that ‘str’ can be …","implement Aml trait for ‘String’. So purpose with str.","General operation object with the operator a/b and a …","","Argx object.","Buffer object with the data in it.","","","","","General operation object with the operator a/b and a …","General operation object with the operator a/b and a …","General operation object with the operator a/b and a …","","","Device object with its device name and children objects in …","EISAName object. ‘value’ means the encoded u32 …","Else object","","Equal object with its right part and left part, which are …","Field object with the region name, filed entries, access …","FiledAccessType defines the filed accessing types.","FiledEntry defines the filed entry.","FiledUpdateRule defines the rules to update the filed.","","","IO resouce object with the IO range, alignment and length","","If object with the if condition(predicate) and the body …","General operation object with the operator a/b and a …","Interrupt resouce object with the interrupt characters.","LessThan object with its right part and left part, which …","Localx object.","Memory32Fixed object with read_write accessing type, and …","Method object with its name, children objects, arguments …","MethodCall object with the method name and parameter …","General operation object with the operator a/b and a …","General operation object with the operator a/b and a …","Mutex object with a mutex name and a synchronization level.","Name object. bytes represents the raw AML data for it.","","General operation object with the operator a/b and a …","General operation object with the operator a/b and a …","","Notify object with an object which is to be notified with …","One object in ASL.","Ones object represents all bits 1.","","","OperationRegion object with region name, region space …","The space type for OperationRegion object","General operation object with the operator a/b and a …","","Package object. ‘children’ represents the ACPI objects …","Represents Namestring to construct ACPI objects like …","","","","","","Release object with a Mutex object to release.","","ResouceTemplate object. ‘children’ represents the ACPI …","Return object with its return value.","","Scope object with its name and children objects in it.","General operation object with the operator a/b and a …","General operation object with the operator a/b and a …","Store object with the ACPI object name which can be stored …","General operation object with the operator a/b and a …","","","","General operation object with the operator a/b and a …","","","While object with the while condition objects(predicate) …","","","","","","General operation object with the operator a/b and a …","Zero object iner ACPI Spec, the Namestring split by “.” has 4 bytes …","Create Name object:","Create Package object:","Per ACPI Spec, the EisaIdString must be a String object of …","Create ResouceTemplate object","Create Memory32Fixed object.","Create IO object","Create Interrupt object","Create Device object","Create Scope object","Create Method object.","Create Return object","Create Field object","Create OperationRegion object.","Create If object.","Create Else object.","Create Equal object.","Create LessThan object.","Create Store object.","Create Mutex object.","Create Acquire object.","Create Release object.","Create Notify object.","Create While object.","Create MethodCall object.","Create Buffer object.","","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create the object.","Create WordBusNumber object","Create Field name object","Create WordIO/DWordIO/QWordIO object","Create DWordMemory/QWordMemory object","Translate an ACPI object into AML code and append to the …","","","","","","","","","","","","","","","","","","","","","","","","","Per ACPI spec, there is maximum 7 Argx objects from Arg0 ~ …","Per ACPI spec, there is maximum 8 Localx objects from …represents for System Description Table. The structure …","","","","","","","","","Set up the ACPI table from file content. Verify file …","","","","Set up the ACPI table header at the front of the SDT. The …","","","","","Write a value at the given offset"],"i":[0,0,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,0,10,0,0,10,0,10,11,0,0,0,0,10,0,0,0,12,0,0,0,0,0,12,12,0,12,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,11,0,0,0,0,0,0,0,0,12,0,0,12,11,14,0,10,0,13,0,0,12,0,0,0,0,0,12,12,12,0,0,0,0,0,10,14,14,11,0,0,0,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,13,31,32,33,34,35,36,8,9,37,38,39,40,41,42,43,44,45,11,10,14,12,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,13,31,32,33,34,35,36,8,9,37,38,39,40,41,42,43,44,45,11,10,14,12,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,11,10,14,12,11,10,14,12,15,16,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,13,31,32,33,34,35,36,8,9,37,38,39,40,41,42,43,44,45,11,10,14,12,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,13,31,32,33,34,35,36,8,9,37,38,39,40,41,42,43,44,45,11,10,14,12,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,24,19,24,24,62,15,16,17,18,19,20,21,22,23,24,24,24,25,26,27,28,29,30,31,32,33,34,35,36,8,9,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,11,10,14,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,13,31,32,33,34,35,36,8,9,37,38,39,40,41,42,43,44,45,11,10,14,12,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,13,31,32,33,34,35,36,8,9,37,38,39,40,41,42,43,44,45,11,10,14,12,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,13,31,32,33,34,35,36,8,9,37,38,39,40,41,42,43,44,45,11,10,14,12,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,63,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67],"f":[null,null,null,null,[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nulladdressspacecachable",4]],[[],["fieldaccesstype",4]],[[],["fieldupdaterule",4]],[[],["opregionspace",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["strstr",15]]],[[["path",3],["aml",8]]],[[["aml",8],["vec",3,["aml"]]]],[[["str",15]]],[[["aml",8],["vec",3,["aml"]]]],[[["u32",15],["bool",15]]],[[["u16",15],["u8",15]]],[[["u32",15],["bool",15]]],[[["path",3],["aml",8],["vec",3,["aml"]]]],[[["path",3],["aml",8],["vec",3,["aml"]]]],[[["u8",15],["aml",8],["bool",15],["path",3],["vec",3,["aml"]]]],[[["aml",8]]],[[["fieldentry",4],["fieldaccesstype",4],["path",3],["fieldupdaterule",4],["vec",3,["fieldentry"]]]],[[["usize",15],["opregionspace",4],["path",3]]],[[["aml",8],["vec",3,["aml"]]]],[[["aml",8],["vec",3,["aml"]]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["path",3],["u8",15]]],[[["u16",15],["path",3]]],[[["path",3]]],[[["aml",8]]],[[["aml",8],["vec",3,["aml"]]]],[[["path",3],["aml",8],["vec",3,["aml"]]]],[[["vec",3,["u8"]],["u8",15]]],[[["str",15]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[["aml",8]]],[[]],[[["str",15]]],[[]],[[["addressspacecachable",4],["bool",15]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[["vec",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[],["facs",3]],[[]],[[],["facs",3]],null,[[]],null,[[]],[[],["usize",15]],null,null,[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],[[]],null,[[],["rsdp",3]],[[]],[[],["rsdp",3]],null,[[]],[[]],[[],["usize",15]],null,[[["u64",15]]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[["datainit",8]]],[[]],[[]],[[]],[[]],[[],["sdt",3]],[[]],[[]],[[["path",3]],["result",6]],[[]],[[],["bool",15]],[[],["usize",15]],[[["u8",15],["u32",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["usize",15],["datainit",8]]]],"p":[[6,"Byte"],[6,"Word"],[6,"DWord"],[6,"QWord"],[6,"Usize"],[6,"AmlStr"],[6,"AmlString"],[3,"Arg"],[3,"Local"],[4,"FieldAccessType"],[4,"AddressSpaceCachable"],[4,"OpRegionSpace"],[4,"FieldEntry"],[4,"FieldUpdateRule"],[3,"Zero"],[3,"One"],[3,"Ones"],[3,"Path"],[3,"Name"],[3,"Package"],[3,"EISAName"],[3,"ResourceTemplate"],[3,"Memory32Fixed"],[3,"AddressSpace"],[3,"IO"],[3,"Interrupt"],[3,"Device"],[3,"Scope"],[3,"Method"],[3,"Return"],[3,"Field"],[3,"OpRegion"],[3,"If"],[3,"Else"],[3,"Equal"],[3,"LessThan"],[3,"Store"],[3,"Mutex"],[3,"Acquire"],[3,"Release"],[3,"Notify"],[3,"While"],[3,"MethodCall"],[3,"Buffer"],[3,"Uuid"],[3,"Add"],[3,"Concat"],[3,"Subtract"],[3,"Multiply"],[3,"ShiftLeft"],[3,"ShiftRight"],[3,"And"],[3,"Nand"],[3,"Or"],[3,"Nor"],[3,"Xor"],[3,"ConcatRes"],[3,"Mod"],[3,"Index"],[3,"ToString"],[3,"CreateDWordField"],[8,"Aml"],[13,"Named"],[13,"Reserved"],[3,"FACS"],[3,"RSDP"],[3,"SDT"]]},\
"anyhow":{"doc":"github crates-io docs-rs","t":[3,8,3,5,6,14,11,11,14,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10],"n":["Chain","Context","Error","Ok","Result","anyhow","as_ref","as_ref","bail","borrow","borrow","borrow_mut","borrow_mut","chain","clone","clone_into","context","context","default","deref","deref_mut","downcast","downcast_mut","downcast_ref","drop","ensure","fmt","fmt","from","from","from","from","into","into","into_iter","is","len","msg","new","new","next","next_back","root_cause","size_hint","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_context"],"q":["anyhow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Iterator of a chain of source errors.","Provides the <code>context</code> method for <code>Result</code>.","The <code>Error</code> type, a wrapper around a dynamic error type.","Equivalent to Ok::&lt;_, anyhow::Error&gt;(value).","<code>Result&lt;T, Error&gt;</code>","Construct an ad-hoc error from a string or existing non-…","","","Return early with an error.","","","","","An iterator of the chain of source errors contained by …","","","Wrap the error value with additional context.","Wrap the error value with additional context.","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","Return early with an error if a condition is not satisfied.","","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","","Create a new error object from a printable error message.","Create a new error object from any error type.","","","","The lowest level cause of this error — this error’s …","","","","","","","","","","Wrap the error value with additional context that is …"],"i":[0,0,0,0,0,0,1,1,0,1,2,1,2,1,2,2,3,1,2,1,1,1,1,1,1,0,1,1,1,1,1,2,1,2,2,1,2,1,1,2,2,2,1,2,2,1,1,2,1,2,1,2,3],"f":[null,null,null,[[],["result",6]],null,null,[[],["stderror",8]],[[],["stderror",8]],null,[[]],[[]],[[]],[[]],[[],["chain",3]],[[],["chain",3]],[[]],[[],[["error",3],["result",6,["error"]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["option",4]],[[],["option",4]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[]],[[]],[[["stderror",8]]],[[],["option",4]],[[],["option",4]],[[],["stderror",8]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["error",3],["result",6,["error"]]]]],"p":[[3,"Error"],[3,"Chain"],[8,"Context"]]},\
"arch":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,4,16,13,13,13,13,13,13,8,4,13,13,13,13,3,13,13,13,13,13,3,13,4,3,3,4,12,5,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,5,10,12,12,10,10,10,10,10,10,10,12,12,12,12,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,10,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,12,12,11,12,12,12,12,12,12,0,12,10,12,12,12,12,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,4,13,13,13,3,3,3,13,13,13,13,6,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,4,13,13,3,13,13,5,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,4,6,13,17,13,5,11,11,11,11,11,11,11,5,11,11,11,11,5,11,11,11,11,12,12],"n":["AddrsExhausted","AllocateDeviceAddrs","AllocateIoAddrs","AllocateIoResource","AllocateIrq","AllocateIrqResource","BadAlignment","Bios","CloneJail","Cmdline","CreatePipe","CreateSerialDevice","CreateTube","DeviceRegistrationError","Error","EventClone","EventCreate","Global","ImageSizeTooLarge","IrqsExhausted","Kernel","LinuxArch","LoadImageError","MissingRequiredSerialDevice","MmioInsert","PerVcpu","ProxyDeviceCreation","Pstore","ReadToMemory","RegisterBattery","RegisterDeviceCapabilities","RegisterIoevent","RegisterIrqfd","RunnableLinuxVm","Seek","VcpuAffinity","VirtioDeviceStub","VmComponents","VmImage","acpi_sdts","add_goldfish_battery","android","android_fstab","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bat_control","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_vm","clone","clone","clone_into","clone_into","configure_pci_device","configure_vcpu","cpu_capacity","cpu_clusters","create_system_allocator","debug_enable_singlestep","debug_read_memory","debug_read_registers","debug_set_hw_breakpoints","debug_write_memory","debug_write_registers","delay_rt","delay_rt","dev","dmi_path","eq","extra_kernel_params","fdt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","gdb","gdb","generate_pci_root","generate_platform_bus","guest_memory_layout","has_bios","host_cpu_topology","hotplug_bus","hugepages","initrd_image","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","io_bus","irq_chip","jail","load_image","load_image_high","memory_size","mmio_bus","ne","no_legacy","no_smt","no_smt","path","pid_debug_label_map","protected_vm","pstore","pstore","register_pci_device","resume_notify_devices","root_config","rt_cpus","rt_cpus","serial","size","suspend_evt","swiotlb","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vcpu_affinity","vcpu_affinity","vcpu_count","vcpu_count","vcpus","vm","vm_image","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","create_android_fdt","Error","FdtFileParseError","FdtGuestMemoryWriteError","FdtIoError","FdtReserveEntry","FdtWriter","FdtWriterNode","InvalidString","OutOfOrderEndNode","PropertyAfterEndNode","PropertyValueTooLarge","Result","TotalSizeTooLarge","UnclosedNode","address","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin_node","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","end_node","finish","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","property","property_array_u32","property_array_u64","property_null","property_string","property_string_list","property_u32","property_u64","set_boot_cpuid_phys","size","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","Error","IoError","MmapError","RamoopsRegion","ResourcesError","SysUtilError","add_ramoops_kernel_cmdline","address","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","create_memory_region","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","size","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","GetSerialCmdlineError","GetSerialCmdlineResult","KernelCmdline","SERIAL_ADDR","UnsupportedEarlyconHardware","add_serial_devices","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","get_serial_cmdline","into","into_any","into_any_arc","into_any_rc","set_default_serial_parameters","to_string","try_from","try_into","type_id","0","0"],"q":["archarch::DeviceRegistrationError","","","","","","","","","","","","","","","","","","arch::LoadImageError","","","","arch::VcpuAffinity","","arch::VmImage","","arch::android","arch::fdt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","arch::fdt::Error","arch::pstore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","arch::pstore::Error","","","","arch::serial","","","","","","","","","","","","","","","","","","","","","","","arch::serial::GetSerialCmdlineError",""],"d":["No more MMIO space available.","Could not allocate device address space for the device.","Could not allocate IO space for the device.","Could not allocate MMIO or IO resource for the device.","Could not allocate an IRQ number.","Could not allocate IRQ resource for the device.","","","Unable to clone a jail for the device.","Appending to kernel command line failed.","","","","Errors for device manager.","","Could not clone an event.","Could not create an event.","All VCPU threads will be pinned to the same set of host …","","No more IRQs are available.","","Trait which is implemented for each Linux Architecture in …","Errors for image loading.","Missing a required serial device.","Could not add a device to the mmio bus.","Each VCPU may be pinned to a set of host CPU cores. The …","Failed to initialize proxy device for jailed device.","","","Failed to register battery device.","Could not register PCI device capabilities.","Failed to register ioevent with VM.","Failed to register irq event with VM.","Holds the elements needed to run a Linux VM. Created by …","","Mapping of guest VCPU threads to host CPU cores.","The device and optional jail.","Holds the pieces needed to build a VM. Passed to <code>build_vm</code> …","","","Adds goldfish battery return the platform needed resouces …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes <code>VmComponents</code> and generates a <code>RunnableLinuxVm</code>.","","","","","Config a PCI device for used by this vm.","Configures the vcpu and should be called once per vcpu …","","","Creates a new <code>SystemAllocator</code> that fits the given <code>Vm</code>’s …","Make the next vCPU’s run single-step.","Reads bytes from the guest memory.","Reads vCPU’s registers.","Set hardware breakpoints at the given addresses.","Writes bytes to the specified guest memory.","Writes vCPU’s registers.","","","","","","","This module writes Flattened Devicetree blobs as defined …","","","","","","","","","","","","","","","","Creates a root PCI device for use by this Vm.","Creates a platform device for use by this Vm.","Returns a Vec of the valid memory addresses as pairs of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load an image from a file into guest memory.","Load an image from a file into guest memory at the highest …","","","","","","","","","","","","Configures and add a pci device into vm","Devices to be notified before the system resumes from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If vcpus is None, then it’s the responsibility of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a flattened device tree containing all of the …","","","","","Reserved physical memory region.","Interface for writing a Flattened Devicetree (FDT) and …","Handle to an open node created by <code>FdtWriter::begin_node</code>.","","","","","","","","Physical address of the beginning of the reserved region.","","","","","","","","","Open a new FDT node.","","","","","","","","","Close a node previously opened with <code>begin_node</code>.","Finish writing the Devicetree Blob (DTB).","","","","","","","","","","","","","","","","","","","","","","","","Create a new Flattened Devicetree writer instance.","Write a property.","Write a property containing an array of 32-bit unsigned …","Write a property containing an array of 64-bit unsigned …","Write an empty property.","Write a string property.","Write a stringlist property.","Write a 32-bit unsigned integer property.","Write a 64-bit unsigned integer property.","Set the <code>boot_cpuid_phys</code> field of the devicetree header.","Size of the reserved region in bytes.","","","","","","","","","","","","","","","Error for pstore.","","","","","","","","","","","","","","","","Creates a mmio memory region for pstore.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Address for Serial ports in x86","","Adds serial devices to the provided bus based on the …","","","","","","","","Add serial options to the provided <code>cmdline</code> based on …","","","","","Add the default serial parameters for serial ports that …","","","","","",""],"i":[1,1,1,1,1,1,2,3,1,1,1,1,1,0,4,1,1,5,2,1,3,0,0,1,1,5,1,0,2,1,1,1,1,0,2,0,0,0,0,6,0,0,6,3,6,7,8,9,5,1,2,3,6,7,8,9,5,1,2,7,3,6,7,8,9,5,1,2,3,6,7,8,9,5,1,2,4,9,5,9,5,0,4,6,6,4,4,4,4,4,4,4,6,7,8,6,5,6,0,5,1,1,2,2,3,6,7,8,9,5,1,2,6,7,0,0,4,7,6,7,6,6,3,6,7,8,9,5,1,2,3,6,7,8,9,5,1,2,3,6,7,9,5,1,2,3,6,7,8,9,5,1,2,7,7,8,0,0,6,7,5,6,6,7,9,7,6,0,6,4,7,7,6,7,0,9,7,6,9,5,1,2,3,6,7,8,9,5,1,2,3,6,7,8,9,5,1,2,3,6,7,8,9,5,1,2,6,7,6,7,7,7,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,36,36,36,0,0,0,36,36,36,36,0,36,36,37,38,37,36,39,38,37,36,39,38,38,37,36,39,38,37,36,39,38,38,36,36,39,38,37,36,39,38,37,36,39,38,37,36,39,38,37,36,39,38,37,36,39,38,38,38,38,38,38,38,38,38,38,37,36,38,37,36,39,38,37,36,39,38,37,36,39,40,0,41,41,0,41,41,0,42,42,41,42,41,42,41,42,41,0,41,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,43,44,45,46,0,0,47,0,47,0,47,47,47,47,47,47,47,0,47,47,47,47,0,47,47,47,47,48,49],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["irqchip",8],["minijail",3],["option",4,["minijail"]],["bus",3],["u32",15],["vec",3],["systemallocator",3]],[["tube",3],["result",4,["tube","deviceregistrationerror"]],["deviceregistrationerror",4]]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4,["ramoopsregion"]],["vec",3],["option",4,["minijail"]],["minijail",3],["systemallocator",3],["vmcomponents",3],["irqchiparch",8],["btreemap",3],["ramoopsregion",3],["vec",3],["event",3]],[["result",4,["runnablelinuxvm"]],["runnablelinuxvm",3]]],[[],["pstore",3]],[[],["vcpuaffinity",4]],[[]],[[]],[[["runnablelinuxvm",3],["option",4,["minijail"]],["pcidevice",8],["minijail",3],["systemallocator",3],["box",3,["pcidevice"]]],[["result",4,["pciaddress","deviceregistrationerror"]],["pciaddress",3],["deviceregistrationerror",4]]],[[["irqchiparch",8],["vcpuarch",8],["usize",15],["hypervisorarch",8],["bool",15]],["result",4]],null,null,[[],["systemallocator",3]],[[],["result",4]],[[["usize",15],["guestmemory",3],["guestaddress",3]],[["result",4,["vec"]],["vec",3,["u8"]]]],[[],[["result",4,["gdbstubregs"]],["gdbstubregs",3]]],[[],["result",4]],[[["guestmemory",3],["guestaddress",3]],["result",4]],[[["gdbstubregs",3]],["result",4]],null,null,null,null,[[["vcpuaffinity",4]],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["vec",3],["irqchip",8],["usize",15],["bus",3],["systemallocator",3],["arc",3,["bus"]]],[["deviceregistrationerror",4],["result",4,["deviceregistrationerror"]]]],[[["vec",3],["irqchip",8],["bus",3],["systemallocator",3]],[["deviceregistrationerror",4],["result",4,["btreemap","deviceregistrationerror"]],["btreemap",3,["u32","string"]]]],[[["vmcomponents",3]],[["result",4,["vec"]],["vec",3]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,[[["u64",15],["guestmemory",3],["guestaddress",3]],[["usize",15],["result",4,["usize","loadimageerror"]],["loadimageerror",4]]],[[["u64",15],["guestmemory",3],["guestaddress",3]],[["result",4,["loadimageerror"]],["loadimageerror",4]]],null,null,[[["vcpuaffinity",4]],["bool",15]],null,null,null,null,null,null,null,null,[[["runnablelinuxvm",3],["option",4,["minijail"]],["pcidevice",8],["minijail",3],["systemallocator",3],["box",3,["pcidevice"]]],[["pciaddress",3],["result",4,["pciaddress"]]]],null,null,null,null,null,null,null,null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["file",3],["fdtwriter",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["str",15]],[["fdtwriternode",3],["result",6,["fdtwriternode"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fdtwriternode",3]],["result",6]],[[["usize",15]],[["vec",3,["u8"]],["result",6,["vec"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["string",3],["str",15],["vec",3,["string"]]],["result",6]],[[["str",15],["u32",15]],["result",6]],[[["u64",15],["str",15]],["result",6]],[[["u32",15]]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[["cmdline",3],["ramoopsregion",3]],[["result",4,["error"]],["error",4]]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["systemallocator",3],["pstore",3]],[["ramoopsregion",3],["result",4,["ramoopsregion","error"]],["error",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["btreemap",3],["option",4,["minijail"]],["bus",3],["minijail",3],["protectiontype",4],["event",3]],[["result",4,["deviceregistrationerror"]],["deviceregistrationerror",4]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["cmdline",3],["btreemap",3],["str",15]],["getserialcmdlineresult",6]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["any",8],["box",3,["any","global"]]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["btreemap",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null],"p":[[4,"DeviceRegistrationError"],[4,"LoadImageError"],[4,"VmImage"],[8,"LinuxArch"],[4,"VcpuAffinity"],[3,"VmComponents"],[3,"RunnableLinuxVm"],[3,"VirtioDeviceStub"],[3,"Pstore"],[13,"AllocateDeviceAddrs"],[13,"AllocateIoAddrs"],[13,"AllocateIoResource"],[13,"AllocateIrqResource"],[13,"CloneJail"],[13,"Cmdline"],[13,"CreatePipe"],[13,"CreateSerialDevice"],[13,"CreateTube"],[13,"EventClone"],[13,"EventCreate"],[13,"MissingRequiredSerialDevice"],[13,"MmioInsert"],[13,"ProxyDeviceCreation"],[13,"RegisterBattery"],[13,"RegisterDeviceCapabilities"],[13,"RegisterIoevent"],[13,"RegisterIrqfd"],[13,"BadAlignment"],[13,"ImageSizeTooLarge"],[13,"ReadToMemory"],[13,"Seek"],[13,"Global"],[13,"PerVcpu"],[13,"Kernel"],[13,"Bios"],[4,"Error"],[3,"FdtReserveEntry"],[3,"FdtWriter"],[3,"FdtWriterNode"],[13,"FdtIoError"],[4,"Error"],[3,"RamoopsRegion"],[13,"IoError"],[13,"MmapError"],[13,"ResourcesError"],[13,"SysUtilError"],[4,"GetSerialCmdlineError"],[13,"KernelCmdline"],[13,"UnsupportedEarlyconHardware"]]},\
"argh":{"doc":"Derive-based argument parsing optimized for code size and …","t":[18,18,6,3,8,8,8,24,8,8,8,11,11,5,11,11,10,11,11,11,11,10,10,5,11,11,12,11,10,12,11,11,11,11],"n":["COMMAND","COMMANDS","CommandInfo","EarlyExit","Flag","FromArgValue","FromArgs","FromArgs","SubCommand","SubCommands","TopLevelCommand","borrow","borrow_mut","cargo_from_env","clone","clone_into","default","eq","fmt","from","from","from_arg_value","from_args","from_env","into","ne","output","redact_arg_values","set_flag","status","to_owned","try_from","try_into","type_id"],"q":["argh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Information about the subcommand.","Info for the commands.","Information about a particular command used for output.","Information to display to the user about why a <code>FromArgs</code> …","A type which can be the receiver of a <code>Flag</code>.","Types which can be constructed from a single commandline …","Types which can be constructed from a set of commandline …","Entrypoint for <code>#[derive(FromArgs)]</code>.","A <code>FromArgs</code> implementation that represents a single …","A <code>FromArgs</code> implementation that can parse into one or more …","A top-level <code>FromArgs</code> implementation that is not a …","","","Create a <code>FromArgs</code> type from the current process’s …","","","Creates a default instance of the flag value;","","","","","Construct the type from a commandline value, returning an …","Construct the type from an input set of arguments.","Create a <code>FromArgs</code> type from the current process’s …","","","The output to display to the user of the commandline tool.","Get a String with just the argument names, e.g., options, …","Sets the flag. This function is called when the flag is …","Status of argument parsing.","","","",""],"i":[1,2,0,0,0,0,0,0,0,0,0,3,3,0,3,3,4,3,3,3,3,5,6,0,3,3,3,6,4,3,3,3,3,3],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["toplevelcommand",8]],[[],["earlyexit",3]],[[]],[[]],[[["earlyexit",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["string",3]]],[[]],[[["str",15]],[["result",4,["string"]],["string",3]]],[[],[["earlyexit",3],["result",4,["earlyexit"]]]],[[],["toplevelcommand",8]],[[]],[[["earlyexit",3]],["bool",15]],null,[[],[["result",4,["vec","earlyexit"]],["vec",3,["string"]],["earlyexit",3]]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[8,"SubCommand"],[8,"SubCommands"],[3,"EarlyExit"],[8,"Flag"],[8,"FromArgValue"],[8,"FromArgs"]]},\
"argh_derive":{"doc":"","t":[24],"n":["FromArgs"],"q":["argh_derive"],"d":["Entrypoint for <code>#[derive(FromArgs)]</code>."],"i":[0],"f":[null],"p":[]},\
"argh_shared":{"doc":"Shared functionality between argh_derive and the argh …","t":[3,17,11,11,12,11,11,12,11,11,11,5],"n":["CommandInfo","INDENT","borrow","borrow_mut","description","from","into","name","try_from","try_into","type_id","write_description"],"q":["argh_shared","","","","","","","","","","",""],"d":["Information about a particular command used for output.","","","","A short description of the command’s functionality.","","","The name of the command.","","","","Write command names and descriptions to an output string."],"i":[0,0,1,1,1,1,1,1,1,1,1,0],"f":[null,null,[[]],[[]],null,[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["commandinfo",3],["string",3]]]],"p":[[3,"CommandInfo"]]},\
"assertions":{"doc":"Macros that assert properties of code at compile time.","t":[14],"n":["const_assert"],"q":["assertions"],"d":["Macro that fails to compile if a given const expression is …"],"i":[0],"f":[null],"p":[]},\
"async_task":{"doc":"Task abstraction for building executors.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11],"n":["Runnable","Task","borrow","borrow","borrow_mut","borrow_mut","cancel","detach","drop","drop","fmt","fmt","from","from","into","into","into_future","poll","run","schedule","spawn","spawn_local","spawn_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","waker"],"q":["async_task","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A handle to a runnable task.","A spawned task.","","","","","Cancels the task and waits for it to stop running.","Detaches the task to let it keep running in the background.","","","","","","","","","","","Runs the task by polling its future.","Schedules the task.","Creates a new task.","Creates a new thread-local task.","Creates a new task without <code>Send</code>, <code>Sync</code>, and <code>&#39;static</code> bounds.","","","","","","","Returns a waker associated with this task."],"i":[0,0,1,2,1,2,2,2,1,2,1,2,1,2,1,2,2,2,1,1,0,0,0,1,2,1,2,1,2,1],"f":[null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["pin",3],["context",3]],["poll",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["waker",3]]],"p":[[3,"Runnable"],[3,"Task"]]},\
"async_trait":{"doc":"github crates-io docs-rs","t":[23],"n":["async_trait"],"q":["async_trait"],"d":[""],"i":[0],"f":[null],"p":[]},\
"audio_streams":{"doc":"Provides an interface for playing and recording audio.","t":[8,3,8,6,8,13,13,4,13,13,13,3,3,3,13,3,4,8,13,13,13,4,8,4,4,4,8,13,13,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,4,8,13,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,4,16,3,3,3,3,3,8,8,8,13,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12],"n":["AsyncBufferCommit","AsyncPlaybackBuffer","AsyncPlaybackBufferStream","BoxError","BufferCommit","Capture","EchoCancellation","Error","InvalidEffect","InvalidLength","NoEffect","NoopStream","NoopStreamControl","NoopStreamSource","Playback","PlaybackBuffer","PlaybackBufferError","PlaybackBufferStream","S16LE","S24LE","S32LE","SampleFormat","StreamControl","StreamDirection","StreamEffect","StreamEffectError","StreamSource","U8","Unimplemented","async_write_playback_buffer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture","clone","clone","clone","clone_into","clone_into","clone_into","commit","commit","commit","commit","copy_cb","copy_cb","copy_from","default","default","default","eq","eq","eq","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_capacity","frame_capacity","from","from","from","from","from","from","from","from","from","from","from","from_str","into","into","into","into","into","into","into","into","into","into","into","keep_fds","new","new","new","new","new","new_async_capture_stream","new_async_playback_stream","new_async_playback_stream","new_capture_stream","new_playback_stream","new_playback_stream","next_playback_buffer","next_playback_buffer","next_playback_buffer","next_playback_buffer","sample_bytes","set_mute","set_volume","shm_streams","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write_playback_buffer","AsyncCaptureBuffer","AsyncCaptureBufferStream","CaptureBuffer","CaptureBufferError","CaptureBufferStream","InvalidLength","NoopCaptureStream","async_read_capture_buffer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit","commit","copy_cb","copy_cb","copy_to","fmt","fmt","frame_capacity","frame_capacity","from","from","from","from","into","into","into","into","new","new","new","next_capture_buffer","next_capture_buffer","next_capture_buffer","next_capture_buffer","read","read","read_capture_buffer","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","BufferSet","Error","Error","MockShmStream","MockShmStreamSource","NullShmStream","NullShmStreamSource","ServerRequest","SharedMemory","ShmStream","ShmStreamSource","TooManyFrames","anon","as_raw_fd","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","callback","clone","clone","clone_into","clone_into","default","default","fmt","fmt","frame_rate","frame_rate","frame_rate","frame_size","frame_size","frame_size","from","from","from","from","from","from","get_last_stream","ignore","ignore","ignore","ignore_request","into","into","into","into","into","into","keep_fds","new","new","new","new","new","new_stream","new_stream","new_stream","num_channels","num_channels","num_channels","requested_frames","set_buffer_offset_and_frames","size","to_owned","to_owned","to_string","trigger_callback_with_timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","wait_for_next_action_with_timeout","wait_for_next_action_with_timeout","wait_for_next_action_with_timeout","0","1"],"q":["audio_streamsaudio_streams::capture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","audio_streams::shm_streams","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","audio_streams::shm_streams::Error",""],"d":["<code>AsyncBufferCommit</code> is a cleanup funcion that must be called …","<code>AsyncPlaybackBuffer</code> is the async version of <code>PlaybackBuffer</code>.","<code>PlaybackBufferStream</code> provides <code>PlaybackBuffer</code>s …","Errors that can pass across threads.","<code>BufferCommit</code> is a cleanup funcion that must be called …","","","","","","","Stream that accepts playback samples but drops them.","No-op control for <code>NoopStream</code>s.","Source of <code>NoopStream</code> and <code>NoopStreamControl</code> objects.","","<code>PlaybackBuffer</code> is one buffer that holds buffer_size audio …","Errors that are possible from a <code>PlaybackBuffer</code>.","<code>PlaybackBufferStream</code> provides <code>PlaybackBuffer</code>s to fill with …","","","","","<code>StreamControl</code> provides a way to set the volume and mute …","Valid directions of an audio stream.","Valid effects for an audio stream.","Errors that are possible from a <code>StreamEffect</code>.","<code>StreamSource</code> creates streams for playback or capture of …","","","Call <code>f</code> with a <code>AsyncPlaybackBuffer</code>, and trigger the buffer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>write_playback_buffer</code> or <code>read_capture_buffer</code> would trigger …","<code>async_write_playback_buffer</code> or <code>async_read_capture_buffer</code> …","This triggers the commit of <code>BufferCommit</code>. This should be …","This triggers the callback of <code>AsyncBufferCommit</code>. This …","Writes up to <code>size</code> bytes directly to this buffer inside of …","Writes up to <code>size</code> bytes directly to this buffer inside of …","Copy data from an io::Reader","","","","","","","","","","","","","","","","","","","Returns the number of audio frames that fit in the buffer.","Returns the number of audio frames that fit in the buffer.","","","","","","","","","","","","","","","","","","","","","","","","Returns any open file descriptors needed by the …","Creates a new <code>PlaybackBuffer</code> that holds a reference to the …","Creates a new <code>AsyncPlaybackBuffer</code> that holds a reference …","","","","Returns a stream control and async buffer generator …","Returns a stream control and async buffer generator …","","Returns a stream control and buffer generator object. …","Returns a stream control and buffer generator object. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call <code>f</code> with a <code>PlaybackBuffer</code>, and trigger the buffer done …","Async version of ’CaptureBuffer`","","<code>CaptureBuffer</code> contains a block of audio samples got from …","Errors that are possible from a <code>CaptureBuffer</code>.","<code>CaptureBufferStream</code> provides <code>CaptureBuffer</code>s to read with …","","Stream that provides null capture samples.","Call <code>f</code> with a <code>AsyncCaptureBuffer</code>, and trigger the buffer …","","","","","","","","","This triggers the callback of <code>BufferCommit</code>. This should be …","This triggers the callback of <code>AsyncBufferCommit</code>. This …","Reads up to <code>size</code> bytes directly from this buffer inside of …","Reads up to <code>size</code> bytes directly from this buffer inside of …","Copy data to an io::Write","","","Returns the number of audio frames that fit in the buffer.","Returns the number of audio frames that fit in the buffer.","","","","","","","","","Creates a new <code>CaptureBuffer</code> that holds a reference to the …","Creates a new <code>AsyncCaptureBuffer</code> that holds a reference to …","","","","","","","","Call <code>f</code> with a <code>CaptureBuffer</code>, and trigger the buffer done …","","","","","","","","","","","","","","<code>BufferSet</code> is used as a callback mechanism for <code>ServerRequest</code>…","","","","Source of <code>MockShmStream</code> objects.","Class that implements ShmStream trait but does nothing …","Source of <code>NullShmStream</code> objects.","<code>ServerRequest</code> represents an active request from the server …","<code>SharedMemory</code> specifies features of shared memory areas …","<code>ShmStream</code> allows a client to interact with an active CRAS …","<code>ShmStreamSource</code> creates streams for playback or capture of …","","Creates a new shared memory file descriptor without …","Returns the underlying raw fd.","","","","","","","","","","","","","Called when the client sets a buffer offset and length.","","","","","","","","","","","Get the frame rate of audio data for this stream.","","","Get the size of a frame of audio data for this stream.","","","","","","","","","Get the last stream that has been created from this …","Called when the client ignores a request from the server.","","","Ignore this request","","","","","","","Get a list of file descriptors used by the implementation.","Create a new ServerRequest object","Attempt to create a new NullShmStream with the given …","","Attempt to create a new MockShmStream with the given …","","Creates a new <code>ShmStream</code>","","","Get the number of channels of audio data for this stream.","","","Get the number of frames of audio data requested by the …","Sets the buffer offset and length for the requested buffer.","Gets the size in bytes of the shared memory.","","","","Call to request data from the stream, causing it to return …","","","","","","","","","","","","","","","","","","","Waits until the next server message indicating action is …","","","",""],"i":[0,0,0,0,0,1,2,0,3,4,2,0,0,0,1,0,0,0,5,5,5,0,0,0,0,0,0,5,6,0,7,8,9,5,1,2,3,6,4,10,11,7,8,9,5,1,2,3,6,4,10,11,0,5,1,2,5,1,2,12,13,7,8,7,8,8,2,10,11,5,1,2,7,8,5,5,1,2,3,3,6,6,4,4,7,8,7,8,9,5,1,2,3,6,4,10,11,2,7,8,9,5,1,2,3,6,4,10,11,14,7,8,9,10,11,14,14,11,14,14,11,15,16,9,9,5,17,17,0,5,1,2,5,3,6,4,7,8,9,5,1,2,3,6,4,10,11,7,8,9,5,1,2,3,6,4,10,11,7,8,9,5,1,2,3,6,4,10,11,7,8,15,0,0,0,0,0,18,0,0,19,20,21,18,19,20,21,18,19,20,19,20,20,18,18,19,20,19,20,21,18,19,20,21,18,19,20,21,22,23,21,21,19,20,22,18,19,20,21,18,19,20,21,18,19,20,21,18,0,0,24,0,0,0,0,0,0,0,0,25,24,24,26,27,25,28,29,30,26,27,25,28,29,30,31,27,29,29,30,29,30,28,30,25,25,32,27,29,32,27,29,26,27,25,28,29,30,30,31,27,29,26,26,27,25,28,29,30,33,26,27,28,29,30,33,28,30,32,27,29,26,26,24,29,30,25,29,26,27,25,28,29,30,26,27,25,28,29,30,26,27,25,28,29,30,32,27,29,34,34],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["executor",4],["asyncplaybackbufferstream",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["sampleformat",4]],[[],["streamdirection",4]],[[],["streameffect",4]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],[[["usize",15],["fnonce",8]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["fnonce",8]],[["usize",15],["result",6,["usize"]]]],[[["read",8]],[["usize",15],["result",6,["usize"]]]],[[]],[[],["noopstreamcontrol",3]],[[],["noopstreamsource",3]],[[["sampleformat",4]],["bool",15]],[[["streamdirection",4]],["bool",15]],[[["streameffect",4]],["bool",15]],[[],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["rawfd"]],["option",4,["vec"]]]],[[["usize",15]],[["result",4,["playbackbuffererror"]],["playbackbuffererror",4]]],[[["usize",15]],[["result",4,["playbackbuffererror"]],["playbackbuffererror",4]]],[[["usize",15],["u32",15],["sampleformat",4]]],[[]],[[]],[[["usize",15],["u32",15],["sampleformat",4],["executor",4]],[["result",4,["boxerror"]],["boxerror",6]]],[[["usize",15],["u32",15],["sampleformat",4],["executor",4]],[["result",4,["boxerror"]],["boxerror",6]]],[[["usize",15],["u32",15],["sampleformat",4],["executor",4]],[["result",4,["boxerror"]],["boxerror",6]]],[[["usize",15],["u32",15],["sampleformat",4]],[["result",4,["boxerror"]],["boxerror",6]]],[[["usize",15],["u32",15],["sampleformat",4]],[["result",4,["boxerror"]],["boxerror",6]]],[[["usize",15],["u32",15],["sampleformat",4]],[["result",4,["boxerror"]],["boxerror",6]]],[[],[["playbackbuffer",3],["boxerror",6],["result",4,["playbackbuffer","boxerror"]]]],[[["executor",4]],[["box",3,["future"]],["pin",3,["box"]]]],[[["executor",4]],[["box",3,["future"]],["pin",3,["box"]]]],[[],[["playbackbuffer",3],["boxerror",6],["result",4,["playbackbuffer","boxerror"]]]],[[],["usize",15]],[[["bool",15]]],[[["f64",15]]],null,[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["fnmut",8]],[["result",4,["boxerror"]],["boxerror",6]]],null,null,null,null,null,null,null,[[["asynccapturebufferstream",8],["executor",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["fnonce",8]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["fnonce",8]],[["usize",15],["result",6,["usize"]]]],[[["write",8]],[["usize",15],["result",6,["usize"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["capturebuffererror",4],["result",4,["capturebuffererror"]]]],[[["usize",15]],[["capturebuffererror",4],["result",4,["capturebuffererror"]]]],[[["usize",15],["u32",15],["sampleformat",4]]],[[],[["result",4,["capturebuffer","boxerror"]],["capturebuffer",3],["boxerror",6]]],[[["executor",4]],[["box",3,["future"]],["pin",3,["box"]]]],[[],[["result",4,["capturebuffer","boxerror"]],["capturebuffer",3],["boxerror",6]]],[[["executor",4]],[["box",3,["future"]],["pin",3,["box"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["fnmut",8]],[["result",4,["boxerror"]],["boxerror",6]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]],["result",4]],[[],["rawfd",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["result",4,["boxerror"]],["boxerror",6]]],[[["usize",15]],[["result",4,["boxerror"]],["boxerror",6]]],[[["usize",15]],[["result",4,["boxerror"]],["boxerror",6]]],[[],["mockshmstream",3]],[[],["mockshmstreamsource",3]],[[]],[[]],[[],["nullshmstreamsource",3]],[[],["mockshmstreamsource",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mockshmstream",3]],[[],[["result",4,["boxerror"]],["boxerror",6]]],[[],[["result",4,["boxerror"]],["boxerror",6]]],[[],[["result",4,["boxerror"]],["boxerror",6]]],[[],[["result",4,["boxerror"]],["boxerror",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["rawfd"]],["rawfd",6]]],[[["usize",15]]],[[["usize",15],["sampleformat",4],["u32",15]]],[[]],[[["usize",15],["u32",15],["sampleformat",4]]],[[]],[[["usize",15],["u32",15],["streamdirection",4],["sharedmemory",8],["sampleformat",4]],[["result",4,["box","boxerror"]],["box",3,["shmstream"]],["boxerror",6]]],[[["usize",15],["u32",15],["streamdirection",4],["sharedmemory",8],["sampleformat",4]],[["result",4,["box","boxerror"]],["box",3,["shmstream"]],["boxerror",6]]],[[["usize",15],["u32",15],["streamdirection",4],["sharedmemory",8],["sampleformat",4]],[["result",4,["box","boxerror"]],["box",3,["shmstream"]],["boxerror",6]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]],[["result",4,["boxerror"]],["boxerror",6]]],[[],["u64",15]],[[]],[[]],[[],["string",3]],[[["duration",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["duration",3]],[["result",4,["option","boxerror"]],["boxerror",6],["option",4,["serverrequest"]]]],[[["duration",3]],[["result",4,["option","boxerror"]],["boxerror",6],["option",4,["serverrequest"]]]],[[["duration",3]],[["result",4,["option","boxerror"]],["boxerror",6],["option",4,["serverrequest"]]]],null,null],"p":[[4,"StreamDirection"],[4,"StreamEffect"],[4,"StreamEffectError"],[4,"PlaybackBufferError"],[4,"SampleFormat"],[4,"Error"],[3,"PlaybackBuffer"],[3,"AsyncPlaybackBuffer"],[3,"NoopStream"],[3,"NoopStreamControl"],[3,"NoopStreamSource"],[8,"BufferCommit"],[8,"AsyncBufferCommit"],[8,"StreamSource"],[8,"PlaybackBufferStream"],[8,"AsyncPlaybackBufferStream"],[8,"StreamControl"],[4,"CaptureBufferError"],[3,"CaptureBuffer"],[3,"AsyncCaptureBuffer"],[3,"NoopCaptureStream"],[8,"CaptureBufferStream"],[8,"AsyncCaptureBufferStream"],[8,"SharedMemory"],[4,"Error"],[3,"ServerRequest"],[3,"NullShmStream"],[3,"NullShmStreamSource"],[3,"MockShmStream"],[3,"MockShmStreamSource"],[8,"BufferSet"],[8,"ShmStream"],[8,"ShmStreamSource"],[13,"TooManyFrames"]]},\
"base":{"doc":"","t":[12,12,12,12,12,12,12,12,13,13,13,13,8,8,8,8,8,3,13,13,3,13,4,4,13,13,13,13,13,13,13,13,3,3,8,13,3,3,3,3,3,3,4,4,8,4,13,13,3,4,6,3,3,3,4,3,8,8,4,8,8,8,8,8,8,3,8,8,8,8,13,4,8,6,13,17,17,17,17,17,17,17,17,17,17,13,13,13,8,13,13,13,13,13,13,6,6,13,13,13,3,8,3,13,13,13,6,8,3,3,3,3,3,8,8,4,6,13,3,3,3,3,13,13,13,13,13,6,13,3,3,3,3,3,8,24,13,13,3,8,13,13,6,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,5,5,3,8,3,3,3,8,8,13,13,3,13,13,3,3,8,4,3,4,13,13,8,6,13,13,13,13,13,13,13,8,13,13,13,3,3,13,3,13,13,13,3,4,6,6,3,3,13,6,13,6,13,13,13,13,3,4,3,13,13,13,13,8,8,8,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,10,11,11,11,10,10,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,5,11,5,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,14,5,5,5,0,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,10,10,5,5,5,10,10,5,11,10,11,11,11,11,5,5,5,5,5,11,0,14,14,14,10,11,5,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,14,14,14,14,14,14,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,12,12,12,11,11,11,11,11,5,5,11,5,5,11,14,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,5,11,11,12,5,5,11,11,10,10,0,11,11,11,11,11,10,10,0,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,10,10,11,11,5,11,11,11,11,11,5,5,11,11,11,10,11,11,11,11,11,11,11,11,11,11,5,5,0,0,11,11,10,10,10,10,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,10,10,11,5,11,11,11,11,5,5,11,11,11,11,11,11,11,5,11,0,10,11,11,11,11,11,11,11,10,11,14,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,5,14,14,14,14,0,11,11,11,11,11,11,11,5,5,5,11,11,11,14,0,0,5,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,10,10,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,8,8,8,8,8,8,10,10,10,10,0,10,11,11,11,11,10,10,11,11,10,11,11,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,6,11,5,5,5,5,5,5,11,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,8,10,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,12,4,3,3,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,3,3,11,11,11,11,11,11,12,11,11,12,11,12,5,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,5,11,11,11,11,13,3,4,13,13,13,6,3,13,8,13,11,11,11,11,11,10,11,11,11,11,11,5,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,3,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,5,5,13,4,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,5,11,11,5,5,5,11,11,11,5,5,11,5,11,5,10,5,5,11,11,11,11,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,4,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,13,13,13,13,13,3,8,17,4,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5],"n":["0","0","0","0","0","0","0","0","Abort","AddFdMappingIsUnsupported","Alarm","Allocate","AsIobuf","AsRawDescriptor","AsRawDescriptors","AsRawFds","AsRawPid","AsyncTube","Bus","Child","Clock","Clone","CloneError","CloneNamespace","Continue","Continued","Count","Count","CreateAsync","CreateBlockSignal","CreateSignalFd","CreateSigset","Descriptor","DescriptorAdapter","DescriptorIntoAsync","Disconnected","EmptySignalHandler","EpollContext","EpollEvents","Error","Event","EventFd","EventReadResult","EventReadResult","EventToken","EventType","ExceededFileSize","Exited","ExternalMapping","ExternalMappingError","ExternalMappingResult","FakeClock","FakeTimer","FakeTimerFd","FallocateMode","Fd","FileAllocate","FileAllocate","FileFlags","FileGetLen","FileGetLen","FileReadWriteAtVolatile","FileReadWriteAtVolatile","FileReadWriteVolatile","FileReadWriteVolatile","FileSerdeWrapper","FileSetLen","FileSetLen","FileSync","FileSync","FloatingPointException","FlockOperation","FromRawDescriptor","Gid","HangUp","IOCSIZE_MASK","IOCSIZE_MASK","IOCSIZE_SHIFT","IOCSIZE_SHIFT","IOC_IN","IOC_IN","IOC_INOUT","IOC_INOUT","IOC_OUT","IOC_OUT","IllegalInstruction","Inherit","Interrupt","IntoRawDescriptor","InvalidAddress","InvalidArgument","InvalidOffset","InvalidRange","InvalidSize","Io","IoctlNr","IoctlNr","IterateTasks","Json","Kill","KillOnDrop","Killable","LayoutAllocation","LibraryError","LockExclusive","LockShared","Map","MappedRegion","MemfdSeals","MemoryMapping","MemoryMapping","MemoryMappingArena","MemoryMappingBuilder","MemoryMappingBuilderUnix","MemoryMappingUnix","MmapError","Mode","Multithreaded","NetlinkGenericRead","NetlinkGenericSocket","NetlinkMessage","NetlinkMessageIter","NewUserPid","None","NotPageAligned","NullAddress","Pair","Pid","Pipe","PollContext","PollEvent","PollEventIter","PollEvents","PollEventsOwned","PollToken","PollToken","Power","Profile","Protection","PunchHole","PunchHole","Quit","RawDescriptor","Read","Read","ReadToMemory","ReadWrite","ReadWrite","Recv","RemoveMappingIsUnsupported","Result","Rt0","Rt1","Rt10","Rt11","Rt12","Rt13","Rt14","Rt15","Rt16","Rt17","Rt18","Rt19","Rt2","Rt20","Rt21","Rt22","Rt23","Rt24","Rt25","Rt26","Rt27","Rt28","Rt29","Rt3","Rt30","Rt31","Rt4","Rt5","Rt6","Rt7","Rt8","Rt9","Running","SCM_SOCKET_MAX_FD_COUNT","SIGRTMAX","SIGRTMIN","SafeDescriptor","ScmSocket","ScopedEvent","ScopedEvent","ScopedSignalHandler","SeekHole","SeekHole","SegmentationViolation","Send","SerializeDescriptors","SetRecvTimeout","SetSendTimeout","SharedMemory","SharedMemory","SharedMemoryUnix","Signal","SignalFd","SignalFdError","SignalFdPartialRead","SignalFdRead","SignalHandler","SignalResult","Signaled","StackFault","Stop","Stopped","Sys","Sys","SystemCallFailed","Terminal","Terminate","Timeout","Timeout","Timer","TimerFd","Trap","TriggeredEvent","TtyIn","TtyOut","TtyStop","Tube","TubeError","TubeResult","Uid","UnlinkUnixDatagram","UnlinkUnixListener","Unlock","Unmap","Unsupported","UnsyncMarker","Urgent","User1","User2","VtAlarm","WaitContext","WaitStatus","WatchingEvents","Winch","Write","Write","WriteFromMemory","WriteZeroes","WriteZeroesAt","WriteZeroesAt","Xcpu","ZeroRange","_IOC_DIRBITS","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NONE","_IOC_NRBITS","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_NRSHIFT","_IOC_READ","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_TYPESHIFT","_IOC_WRITE","_IOC_WRITE","_type","add","add","add","add_anon","add_anon_protection","add_event_fd","add_fd","add_fd_flags","add_fd_mapping","add_fd_mapping","add_fd_offset","add_fd_offset_protection","add_fd_with_events","add_fd_with_events","add_for_event","add_many","add_many","add_many","add_ns","add_seals","add_seals","add_seals","allocate","allocate","anon","anon","anon","as_iobuf","as_iobuf_slice","as_mut","as_mut","as_mut_slice","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_pid","as_raw_token","as_raw_token","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","bitmask","block_signal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_fixed","build_with","build_with","build_with","checked_sub","checked_sub","chown","clear","clear","clear","clear","clear_fd_flags","clear_signal","clear_signal_handler","clone","clone","clone","clone","clone","clone","clone","clone","clone_descriptor","clone_fd","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_process","cmp","create_sigset","data","debug","default","default","default","default","delete","delete","delete","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_with_descriptors","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_capabilities","duration_since","duration_since","duration_to_timespec","elapsed","elapsed","empty","enable_core_scheduling","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","errno","errno_result","error","fallocate","fchmod","fchown","file_traits","flags","flock","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_descriptor","from_descriptor","from_fd","from_fd_offset","from_fd_offset_protection","from_fd_offset_protection_fixed","from_fd_offset_protection_populate","from_file","from_file","from_file","from_file","from_file","from_raw_descriptor","from_raw_descriptor","from_raw_descriptor","from_raw_descriptor","from_raw_descriptor","from_raw_fd","from_raw_fd","from_raw_token","from_raw_token","from_safe_descriptor","from_safe_descriptor","from_shared_memory","fsync","fsync","get_blocked_signals","get_cpu_affinity","get_filesystem_type","get_len","get_len","get_max_open_files","get_raw","get_seals","get_seals","get_seals","get_slice","get_slice","getegid","geteuid","getpid","getsid","gettid","grow_seal","handle_eintr","handle_eintr","handle_eintr_errno","handle_eintr_rc","handle_signal","handle_signal","has_default_signal_handler","hash","hungup","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_async_tube","into_descriptors","into_iter","into_iter","into_raw_descriptor","into_raw_descriptor","into_raw_descriptor","into_raw_descriptor","into_raw_descriptor","into_raw_descriptor","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","ioctl","ioctl","ioctl","ioctl","ioctl_expr","ioctl_io_nr","ioctl_ioc_nr","ioctl_ior_nr","ioctl_iow_nr","ioctl_iowr_nr","ioctl_with_mut_ptr","ioctl_with_mut_ptr","ioctl_with_mut_ptr","ioctl_with_mut_ref","ioctl_with_mut_ref","ioctl_with_mut_ref","ioctl_with_ptr","ioctl_with_ptr","ioctl_with_ptr","ioctl_with_ref","ioctl_with_ref","ioctl_with_ref","ioctl_with_val","ioctl_with_val","ioctl_with_val","iov_max","is_armed","is_armed","is_armed","is_armed","is_hungup","is_readable","is_writable","iter","iter","iter_hungup","iter_readable","iter_writable","kernel_has_memfd","kill","kill","kill_process_group","kill_tree","last","log","max_timeout","modify","modify","modify","msync","msync","msync","named","named","nanos","ne","ne","ne","ne","ne","ne","ne","ne","net","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_pipe_full","new_protection","new_protection_fixed","next","next","next","none","now","now","offset","open_file","pagesize","pair","partial_cmp","pid","pipe","poll_in","populate","protection","pthread_handle","punch_hole","rand","read","read","read","read","read","read_at_volatile","read_at_volatile","read_dir","read_exact_at_volatile","read_exact_at_volatile","read_exact_volatile","read_exact_volatile","read_name","read_obj","read_obj","read_raw_stdin","read_slice","read_slice","read_timeout","read_timeout","read_to_memory","read_to_memory","read_vectored_at_volatile","read_vectored_at_volatile","read_vectored_volatile","read_vectored_volatile","read_volatile","read_volatile","read_write","readable","reap_child","recv","recv","recv_iovecs_with_fds","recv_with_fd","recv_with_fds","register_rt_signal_handler","register_signal_handler","remove","remove_mapping","remove_mapping","remove_range","remove_range","remove_range","reset","reset","reset","reset","resolution","resolution","resolution","resolution","round_up_to_page_size","safe_descriptor_from_path","scoped_path","scoped_signal_handler","seal_seal","seek","seek_data","seek_data","seek_hole","seek_hole","send","send_bufs_with_fd","send_bufs_with_fds","send_with_fd","send_with_fds","seq","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_canon_mode","set_cpu_affinity","set_grow_seal","set_len","set_len","set_non_block","set_pipe_size","set_raw_mode","set_read","set_read","set_recv_timeout","set_rt_prio_limit","set_rt_round_robin","set_seal_seal","set_send_timeout","set_shrink_seal","set_size","set_write","set_write","set_write_seal","setsid","shrink_seal","signal","size","size","size","size","size","size","size","size","socket_fd","source","syscall","syslog","timeout","timeout_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","token","token","try_clone","try_clone","try_clone","try_clone","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tty_fd","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblock_signal","uninitialized","use_hugepages","use_hugepages","validate_raw_descriptor","validate_raw_fd","volatile_at_impl","volatile_at_impl","volatile_impl","volatile_impl","vsock","wait","wait","wait","wait","wait","wait","wait","wait_for_interrupt","wait_for_pid","wait_for_signal","wait_timeout","wait_timeout","wait_timeout","warn","with_as_descriptor","with_raw_descriptor","wrap_descriptor","writable","write","write","write","write_all_at_volatile","write_all_at_volatile","write_all_volatile","write_all_volatile","write_at_volatile","write_at_volatile","write_from_memory","write_from_memory","write_obj","write_obj","write_seal","write_slice","write_slice","write_vectored_at_volatile","write_vectored_at_volatile","write_vectored_volatile","write_vectored_volatile","write_volatile","write_volatile","write_zeroes","write_zeroes_all","write_zeroes_all_at","write_zeroes_all_at","write_zeroes_at","write_zeroes_at","zeroed","0","0","0","0","0","0","0","0","0","0","1","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AsRawFds","FileAllocate","FileGetLen","FileReadWriteAtVolatile","FileReadWriteVolatile","FileSetLen","FileSync","allocate","as_raw_fds","fsync","get_len","lib","read_at_volatile","read_exact_at_volatile","read_exact_volatile","read_vectored_at_volatile","read_vectored_volatile","read_volatile","set_len","write_all_at_volatile","write_all_volatile","write_at_volatile","write_vectored_at_volatile","write_vectored_volatile","write_volatile","IoBufMut","VolatileSlice","advance","advance","as_iobuf","as_iobuf","as_iobuf_slice","as_iobufs","as_iobufs","as_mut","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_int","c_void","clone","clone","clone","clone_into","clone_into","clone_into","copy_from","copy_to","copy_to_volatile_slice","fmt","fmt","fmt","from","from","from","from","from_raw_parts","from_raw_parts","get_slice","into","into","into","into","iov_base","iov_len","iovec","is_empty","len","new","new","off64_t","offset","pread64","preadv64","pwrite64","pwritev64","read","readv","size","size_t","sub_slice","to_owned","to_owned","to_owned","truncate","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write_bytes","writev","InterruptibleResult","is_interrupted","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","IoctlNr","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","ioctl","ioctl_with_mut_ptr","ioctl_with_mut_ref","ioctl_with_ptr","ioctl_with_ref","ioctl_with_val","0","InetVersion","TcpSocket","UnixSeqpacket","UnixSeqpacketListener","UnlinkUnixSeqpacketListener","V4","V6","accept","as_raw_descriptor","as_raw_descriptor","as_raw_descriptors","as_raw_descriptors","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_ref","bind","bind","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect","connect","deref","deserialize","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","from","from_raw_descriptor","from_raw_fd","from_raw_fd","from_sockaddr","get_readable_bytes","into","into","into","into","into","into_raw_descriptor","into_raw_fd","listen","local_port","new","next_packet_size","pair","path","recv","recv_as_vec","recv_as_vec_with_fds","recv_to_vec","send","serialize","set_read_timeout","set_write_timeout","socket_fd","to_owned","try_clone","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Pseudorandom","Random","Source","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","rand_bytes","rand_vec","to_owned","try_from","try_into","type_id","DirEntry","ReadDir","borrow","borrow","borrow_mut","borrow_mut","from","from","ino","into","into","name","next","offset","read_dir","try_from","try_from","try_into","try_into","type_","type_id","type_id","ScopedPath","as_ref","borrow","borrow_mut","create","deref","drop","from","get_temp_path","into","try_from","try_into","type_id","AlreadyWaiting","EmptySignalHandler","Error","HandlerAlreadySet","HasDefaultSignalHandler","RegisterSignalHandler","Result","ScopedSignalHandler","Sigaction","SignalHandler","WaitForSignal","borrow","borrow_mut","fmt","fmt","from","handle_signal","into","to_string","try_from","try_into","type_id","wait_for_interrupt","0","0","0","0","0","1","1","1","Abort","Alarm","BlockSignal","Bus","Child","ClearCheckPending","ClearGetPending","ClearWaitPending","CompareBlockedSignals","Continue","CreateSigset","Error","ExceededFileSize","FloatingPointException","GetSid","HangUp","IllegalInstruction","Interrupt","Io","Kill","Kill","KillOnDrop","Killable","Pipe","Power","Profile","Quit","RetrieveSignalMask","Rt0","Rt1","Rt10","Rt11","Rt12","Rt13","Rt14","Rt15","Rt16","Rt17","Rt18","Rt19","Rt2","Rt20","Rt21","Rt22","Rt23","Rt24","Rt25","Rt26","Rt27","Rt28","Rt29","Rt3","Rt30","Rt31","Rt4","Rt5","Rt6","Rt7","Rt8","Rt9","RtSignumGreaterThanMax","SIGRTMAX","SIGRTMIN","SegmentationViolation","Signal","SignalAlreadyBlocked","SignalResult","StackFault","Stop","Sys","Terminate","TimedOut","Trap","TtyIn","TtyOut","TtyStop","UnblockSignal","UnrecognizedSignum","Urgent","User1","User2","VtAlarm","WaitForSignal","WaitPid","Winch","Xcpu","block_signal","borrow","borrow_mut","clear_signal","clear_signal_handler","create_sigset","fmt","fmt","from","get_blocked_signals","has_default_signal_handler","into","kill","kill","kill_tree","pthread_handle","register_rt_signal_handler","register_signal_handler","to_string","try_from","try_into","type_id","unblock_signal","wait_for_signal","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Alert","Auth","Connect","Critical","Daemon","Debug","Emergency","Error","Error","Facility","GetLowestFd","Info","InvalidFd","Kernel","Local0","Local1","Local2","Local3","Local4","Local5","Local6","Local7","Lpr","Mail","NeverInitialized","News","Notice","Poisoned","Priority","Socket","Syslog","Syslogger","User","Uucp","Warning","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","echo_file","echo_stderr","echo_syslog","flush","fmt","fmt","fmt","fmt","from","from","from","from","init","into","into","into","into","log","new","push_descriptors","push_fds","set_proc_name","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","0","0","0","AddrParseError","Any","Cid","Host","Hypervisor","Local","SocketAddr","ToSocketAddr","VMADDR_PORT_ANY","VsockCid","VsockListener","VsockSocket","VsockStream","accept","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fds","as_raw_fds","as_raw_fds","bind","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cid","clone","clone","clone_into","clone_into","cmp","cmp","connect","connect","drop","eq","eq","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","from_str","hash","hash","into","into","into","into","into","into","into_raw_fd","into_raw_fd","listen","local_port","local_port","local_port","ne","ne","new","partial_cmp","partial_cmp","port","read","set_nonblocking","set_nonblocking","set_nonblocking","to_owned","to_owned","to_socket_addr","to_socket_addr","to_string","to_string","to_string","try_clone","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","0","deserialize","serialize","deserialize","serialize"],"q":["base","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base::CloneError","","","base::EventReadResult","","base::ExternalMappingError","base::MmapError","","","","","","base::SignalFdError","","","","","base::TubeError","","","","","","","","base::WaitStatus","","","base::file_traits","","","","","","","","","","","","","","","","","","","","","","","","","base::file_traits::lib","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base::handle_eintr","","base::ioctl","","","","","","","","","","","","","","","","","","","","","","","","","","","base::net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base::rand","","","","","","","","","","","","","","","","","","base::read_dir","","","","","","","","","","","","","","","","","","","","","","base::scoped_path","","","","","","","","","","","","","base::scoped_signal_handler","","","","","","","","","","","","","","","","","","","","","","","base::scoped_signal_handler::Error","","","","","","","","base::signal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base::signal::Error","","","","","","","","","","","","","","","base::syslog","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base::syslog::Error","","","base::vsock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base::vsock::VsockCid","base::with_as_descriptor","","base::with_raw_descriptor",""],"d":["","","","","","","","","","","","","Trait for types that can be converted into an <code>iovec</code> that …","Trait for returning the underlying raw descriptor, without …","A trait similar to <code>AsRawDescriptor</code> but supports an …","A trait similar to <code>AsRawFd</code> but supports an arbitrary …","A trait used to abstract types that provide a process id …","","","","","","","Controls what namespace <code>clone_process</code> will have. See …","","","","","","Failed to block the signal when creating signalfd.","Failed to create a new signalfd.","Failed to construct sigset when creating signalfd.","For use cases where a simple wrapper around a …","To use an IO struct with cros_async, the type must be …","Like <code>cros_async::IntoAsync</code>, except for use with crosvm’s …","","A signal handler that does nothing.","EpollContext wraps linux epoll. It provides similar …","EpollEvents wraps raw epoll_events, it should only be used …","An error number, retrieved from errno (man 3 errno), set …","See EventFd for struct- and method-level documentation.","A safe wrapper around a Linux eventfd (man 2 eventfd).","Wrapper around the return value of doing a read on an …","Wrapper around the return value of doing a read on an …","","Represents types of events to watch for.","","","ExternalMapping wraps an external library mapping.  This …","","","A fake clock that can be used in tests to give exact …","See FakeTimerFd for struct- and method-level documentation.","FakeTimerFd: For use in tests.","The operation to perform with <code>fallocate</code>.","","A trait for allocating disk space in a sparse file. This …","A trait for allocating disk space in a sparse file. This …","","A trait for getting the size of a file. This is equivalent …","A trait for getting the size of a file. This is equivalent …","A trait similar to the unix <code>ReadExt</code> and <code>WriteExt</code> traits, …","A trait similar to the unix <code>ReadExt</code> and <code>WriteExt</code> traits, …","A trait similar to <code>Read</code> and <code>Write</code>, but uses volatile …","A trait similar to <code>Read</code> and <code>Write</code>, but uses volatile …","A simple wrapper around <code>File</code> that implements <code>Serialize</code>/…","A trait for setting the size of a file. This is equivalent …","A trait for setting the size of a file. This is equivalent …","A trait for flushing the contents of a file to disk. This …","A trait for flushing the contents of a file to disk. This …","","The operation to perform with <code>flock</code>.","","","","","","","","","","","","","","","The new process will inherit the namespace from the old …","","Trait for forfeiting ownership of the current raw …","","","","","","","","","There was an error trying to iterate this process’s …","","","Wraps a Child process, and calls kill_tree for its process …","Trait for threads that can be signalled via <code>pthread_kill</code>.","A contiguous memory allocation with a specified size and …","","","","","A range of memory that can be msynced, for abstracting …","A set of memfd seals.","Wraps an anonymous shared memory mapping in the current …","See MemoryMapping for struct- and method-level …","Tracks Fixed Memory Maps within an anonymous memory-mapped …","","","","","","There are multiple threads running. The <code>usize</code> indicates …","","Safe wrapper for <code>NETLINK_GENERIC</code> netlink sockets.","A single netlink message, including its header and data.","Iterator over <code>struct nlmsghdr</code> as received from a netlink …","The new process with be in a new user and PID namespace.","","","","","Re-export libc types that are part of the API.","","Used to poll multiple objects that have file descriptors.","An event returned by <code>PollContext::wait</code>.","An iterator over some (sub)set of events returned by …","The list of event returned by <code>PollContext::wait</code>.","A deep copy of the event records from <code>PollEvents</code>.","Trait for a token that can be associated with an <code>fd</code> in a …","Implements the PollToken trait for a given <code>enum</code>.","","","Memory access type for anonymous shared memory mapping.","A trait for deallocating space in a file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum number of FDs that can be sent in a single …","Returns the maximum (inclusive) real-time signal number.","Returns the minimum (inclusive) real-time signal number.","Wraps a RawDescriptor and safely closes it when self falls …","Trait for file descriptors can send and receive socket …","See ScopedEvent for struct- and method-level documentation.","An <code>EventFd</code> wrapper which triggers when it goes out of …","Represents a signal handler that is registered with a set …","A trait for seeking to the next hole or non-hole position …","A trait for seeking to the next hole or non-hole position …","","","Wrapper for a <code>Serialize</code> value which will capture any …","","","A shared memory file descriptor and its size.","See SharedMemory for struct- and method-level …","","","A safe wrapper around a Linux signalfd (man 2 signalfd).","","Signalfd could be read, but didn’t return a full siginfo …","Unable to read from signalfd.","The interface used by Scoped Signal handler.","","","","","","There was an error while cloning.","","","Trait for file descriptors that are TTYs, according to …","","","","See TimerFd for struct- and method-level documentation.","A safe wrapper around a Linux timerfd (man 2 …","","Represents an event that has been signaled and waited for …","","","","Bidirectional tube that support both send and recv.","","","","Used to attempt to clean up a named pipe after it is no …","Used to attempt to clean up a named pipe after it is no …","","","","Used to mark types as !Sync.","","","","","Used to wait for multiple objects which are eligible for …","A logical set of the values *status can take from …","Watching events taken by PollContext.","","","","","A trait for writing zeroes to a stream.","A trait for writing zeroes to an arbitrary position in a …","A trait for writing zeroes to an arbitrary position in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a trigger to the WaitContext.","Adds the given <code>fd</code> to this context and associates the given …","Adds the given <code>fd</code> to this context and associates the given …","Anonymously maps <code>size</code> bytes at <code>offset</code> bytes from the start …","Anonymously maps <code>size</code> bytes at <code>offset</code> bytes from the start …","Register the event fd for a notification when self’s …","Maps <code>size</code> bytes from the start of the given <code>fd</code> at <code>offset</code> …","Performs a logical OR of the given flags with the FD’s …","Maps <code>size</code> bytes starting at <code>fd_offset</code> bytes from within …","","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …","Adds the given <code>fd</code> to this context, watching for the …","Adds the given <code>fd</code> to this context, watching for the …","Adds a trigger to the WaitContext watching for a specific …","Adds multiple triggers to the WaitContext.","Adds the given slice of <code>fd</code> and <code>token</code> tuples to this …","Adds the given slice of <code>fd</code> and <code>token</code> tuples to this …","","","","Adds the given set of memfd seals.","Allocate storage for the region of the file starting at …","Allocate storage for the region of the file starting at …","","","Convenience function for <code>SharedMemory::new</code> that has an …","Returns a <code>iovec</code> that describes a contiguous region of …","Returns a slice of <code>iovec</code>s that each describe a contiguous …","Returns an exclusive reference to the allocated data.","","Returns an exclusive slice reference to the allocated data.","Returns a pointer to the beginning of the memory region. …","","Returns a raw pointer to the allocated data.","","used for passing this region to ioctls for setting guest …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this token into a u64 that can be turned back …","","Returns a shared reference to the allocated data.","Takes a reference to the events so that they can be …","","","","Returns a shared slice reference to the allocated data.","Gets the raw bitmask of seals enumerated in <code>fcntl(2)</code>.","Masks given signal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a MemoryMapping from the provided options.","Build a MemoryMapping from the provided options at a fixed …","Creates a new WaitContext with the the associated triggers.","Creates a new <code>EpollContext</code> and adds the slice of <code>fd</code> and …","Creates a new <code>PollContext</code> and adds the slice of <code>fd</code> and …","","","Safe wrapper for chown(2).","","","Disarms the timer.","Disarms the timer.","Clears the given flags in the FD’s flags.","Clears pending signal.","Resets the signal handler of signum <code>num</code> back to the …","","","","","","","","","Clones <code>descriptor</code>, returning a new <code>RawDescriptor</code> that …","Clones <code>fd</code>, returning a new file descriptor that refers to …","","","","","","","","","Clones this process and calls a closure in the new process.","","Creates <code>sigset</code> from an array of signal numbers.","","A macro for logging debug information.","","","","","Removes the given handle from triggers registered in the …","Deletes the given <code>fd</code> from this context.","Deletes the given <code>fd</code> from this context.","","","","","","","","","","","","","","","","Allows the use of any serde deserializer within a closure …","","","","","","","","","","","","","Drops all capabilities (permitted, inheritable, and …","","Get the duration since |earlier|, assuming that earlier &lt; …","Return a timespec filed with the specified Duration …","","Get the time that has elapsed since this clock was made. …","Returns empty Events.","Enable experimental core scheduling for the current thread.","","","","","","","","","","","","Gets the errno for this error","Returns the last errno as a Result that is always an error.","A macro for logging an error.","Safe wrapper for <code>fallocate()</code>.","Safe wrapper for fchmod(2).","Safe wrapper for fchown(2).","","","Safe wrapper for flock(2) with the operation <code>op</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the memory mapping given the specified descriptor to …","Maps the first <code>size</code> bytes of the given <code>fd</code> as read/write.","","Maps the <code>size</code> bytes starting at <code>offset</code> bytes of the given …","Maps the <code>size</code> bytes starting at <code>offset</code> bytes of the given …","Maps <code>size</code> bytes starting at <code>offset</code> from the given <code>fd</code> as …","Build the memory mapping given the specified File to …","","","","Constructs a <code>SharedMemory</code> instance from a <code>File</code> that …","Safety","","","","","","","Converts a raw token as returned from <code>as_raw_token</code> back …","","Creates a SharedMemory instance from a SafeDescriptor …","Creates a SharedMemory instance from a SafeDescriptor …","Build the memory mapping given the specified SharedMemory …","","","Retrieves the signal mask of the current thread as a …","","Obtain file system type of the file system that the file …","Get the current length of the file in bytes.","Get the current length of the file in bytes.","Get the max number of open files allowed by the …","Get the underlying epoll events.","","","Gets the memfd seals that have already been added to this.","","","Safe wrapper for <code>getegid(2)</code>.","Safe wrapper for <code>geteuid(2)</code>.","This bypasses <code>libc</code>’s caching <code>getpid(2)</code> wrapper which can …","Safe wrapper for <code>getsid(2)</code>.","Safe wrapper for the gettid Linux systemcall.","True of the grow seal bit is present.","Macro and helper trait for handling interrupted routines.","Macro that retries the given expression every time its …","Macro that retries the given expression every time its …","Macro that retries the given expression every time its …","A function that is called to handle the passed signal.","","Returns true if the signal handler for signum <code>num</code> is the …","","True if the <code>fd</code> associated with this token in …","A macro for logging info.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Macros and wrapper functions for dealing with ioctls.","Run an ioctl with no arguments.","Run an ioctl with no arguments.","Run an ioctl with no arguments.","Raw macro to declare the expression that calculates an …","Declare an ioctl that transfers no data.","Raw macro to declare a function that returns an ioctl …","Declare an ioctl that reads data.","Declare an ioctl that writes data.","Declare an ioctl that reads and writes data.","Run an ioctl with a mutable raw pointer.","Run an ioctl with a mutable raw pointer.","Run an ioctl with a mutable raw pointer.","Run an ioctl with a mutable reference.","Run an ioctl with a mutable reference.","Run an ioctl with a mutable reference.","Run an ioctl with a raw pointer.","Run an ioctl with a raw pointer.","Run an ioctl with a raw pointer.","Run an ioctl with an immutable reference.","Run an ioctl with an immutable reference.","Run an ioctl with an immutable reference.","Run an ioctl with a single value argument.","Run an ioctl with a single value argument.","Run an ioctl with a single value argument.","Safe wrapper for <code>sysconf(_SC_IOV_MAX)</code>.","","","Returns <code>true</code> if the timer is currently armed.","Returns <code>true</code> if the timer is currently armed.","","","","","Iterates over each event.","Iterates over each hungup event.","Iterates over each readable event.","Iterates over each writable event.","Checks if the kernel we are running on has memfd_create. …","Safety","Sends the signal <code>num</code> to this killable thread.","Kill all processes in the current process group.","Terminates and reaps a child process. If the child process …","Constructs an error from the current errno.","A macro for logging at an arbitrary priority level.","Return the maximum Duration that can be used with …","Modifies a trigger already added to the WaitContext. If …","If <code>fd</code> was previously added to this context, the watched …","If <code>fd</code> was previously added to this context, the watched …","","Calls msync with MS_SYNC on a mapping of <code>size</code> bytes …","Calls msync with MS_SYNC on the mapping.","","Convenience function for <code>SharedMemory::new</code> that is always …","Get the current time in ns, according to this clock.","","","","","","","","","","","Creates a new builder specifying size of the memory region …","","","","Creates a new WaitContext.","","","","Creates a new <code>ScopedEvent</code> which triggers when it goes out …","Creates an mmap arena of <code>size</code> bytes.","Create and bind a new <code>NETLINK_GENERIC</code> socket.","","Build Events from raw epoll events (defined in …","Creates a new <code>EpollContext</code>.","Creates a new <code>PollContext</code>.","Attempts to register <code>handler</code> with the provided <code>signals</code>. It …","Creates a new SignalFd for the given signal, blocking the …","Creates a new timerfd.  The timer is initally disarmed and …","Creates a new fake timerfd.  The timer is initally …","","","Constructs a new error with the given errno.","Creates a new blocking EventFd with an initial value of 0.","Creates an ExternalMapping given a library-specific …","Creates an anonymous shared, read/write mapping of <code>size</code> …","Creates a new shared memory file descriptor with zero size.","Returns an empty set of memfd seals.","Test-only function used to create a pipe that is full. The …","Creates an anonymous shared mapping of <code>size</code> bytes with <code>prot</code>…","Creates an anonymous shared mapping of <code>size</code> bytes with <code>prot</code>…","","","","Returns Protection allowing no access.","","Get the current time, according to this clock.","Offset in bytes from the beginning of the mapping to start …","Open the file with the given path, or if it is of the form …","Safe wrapper for <code>sysconf(_SC_PAGESIZE)</code>.","Create a pair of connected tubes. Request is send in one …","","","Spawns a pipe pair where the first pipe is the read end …","Utility function that returns true if the given FD is …","Request that the mapped pages are pre-populated","Protection (e.g. readable/writable) of the memory region.","","Replace a range of bytes with a hole.","Rust implementation of functionality parallel to libchrome…","","Read a siginfo struct from the signalfd, if available.","Blocks until the the eventfd’s count is non-zero, then …","Returns Protection allowing read access.","","Reads bytes from this file at <code>offset</code> into the given slice, …","Reads bytes from this file at <code>offset</code> into the given slice, …","","Reads bytes from this file at <code>offset</code> into the given slice …","Reads bytes from this file at <code>offset</code> into the given slice …","Reads bytes from this into the given slice until all bytes …","Reads bytes from this into the given slice until all bytes …","Reads the name from the underlying file as a <code>String</code>.","","Reads on object from the memory region at the given offset.","Read raw bytes from stdin.","","Reads to a slice from the memory region at the specified …","","Blocks for a maximum of <code>timeout</code> duration until the the …","","Reads data from a file descriptor and writes it to guest …","Like <code>read_at_volatile</code>, except it reads to a slice of …","Like <code>read_at_volatile</code>, except it reads to a slice of …","Like <code>read_volatile</code>, except it reads to a slice of buffers. …","Like <code>read_volatile</code>, except it reads to a slice of buffers. …","Read bytes from this file into the given slice, returning …","Read bytes from this file into the given slice, returning …","Returns Protection allowing read/write access.","True if the <code>fd</code> associated with this token in …","Reaps a child process that has terminated.","","Receive messages from the netlink socket.","Receives data and file descriptors from the socket.","Receives data and potentially a file descriptor from the …","Receives data and file descriptors from the socket.","Registers <code>handler</code> as the signal handler for the real-time …","Registers <code>handler</code> as the signal handler of signum <code>num</code>.","Removes <code>size</code> bytes at <code>offset</code> bytes from the start of the …","Remove <code>size</code>-byte mapping starting at <code>offset</code>.","","","","Uses madvise to tell the kernel to remove the specified …","","","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …","","","Returns the resolution of timers on the host.","Returns the resolution of timers on the host.","Uses the system’s page size in bytes to round the given …","If the given path is of the form /proc/self/fd/N for some …","","Provides a struct for registering signal handlers that get …","True of the seal seal bit is present.","","Seek to the first data in a file at a position greater …","Seek to the first data in a file at a position greater …","Seek to the first hole in a file at a position greater …","Seek to the first hole in a file at a position greater …","","Sends the given data and file descriptor over the socket.","Sends the given data and file descriptors over the socket.","Sends the given data and file descriptor over the socket.","Sends the given data and file descriptors over the socket.","","","","","","","","","","Set this terminal’s mode to canonical mode (…","Set the CPU affinity of the current thread to a given set …","Sets the grow seal bit.","","","Sets the non-blocking mode of this terminal’s file …","Sets the pipe signified with fd to <code>size</code>.","Set this terminal’s mode to raw mode (…","Set read events.","Set read events.","","Enables real time thread priorities in the current thread …","Sets the current thread to be scheduled using the round …","Sets the seal seal bit.","","Sets the shrink seal bit.","Sets the size in bytes of the shared memory.","Set write events.","Set write events.","Sets the write seal bit.","Wrapper for <code>setsid(2)</code>.","True of the shrink seal bit is present.","","Returns the size of the memory region in bytes.","","","","","Returns the size of the memory region in bytes.","","Gets the size in bytes of the shared memory.","Gets the file descriptor of this socket.","","","Facilities for sending log message to syslog.","Get the timeout. See timeout_mut() for more details.","Change the timeout for how long child processes are waited …","","Copies the events to an owned structure so the reference …","","","","","","","","","","","","","","Gets the token associated in <code>PollContext::add</code> with this …","","","","Creates a new <code>TimerFd</code> instance that shares the same …","Clones this descriptor, internally creating a new …","Clones this EventFd, internally creating a new file …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the file descriptor of the TTY.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unmasks given signal.","Allocates memory with the specified size and alignment. …","","Madvise the kernel to use Huge Pages for this mapping.","Verifies that |raw_descriptor| is actually owned by this …","Verifies that |raw_fd| is actually owned by this process …","","","","","","","","Waits for one or more of the registered triggers to become …","Waits for any events to occur in FDs that were previously …","Waits for any events to occur in FDs that were previously …","Waits until the timer expires.  The return value …","Waits until the timer expires.  The return value …","Blocks until SIGINT is received, which often happens …","A safe wrapper around waitpid.","Wait for signal before continuing. The signal number of …","Waits for one or more of the registered triggers to become …","Like <code>wait</code> except will only block for a maximum of the …","Like <code>wait</code> except will only block for a maximum of the …","A macro for logging a warning.","Module that exports <code>serialize</code>/<code>deserialize</code> functions for …","Module that exports <code>serialize</code>/<code>deserialize</code> functions for …","Wraps an AsRawDescriptor in the simple Descriptor struct, …","True if the <code>fd</code> associated with this token in …","","Adds <code>v</code> to the eventfd’s count, blocking until this won’…","","Writes bytes from this file at <code>offset</code> into the given slice …","Writes bytes from this file at <code>offset</code> into the given slice …","Write bytes from the slice to the given file until all the …","Write bytes from the slice to the given file until all the …","Writes bytes from this file at <code>offset</code> into the given …","Writes bytes from this file at <code>offset</code> into the given …","","Writes data from memory to a file descriptor.","","Writes an object to the memory region at the specified …","True of the write seal bit is present.","","Writes a slice to the memory region at the specified …","Like <code>write_at_at_volatile</code>, except that it writes from a …","Like <code>write_at_at_volatile</code>, except that it writes from a …","Like <code>write_volatile</code>, except that it writes from a slice of …","Like <code>write_volatile</code>, except that it writes from a slice of …","Write bytes from the slice to the given file, returning …","Write bytes from the slice to the given file, returning …","Write up to <code>length</code> bytes of zeroes to the stream, …","Write zeroes to the stream until <code>length</code> bytes have been …","Write zeroes starting at <code>offset</code> until <code>length</code> bytes have …","Write zeroes starting at <code>offset</code> until <code>length</code> bytes have …","Write up to <code>length</code> bytes of zeroes starting at <code>offset</code>, …","Write up to <code>length</code> bytes of zeroes starting at <code>offset</code>, …","Allocates memory with the specified size and alignment and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait similar to <code>AsRawFd</code> but supports an arbitrary …","A trait for allocating disk space in a sparse file. This …","A trait for getting the size of a file. This is equivalent …","A trait similar to the unix <code>ReadExt</code> and <code>WriteExt</code> traits, …","A trait similar to <code>Read</code> and <code>Write</code>, but uses volatile …","A trait for setting the size of a file. This is equivalent …","A trait for flushing the contents of a file to disk. This …","Allocate storage for the region of the file starting at …","","","Get the current length of the file in bytes.","","Reads bytes from this file at <code>offset</code> into the given slice, …","Reads bytes from this file at <code>offset</code> into the given slice …","Reads bytes from this into the given slice until all bytes …","Like <code>read_at_volatile</code>, except it reads to a slice of …","Like <code>read_volatile</code>, except it reads to a slice of buffers. …","Read bytes from this file into the given slice, returning …","","Writes bytes from this file at <code>offset</code> into the given slice …","Write bytes from the slice to the given file until all the …","Writes bytes from this file at <code>offset</code> into the given …","Like <code>write_at_at_volatile</code>, except that it writes from a …","Like <code>write_volatile</code>, except that it writes from a slice of …","Write bytes from the slice to the given file, returning …","This type is essentialy <code>std::io::IoBufMut</code>, and guaranteed …","A slice of raw memory that supports volatile access. Like …","Advance the starting position of this slice.","Advance the internal position of the buffer.","","Returns this <code>VolatileSlice</code> as an <code>IoBufMut</code>.","","Converts a slice of <code>VolatileSlice</code>s into a slice of <code>IoBufMut</code>…","Converts a slice of <code>IoBufMut</code>s into a slice of <code>iovec</code>s.","","Gets a mutable pointer to this slice’s memory.","Gets a mutable pointer to this slice’s memory.","Gets a const pointer to this slice’s memory.","Gets a const pointer to this slice’s memory.","","","","","","","","","","","Equivalent to C’s <code>void</code> type when used as a pointer.","","","","","","","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> bytes, …","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> bytes, …","Copies <code>self.size()</code> or <code>slice.size()</code> bytes, whichever is …","","","","","","","","Creates a <code>VolatileSlice</code> from a pointer and a length.","Creates a <code>IoBufMut</code> from a pointer and a length.","","","","","","","","","","","Creates a slice of raw memory that must support volatile …","","","Creates a copy of this slice with the address increased by …","","","","","","","Gets the size of this slice.","","Similar to <code>get_slice</code> but the returned slice outlives this …","","","","Shorten the length of the slice.","Shorten the length of the buffer.","","","","","","","","","","","","","","Sets each byte of this slice with the given byte, similar …","","Trait for determining if a result indicates the operation …","Returns <code>true</code> if this result indicates the operation was …","","","","","","","","","","","","","","","","","","","","","","Run an ioctl with no arguments.","Run an ioctl with a mutable raw pointer.","Run an ioctl with a mutable reference.","Run an ioctl with a raw pointer.","Run an ioctl with an immutable reference.","Run an ioctl with a single value argument.","","Assist in handling both IP version 4 and IP version 6.","A TCP socket.","A Unix <code>SOCK_SEQPACKET</code> socket point to given <code>path</code>","Like a <code>UnixListener</code> but for accepting <code>UnixSeqpacket</code> type …","Used to attempt to clean up a <code>UnixSeqpacketListener</code> after …","","","Blocks for and accepts a new incoming connection and …","","","","","","","","","","","","","","Creates a new <code>UnixSeqpacketListener</code> bound to the given …","","","","","","","","","","","","","","","Open a <code>SOCK_SEQPACKET</code> connection to socket named by <code>path</code>.","","","","","","","","","","","","","","","","","","","Gets the number of bytes that can be read from this socket …","","","","","","","","","Returns the port that this socket is bound to. This can …","","Gets the number of bytes in the next packet. This blocks …","Creates a pair of connected <code>SOCK_SEQPACKET</code> sockets.","Gets the path that this listener is bound to.","Read data from the socket fd to a given buffer","Read data from the socket fd to a new <code>Vec</code>.","Read data and fds from the socket fd to a new pair of <code>Vec</code>.","Read data from the socket fd to a given <code>Vec</code>, resizing it …","Write data from a given buffer to the socket fd","","Sets or removes the timeout for read/recv operations on …","Sets or removes the timeout for write/send operations on …","","","Clone the underlying FD.","","","","","","","","","","","","","","","","","","Represents whether or not the random bytes are pulled from …","","","","","","","","","","Fills <code>output</code> completely with random bytes from the …","Allocates a vector of length <code>len</code> filled with random bytes …","","","","","","","","","","","","","","","","","Return the next directory entry. This is implemented as a …","","","","","","","","","","Automatically deletes the path it contains when it goes …","","","","","","","","Returns a stable path based on the label, pid, and tid. If …","","","","","Already waiting for interrupt.","A signal handler that does nothing.","","Signal already has a handler.","Failed to check if signal has the default signal handler.","Failed to register a signal handler.","","Represents a signal handler that is registered with a set …","Sigaction failed.","The interface used by Scoped Signal handler.","Failed to wait for signal.","","","","","","A function that is called to handle the passed signal.","","","","","","Blocks until SIGINT is received, which often happens …","","","","","","","","","","","The signal could not be blocked.","","","Failed to check if given signal is in the set of pending …","Failed to get pending signals.","Failed to wait for given signal.","Failed to check if the requested signal is in the blocked …","","Couldn’t create a sigset.","","","","Failed to get session id.","","","","","Failed to send signal to pid.","","Wraps a Child process, and calls kill_tree for its process …","Trait for threads that can be signalled via <code>pthread_kill</code>.","","","","","The signal mask could not be retrieved.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converted signum greater than SIGRTMAX.","Returns the maximum (inclusive) real-time signal number.","Returns the minimum (inclusive) real-time signal number.","","","The wrapped signal has already been blocked.","","","","","","Timeout reached.","","","","","The signal could not be unblocked.","Failed to convert signum to Signal.","","","","","Failed to wait for signal.","Failed to wait for pid.","","","Masks given signal.","","","Clears pending signal.","Resets the signal handler of signum <code>num</code> back to the …","Creates <code>sigset</code> from an array of signal numbers.","","","","Retrieves the signal mask of the current thread as a …","Returns true if the signal handler for signum <code>num</code> is the …","","Safety","Sends the signal <code>num</code> to this killable thread.","Terminates and reaps a child process. If the child process …","","Registers <code>handler</code> as the signal handler for the real-time …","Registers <code>handler</code> as the signal handler of signum <code>num</code>.","","","","","Unmasks given signal.","Wait for signal before continuing. The signal number of …","","","","","","","","","","","","","","","","","","Error while attempting to connect socket.","","","","","Errors returned by <code>syslog::init()</code>.","","The facility of a syslog message.","There was an error using <code>open</code> to get the lowest file …","","The guess of libc’s file descriptor for the syslog …","","","","","","","","","","","","Initialization was never attempted.","","","Initialization has previously failed and can not be …","The priority (i.e. severity) of a syslog message.","Error while creating socket.","","","","","","","","","","","","","","","","","","Replaces the optional <code>File</code> to echo log messages to.","Enables or disables echoing log messages to the …","Enables or disables echoing log messages to the syslog.","","","","","","","","","","Initialize the syslog connection and internal variables.","","","","","Records a log message with the given details.","","Does the same as push_fds, but using the RawDescriptorType","Retrieves the file descriptors owned by the global …","Replaces the process name reported in each syslog message.","","","","","","","","","","","","","","","","","","","","","","Vsock equivalent of INADDR_ANY. Indicates the context id …","An assigned CID that serves as the address for VSOCK.","The parent machine. It may not be the hypervisor for …","An address that refers to the bare-metal machine that …","The loopback address.","An address associated with a virtual socket.","","Vsock equivalent of binding on port 0. Binds to a random …","The vsock equivalent of an IP address.","Represents a virtual socket server.","A virtual socket.","A virtual stream socket.","Accepts a new incoming connection on this listener.  …","","","","","","","","Creates a new <code>VsockListener</code> bound to the specified port on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a vsock SocketAddr from a string. vsock socket …","","","","","","","","","","","","Returns the port that this socket is bound to. This can …","Returns the port that this stream is bound to.","Returns the port that this listener is bound to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializes a descriptor for later retrieval in a parent …"],"i":[1,2,3,4,5,6,7,8,9,10,9,11,0,0,0,0,0,0,9,9,0,12,0,0,9,13,14,14,12,15,15,15,0,0,0,12,0,0,0,0,0,0,0,0,0,0,9,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,9,16,9,0,10,10,10,10,17,9,0,0,18,12,9,0,0,0,17,19,19,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,16,20,10,17,12,0,9,0,0,0,0,0,0,0,9,9,0,0,11,9,0,20,21,10,20,21,12,10,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,13,0,0,0,0,0,0,0,0,0,0,9,12,0,12,12,0,0,0,0,0,0,15,15,0,0,13,9,9,13,18,9,10,0,9,14,14,0,0,9,0,9,9,9,0,0,0,0,0,0,19,0,17,0,9,9,9,9,0,0,0,9,20,21,10,0,0,0,9,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,24,25,26,26,27,26,0,28,26,26,26,24,25,23,23,24,25,27,29,30,31,32,32,30,30,31,33,33,34,35,34,28,36,34,26,37,38,39,2,40,41,23,3,30,42,43,7,44,45,2,40,41,23,3,30,42,43,7,44,1,41,30,24,25,4,42,46,47,43,7,44,31,48,1,41,24,25,4,42,46,47,43,7,44,31,49,50,7,34,51,35,5,6,34,52,0,1,53,54,2,40,41,55,20,23,3,36,30,12,56,34,57,58,16,26,22,59,60,61,62,63,64,65,51,66,24,25,4,67,68,35,42,46,47,19,11,13,5,6,69,27,43,7,8,70,44,14,17,37,21,18,10,71,38,31,52,9,15,1,53,54,2,40,41,55,20,23,3,36,30,12,56,34,57,58,16,26,22,59,60,61,62,63,64,65,51,66,24,25,4,67,68,35,42,46,47,19,11,13,5,6,69,27,43,7,8,70,44,14,17,37,21,18,10,71,38,31,52,9,15,54,54,23,24,25,69,27,0,2,40,46,47,0,0,0,56,69,7,70,21,71,52,9,0,0,56,69,7,70,21,71,52,9,0,7,0,22,0,62,69,27,52,23,24,25,53,55,58,35,6,8,35,8,3,30,43,8,70,44,31,0,53,34,58,26,67,35,42,5,6,43,37,38,0,69,27,0,69,27,66,0,3,43,7,70,44,14,17,37,21,71,9,70,0,0,0,0,0,0,22,0,31,3,36,12,12,56,69,27,43,8,70,70,44,14,17,17,37,21,18,18,10,10,38,9,15,15,1,53,53,54,2,40,41,41,55,20,23,3,3,36,30,12,56,34,57,58,58,16,26,26,22,59,60,61,62,63,64,65,51,66,24,25,4,67,68,35,35,42,46,47,19,11,13,13,5,6,69,27,43,43,43,43,43,7,8,8,70,70,44,44,14,17,37,21,18,10,71,71,38,31,52,9,15,72,54,38,38,38,38,38,54,29,29,21,31,73,2,41,3,43,46,44,50,7,29,29,54,74,74,0,0,0,75,75,0,66,29,30,31,36,38,0,0,0,0,0,52,0,0,0,0,76,68,0,7,63,0,1,53,54,2,40,41,55,20,23,3,36,30,12,56,34,57,58,16,26,22,59,60,61,62,63,64,65,51,66,24,25,4,67,68,35,42,46,47,19,11,13,5,6,69,27,43,7,8,70,44,14,17,37,21,18,10,71,38,31,52,9,15,41,57,59,64,77,2,40,3,30,43,24,25,46,47,44,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,40,46,47,56,56,56,61,65,65,65,65,0,0,78,0,0,70,0,0,23,24,25,36,28,38,30,31,27,3,7,70,44,14,17,37,71,0,53,54,2,40,41,23,3,30,57,58,26,60,62,66,24,25,67,42,46,47,69,27,70,44,37,38,31,52,0,38,38,55,59,64,71,69,27,54,0,0,41,7,22,0,0,54,54,78,79,0,3,42,44,71,31,80,80,0,80,80,81,81,31,36,38,0,36,38,3,44,36,38,80,80,81,81,81,81,71,63,0,41,60,82,82,82,0,0,26,28,26,83,36,38,2,40,46,47,2,40,46,47,0,0,0,0,52,31,84,84,84,84,41,82,82,82,82,22,3,30,57,43,8,70,44,31,85,0,52,86,86,85,0,85,66,71,41,0,0,52,41,52,31,66,71,52,0,52,0,28,36,30,30,26,37,38,31,82,10,0,0,35,35,56,65,69,7,70,21,71,52,9,12,70,17,18,10,15,63,56,41,3,46,43,44,1,53,54,2,40,41,55,20,23,3,36,30,12,56,34,57,58,16,26,22,59,60,61,62,63,64,65,51,66,24,25,4,67,68,35,42,46,47,19,11,13,5,6,69,27,43,43,7,8,70,44,14,17,37,21,18,10,71,38,31,52,9,9,15,1,53,54,2,40,41,55,20,23,3,36,30,12,56,34,57,58,16,26,22,59,60,61,62,63,64,65,51,66,24,25,4,67,68,35,42,46,47,19,11,13,5,6,69,27,43,7,8,70,44,14,17,37,21,18,10,71,38,31,52,9,15,85,1,53,54,2,40,41,55,20,23,3,36,30,12,56,34,57,58,16,26,22,59,60,61,62,63,64,65,51,66,24,25,4,67,68,35,42,46,47,19,11,13,5,6,69,27,43,7,8,70,44,14,17,37,21,18,10,71,38,31,52,9,15,0,34,36,38,0,0,0,0,0,0,0,2,40,23,24,25,46,47,0,0,0,23,24,25,0,0,0,0,63,3,44,31,80,80,81,81,80,80,36,38,36,38,52,36,38,80,80,81,81,81,81,87,87,88,88,88,88,34,89,90,91,92,92,93,94,95,96,97,94,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,0,0,0,0,0,0,0,32,48,74,75,0,80,80,81,80,81,81,86,80,81,80,80,81,81,0,0,114,115,114,114,114,114,115,115,114,115,114,115,115,116,117,114,115,116,117,114,115,0,0,117,114,115,117,114,115,114,114,114,116,114,115,116,117,114,115,114,115,114,116,117,114,115,117,117,0,115,115,114,115,0,114,0,0,0,0,0,0,114,0,114,117,114,115,114,115,116,117,114,115,116,117,114,115,116,117,114,115,0,114,0,0,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,0,0,0,0,0,120,120,121,119,122,119,122,121,119,123,122,121,119,123,122,119,121,123,121,119,120,123,122,121,119,120,123,122,120,120,123,122,119,122,121,119,123,122,120,120,123,121,119,120,123,122,122,121,122,120,122,121,119,120,123,122,122,123,123,123,123,122,122,121,122,122,122,122,122,122,122,122,122,120,122,121,119,120,123,122,121,119,120,123,122,121,119,120,123,122,124,124,0,124,124,124,124,124,124,124,124,124,0,0,124,124,124,124,0,0,125,126,125,126,125,126,125,125,126,125,126,125,0,125,126,125,126,125,125,126,0,127,127,127,127,127,127,127,0,127,127,127,127,128,0,0,128,128,128,0,0,128,0,128,128,128,128,128,128,76,128,128,128,128,128,0,129,130,131,132,133,130,131,132,9,9,134,9,9,134,134,134,134,9,134,0,9,9,134,9,9,9,9,134,9,0,0,9,9,9,9,134,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,134,0,0,9,0,134,0,9,9,9,9,134,9,9,9,9,134,134,9,9,9,9,134,134,9,9,0,134,134,0,0,0,134,134,134,0,0,134,0,78,0,78,0,0,134,134,134,134,0,0,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,150,151,150,150,0,150,0,152,150,152,151,151,151,151,151,151,151,151,151,151,151,152,151,150,152,0,152,151,0,151,151,150,153,150,151,152,153,150,151,152,150,151,150,151,0,0,0,153,150,150,152,152,153,150,151,152,0,153,150,151,152,0,153,0,0,0,150,151,150,152,153,150,151,152,153,150,151,152,153,150,151,152,153,154,155,156,0,157,157,157,157,157,0,0,0,0,0,0,0,158,159,160,158,159,160,158,159,158,161,157,162,159,160,158,161,157,162,159,160,158,162,157,162,157,162,157,162,159,160,159,157,162,160,161,161,157,157,162,162,159,160,158,161,157,157,162,159,160,158,157,162,157,162,161,157,162,159,160,158,159,160,159,159,160,158,157,162,159,157,162,162,160,159,160,158,157,162,163,162,161,157,162,159,160,161,157,162,159,160,158,161,157,162,159,160,158,161,157,162,159,160,158,160,164,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["i32",15]],[[],["i32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asrawdescriptor",8]],["result",6]],[[["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[["usize",15]],[["error",4],["result",4,["error"]]]],[[["usize",15],["protection",3]],[["error",4],["result",4,["error"]]]],[[["u64",15],["eventfd",3]]],[[["usize",15],["asrawfd",8]],[["error",4],["result",4,["error"]]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["error",4],["result",4,["error"]]]],[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["error",4],["result",4,["error"]]]],[[["usize",15],["u64",15],["asrawfd",8]],[["error",4],["result",4,["error"]]]],[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["error",4],["result",4,["error"]]]],[[["watchingevents",3],["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[["watchingevents",3],["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[["eventtype",4],["asrawdescriptor",8]],["result",6]],[[],["result",6]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["u64",15]]],[[["memfdseals",3]],["result",6]],[[["memfdseals",3]],["result",6]],[[["memfdseals",3]],[["error",3],["result",4,["error"]]]],[[["u64",15]],[["result",4,["error"]],["error",3]]],[[["u64",15]],[["result",4,["error"]],["error",3]]],[[["u64",15]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[["u64",15]],["result",6]],[[],[["result",4,["sharedmemory","error"]],["sharedmemory",3],["error",3]]],[[],["iovec",3]],[[]],[[]],[[],["child",3]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],["i32",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["pollevents",3]],[[],["child",3]],[[],["unixdatagram",3]],[[],["unixlistener",3]],[[["usize",15]]],[[],["i32",15]],[[["i32",15]],[["result",4,["error"]],["errormmaperror",4],["result",4,["memorymapping","mmaperror"]],["memorymapping",3]]],[[],[["mmaperror",4],["result",4,["memorymapping","mmaperror"]],["memorymapping",3]]],[[],[["result",6,["waitcontext"]],["waitcontext",3]]],[[],[["epollcontext",3],["result",4,["epollcontext","error"]],["error",3]]],[[],[["result",4,["pollcontext","error"]],["pollcontext",3],["error",3]]],[[["duration",3]],[["clock",3],["option",4,["clock"]]]],[[["duration",3]],[["option",4,["fakeclock"]],["fakeclock",3]]],[[["cstr",3],["u32",15]],[["error",3],["result",4,["error"]]]],[[],["result",6]],[[],["result",6]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[["i32",15]],[["result",4,["error"]],["error",4]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[],["triggeredevent",3]],[[],["clock",3]],[[],["descriptor",3]],[[],["error",3]],[[],["fileflags",4]],[[],["protection",3]],[[],["memfdseals",3]],[[],["signal",4]],[[["asrawdescriptor",8]],[["result",4,["i32","error"]],["i32",15],["error",3]]],[[["asrawfd",8]],[["result",4,["i32","error"]],["i32",15],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["clonenamespace",4]],[["result",4,["i32","cloneerror"]],["i32",15],["cloneerror",4]]],[[["descriptor",3]],["ordering",4]],[[],[["result",4,["sigset_t","error"]],["error",3],["sigset_t",3]]],null,null,[[],["epollevents",3]],[[],["clock",3]],[[],["fakeclock",3]],[[],["memfdseals",3]],[[["asrawdescriptor",8]],["result",6]],[[["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[],["event",3]],[[]],[[],["eventfd",3]],[[]],[[],["unixlistener",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["safedescriptor"]],["safedescriptor",3]]],[[],[["result",4,["fileserdewrapper"]],["fileserdewrapper",3]]],[[],[["error",3],["result",4,["error"]]]],[[],[["result",4,["eventfd"]],["eventfd",3]]],[[],[["sharedmemory",3],["result",4,["sharedmemory"]]]],[[["vec",3]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",3],["result",4,["error"]]]],[[["clock",3]],["duration",3]],[[["fakeclock",3]],["duration",3]],[[["duration",3]],["timespec",3]],[[],["duration",3]],[[],["duration",3]],[[],["watchingevents",3]],[[],[["error",3],["result",4,["error"]]]],[[["event",3]],["bool",15]],[[["safedescriptor",3]],["bool",15]],[[["descriptor",3]],["bool",15]],[[["error",3]],["bool",15]],[[["eventfd",3]],["bool",15]],[[["eventreadresult",4]],["bool",15]],[[["error",4]],["bool",15]],[[["externalmapping",3]],["bool",15]],[[["fileflags",4]],["bool",15]],[[["protection",3]],["bool",15]],[[["signal",4]],["bool",15]],[[],["i32",15]],[[],[["result",4,["error"]],["error",3]]],null,[[["u64",15],["fallocatemode",4],["bool",15],["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],null,null,[[["bool",15],["flockoperation",4],["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["event",3]]],[[]],[[]],[[]],[[]],[[["asynctube",3]],["tube",3]],[[]],[[]],[[]],[[]],[[]],[[["scopedevent",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventfd",3]],["scopedevent",3]],[[]],[[]],[[]],[[["memorymapping",3]],["memorymappingarena",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["child",3]],["killondrop",3]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["waitstatus",4]],[[]],[[]],[[]],[[]],[[]],[[["unixseqpacket",3]],["safedescriptor",3]],[[["file",3]],["safedescriptor",3]],[[]],[[["eventfd",3]],["safedescriptor",3]],[[["sharedmemory",3]],["safedescriptor",3]],[[]],[[["file",3]],["fileserdewrapper",3]],[[]],[[]],[[["error",3]],["error",3]],[[]],[[["scopedevent",3]],["eventfd",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["protection",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asrawdescriptor",8]],["memorymappingbuilder",3]],[[["asrawdescriptor",8]],["memorymappingbuilder",3]],[[["usize",15],["asrawfd",8]],[["memorymapping",3],["result",4,["memorymapping","error"]],["error",4]]],[[["usize",15],["u64",15],["asrawfd",8]],[["memorymapping",3],["result",4,["memorymapping","error"]],["error",4]]],[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["memorymapping",3],["result",4,["memorymapping","error"]],["error",4]]],[[["usize",15],["u64",15],["asrawfd",8],["protection",3]],[["memorymapping",3],["result",4,["memorymapping","error"]],["error",4]]],[[["usize",15],["u64",15],["asrawfd",8],["protection",3],["bool",15]],[["memorymapping",3],["result",4,["memorymapping","error"]],["error",4]]],[[["file",3]],["memorymappingbuilder",3]],[[["file",3]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[["file",3]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[["asrawfd",8]],[["fileflags",4],["result",4,["fileflags","error"]],["error",3]]],[[["file",3]],[["result",4,["sharedmemory","error"]],["sharedmemory",3],["error",3]]],[[["i32",15]]],[[["rawdescriptor",6]]],[[["rawdescriptor",6]]],[[["rawdescriptor",6]]],[[["i32",15]],["safedescriptor",3]],[[["i32",15]],["timerfd",3]],[[["i32",15]],["eventfd",3]],[[["u64",15]]],[[["u64",15]],["descriptor",3]],[[["safedescriptor",3]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[["safedescriptor",3]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[["sharedmemory",3]],["memorymappingbuilder",3]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["vec","error"]],["vec",3,["i32","global"]],["error",4]]],[[],[["vec",3,["usize","global"]],["error",3],["result",4,["vec","error"]]]],[[["file",3]],[["i64",15],["error",3],["result",4,["i64","error"]]]],[[],[["u64",15],["result",4,["u64","error"]],["error",3]]],[[],[["u64",15],["result",4,["u64","error"]],["error",3]]],[[],[["result",4,["u64","error"]],["u64",15],["error",3]]],[[],["u32",15]],[[],[["result",6,["memfdseals"]],["memfdseals",3]]],[[],[["result",6,["memfdseals"]],["memfdseals",3]]],[[],[["result",4,["memfdseals","error"]],["error",3],["memfdseals",3]]],[[["usize",15]],[["volatilememoryresult",6,["volatileslice"]],["volatileslice",3]]],[[["usize",15]],[["result",4,["volatileslice","volatilememoryerror"]],["volatilememoryerror",4],["volatileslice",3]]],[[],["u32",15]],[[],["u32",15]],[[],["i32",15]],[[["i32",15],["option",4,["i32"]]],[["result",4,["i32","error"]],["i32",15],["error",3]]],[[],["i32",15]],[[],["bool",15]],null,null,null,null,[[["signal",4]]],[[["signal",4]]],[[["i32",15]],[["result",4,["bool","error"]],["error",3],["bool",15]]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["executor",4]],[["result",6,["asynctube"]],["asynctube",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],[[],["i32",15]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],null,[[["u64",15]],["i32",15]],[[["ioctlnr",6]],["c_int",6]],[[["u64",15]],["i32",15]],null,null,null,null,null,null,[[["ioctlnr",6],["asrawdescriptor",8]],["c_int",6]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["ioctlnr",6],["asrawdescriptor",8]],["c_int",6]],[[["ioctlnr",6],["asrawdescriptor",8]],["c_int",6]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["ioctlnr",6],["asrawdescriptor",8]],["c_int",6]],[[["u64",15]],["i32",15]],[[["c_ulong",6],["ioctlnr",6],["asrawdescriptor",8]],["c_int",6]],[[["u64",15]],["i32",15]],[[],["usize",15]],[[],[["result",6,["bool"]],["bool",15]]],[[],[["result",6,["bool"]],["bool",15]]],[[],[["result",4,["bool","error"]],["error",3],["bool",15]]],[[],[["result",4,["bool","error"]],["error",3],["bool",15]]],null,null,null,[[],["netlinkmessageiter",3]],[[],[["iter",3,["epoll_event"]],["polleventiter",3,["iter"]]]],[[],[["iter",3,["epoll_event"]],["polleventiter",3,["iter"]]]],[[],[["iter",3,["epoll_event"]],["polleventiter",3,["iter"]]]],[[],[["iter",3,["epoll_event"]],["polleventiter",3,["iter"]]]],[[],["bool",15]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["duration",3],["child",3]],[["result",4,["error"]],["error",4]]],[[],["error",3]],null,[[],["duration",3]],[[["eventtype",4],["asrawdescriptor",8]],["result",6]],[[["watchingevents",3],["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[["watchingevents",3],["asrawfd",8]],[["error",3],["result",4,["error"]]]],[[],[["mmaperror",4],["result",4,["mmaperror"]]]],[[["usize",15]],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[["vec",3,["u8"]],["u64",15],["into",8,["vec"]]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[],[["result",4,["sharedmemory","error"]],["sharedmemory",3],["error",3]]],[[],["u64",15]],[[["event",3]],["bool",15]],[[["descriptor",3]],["bool",15]],[[["error",3]],["bool",15]],[[["eventfd",3]],["bool",15]],[[["eventreadresult",4]],["bool",15]],[[["error",4]],["bool",15]],[[["externalmapping",3]],["bool",15]],[[["protection",3]],["bool",15]],null,[[],[["scopedevent",3],["result",6,["scopedevent"]]]],[[["usize",15]],["memorymappingbuilder",3]],[[],[["result",6,["timer"]],["timer",3]]],[[["arc",3,["mutex"]],["mutex",3,["fakeclock"]]]],[[["unixseqpacket",3]],["tube",3]],[[],[["result",6,["waitcontext"]],["waitcontext",3]]],[[],[["event",3],["result",6,["event"]]]],[[["cstr",3],["u64",15],["option",4,["cstr"]]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[],["serializedescriptors",3]],[[],[["error",3],["result",4,["scopedevent","error"]],["scopedevent",3]]],[[["usize",15]],[["memorymappingarena",3],["result",4,["memorymappingarena","error"]],["error",4]]],[[["u32",15]],[["netlinkgenericsocket",3],["error",3],["result",4,["netlinkgenericsocket","error"]]]],[[],["epollevents",3]],[[["u32",15]],["watchingevents",3]],[[],[["epollcontext",3],["result",4,["epollcontext","error"]],["error",3]]],[[],[["result",4,["pollcontext","error"]],["pollcontext",3],["error",3]]],[[],[["error",4],["result",4,["scopedsignalhandler","error"]],["scopedsignalhandler",3]]],[[["i32",15]],[["result",4,["signalfd","error"]],["signalfd",3],["error",4]]],[[],[["error",3],["timerfd",3],["result",4,["timerfd","error"]]]],[[["mutex",3,["fakeclock"]],["arc",3,["mutex"]]],["faketimerfd",3]],[[],["clock",3]],[[],["fakeclock",3]],[[["i32",15]],["error",3]],[[],[["result",4,["eventfd","error"]],["error",3],["eventfd",3]]],[[["u32",15]],[["error",4],["result",4,["externalmapping","error"]],["externalmapping",3]]],[[["usize",15]],[["memorymapping",3],["result",4,["memorymapping","error"]],["error",4]]],[[["cstr",3],["option",4,["cstr"]]],[["result",4,["sharedmemory","error"]],["sharedmemory",3],["error",3]]],[[],["memfdseals",3]],[[],[["error",3],["result",4,["error"]]]],[[["usize",15],["protection",3]],[["memorymapping",3],["result",4,["memorymapping","error"]],["error",4]]],[[["usize",15],["protection",3]],[["memorymapping",3],["result",4,["memorymapping","error"]],["error",4]]],[[]],[[],["option",4]],[[],["option",4]],[[],["protection",3]],[[],["clock",3]],[[],["fakeclock",3]],[[["u64",15]],["memorymappingbuilder",3]],[[["bool",15]],[["file",3],["error",3],["result",4,["file","error"]]]],[[],["usize",15]],[[],["result",6]],[[["descriptor",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[["bool",15]],[["error",3],["result",4,["error"]]]],[[["asrawfd",8]],["bool",15]],[[],["memorymappingbuilder",3]],[[["protection",3]],["memorymappingbuilder",3]],[[],["u64",15]],[[["u64",15]],[["result",4,["error"]],["error",3]]],null,[[],[["u64",15],["result",6,["u64"]]]],[[],[["result",4,["option","error"]],["error",4],["option",4,["signalfd_siginfo"]]]],[[],[["result",4,["u64","error"]],["u64",15],["error",3]]],[[],["protection",3]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,[[["u64",15],["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[],[["error",3],["result",4,["string","error"]],["string",3]]],[[["usize",15]],[["result",4,["mmaperror"]],["datainit",8],["mmaperror",4]]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",3]]],[[["usize",15]],[["result",4,["usize","mmaperror"]],["usize",15],["mmaperror",4]]],[[["usize",15]],[["usize",15],["error",4],["result",4,["usize","error"]]]],[[["duration",3]],[["result",6,["eventreadresult"]],["eventreadresult",4]]],[[["duration",3]],[["result",4,["eventreadresult","error"]],["error",3],["eventreadresult",4]]],[[["usize",15],["asrawdescriptor",8]],[["mmaperror",4],["result",4,["mmaperror"]]]],[[["usize",15],["asrawfd",8]],[["error",4],["result",4,["error"]]]],[[["u64",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],["protection",3]],[[],["bool",15]],[[],[["result",4,["i32","error"]],["i32",15],["error",3]]],[[],[["result",6],["deserializeowned",8]]],[[],[["netlinkgenericread",3],["result",4,["netlinkgenericread","error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["ioslicemut",3]],[["error",3],["result",4,["error"]]]],[[["ioslicemut",3]],[["result",4,["error"]],["error",3]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[["usize",15]],[["error",4],["result",4,["error"]]]],[[["usize",15]],[["error",4],["result",4,["error"]]]],[[["usize",15]],[["error",4],["result",4,["error"]]]],[[["usize",15]],[["mmaperror",4],["result",4,["mmaperror"]]]],[[["usize",15]],[["mmaperror",4],["result",4,["mmaperror"]]]],[[["usize",15]],[["error",4],["result",4,["error"]]]],[[["option",4,["duration"]],["duration",3]],["result",6]],[[["option",4,["duration"]],["duration",3]],["result",6]],[[["duration",3],["option",4,["duration"]]],[["error",3],["result",4,["error"]]]],[[["duration",3],["option",4,["duration"]]],[["error",3],["result",4,["error"]]]],[[],[["result",6,["duration"]],["duration",3]]],[[],[["result",6,["duration"]],["duration",3]]],[[],[["duration",3],["error",3],["result",4,["duration","error"]]]],[[],[["duration",3],["error",3],["result",4,["duration","error"]]]],[[["usize",15]],["usize",15]],[[],[["result",4,["option","error"]],["option",4,["safedescriptor"]],["error",3]]],null,null,[[],["bool",15]],[[["seekfrom",4]],[["u64",15],["result",4,["u64","error"]],["error",3]]],[[["u64",15]],[["option",4,["u64"]],["error",3],["result",4,["option","error"]]]],[[["u64",15]],[["option",4,["u64"]],["error",3],["result",4,["option","error"]]]],[[["u64",15]],[["option",4,["u64"]],["error",3],["result",4,["option","error"]]]],[[["u64",15]],[["option",4,["u64"]],["error",3],["result",4,["option","error"]]]],[[],["result",6]],[[["i32",15]],[["usize",15],["result",4,["usize","error"]],["error",3]]],[[],[["usize",15],["result",4,["usize","error"]],["error",3]]],[[["i32",15]],[["usize",15],["result",4,["usize","error"]],["error",3]]],[[],[["usize",15],["result",4,["usize","error"]],["error",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[]],[[["u64",15]],[["result",4,["error"]],["error",3]]],[[["u64",15]],[["result",4,["error"]],["error",3]]],[[["bool",15]],[["error",3],["result",4,["error"]]]],[[["usize",15],["i32",15]],[["usize",15],["result",4,["usize","error"]],["error",3]]],[[],[["error",3],["result",4,["error"]]]],[[],["watchingevents",3]],[[],["protection",3]],[[["option",4,["duration"]],["duration",3]],["result",6]],[[["u64",15]],[["error",3],["result",4,["error"]]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[]],[[["option",4,["duration"]],["duration",3]],["result",6]],[[]],[[["u64",15]],[["error",3],["result",4,["error"]]]],[[],["watchingevents",3]],[[],["protection",3]],[[]],[[],[["result",4,["i32","error"]],["i32",15],["error",3]]],[[],["bool",15]],null,[[],["usize",15]],[[],["usize",15]],[[],["u64",15]],[[],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["u64",15]],[[],["i32",15]],[[],[["option",4,["error"]],["error",8]]],null,null,[[],["duration",3]],[[],["duration",3]],[[]],[[],["polleventsowned",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],null,[[],["result",6]],[[],[["event",3],["result",6,["event"]]]],[[],[["error",3],["timerfd",3],["result",4,["timerfd","error"]]]],[[],[["result",4,["safedescriptor","error"]],["safedescriptor",3],["error",3]]],[[],[["result",4,["eventfd","error"]],["error",3],["eventfd",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["asrawfd",8]],[["result",4,["safedescriptor"]],["safedescriptor",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["i32",15]],[["signal",4],["result",4,["signal"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["i32",15]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["i32",15]],[["result",4,["error"]],["error",4]]],[[["layout",3]],["layoutallocation",3]],[[],[["mmaperror",4],["result",4,["mmaperror"]]]],[[],[["error",4],["result",4,["error"]]]],[[["rawdescriptor",6]],[["result",6,["rawdescriptor"]],["rawdescriptor",6]]],[[["i32",15]],[["result",4,["i32","error"]],["i32",15],["error",3]]],null,null,null,null,null,[[],["result",6]],[[],["result",6]],[[],[["result",6,["smallvec"]],["smallvec",3]]],[[["epollevents",3]],[["result",4,["pollevents","error"]],["pollevents",3],["error",3]]],[[],[["result",4,["pollevents","error"]],["pollevents",3],["error",3]]],[[],[["result",4,["u64","error"]],["u64",15],["error",3]]],[[],[["result",4,["u64","error"]],["u64",15],["error",3]]],[[],[["result",4,["error"]],["error",4]]],[[["i32",15]],[["result",4,["error"]],["error",3]]],[[["duration",3],["option",4,["duration"]]],[["result",4,["i32","error"]],["i32",15],["error",3]]],[[["duration",3]],[["result",6,["smallvec"]],["smallvec",3]]],[[["epollevents",3],["duration",3]],[["result",4,["pollevents","error"]],["pollevents",3],["error",3]]],[[["duration",3]],[["result",4,["pollevents","error"]],["pollevents",3],["error",3]]],null,null,null,[[["asrawdescriptor",8]],["descriptor",3]],[[],["bool",15]],[[["u64",15]],["result",6]],[[["u64",15]],[["error",3],["result",4,["error"]]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["usize",15],["asrawdescriptor",8]],[["mmaperror",4],["result",4,["mmaperror"]]]],[[["usize",15],["asrawfd",8]],[["error",4],["result",4,["error"]]]],[[["usize",15],["datainit",8]],[["mmaperror",4],["result",4,["mmaperror"]]]],[[["usize",15]],[["error",4],["result",4,["error"]]]],[[],["bool",15]],[[["usize",15]],[["result",4,["usize","mmaperror"]],["usize",15],["mmaperror",4]]],[[["usize",15]],[["usize",15],["error",4],["result",4,["usize","error"]]]],[[["u64",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["usize",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["usize",15]],[["result",4,["error"]],["error",3]]],[[["u64",15],["usize",15]],[["result",4,["error"]],["error",3]]],[[["u64",15],["usize",15]],[["result",4,["error"]],["error",3]]],[[["u64",15],["usize",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15],["usize",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["layout",3]],["layoutallocation",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]],[["result",4,["error"]],["error",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["u64",15],["result",4,["u64","error"]],["error",3]]],null,[[["u64",15],["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["u64",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15]],[["result",4,["error"]],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["volatileslice",3]],[["result",4,["error"]],["error",3]]],[[["u64",15],["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["volatileslice",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,[[["usize",15]]],[[["usize",15]]],[[],["iovec",3]],[[],["iobufmut",3]],[[]],[[]],[[]],[[],["iovec",3]],[[]],[[]],[[]],[[]],[[],["iovec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["iovec",3]],[[],["volatileslice",3]],[[],["iobufmut",3]],[[]],[[]],[[]],[[]],[[]],[[["volatileslice",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[["usize",15]],["volatileslice",3]],[[["usize",15]],["iobufmut",3]],[[["usize",15]],[["result",4,["volatileslice","volatilememoryerror"]],["volatilememoryerror",4],["volatileslice",3]]],[[]],[[]],[[]],[[]],null,null,null,[[],["bool",15]],[[],["usize",15]],[[],["volatileslice",3]],[[],["iobufmut",3]],null,[[["usize",15]],[["volatilememoryerror",4],["result",4,["volatileslice","volatilememoryerror"]],["volatileslice",3]]],[[["usize",15],["i32",15],["i64",15]],["isize",15]],[[["i32",15],["i64",15]],["isize",15]],[[["usize",15],["i32",15],["i64",15]],["isize",15]],[[["i32",15],["i64",15]],["isize",15]],[[["usize",15],["i32",15]],["isize",15]],[[["i32",15]],["isize",15]],[[],["usize",15]],null,[[["usize",15]],[["volatilememoryerror",4],["result",4,["volatileslice","volatilememoryerror"]],["volatileslice",3]]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["i32",15]],["isize",15]],[[["u8",15]]],[[["i32",15]],["isize",15]],null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],null,null,null,null,null,null,null,null,[[],[["result",4,["unixseqpacket","error"]],["unixseqpacket",3],["error",3]]],[[],["i32",15]],[[],["i32",15]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],["unixseqpacketlistener",3]],[[],[["unixseqpacketlistener",3],["error",3],["result",4,["unixseqpacketlistener","error"]]]],[[],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["inetversion",4]],[[]],[[],[["result",4,["tcpstream","error"]],["tcpstream",3],["error",3]]],[[],[["result",4,["unixseqpacket","error"]],["unixseqpacket",3],["error",3]]],[[]],[[],[["unixseqpacket",3],["result",4,["unixseqpacket"]]]],[[]],[[]],[[]],[[]],[[["inetversion",4]],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["unixseqpacket",3]],[[["i32",15]],["unixseqpacketlistener",3]],[[["i32",15]],["unixseqpacket",3]],[[["socketaddr",4]],["inetversion",4]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["i32",15]],[[],[["result",4,["tcplistener","error"]],["error",3],["tcplistener",3]]],[[],[["u16",15],["result",4,["u16","error"]],["error",3]]],[[["inetversion",4]],[["result",4,["tcpsocket","error"]],["tcpsocket",3],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["pathbuf",3],["result",4,["pathbuf","error"]],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],[["error",3],["vec",3,["u8","global"]],["result",4,["vec","error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["vec",3]],[["result",4,["error"]],["error",3]]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],["result",4]],[[["duration",3],["option",4,["duration"]]],[["result",4,["error"]],["error",3]]],[[["duration",3],["option",4,["duration"]]],[["result",4,["error"]],["error",3]]],[[],["i32",15]],[[]],[[],[["result",4,["unixseqpacket","error"]],["unixseqpacket",3],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[],["source",4]],[[]],[[],["source",4]],[[["source",4]],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["source",4]],[["error",3],["result",4,["error"]]]],[[["usize",15],["source",4]],[["error",3],["result",4,["vec","error"]],["vec",3,["u8","global"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[],[["option",4,["result"]],["result",4,["direntry","error"]]]],null,[[["i64",15]],[["result",4,["readdir","error"]],["readdir",3],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],null,[[],["path",3]],[[]],[[]],[[],[["scopedpath",3],["result",4,["scopedpath","error"]],["error",3]]],[[]],[[]],[[]],[[["option",4,["str"]],["str",15]],["pathbuf",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["signal",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["result",4,["error"]],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["i32",15]],[[],["i32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]],[["result",4,["error"]],["error",4]]],[[]],[[]],[[["i32",15]],[["result",4,["error"]],["error",4]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[],[["result",4,["sigset_t","error"]],["error",3],["sigset_t",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[],[["result",4,["vec","error"]],["vec",3,["i32","global"]],["error",4]]],[[["i32",15]],[["result",4,["bool","error"]],["error",3],["bool",15]]],[[]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[["duration",3],["child",3]],[["result",4,["error"]],["error",4]]],[[],["u64",15]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[["i32",15]],[["error",3],["result",4,["error"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["i32",15]],[["result",4,["error"]],["error",4]]],[[["duration",3],["option",4,["duration"]]],[["result",4,["i32","error"]],["i32",15],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["priority",4]],[[],["facility",4]],[[]],[[]],[[["option",4,["file"]],["file",3]]],[[["bool",15]]],[[["bool",15]],[["error",4],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[],[["error",4],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[["priority",4],["option",4],["arguments",3],["facility",4]]],[[["priority",4],["facility",4]],["syslogger",3]],[[["vec",3]]],[[["vec",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["error"]],["error",3]]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["vsocklistener","error"]],["vsocklistener",3],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["vsockcid",4]],[[],["socketaddr",3]],[[]],[[]],[[["vsockcid",4]],["ordering",4]],[[["socketaddr",3]],["ordering",4]],[[],[["vsockstream",3],["result",4,["vsockstream","error"]],["error",3]]],[[],[["vsockstream",3],["result",4,["vsockstream","error"]],["error",3]]],[[]],[[["vsockcid",4]],["bool",15]],[[["socketaddr",3]],["bool",15]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["u32",15]],["vsockcid",4]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["vsockcid",4],["result",4,["vsockcid"]]]],[[["str",15]],[["result",4,["socketaddr","addrparseerror"]],["addrparseerror",3],["socketaddr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["i32",15]],[[],[["result",4,["vsocklistener","error"]],["vsocklistener",3],["error",3]]],[[],[["result",4,["u32","error"]],["u32",15],["error",3]]],[[],[["result",4,["u32","error"]],["u32",15],["error",3]]],[[],[["result",4,["u32","error"]],["u32",15],["error",3]]],[[["vsockcid",4]],["bool",15]],[[["socketaddr",3]],["bool",15]],[[],[["result",4,["vsocksocket","error"]],["error",3],["vsocksocket",3]]],[[["vsockcid",4]],[["option",4,["ordering"]],["ordering",4]]],[[["socketaddr",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["bool",15]],[["result",4,["error"]],["error",3]]],[[["bool",15]],[["result",4,["error"]],["error",3]]],[[["bool",15]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],[["result",4,["socketaddr","addrparseerror"]],["addrparseerror",3],["socketaddr",3]]],[[],[["result",4,["socketaddr","addrparseerror"]],["addrparseerror",3],["socketaddr",3]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["result",4,["vsocksocket","error"]],["error",3],["vsocksocket",3]]],[[],[["vsockstream",3],["result",4,["vsockstream","error"]],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,[[],["result",4]],[[["asrawdescriptor",8]],["result",4]],[[],[["result",4,["i32"]],["i32",15]]],[[["i32",15]],["result",4]]],"p":[[3,"DescriptorAdapter"],[3,"Timer"],[3,"Event"],[3,"Fd"],[3,"UnlinkUnixDatagram"],[3,"UnlinkUnixListener"],[3,"Descriptor"],[3,"FileSerdeWrapper"],[4,"Signal"],[4,"MmapError"],[4,"FallocateMode"],[4,"TubeError"],[4,"WaitStatus"],[4,"EventReadResult"],[4,"SignalFdError"],[4,"CloneNamespace"],[4,"ExternalMappingError"],[4,"CloneError"],[4,"FlockOperation"],[4,"EventType"],[4,"FileFlags"],[3,"NetlinkMessage"],[3,"WaitContext"],[3,"EpollContext"],[3,"PollContext"],[3,"MemoryMappingArena"],[3,"FakeClock"],[8,"MappedRegion"],[8,"SharedMemoryUnix"],[3,"SharedMemory"],[3,"SharedMemory"],[8,"FileAllocate"],[8,"AsIobuf"],[3,"LayoutAllocation"],[3,"KillOnDrop"],[3,"MemoryMapping"],[3,"ExternalMapping"],[3,"MemoryMapping"],[8,"AsRawDescriptor"],[3,"FakeTimer"],[3,"Tube"],[3,"SignalFd"],[3,"SafeDescriptor"],[3,"EventFd"],[8,"AsRawDescriptors"],[3,"TimerFd"],[3,"FakeTimerFd"],[8,"AsRawFds"],[8,"AsRawPid"],[8,"PollToken"],[3,"PollEventsOwned"],[3,"MemfdSeals"],[3,"ScopedEvent"],[3,"MemoryMappingBuilder"],[3,"AsyncTube"],[3,"TriggeredEvent"],[3,"SerializeDescriptors"],[3,"ScopedEvent"],[3,"NetlinkMessageIter"],[3,"NetlinkGenericSocket"],[3,"NetlinkGenericRead"],[3,"EpollEvents"],[3,"PollEvent"],[3,"PollEventIter"],[3,"PollEvents"],[3,"WatchingEvents"],[3,"ScopedSignalHandler"],[3,"EmptySignalHandler"],[3,"Clock"],[3,"Error"],[3,"Protection"],[8,"MemoryMappingBuilderUnix"],[8,"FromRawDescriptor"],[8,"FileSync"],[8,"FileGetLen"],[8,"SignalHandler"],[8,"IntoRawDescriptor"],[8,"Killable"],[8,"PunchHole"],[8,"FileReadWriteAtVolatile"],[8,"FileReadWriteVolatile"],[8,"ScmSocket"],[8,"MemoryMappingUnix"],[8,"SeekHole"],[8,"Terminal"],[8,"FileSetLen"],[8,"WriteZeroes"],[8,"WriteZeroesAt"],[13,"IterateTasks"],[13,"Multithreaded"],[13,"Sys"],[13,"Count"],[13,"LibraryError"],[13,"InvalidRange"],[13,"ReadToMemory"],[13,"SystemCallFailed"],[13,"WriteFromMemory"],[13,"CreateBlockSignal"],[13,"CreateSignalFd"],[13,"CreateSigset"],[13,"SignalFdPartialRead"],[13,"SignalFdRead"],[13,"Clone"],[13,"CreateAsync"],[13,"Json"],[13,"Pair"],[13,"Recv"],[13,"Send"],[13,"SetRecvTimeout"],[13,"SetSendTimeout"],[13,"Exited"],[13,"Signaled"],[13,"Stopped"],[3,"VolatileSlice"],[3,"IoBufMut"],[4,"c_void"],[3,"iovec"],[8,"InterruptibleResult"],[3,"UnlinkUnixSeqpacketListener"],[4,"InetVersion"],[3,"UnixSeqpacketListener"],[3,"UnixSeqpacket"],[3,"TcpSocket"],[4,"Source"],[3,"DirEntry"],[3,"ReadDir"],[3,"ScopedPath"],[4,"Error"],[13,"HandlerAlreadySet"],[13,"HasDefaultSignalHandler"],[13,"RegisterSignalHandler"],[13,"Sigaction"],[13,"WaitForSignal"],[4,"Error"],[13,"BlockSignal"],[13,"ClearCheckPending"],[13,"ClearGetPending"],[13,"ClearWaitPending"],[13,"CompareBlockedSignals"],[13,"CreateSigset"],[13,"GetSid"],[13,"Kill"],[13,"RetrieveSignalMask"],[13,"RtSignumGreaterThanMax"],[13,"SignalAlreadyBlocked"],[13,"UnblockSignal"],[13,"UnrecognizedSignum"],[13,"WaitForSignal"],[13,"WaitPid"],[4,"Priority"],[4,"Facility"],[4,"Error"],[3,"Syslogger"],[13,"Connect"],[13,"GetLowestFd"],[13,"Socket"],[4,"VsockCid"],[3,"VsockListener"],[3,"VsockSocket"],[3,"VsockStream"],[3,"AddrParseError"],[3,"SocketAddr"],[8,"ToSocketAddr"],[13,"Cid"]]},\
"bit_field":{"doc":"This crate provides a <code>#[bitfield]</code> attribute macro for …","tn":["BitField0","BitField1","BitField10","BitField11","BitField12","BitField13","BitField14","BitField15","BitField16","BitField17","BitField18","BitField19","BitField2","BitField20","BitField21","BitField22","BitField23","BitField24","BitField25","BitField26","BitField27","BitField28","BitField29","BitField3","BitField30","BitField31","BitField32","BitField33","BitField34","BitField35","BitField36","BitField37","BitField38","BitField39","BitField4","BitField40","BitField41","BitField42","BitField43","BitField44","BitField45","BitField46","BitField47","BitField48","BitField49","BitField5","BitField50","BitField51","BitField52","BitField53","BitField54","BitField55","BitField56","BitField57","BitField58","BitField59","BitField6","BitField60","BitField61","BitField62","BitField63","BitField64","BitField7","BitField8","BitField9","Error","bitfield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","raw_val","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["bit_fieldd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error type for bit field get.","The function that derives the actual implementationi":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,1,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,1,1,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullformatter",3]],["result",6]],[[["formatter",3]],["resultu64",15],["str",15]],["error",3]],[[],["u64",15]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Error"],[3,"BitField0"],[3,"BitField1"],[3,"BitField2"],[3,"BitField3"],[3,"BitField4"],[3,"BitField5"],[3,"BitField6"],[3,"BitField7"],[3,"BitField8"],[3,"BitField9"],[3,"BitField10"],[3,"BitField11"],[3,"BitField12"],[3,"BitField13"],[3,"BitField14"],[3,"BitField15"],[3,"BitField16"],[3,"BitField17"],[3,"BitField18"],[3,"BitField19"],[3,"BitField20"],[3,"BitField21"],[3,"BitField22"],[3,"BitField23"],[3,"BitField24"],[3,"BitField25"],[3,"BitField26"],[3,"BitField27"],[3,"BitField28"],[3,"BitField29"],[3,"BitField30"],[3,"BitField31"],[3,"BitField32"],[3,"BitField33"],[3,"BitField34"],[3,"BitField35"],[3,"BitField36"],[3,"BitField37"],[3,"BitField38"],[3,"BitField39"],[3,"BitField40"],[3,"BitField41"],[3,"BitField42"],[3,"BitField43"],[3,"BitField44"],[3,"BitField45"],[3,"BitField46"],[3,"BitField47"],[3,"BitField48"],[3,"BitField49"],[3,"BitField50"],[3,"BitField51"],[3,"BitField52"],[3,"BitField53"],[3,"BitField54"],[3,"BitField55"],[3,"BitField56"],[3,"BitField57"],[3,"BitField58"],[3,"BitField59"],[3,"BitField60"],[3,"BitField61"],[3,"BitField62"],[3,"BitField63"],[3,"BitField64"]]},\
"bit_field_derive":{"doc":"","t":[23],"n":["bitfield"],"q":["bit_field_derive"],"d":["The function that derives the actual implementation."],"i":[0],"f":[null],"p":[]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[null],"p":[]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"crc32fast":{"doc":"Fast, SIMD-accelerated CRC32 (IEEE) checksum computation.","t":[3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11],"n":["Hasher","borrow","borrow_mut","clone","clone_into","combine","default","finalize","finish","fmt","from","hash","into","new","new_with_initial","new_with_initial_len","reset","to_owned","try_from","try_into","type_id","update","write"],"q":["crc32fast","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents an in-progress CRC32 computation.","","","","","Combine the hash state with the hash state for the …","","Finalize the hash state and return the computed CRC32 …","","","","Computes the CRC32 hash of a byte slice.","","Create a new <code>Hasher</code>.","Create a new <code>Hasher</code> with an initial CRC32 state.","Create a new <code>Hasher</code> with an initial CRC32 state.","Reset the hash state.","","","","","Process the given byte slice and update the hash state.",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["hasher",3]],[[]],[[]],[[]],[[],["u32",15]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[]],[[],["u32",15]],[[]],[[]],[[["u32",15]]],[[["u64",15],["u32",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Hasher"]]},\
"cros_async":{"doc":"An Executor and future combinators based on operations …","t":[4,6,3,3,3,4,3,4,13,3,13,13,8,8,13,13,3,8,6,4,3,13,13,3,13,13,13,3,8,11,11,10,11,11,10,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,5,5,5,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,10,11,11,12,12,12,12,12,12,12,12,12,12,8,4,13,3,6,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11,11,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AsyncError","AsyncResult","AsyncWrapper","BlockingPool","Empty","Error","EventAsync","Executor","Fd","FdExecutor","FdExecutor","Finished","IntoAsync","IoSourceExt","Pending","Poll","PollSource","ReadAsync","Result","SelectResult","TimerAsync","TimerAsync","TimerFd","URingExecutor","URingExecutor","Uring","Uring","UringSource","WriteAsync","as_raw_fd","as_raw_fds","as_source","as_source","as_source","as_source_mut","as_source_mut","as_source_mut","async_from","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","complete2","complete3","complete4","complete5","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","empty","fallocate","fallocate","fallocate","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","fsync","fsync","fsync","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_inner","into_source","into_source","into_source","into_source","into_source","mem","new","new","new","new","new","new","new","new","new","next_val","next_val","poll","read_to_mem","read_to_mem","read_to_mem","read_to_vec","read_to_vec","read_to_vec","read_u64","read_u64","read_u64","reset","run","run","run","run_one","run_one_poll","run_one_uring","run_until","run_until","run_until","select2","select3","select4","select5","select6","shutdown","sleep","source","spawn","spawn","spawn","spawn","spawn_blocking","spawn_blocking","spawn_blocking","spawn_local","spawn_local","spawn_local","sync","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait_readable","wait_readable","wait_readable","with_capacity","write_from_mem","write_from_mem","write_from_mem","write_from_vec","write_from_vec","write_from_vec","0","0","0","0","0","0","0","0","0","0","BackingMemory","Error","InvalidOffset","MemRegion","Result","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","from","from","get_volatile_slice","into","into","len","offset","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","1","Condvar","Mutex","SpinLock","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","default","from","from","from","from","from","from","from","get_mut","get_mut","into","into","into","into_inner","into_inner","lock","lock","new","new","new","notify_all","notify_one","read_lock","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait","wait_read"],"q":["cros_asynccros_async::AsyncError","","cros_async::Error","","","","cros_async::Executor","","cros_async::SelectResult","","cros_async::mem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cros_async::mem::Error","","cros_async::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Simple wrapper struct to implement IntoAsync on foreign …","A thread pool for running work that may block.","","","An async version of <code>sys_util::EventFd</code>.","An executor for scheduling tasks that poll futures to …","","","Error from the FD executor.","","Marker trait signifying that the implementor is suitable …","Subtrait for general async IO.","","An error with a polled(FD) source.","Async wrapper for an IO source that uses the FD executor …","Ergonomic methods for async reads.","","","An async version of sys_util::TimerFd.","Error from TimerFd.","Error from TimerFd.","An executor that uses io_uring for its asynchronous I/O …","Error from the uring executor.","","An error with a uring source.","<code>UringSource</code> wraps FD backed IO sources for use with …","Ergonomic methods for async writes.","","","Provides a ref to the underlying IO source.","Provides a ref to the underlying IO source.","Provides a mutable ref to the underlying IO source.","Provides a mutable ref to the underlying IO source.","Provides a mutable ref to the underlying IO source.","Provides a ref to the underlying IO source.","Create a new <code>Box&lt;dyn IoSourceExt&lt;F&gt;&gt;</code> associated with <code>self</code>. …","Run a future to completion on the current thread.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a combinator that runs the two given futures to …","Creates a combinator that runs the three given futures to …","Creates a combinator that runs the four given futures to …","Creates a combinator that runs the five given futures to …","","","","","","","","","","See <code>fallocate(2)</code>. Note this op is synchronous when using …","See <code>fallocate(2)</code> for details.","See <code>fallocate(2)</code>. Note this op is synchronous when using …","","","","","","","","","","","","","","","","","","Sync all completed write operations to the backing storage.","Sync all completed write operations to the backing storage.","Sync all completed write operations to the backing storage.","","","","","","","","","","","","","","","Consumes the <code>AsyncWrapper</code>, returning the inner struct.","Yields the underlying IO source.","Return the inner source.","Yields the underlying IO source.","Consume <code>self</code> and return the object used to create it.","Yields the underlying IO source.","","Create a new <code>BlockingPool</code>.","","Create a new <code>AsyncWrapper</code> that wraps <code>val</code>.","Create a new <code>PollSource</code> from the given IO source.","","Creates a new <code>UringSource</code> that wraps the given <code>io_source</code> …","Create a new <code>Executor</code>.","","","Gets the next value from the eventfd.","Gets the next value from the timer.","","Reads to the given <code>mem</code> at the given offsets from the file …","Reads to the given <code>mem</code> at the given offsets from the file …","Reads to the given <code>mem</code> at the given offsets from the file …","Reads from the iosource at <code>file_offset</code> and fill the given …","Reads from the iosource at <code>file_offset</code> and fill the given …","Reads from the iosource at <code>file_offset</code> and fill the given …","Reads a single u64 from the current offset.","","Reads a single u64 (e.g. from an eventfd).","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …","Run the executor indefinitely, driving all spawned futures …","","","Creates an Executor that runs one future to completion.","Creates a FdExecutor that runs one future to completion.","Creates a URingExecutor that runs one future to completion.","Drive all futures spawned in this executor until <code>f</code> …","","","Creates a combinator that runs the two given futures until …","Creates a combinator that runs the three given futures …","Creates a combinator that runs the four given futures …","Creates a combinator that runs the five given futures …","Creates a combinator that runs the six given futures until …","Shut down the <code>BlockingPool</code>.","Async sleep for the given duration","","Spawn a task to run in the <code>BlockingPool</code>.","Spawn a new future for this executor to run to completion. …","","","Run the provided closure on a dedicated thread where …","","","Spawn a thread-local task for this executor to drive to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for the FD of <code>self</code> to be readable.","Wait for the FD of <code>self</code> to be readable.","Wait for the FD of <code>self</code> to be readable.","Like new but with pre-allocating capacity for up to …","Writes from the given <code>mem</code> from the given offsets to the …","Writes from the given <code>mem</code> from the given offsets to the …","Writes from the given <code>mem</code> from the given offsets to the …","Writes from the given <code>vec</code> to the file starting at …","Writes from the given <code>vec</code> to the file starting at …","Writes from the given <code>vec</code> to the file starting at …","","","","","","","","","","","Trait for memory that can yeild both iovecs in to the …","","Invalid offset or length given for an iovec in backing …","Used to index subslices of backing memory. Like an iovec, …","","","","","","","","","","","","","Returns VolatileSlice pointing to the backing memory. This …","","","","","","","","","","","","","","","A primitive to wait for an event to occur without …","A high-level primitive that provides safe, mutable access …","A primitive that provides safe, mutable access to a shared …","","","","","","","","","","","","","","","","","","Returns a mutable reference to the contained value. This …","","","","Consume the <code>Mutex</code> and return the contained value. This …","Consumes the <code>SpinLock</code> and returns the value guarded by it. …","Acquires exclusive, mutable access to the resource …","Acquires exclusive, mutable access to the resource …","Creates a new condition variable ready to be waited on and …","Create a new, unlocked <code>Mutex</code> ready for use.","Creates a new, unlocked <code>SpinLock</code> that’s ready for use.","Notify all threads currently waiting on the <code>Condvar</code>.","Notify at most one thread currently waiting on the <code>Condvar</code>.","Acquires shared, immutable access to the resource …","","","","","","","","","","Block the current thread until this <code>Condvar</code> is notified by …","Like <code>wait()</code> but takes and returns a <code>MutexReadGuard</code> instead."],"i":[0,0,0,0,0,0,0,0,1,0,2,3,0,0,3,4,0,0,0,0,0,2,2,0,2,1,4,0,0,5,5,6,7,8,6,7,8,1,0,9,10,5,7,3,11,8,12,1,13,4,14,2,9,10,5,7,3,11,8,12,1,13,4,14,2,1,13,14,1,13,14,0,0,0,0,9,5,7,8,5,7,8,9,0,15,7,8,4,4,2,2,9,10,5,7,3,11,8,12,1,13,4,14,2,15,7,8,9,10,5,7,3,11,8,12,1,13,4,14,2,12,5,6,7,7,8,8,0,9,10,5,7,11,8,1,13,14,10,11,12,16,7,8,16,7,8,16,7,8,11,1,13,14,0,0,0,1,13,14,0,0,0,0,0,9,11,4,9,1,13,14,1,13,14,1,13,14,0,1,13,14,4,2,9,10,5,7,3,11,8,12,1,13,4,14,2,9,10,5,7,3,11,8,12,1,13,4,14,2,12,9,10,5,7,3,11,8,12,1,13,4,14,2,16,7,8,9,15,7,8,15,7,8,17,18,19,20,21,22,23,24,25,26,0,0,27,0,0,27,28,27,28,28,28,27,27,28,27,28,29,27,28,28,28,28,27,27,28,27,28,27,28,30,30,0,0,0,31,32,33,31,32,33,31,32,33,31,32,32,32,33,33,33,32,33,31,32,33,32,33,32,33,31,32,33,31,31,32,31,32,33,31,32,33,31,32,33,31,31],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["rawfd",6]],[[],[["global",3],["i32",15],["vec",3,["i32","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["send",8],["intoasync",8]],[["box",3,["iosourceext"]],["asyncresult",6,["box"]]]],[[["future",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["executor",4]],[[],["fdexecutor",3]],[[],["uringexecutor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["blockingpool",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["empty",3]],[[["u64",15],["u32",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["u64",15],["u32",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["u32",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]]],[[]],[[["box",3]]],[[]],[[["box",3]]],null,[[["usize",15],["duration",3]],["blockingpool",3]],[[["eventfd",3],["executor",4]],[["eventasync",3],["asyncresult",6,["eventasync"]]]],[[]],[[["fdexecutor",3]],[["error",4],["result",4,["error"]]]],[[["executor",4],["timerfd",3]],[["asyncresult",6,["timerasync"]],["timerasync",3]]],[[["uringexecutor",3]],[["error",4],["result",4,["uringsource","error"]],["uringsource",3]]],[[],["asyncresult",6]],[[],[["fdexecutor",3],["error",4],["result",4,["fdexecutor","error"]]]],[[],[["error",4],["result",4,["uringexecutor","error"]],["uringexecutor",3]]],[[]],[[]],[[["pin",3],["context",3]],["poll",4]],[[["u64",15],["arc",3,["backingmemory"]],["option",4,["u64"]],["backingmemory",8]],[["box",3,["future"]],["pin",3,["box"]]]],[[["u64",15],["arc",3,["backingmemory"]],["option",4,["u64"]],["backingmemory",8]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["arc",3,["backingmemory"]],["option",4,["u64"]],["backingmemory",8]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["u8",15],["option",4,["u64"]],["vec",3,["u8"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["u8",15],["option",4,["u64"]],["vec",3,["u8"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["u8",15],["option",4,["u64"]],["vec",3,["u8"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["option",4,["duration"]],["duration",3]],["sysresult",6]],[[],["asyncresult",6]],[[],[["result",4,["error"]],["error",4]]],[[],[["error",4],["result",4,["error"]]]],[[["future",8]],["result",6]],[[["future",8]],["result",6]],[[["future",8]],["result",6]],[[["future",8]],["asyncresult",6]],[[["future",8]],[["error",4],["result",4,["error"]]]],[[["future",8]],[["error",4],["result",4,["error"]]]],[[["future",8],["unpin",8]]],[[["future",8],["unpin",8]]],[[["future",8],["unpin",8]]],[[["future",8],["unpin",8]]],[[["future",8],["unpin",8]]],[[["instant",3],["option",4,["instant"]]],[["result",4,["shutdowntimedout"]],["shutdowntimedout",3]]],[[["executor",4],["duration",3]]],[[],[["option",4,["error"]],["error",8]]],[[],["task",3]],[[],["task",3]],[[],["task",3]],[[],["task",3]],[[],["task",3]],[[],["task",3]],[[],["task",3]],[[],["task",3]],[[],["task",3]],[[],["task",3]],null,[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[],[["pin",3,["box"]],["box",3,["future"]]]],[[["usize",15],["duration",3]],["blockingpool",3]],[[["u64",15],["arc",3,["backingmemory"]],["option",4,["u64"]],["backingmemory",8]],[["box",3,["future"]],["pin",3,["box"]]]],[[["u64",15],["arc",3,["backingmemory"]],["option",4,["u64"]],["backingmemory",8]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["arc",3,["backingmemory"]],["option",4,["u64"]],["backingmemory",8]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["u8",15],["option",4,["u64"]],["vec",3,["u8"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["u8",15],["option",4,["u64"]],["vec",3,["u8"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["u8",15],["option",4,["u64"]],["vec",3,["u8"]]],[["pin",3,["box"]],["box",3,["future"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["memregion",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["memregion",3]],[["volatileslice",3],["result",6,["volatileslice"]]]],[[]],[[]],null,null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["spinlockguard",3]],[[],["condvar",3]],[[],["mutex",3]],[[],["spinlock",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["mutexguard",3]]],[[["mutexreadguard",3]]]],"p":[[4,"Executor"],[4,"Error"],[4,"SelectResult"],[4,"AsyncError"],[3,"AsyncWrapper"],[8,"IoSourceExt"],[3,"PollSource"],[3,"UringSource"],[3,"BlockingPool"],[3,"EventAsync"],[3,"TimerAsync"],[3,"Empty"],[3,"FdExecutor"],[3,"URingExecutor"],[8,"WriteAsync"],[8,"ReadAsync"],[13,"Poll"],[13,"Uring"],[13,"FdExecutor"],[13,"TimerAsync"],[13,"TimerFd"],[13,"URingExecutor"],[13,"Uring"],[13,"Fd"],[13,"Pending"],[13,"Finished"],[4,"Error"],[3,"MemRegion"],[8,"BackingMemory"],[13,"InvalidOffset"],[3,"Condvar"],[3,"Mutex"],[3,"SpinLock"]]},\
"crosvm":{"doc":"The root level module that includes the config and …","tn":["BindMount","Bios","Config","DEFAULT_TOUCH_DEVICE_HEIGHT","DEFAULT_TOUCH_DEVICE_WIDTH","DISK_ID_LEN","DirectIoOption","DiskOption","Executable","FS","Fd","GidMap","Kernel","P9","Path","Pci","Platform","Plugin","SharedDir","SharedDirKind","TouchDeviceOption","VfioCommand","VfioType","VhostUserFsOption","VhostUserOption","VhostUserWlOption","VhostVsockDeviceParameter","ac97_parameters","acpi_tables","android_fstab","argument","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","balloon_bias","battery_type","block_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cid","clone","clone_into","count","cpu_capacity","cpu_clusters","default","default","default","default","delay_rt","direct_edge_irq","direct_level_irq","direct_mmio","direct_pmio","disks","display_window_keyboard","display_window_mouse","dmi_path","dst","eq","eq","executable_path","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","fs_cfg","gdb","gdb","get_path","get_size","get_type","gid_map","gpu_parameters","host_cpu_topology","host_ip","hugepages","id","initrd_path","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","iommu_enabled","kind","kvm_device_path","mac_address","memory","memory_file","net_vq_pairs","netmask","new","new","no_legacy","no_smt","o_direct","outer","p9_cfg","params","path","path","per_vm_core_scheduling","platform","plugin","plugin_gid_maps","plugin_mounts","plugin_root","pmem_devices","protected_vm","pstore","ranges","read_only","rt_cpus","sandbox","seccomp_log_failures","seccomp_policy_dir","serial_parameters","set_default_size","set_height","set_width","shared_dirs","socket","socket","socket","socket_path","software_tpm","sound","sparse","split_irqchip","src","src","stub_pci_devices","swiotlb","syslog_tag","tag","tag","tap_fd","tap_name","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid_map","vcpu_affinity","vcpu_count","vfio","vhost_net","vhost_net_device_path","vhost_user_blk","vhost_user_console","vhost_user_fs","vhost_user_gpu","vhost_user_mac80211_hwsim","vhost_user_net","vhost_user_snd","vhost_user_vsock","vhost_user_wl","vhost_vsock_device","virtio_input_evdevs","virtio_keyboard","virtio_mice","virtio_multi_touch","virtio_single_touch","virtio_switches","virtio_trackpad","vm_tube","vvu_proxy","wayland_socket_paths","writable","x_display","0","0","0","0","0","Argument","ArgumentValueMode","Disallowed","Error","ExpectedArgument","ExpectedValue","InvalidValue","KeyValuePair","Optional","PrintHelp","Required","Result","Syntax","TooManyArguments","UnexpectedValue","UnknownArgument","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","eq","flag","flag_or_value","fmt","fmt","fmt","from","from","from","from","help","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invalid_key_err","invalid_value_err","key","long","parse","parse_key_value_options","parse_numeric","parse_or","positional","print_help","set_arguments","short","short_flag","short_value","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","value","value","value_mode","0","0","0","0","0","0","expected","value","GdbStub","add_hw_breakpoint","as_any","as_any_mut","base_ops","borrow","borrow_mut","breakpoints","from","gdb_thread","hw_breakpoint","into","into_any","into_any_rc","new","read_addrs","read_registers","remove_hw_breakpoint","resume","try_from","try_into","type_id","write_addrs","write_registers","ExitState","Reset","Stop","as_any","as_any_mut","borrow","borrow_mut","from","into","into_any","into_any_arc","into_any_rc","run_config","try_from","try_into","type_id","CloneEvent","CloneVcpuPipe","CreateEvent","CreateIrqChip","CreateJail","CreateKvm","CreateMainSocket","CreatePIT","CreateSignalFd","CreateSocketPair","CreateStderrPipe","CreateTapFd","CreateVcpu","CreateVcpuSocket","CreateVm","CreateWaitContext","DecodeRequest","DropCapabilities","EncodeResponse","Error","Mount","MountDev","MountLib","MountLib64","MountPlugin","MountPluginLib","MountProc","MountRoot","NoRootDir","ParsePivotRoot","ParseSeccomp","PluginFailed","PluginKill","PluginKilled","PluginRunJail","PluginSocketHup","PluginSocketPoll","PluginSocketRecv","PluginSocketSend","PluginSpawn","PluginTimeout","PluginWait","Poll","RootNotAbsolute","RootNotDir","SetGidMap","SetUidMap","SigChild","SignalFd","SpawnVcpu","StderrNonblock","TapEnable","TapOpen","TapSetIp","TapSetMacAddress","TapSetNetmask","ValidateTapFd","WaitContextAdd","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","run_config","run_vcpus","to_string","try_from","try_into","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","code","pid","signo","status"],"q":["crosvmcrosvm::Executable","","","crosvm::VhostVsockDeviceParameter","","crosvm::argument","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crosvm::argument::Error","","","","","","","","crosvm::gdb","","","","","","","","","","","","","","","","","","","","","","","","crosvm::platform","","","","","","","","","","","","","","","","crosvm::plugin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crosvm::plugin::Error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A bind mount for directories in the plugin process.","An executable intended to be run as a BIOS directly.","Aggregate of all configurable options for a running VM.","","","Maximum length of a <code>DiskOption</code> identifier.","Direct IO forwarding options","","Indicates the location and kind of executable kernel for a …","","","A mapping of linux group IDs for the plugin process.","A elf linux kernel, loaded and executed by crosvm.","","","","","Path to a plugin executable that is forked by crosvm.","","","","VFIO device structure for creating a new instance based on …","Vfio device type, recognized based on command line option.","","","","","","","","Handles argument parsing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Getter for the path to the input event streams.","If the user specifies the size, use it. Otherwise, use the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When a user specifies the parameters for a touch device, …","Setter for the height specified by the user.","Setter for the width specified by the user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about an argument expected from the command …","","Specifies that an argument does not allow a value and that …","An error with argument parsing.","The argument was required.","The argument expects a value.","The argument’s given value is invalid.","","Specifies that an argument may have a value during parsing …","The help information was requested","Specifies that an argument requires a value and that an …","Result of a argument parsing.","There was a syntax error with the argument.","The argument was already given and none more are expected.","The argument does not expect a value.","The argument’s name is unused.","","","","","","","","","","","","","","","","","","","","","","","","","","","Helpfuly usage information for this argument to display to …","","","","","","","","","","","","","","","","","","","","The long name of this argument.","","Parse a string of delimiter-separated key-value options. …","","","","Prints command line usage information to stdout.","Parses the given <code>args</code> against the list of know arguments …","Optional single character shortened argument name.","","","","","","","","","","","","","","","","","","The name of the value to display in the usage information.","Specifies how values should be handled for this this …","","","","","","","","","","Add a new hardware breakpoint. Return <code>Ok(false)</code> if the …","","","","","","","","","","","","","","","","Remove an existing hardware breakpoint. Return <code>Ok(false)</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error that occurs during the lifetime of a plugin …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run a VM with a plugin process specified by <code>cfg</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,0,0,0,0,0,2,3,0,1,2,3,4,4,1,0,0,0,0,0,0,0,0,0,5,5,5,0,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,5,5,6,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,5,4,4,11,5,5,13,3,5,2,5,5,5,5,5,5,5,5,5,10,2,4,5,1,15,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,2,4,13,0,5,12,12,14,13,5,5,5,5,6,5,11,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,14,13,5,5,5,5,5,5,12,14,5,5,6,11,13,5,6,15,5,0,0,5,5,5,5,5,5,15,6,5,5,5,5,5,12,12,12,5,7,8,9,5,5,5,6,5,10,13,5,5,5,8,13,5,5,4,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,6,7,8,9,10,11,12,13,14,3,5,1,15,2,4,13,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,5,5,10,5,16,17,18,19,20,0,0,21,0,22,22,22,0,21,22,21,0,22,22,22,22,23,24,22,21,23,24,22,21,23,24,22,21,23,24,22,21,21,23,23,22,22,21,23,24,22,21,23,23,24,22,21,23,24,22,21,23,24,22,21,23,24,22,21,24,24,24,23,24,0,24,24,23,0,0,23,23,23,22,23,24,22,21,23,24,22,21,23,24,22,21,23,24,23,23,25,26,27,28,29,30,31,31,0,32,32,32,32,32,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,33,33,33,33,33,33,33,33,33,33,33,0,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,34,34,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,86,86,86],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["vfiotype",4]],[[]],null,null,null,[[],["shareddir",3]],[[]],[[],["config",3]],[[],["shareddirkind",4]],null,null,null,null,null,null,null,null,null,null,[[["shareddirkind",4]],["bool",15]],[[["vfiotype",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],null,null,null,[[],["path",3]],[[]],[[],["vfiotype",4]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],null,null,null,null,null,null,null,[[["pathbuf",3]],["touchdeviceoption",3]],[[["vfiotype",4],["str",15]],[["vfiocommand",3],["result",6,["vfiocommand"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argumentvaluemode",4]],["bool",15]],[[["str",15]],["argument",3]],[[["str",15]],["argument",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["error",4]],[[["string",3]],["error",4]],[[],["str",15]],null,[[],["result",6]],[[["str",15],["char",15]]],[[],["result",6]],[[],["result",6]],[[["str",15]],["argument",3]],[[["str",15]]],[[],["result",6]],null,[[["char",15],["str",15]],["argument",3]],[[["char",15],["str",15]],["argument",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],["argument",3]],[[],[["str",15],["result",6,["str"]]]],null,null,null,null,null,null,null,null,null,null,null,[[],[["bool",15],["targetresult",6,["bool"]]]],[[],["any",8]],[[],["any",8]],[[],["baseops",4]],[[]],[[]],[[],[["option",4,["breakpointsops"]],["breakpointsops",6]]],[[]],[[["gdbstub",3],["u32",15]]],[[],[["option",4,["hwbreakpointops"]],["hwbreakpointops",6]]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["receiver",3,["vcpudebugstatusmessage"]],["tube",3],["vec",3,["sender"]],["vcpudebugstatusmessage",3],["sender",3,["vcpucontrol"]]]],[[],["targetresult",6]],[[],["targetresult",6]],[[],[["bool",15],["targetresult",6,["bool"]]]],[[["gdbinterrupt",3],["resumeaction",4]],[["result",4,["stopreason"]],["stopreason",4,["u64"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["targetresult",6]],[[],["targetresult",6]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["config",3]],[["result",6,["exitstate"]],["exitstate",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["config",3]],[["result",4,["error"]],["error",4]]],[[["vec",3],["vm",3],["u32",15],["event",3],["kvm",3],["process",3],["arc",3]],[["result",4,["error"]],["error",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Executable"],[4,"SharedDirKind"],[4,"VhostVsockDeviceParameter"],[4,"VfioType"],[3,"Config"],[3,"DiskOption"],[3,"VhostUserOption"],[3,"VhostUserFsOption"],[3,"VhostUserWlOption"],[3,"BindMount"],[3,"GidMap"],[3,"TouchDeviceOption"],[3,"SharedDir"],[3,"VfioCommand"],[3,"DirectIoOption"],[13,"Bios"],[13,"Kernel"],[13,"Plugin"],[13,"Path"],[13,"Fd"],[4,"ArgumentValueMode"],[4,"Error"],[3,"Argument"],[3,"KeyValuePair"],[13,"ExpectedArgument"],[13,"ExpectedValue"],[13,"Syntax"],[13,"TooManyArguments"],[13,"UnexpectedValue"],[13,"UnknownArgument"],[13,"InvalidValue"],[3,"GdbStub"],[4,"ExitState"],[4,"Error"],[13,"CloneEvent"],[13,"CloneVcpuPipe"],[13,"CreateEvent"],[13,"CreateIrqChip"],[13,"CreateJail"],[13,"CreateKvm"],[13,"CreateMainSocket"],[13,"CreatePIT"],[13,"CreateSignalFd"],[13,"CreateSocketPair"],[13,"CreateStderrPipe"],[13,"CreateTapFd"],[13,"CreateVcpu"],[13,"CreateVcpuSocket"],[13,"CreateVm"],[13,"CreateWaitContext"],[13,"DecodeRequest"],[13,"DropCapabilities"],[13,"EncodeResponse"],[13,"Mount"],[13,"MountDev"],[13,"MountLib"],[13,"MountLib64"],[13,"MountPlugin"],[13,"MountPluginLib"],[13,"MountProc"],[13,"MountRoot"],[13,"ParsePivotRoot"],[13,"ParseSeccomp"],[13,"PluginFailed"],[13,"PluginKill"],[13,"PluginKilled"],[13,"PluginRunJail"],[13,"PluginSocketPoll"],[13,"PluginSocketRecv"],[13,"PluginSocketSend"],[13,"PluginSpawn"],[13,"PluginWait"],[13,"Poll"],[13,"SetGidMap"],[13,"SetUidMap"],[13,"SignalFd"],[13,"SpawnVcpu"],[13,"StderrNonblock"],[13,"TapEnable"],[13,"TapOpen"],[13,"TapSetIp"],[13,"TapSetMacAddress"],[13,"TapSetNetmask"],[13,"ValidateTapFd"],[13,"WaitContextAdd"],[13,"SigChild"]]},\
"crosvm_direct":{"doc":"Runs a virtual machine","t":[4,13,13,13,11,11,5,5,11,11,5,5,5,5,5,11,11,11,11,11,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,5,5,5,5,5,5,5,5,5],"n":["CommandStatus","Success","VmReset","VmStop","as_any","as_any_mut","balloon_stats","balloon_vms","borrow","borrow_mut","create_composite","create_qcow2","crosvm_main","disk_cmd","executable_is_plugin","from","into","into_any","into_any_arc","into_any_rc","main","make_rt","modify_battery","modify_usb","panic_hook","parse_ac97_options","parse_battery_options","parse_bus_id_addr","parse_cpu_affinity","parse_cpu_capacity","parse_cpu_set","parse_direct_io_options","parse_gpu_display_options","parse_gpu_options","parse_gpu_render_server_options","parse_hex_or_decimal","parse_plugin_gid_map_option","parse_plugin_mount_option","parse_serial_options","parse_stub_pci_parameters","pkg_version","print_usage","resume_vms","run_vm","set_argument","start_device","stop_vms","suspend_vms","try_from","try_into","type_id","usb_attach","usb_detach","usb_list","validate_arguments","wait_all_children","log_panic_info","redirect_stderr","restore_stderr","set_panic_hook"],"q":["crosvm_direct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crosvm_direct::panic_hook","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a list of guest to host CPU mappings.","","Parse a comma-separated list of CPU numbers and ranges and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intent of our panic hook is to get panic info and a …"],"i":[0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,[[],["any",8]],[[],["any",8]],[[["args",3]],["result",4]],[[["args",3]],["result",4]],[[]],[[]],[[["args",3]],["result",4]],[[["args",3]],["result",4]],[[],[["result",4,["commandstatus"]],["commandstatus",4]]],[[["args",3]],["result",4]],[[["option",4]],["bool",15]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[["args",3]],["result",4]],[[["args",3]],["result",4]],[[["args",3]],["result",4]],null,[[["str",15]],[["ac97parameters",3],["result",6,["ac97parameters"]]]],[[["str",15],["option",4,["str"]]],[["result",6,["batterytype"]],["batterytype",4]]],[[["str",15]],["modifyusbresult",6]],[[["str",15]],[["result",6,["vcpuaffinity"]],["vcpuaffinity",4]]],[[["btreemap",3],["str",15]],["result",6]],[[["str",15]],[["vec",3,["usize"]],["result",6,["vec"]]]],[[["str",15],["option",4,["str"]]],[["result",6,["directiooption"]],["directiooption",3]]],[[["str",15],["gpuparameters",3],["option",4,["str"]]],["result",6]],[[["str",15],["gpuparameters",3],["option",4,["str"]]],["result",6]],[[["str",15],["gpuparameters",3],["option",4,["str"]]],["result",6]],[[["str",15]],[["u64",15],["result",4,["u64","parseinterror"]],["parseinterror",3]]],[[["str",15]],[["result",6,["gidmap"]],["gidmap",3]]],[[["str",15]],[["result",6,["bindmount"]],["bindmount",3]]],[[["str",15]],[["result",6,["serialparameters"]],["serialparameters",3]]],[[["str",15],["option",4,["str"]]],[["result",6,["stubpciparameters"]],["stubpciparameters",3]]],[[],["result",4]],[[]],[[["args",3]],["result",4]],[[["args",3]],[["result",4,["commandstatus"]],["commandstatus",4]]],[[["str",15],["config",3],["option",4,["str"]]],["result",6]],[[["args",3]],["result",4]],[[["args",3]],["result",4]],[[["args",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["args",3]],[["usbcontrolresult",4],["modifyusbresult",6,["usbcontrolresult"]]]],[[["args",3]],[["usbcontrolresult",4],["modifyusbresult",6,["usbcontrolresult"]]]],[[["args",3]],[["usbcontrolresult",4],["modifyusbresult",6,["usbcontrolresult"]]]],[[["config",3]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[["fn",8],["panicinfo",3]]],[[],["option",4]],[[["file",3]],["bool",15]],[[]]],"p":[[4,"CommandStatus"]]},\
"crosvm_plugin":{"doc":"This module implements the dynamically loaded client …","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,19,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,3,5,3,5,5,3,3,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,3,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CheckExtentsion","Connect","Count","DestroyConnection","EnableVcpuCapability","EnableVmCapability","GetClock","GetDebugRegs","GetEmulatedCpuid","GetFpu","GetHypervCpuid","GetIoapicState","GetMsrIndexList","GetPicState","GetPitState","GetShutdownEvent","GetSupportedCpuid","GetVcpu","GetXCRegs","IoEvent","IrqEventGetFd","IrqEventGetResampleFd","MemoryGetDirtyLog","NetGetConfig","NewConnection","PauseVcpus","ReserveAsyncWriteRange","ReserveRange","SetClock","SetDebugRegs","SetFpu","SetHypercallHint","SetIdentityMapAddr","SetIoapicState","SetIrq","SetIrqRouting","SetPicState","SetPitState","SetXCRegs","Start","Stat","VcpuGetLapicState","VcpuGetMpState","VcpuGetMsrs","VcpuGetRegs","VcpuGetSregs","VcpuGetVcpuEvents","VcpuResume","VcpuSetCpuid","VcpuSetLapicState","VcpuSetMpState","VcpuSetMsrs","VcpuSetRegs","VcpuSetSregs","VcpuSetVcpuEvents","VcpuWait","anon_irqchip","anon_msi","anon_route","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","crosvm","crosvm_check_extension","crosvm_connect","crosvm_create_io_event","crosvm_create_irq_event","crosvm_create_memory","crosvm_destroy_connection","crosvm_destroy_io_event","crosvm_destroy_irq_event","crosvm_destroy_memory","crosvm_enable_capability","crosvm_get_clock","crosvm_get_emulated_cpuid","crosvm_get_hyperv_cpuid","crosvm_get_ioapic_state","crosvm_get_msr_index_list","crosvm_get_pic_state","crosvm_get_pit_state","crosvm_get_shutdown_eventfd","crosvm_get_supported_cpuid","crosvm_get_vcpu","crosvm_hint","crosvm_hint_detail","crosvm_io_event","crosvm_io_event_fd","crosvm_irq_event","crosvm_irq_event_get_fd","crosvm_irq_event_get_resample_fd","crosvm_irq_route","crosvm_memory","crosvm_memory_get_dirty_log","crosvm_net_config","crosvm_net_get_config","crosvm_new_connection","crosvm_pause_vcpus","crosvm_reserve_async_write_range","crosvm_reserve_range","crosvm_set_clock","crosvm_set_hypercall_hint","crosvm_set_identity_map_addr","crosvm_set_ioapic_state","crosvm_set_irq","crosvm_set_irq_routing","crosvm_set_pic_state","crosvm_set_pit_state","crosvm_start","crosvm_vcpu","crosvm_vcpu_enable_capability","crosvm_vcpu_event","crosvm_vcpu_get_debugregs","crosvm_vcpu_get_fpu","crosvm_vcpu_get_lapic_state","crosvm_vcpu_get_mp_state","crosvm_vcpu_get_msrs","crosvm_vcpu_get_regs","crosvm_vcpu_get_sregs","crosvm_vcpu_get_vcpu_events","crosvm_vcpu_get_xcrs","crosvm_vcpu_reg_cache","crosvm_vcpu_resume","crosvm_vcpu_set_cpuid","crosvm_vcpu_set_debugregs","crosvm_vcpu_set_fpu","crosvm_vcpu_set_lapic_state","crosvm_vcpu_set_mp_state","crosvm_vcpu_set_msrs","crosvm_vcpu_set_regs","crosvm_vcpu_set_sregs","crosvm_vcpu_set_vcpu_events","crosvm_vcpu_set_xcrs","crosvm_vcpu_wait","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["crosvm_plugindi":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,13,14,15,1,13,14,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["crosvm_net_config",3]],[[],["anon_irqchip",3]],[[],["anon_msi",3]],[[],["stat",4]],[[]],[[]],[[]],[[]],null,[[["u32",15]],["c_int",6]],[[],["c_int",6]],[[["u64",15],["u32",15]],["c_int",6]],[[["u32",15]],["c_int",6]],[[["c_int",6],["u64",15],["bool",15]],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[["u32",15]],["c_int",6]],[[],["c_int",6]],[[["u32",15]],["c_int",6]],[[["u32",15]],["c_int",6]],[[],["c_int",6]],[[["u32",15]],["c_int",6]],[[["bool",15]],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[["u32",15]],["c_int",6]],[[["u32",15]],["c_int",6]],null,null,null,[[],["c_int",6]],null,[[],["c_int",6]],[[],["c_int",6]],null,null,[[],["c_int",6]],null,[[],["c_int",6]],[[],["c_int",6]],[[["u64",15]],["c_int",6]],[[["u64",15],["u32",15]],["c_int",6]],[[["u64",15],["u32",15]],["c_int",6]],[[],["c_int",6]],[[["u32",15]],["c_int",6]],[[["u32",15]],["c_int",6]],[[],["c_int",6]],[[["u32",15],["bool",15]],["c_int",6]],[[["u32",15]],["c_int",6]],[[["bool",15]],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,[[["u32",15]],["c_int",6]],null,[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[["u32",15]],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,[[],["c_int",6]],[[["u32",15]],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[["u32",15]],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Stat"],[19,"anon_route"],[3,"crosvm_irq_route"],[3,"crosvm_hint"],[3,"crosvm_hint_detail"],[3,"crosvm"],[3,"crosvm_io_event"],[3,"crosvm_memory"],[3,"crosvm_irq_event"],[3,"crosvm_vcpu_event"],[3,"crosvm_vcpu_reg_cache"],[3,"crosvm_vcpu"],[3,"crosvm_net_config"],[3,"anon_irqchip"],[3,"anon_msi"]]},\
"data_model":{"doc":"","t":[8,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,14,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,5,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,8,4,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["DataInit","FlexibleArray","FlexibleArrayWrapper","IoBufMut","advance","as_iobufs","as_mut","as_mut_ptr","as_mut_ptr","as_mut_slice","as_ptr","as_ptr","as_ref","as_slice","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","endian","entries_slice","flexible_array_impl","fmt","from","from","from_mut_slice","from_raw_parts","from_reader","from_slice","get_len","get_mut_slice","get_slice","into","into","is_empty","len","mut_entries_slice","new","new","set_len","to_owned","truncate","try_from","try_from","try_into","try_into","type_id","type_id","vec_with_array_field","volatile_memory","Be16","Be32","Be64","BeSize","Le16","Le32","Le64","LeSize","SBe16","SBe32","SBe64","SBeSize","SLe16","SLe32","SLe64","SLeSize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_native","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","OutOfBounds","Overflow","VolatileMemory","VolatileMemoryError","VolatileMemoryResult","VolatileRef","VolatileSlice","advance","as_iobuf","as_iobufs","as_mut_ptr","as_mut_ptr","as_ptr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calc_offset","clone","clone_into","copy_from","copy_to","copy_to_volatile_slice","eq","fmt","fmt","fmt","fmt","from","from","from","from_raw_parts","get_ref","get_slice","get_slice","into","into","into","load","ne","new","new","offset","size","size","store","sub_slice","to_owned","to_slice","to_string","truncate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_bytes","addr","base","offset"],"q":["data_model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","data_model::endiandata_model::volatile_memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","data_model::volatile_memory::VolatileMemoryError","",""],"d":["Types for which it is safe to initialize from raw data.","The following code provides generic helpers for creating …","","This type is essentialy <code>std::io::IoBufMut</code>, and guaranteed …","Advance the internal position of the buffer.","Converts a slice of <code>IoBufMut</code>s into a slice of <code>iovec</code>s.","","Get a mutable pointer so it can be passed to the kernel. …","Gets a mutable pointer to this slice’s memory.","Converts a mutable reference to <code>self</code> into a mutable slice …","Get a pointer so it can be passed to the kernel. Callers …","Gets a const pointer to this slice’s memory.","","Converts a reference to <code>self</code> into a slice of bytes.","","","","","","","Explicit endian types useful for embedding in structs or …","Returns a slice of the flexible array member, for …","Always use this macro for implementing the FlexibleArray&lt;<code>S</code>…","","","","Converts a mutable slice of raw data into a mutable …","Creates a <code>IoBufMut</code> from a pointer and a length.","Creates an instance of <code>Self</code> by copying raw data from an …","Converts a slice of raw data into a reference of <code>Self</code>.","Implementations must return the length of the flexible …","Implementations must return a mutable slice of flexible …","Implementations must return a slice of flexible array …","","","","","Returns a mutable slice of the flexible array member, for …","Creates a new FlexibleArrayWrapper for the given flexible …","","Implementations must set flexible array length in the …","","Shorten the length of the buffer.","","","","","","","The kernel API has many structs that resemble the …","Types for volatile access to memory.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endianness.","An integer type of with an explicit endiannessonverts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","Converts <code>self</code> to the native endianness.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>addr</code> is out of bounds of the volatile memory slice.","Taking a slice at <code>base</code> with <code>offset</code> would overflow <code>usize</code>.","Trait for types that support raw volatile access to their …","","","A memory location that supports volatile access of a <code>T</code>.","A slice of raw memory that supports volatile access. Like …","Advance the starting position of this slice.","Returns this <code>VolatileSlice</code> as an <code>IoBufMut</code>.","Converts a slice of <code>VolatileSlice</code>s into a slice of <code>IoBufMut</code>…","Gets a mutable pointer to this slice’s memory.","Gets the address of this slice’s memory.","Gets a const pointer to this slice’s memory.","","","","","","","Convenience function for computing <code>base + offset</code> which …","","","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> bytes, …","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> bytes, …","Copies <code>self.size()</code> or <code>slice.size()</code> bytes, whichever is …","","","","","","","","","Creates a <code>VolatileSlice</code> from a pointer and a length.","Gets a <code>VolatileRef</code> at <code>offset</code>.","Gets a slice of memory at <code>offset</code> that is <code>count</code> bytes in …","","","","","Does a volatile read of the value at the address of this …","","Creates a slice of raw memory that must support volatile …","Creates a reference to raw memory that must support …","Creates a copy of this slice with the address increased by …","Gets the size of this slice.","Gets the size of this slice.","Does a volatile write of the value <code>v</code> to the address of …","Similar to <code>get_slice</code> but the returned slice outlives this …","","Converts this <code>T</code> reference to a raw slice with the same …","","Shorten the length of the slice.","","","","","","","","","","Sets each byte of this slice with the given byte, similar …","","",""],"i":[0,0,0,0,1,1,1,2,1,3,2,1,1,3,2,1,2,1,1,1,0,2,0,1,2,1,3,1,3,3,4,4,4,2,1,1,1,2,2,1,4,1,1,2,1,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,21,0,0,0,0,0,22,22,22,22,23,22,21,22,23,21,22,23,0,22,22,22,22,22,21,21,21,22,23,21,22,23,22,24,24,22,21,22,23,23,21,22,23,22,22,23,23,22,22,23,21,22,21,22,23,21,22,23,21,22,23,22,25,26,26],"f":[null,null,null,null,[[["usize",15]]],[[]],[[],["iovec",3]],[[]],[[]],[[]],[[]],[[]],[[],["iovec",3]],[[]],[[]],[[]],[[]],[[]],[[],["iobufmut",3]],[[]],null,[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[],["option",4]],[[["usize",15]],["iobufmut",3]],[[["read",8]],["result",6]],[[],["option",4]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[]],[[["usize",15]],["flexiblearraywrapper",3]],[[],["iobufmut",3]],[[["usize",15]]],[[]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],[["default",8],["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["le16",3]],[[],["sle16",3]],[[],["le32",3]],[[],["sle32",3]],[[],["le64",3]],[[],["sle64",3]],[[],["lesize",3]],[[],["slesize",3]],[[],["be16",3]],[[],["sbe16",3]],[[],["be32",3]],[[],["sbe32",3]],[[],["be64",3]],[[],["sbe64",3]],[[],["besize",3]],[[],["sbesize",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["le16",3]],[[],["sle16",3]],[[],["le32",3]],[[],["sle32",3]],[[],["le64",3]],[[],["sle64",3]],[[],["lesize",3]],[[],["slesize",3]],[[],["be16",3]],[[],["sbe16",3]],[[],["be32",3]],[[],["sbe32",3]],[[],["be64",3]],[[],["sbe64",3]],[[],["besize",3]],[[],["sbesize",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["le16",3]],["bool",15]],[[["u16",15]],["bool",15]],[[["sle16",3]],["bool",15]],[[["i16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["le32",3]],["bool",15]],[[["sle32",3]],["bool",15]],[[["i32",15]],["bool",15]],[[["le64",3]],["bool",15]],[[["u64",15]],["bool",15]],[[["sle64",3]],["bool",15]],[[["i64",15]],["bool",15]],[[["lesize",3]],["bool",15]],[[["usize",15]],["bool",15]],[[["slesize",3]],["bool",15]],[[["isize",15]],["bool",15]],[[["u16",15]],["bool",15]],[[["be16",3]],["bool",15]],[[["sbe16",3]],["bool",15]],[[["i16",15]],["bool",15]],[[["be32",3]],["bool",15]],[[["u32",15]],["bool",15]],[[["sbe32",3]],["bool",15]],[[["i32",15]],["bool",15]],[[["be64",3]],["bool",15]],[[["u64",15]],["bool",15]],[[["i64",15]],["bool",15]],[[["sbe64",3]],["bool",15]],[[["usize",15]],["bool",15]],[[["besize",3]],["bool",15]],[[["sbesize",3]],["bool",15]],[[["isize",15]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u16",15]],["le16",3]],[[]],[[["i16",15]],["sle16",3]],[[]],[[["u32",15]],["le32",3]],[[]],[[]],[[["i32",15]],["sle32",3]],[[["u64",15]],["le64",3]],[[]],[[["i64",15]],["sle64",3]],[[]],[[]],[[["usize",15]],["lesize",3]],[[["isize",15]],["slesize",3]],[[]],[[["u16",15]],["be16",3]],[[]],[[["i16",15]],["sbe16",3]],[[]],[[["u32",15]],["be32",3]],[[]],[[]],[[["i32",15]],["sbe32",3]],[[]],[[["u64",15]],["be64",3]],[[]],[[["i64",15]],["sbe64",3]],[[]],[[["usize",15]],["besize",3]],[[]],[[["isize",15]],["sbesize",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["le16",3]],["bool",15]],[[["sle16",3]],["bool",15]],[[["le32",3]],["bool",15]],[[["sle32",3]],["bool",15]],[[["le64",3]],["bool",15]],[[["sle64",3]],["bool",15]],[[["lesize",3]],["bool",15]],[[["slesize",3]],["bool",15]],[[["be16",3]],["bool",15]],[[["sbe16",3]],["bool",15]],[[["be32",3]],["bool",15]],[[["sbe32",3]],["bool",15]],[[["be64",3]],["bool",15]],[[["sbe64",3]],["bool",15]],[[["besize",3]],["bool",15]],[[["sbesize",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["u16",15]],[[],["i16",15]],[[],["u32",15]],[[],["i32",15]],[[],["u64",15]],[[],["i64",15]],[[],["usize",15]],[[],["isize",15]],[[],["u16",15]],[[],["i16",15]],[[],["u32",15]],[[],["i32",15]],[[],["u64",15]],[[],["i64",15]],[[],["usize",15]],[[],["isize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[["usize",15]]],[[],["iobufmut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["volatilememoryresult",6,["usize"]],["usize",15]]],[[],["volatileslice",3]],[[]],[[]],[[]],[[["volatileslice",3]]],[[["volatilememoryerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",15]],["volatileslice",3]],[[["usize",15]],[["volatilememoryresult",6,["volatileref"]],["volatileref",3]]],[[["usize",15]],[["volatileslice",3],["volatilememoryresult",6,["volatileslice"]]]],[[["usize",15]],[["volatileslice",3],["volatilememoryresult",6,["volatileslice"]]]],[[]],[[]],[[]],[[]],[[["volatilememoryerror",4]],["bool",15]],[[],["volatileslice",3]],[[],["volatileref",3]],[[["usize",15]],[["volatileslice",3],["volatilememoryresult",6,["volatileslice"]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[["usize",15]],[["volatileslice",3],["volatilememoryresult",6,["volatileslice"]]]],[[]],[[],["volatileslice",3]],[[],["string",3]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u8",15]]],null,null,null],"p":[[3,"IoBufMut"],[3,"FlexibleArrayWrapper"],[8,"DataInit"],[8,"FlexibleArray"],[3,"Le16"],[3,"SLe16"],[3,"Le32"],[3,"SLe32"],[3,"Le64"],[3,"SLe64"],[3,"LeSize"],[3,"SLeSize"],[3,"Be16"],[3,"SBe16"],[3,"Be32"],[3,"SBe32"],[3,"Be64"],[3,"SBe64"],[3,"BeSize"],[3,"SBeSize"],[4,"VolatileMemoryError"],[3,"VolatileSlice"],[3,"VolatileRef"],[8,"VolatileMemory"],[13,"OutOfBounds"],[13,"Overflow"]]},\
"devices":{"doc":"Emulates virtual and hardware devices.","t":[4,3,3,13,13,3,3,8,8,8,4,3,8,4,13,13,3,13,13,13,13,13,13,13,13,13,4,8,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,3,4,3,3,8,4,4,3,3,3,4,13,13,3,4,13,3,13,13,13,3,3,13,13,13,13,13,3,3,3,13,13,0,11,10,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,10,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,12,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,14,14,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,14,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,14,12,0,12,0,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,17,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,17,13,3,8,4,8,6,3,3,3,13,13,4,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,17,17,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,13,8,4,3,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,0,0,0,0,0,0,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,4,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,13,13,4,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,4,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,4,13,13,6,8,11,11,11,11,11,11,10,10,10,11,11,11,11,10,10,10,11,11,11,8,10,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,3,3,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,8,3,3,13,13,4,3,13,13,13,4,13,3,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,3,4,13,13,13,13,13,13,13,3,13,3,13,13,4,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,3,13,13,13,13,13,3,4,13,17,13,13,13,13,13,3,4,6,4,13,4,3,3,13,13,13,13,3,3,13,3,4,13,13,8,13,13,13,3,13,17,13,8,3,3,3,3,3,13,13,13,13,13,13,13,3,13,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,5,5,11,11,11,11,11,12,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,11,11,11,12,11,12,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,0,11,11,10,11,10,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,0,3,3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,0,12,0,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,3,3,3,12,12,13,3,13,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,5,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,3,13,13,4,17,3,13,13,13,13,13,17,13,6,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,12,12,12,12,12,12,13,13,4,3,5,5,5,5,5,5,5,5,5,5,5,13,3,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,17,17,4,3,17,3,3,17,17,17,3,3,4,3,3,13,13,13,17,8,3,13,17,17,17,17,17,17,17,17,3,13,13,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,12,10,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,12,12,11,12,12,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,13,13,13,13,13,3,17,13,13,4,4,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,0,0,0,0,4,13,13,13,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,5,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,6,13,13,13,13,3,4,13,13,13,13,13,13,13,13,3,3,3,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,5,11,11,11,5,12,12,12,12,12,12,12,13,13,13,13,13,4,13,13,3,13,6,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,5,5,5,5,5,5,5,13,13,13,13,4,13,13,13,13,6,13,13,3,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,3,13,13,4,3,13,13,13,13,13,13,3,13,3,13,13,3,13,6,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,3,17,17,5,17,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Ac97Backend","Ac97Dev","Ac97Parameters","BaseSystemPeripheral","BridgeDevice","Bus","BusAccessInfo","BusDevice","BusDeviceObj","BusDeviceSync","BusError","BusRange","BusResumeDevice","BusType","CapabilitiesSetup","CloneEvent","Cmos","CreateEvent","CreateViosClientFailed","CreateWaitContext","DataAcquisitionSignalProcessing","DisplayController","DockingStation","Empty","EncryptionController","ForkingJail","HostHotPlugKey","HotPlugBus","I8042Device","InputDevice","IntA","IntB","IntC","IntD","IntelligentIoController","Io","IoAllocationFailed","IoRegistrationFailed","MassStorage","MemoryController","Mmio","MsixAllocatorOutOfSpace","MsixAllocatorOverflow","MsixAllocatorSizeZero","MultimediaController","NULL","NetworkController","NonEssentialInstrumentation","Other","Overlap","PciAddress","PciAddressMissing","PciAllocationFailed","PciBridge","PciClassCode","PciConfigIo","PciConfigMmio","PciDevice","PciDeviceError","PciInterruptPin","PciRoot","PcieRootPort","Pit","PitError","ProcessingAccelerator","Processor","ProxyDevice","ProxyError","SatelliteCommunicationController","Serial","SerialBusController","SimpleCommunicationController","SpawnThread","StubPciDevice","StubPciParameters","TimerCreateError","TooOld","Tube","VIOS","Vfio","VfioPciDevice","VfioPlatformDevice","VirtioPciDevice","WaitError","WirelessController","acpi","add_device","add_hotplug_device","add_hotplug_device","address","address","allocate_address","allocate_address","allocate_address","allocate_address","allocate_address","allocate_device_bars","allocate_device_bars","allocate_device_bars","allocate_device_bars","allocate_io_bars","allocate_io_bars","allocate_io_bars","allocate_io_bars","allocate_io_bars","allocate_regions","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_pci_device","as_pci_device","as_pci_device_mut","as_pci_device_mut","as_platform_device","as_platform_device","as_platform_device","as_platform_device_mut","as_platform_device_mut","as_platform_device_mut","assign_irq","assign_irq","assign_irq","assign_irq","assign_irq","assign_platform_irq","backend","base","bat","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","capture","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","config_register_read","config_register_read","config_register_read","config_register_write","config_register_write","config_register_write","config_space_read","config_space_write","contains","debug_label","debug_label","debug_label","debug_label","debug_label","debug_label","debug_label","debug_label","debug_label","debug_label","debug_label","debug_label","debug_label","debug_label","default","default","deserialize","deserialize","deserialize","deserialize","destroy_device","destroy_device","destroy_device","destroy_device","destroy_device","dev","device_file","device_id","direct_io","direct_irq","drop","drop","enable_pcie_cfg_mmio","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_config_address","from_str","from_string","func","generate_acpi","generate_acpi","get_bar_configuration","get_bar_configuration","get_bar_configuration","get_bar_configuration","get_bar_configuration","get_hotplug_device","get_hotplug_device","get_pit_state","get_platform_irqs","get_ranges","get_ranges","get_ranges","get_register_value","get_removed_children_devices","get_removed_children_devices","get_removed_children_devices","hot_plug","hot_plug","hot_unplug","hot_unplug","id","insert","insert_sync","interrupt_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_pci_device","into_pci_device","into_platform_device","into_platform_device","into_platform_device","ioevents","ioevents","ioevents","ioevents","irq_is_automask","irqchip","is_match","is_match","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","len","minijail_policy","multifunction","n","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","offset","on_device_sandboxed","on_device_sandboxed","on_sandboxed","on_sandboxed","overlaps","partial_cmp","partial_cmp","pid","pl030","programming_interface","queue_input_bytes","read","read","read","read","read","read","read","read","read","read","read","read","read_bar","read_bar","read_bar","read_bar","read_bar","read_config_register","read_config_register","read_config_register","read_config_register","read_config_register","register","register_array","register_device_capabilities","register_device_capabilities","register_device_capabilities","register_device_capabilities","remove","resume_imminent","resume_imminent","revision_id","serial_device","serialize","serialize","serialize","serialize","set_access_id","set_pit_state","static_register","subclass","subsystem_device_id","subsystem_vendor_id","to_config_address","to_mask","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_u32","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","usb","usb_debug","vendor_id","vfio","vios_server_path","virtio","write","write","write","write","write","write","write","write","write","write","write","write","write_bar","write_bar","write_bar","write_bar","write_bar","write_config_register","write_config_register","write_config_register","write_config_register","write_config_register","host_addr","0","0","0","0","1","1","base","size","0","0","0","0","0","0","0","0","ACPIPMResource","ACPIPM_RESOURCE_CONTROLBLK_LEN","ACPIPM_RESOURCE_EVENTBLK_LEN","ACPIPM_RESOURCE_LEN","as_any","as_any_mut","borrow","borrow_mut","debug_label","from","into","into_any","into_any_arc","into_any_rc","new","read","resume_imminent","to_aml_bytes","try_from","try_into","type_id","write","BatteryError","GOLDFISHBAT_MMIO_LEN","GoldfishBattery","Non32BitMmioAddress","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","debug_label","drop","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","keep_rds","new","read","to_aml_bytes","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write","DirectIo","DirectMmio","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","debug_label","debug_label","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","new","read","read","read","read","try_from","try_from","try_into","try_into","type_id","type_id","write","write","write","write","DirectIrq","DirectIrqError","Enable","Open","as_any","as_any","as_any_mut","as_any_mut","as_raw_descriptor","as_raw_descriptors","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","irq_enable","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","IOAPIC_BASE_ADDRESS","IOAPIC_MEM_LENGTH_BYTES","Interrupted","Ioapic","IrqChip","IrqChipCap","IrqChipX86_64","IrqEventIndex","KvmKernelIrqChip","KvmSplitIrqChip","Pic","Runnable","TscDeadlineTimer","VcpuRunState","X2Apic","add_vcpu","add_vcpu","add_vcpu","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_irq_chip","as_irq_chip","as_irq_chip","as_irq_chip_mut","as_irq_chip_mut","as_irq_chip_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_eoi","broadcast_eoi","broadcast_eoi","check_capability","check_capability","check_capability","clone","clone","clone_into","clone_into","debug_label","debug_label","end_of_interrupt","eq","eq","finalize_devices","finalize_devices","finalize_devices","fmt","fmt","from","from","from","from","from","from","get_external_interrupt","get_ioapic_state","get_ioapic_state","get_ioapic_state","get_ioapic_state","get_lapic_state","get_lapic_state","get_lapic_state","get_mp_state","get_mp_state","get_mp_state","get_pic_state","get_pic_state","get_pic_state","get_pic_state","get_pit","get_pit","get_pit","halted","halted","halted","has_interrupt","inject_interrupts","inject_interrupts","inject_interrupts","interrupt_requested","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","irq_event_tokens","irq_event_tokens","irq_event_tokens","kick_halted_vcpus","kick_halted_vcpus","kick_halted_vcpus","masked","new","new","new","new","pit_uses_speaker_port","pit_uses_speaker_port","pit_uses_speaker_port","process_delayed_irq_events","process_delayed_irq_events","process_delayed_irq_events","read","read","register_irq_event","register_irq_event","register_irq_event","register_resample_events","register_resample_events","route_irq","route_irq","route_irq","service_irq","service_irq","service_irq","service_irq","service_irq","service_irq_event","service_irq_event","service_irq_event","set_ioapic_state","set_ioapic_state","set_ioapic_state","set_ioapic_state","set_irq_routes","set_irq_routes","set_irq_routes","set_lapic_state","set_lapic_state","set_lapic_state","set_mp_state","set_mp_state","set_mp_state","set_pic_state","set_pic_state","set_pic_state","set_pic_state","set_pit","set_pit","set_pit","to_owned","to_owned","try_box_clone","try_box_clone","try_box_clone","try_clone","try_clone","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unregister_irq_event","unregister_irq_event","unregister_irq_event","wait_until_runnable","wait_until_runnable","wait_until_runnable","write","write","PL030_AMBA_ID","PL030_AMBA_IOMEM_SIZE","PL030_AMBA_MASK","Pl030","as_any","as_any_mut","borrow","borrow_mut","debug_label","from","into","into_any","into_any_arc","into_any_rc","new","read","try_from","try_into","type_id","write","CloneEvent","Error","File","FileError","InvalidPath","InvalidSerialHardware","InvalidSerialType","PathRequired","Serial","SerialDevice","SerialHardware","SerialParameters","SerialType","Sink","SocketCreateFailed","Stdout","Syslog","Unimplemented","UnixSocket","VirtioConsole","add_bind_mounts","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","console","create_serial_device","earlycon","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","from_str","hardware","input","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","num","partial_cmp","path","stdin","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","0","0","0","0","0","host_backend","xhci","error","host_backend_device_provider","host_device","usb_endpoint","AddToEventLoop","BadBackendProviderState","BadXhciTransferState","BufferLen","ClearHalt","CreateControlTube","CreateLibUsbContext","CreateTransfer","Error","GetActiveConfig","GetConfigDescriptor","GetDeviceDescriptor","GetEndpointDescriptor","GetEndpointType","GetInterfaceDescriptor","GetXhciTransferType","MissingRequiredBuffer","QueueAsyncJob","ReadBuffer","ReadControlTube","Reset","Result","SetActiveConfig","SetInterfaceAltSetting","SetupControlTube","StartAsyncJobQueue","TransferComplete","WriteBuffer","WriteControlTube","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","Created","Failed","HostBackendDeviceProvider","ProviderInner","Started","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","keep_rds","new","start","try_from","try_from","try_into","try_into","type_id","type_id","control_tube","inner","ControlEndpointState","DataStage","HostDevice","SetupStage","StatusStage","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","drop","eq","from","from","get_backend_type","get_pid","get_vid","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","reset","set_address","submit_transfer","try_from","try_from","try_into","try_into","type_id","type_id","UsbEndpoint","as_any","as_any_mut","borrow","borrow_mut","from","handle_transfer","into","into_any","into_any_arc","into_any_rc","match_ep","new","try_from","try_into","type_id","scatter_gather_buffer","usb_hub","xhci_backend_device","xhci_backend_device_provider","xhci_controller","xhci_transfer","BadTrbType","CastTrb","Error","ImmediateDataTooLong","ReadGuestMemory","ScatterGatherBuffer","UnknownTrbType","WriteGuestMemory","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","len","new","read","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write","0","0","0","0","0","0","AllPortsAttached","AlreadyDetached","Attach","Detach","Error","NoSuchDevice","NoSuchPort","UsbHub","UsbPort","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect_backend","detach","disconnect_port","fmt","fmt","from","from","from","get_backend_device","get_port","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","new","reset","send_device_connected_event","send_device_disconnected_event","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","addr","bus","pid","port_id","port_id","reason","reason","vid","BackendType","Usb2","Usb3","UsbDeviceAddress","XhciBackendDevice","as_any","as_any_mut","borrow","borrow_mut","eq","from","get_backend_type","get_pid","get_vid","into","into_any","into_any_arc","into_any_rc","reset","set_address","submit_transfer","try_from","try_into","type_id","XhciBackendDeviceProvider","keep_rds","start","XhciController","XhciFailHandle","allocate_address","allocate_io_bars","as_any","as_any","as_any_mut","as_any_mut","assign_irq","borrow","borrow","borrow_mut","borrow_mut","debug_label","from","from","get_bar_configuration","init_when_forked","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","keep_rds","new","new","on_device_sandboxed","read_bar","read_config_register","try_from","try_from","try_into","try_into","type_id","type_id","write_bar","write_config_register","BadTrbType","Cancelled","Cancelling","CastTrb","Completed","Control","CreateBuffer","Created","DataStage","DetachPort","Error","In","Isochronous","Noop","Normal","Out","SendInterrupt","SetupStage","StatusStage","SubmitTransfer","Submitted","TransferDirection","TransferLength","TrbType","WriteCompletionEvent","XhciTransfer","XhciTransferManager","XhciTransferState","XhciTransferType","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_all","clone","clone","clone_into","clone_into","create_transfer","drop","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_endpoint_number","get_transfer_dir","get_transfer_type","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","on_transfer_complete","send_to_backend_if_valid","state","to_owned","to_owned","to_string","to_string","try_cancel","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","cancel_callback","0","0","0","0","BorrowVfioContainer","ContainerSetIOMMU","CreateVfioKvmDevice","GetGroupStatus","GroupGetDeviceFD","GroupSetContainer","GroupViable","Intx","InvalidIndex","InvalidPath","IommuDmaMap","IommuDmaUnmap","IommuGetInfo","KvmSetDeviceAttr","Msi","Msix","OpenContainer","OpenGroup","VfioApiVersion","VfioCommonSetup","VfioCommonTrait","VfioContainer","VfioDevice","VfioDeviceGetInfo","VfioDeviceGetRegionInfo","VfioError","VfioIrq","VfioIrqDisable","VfioIrqEnable","VfioIrqMask","VfioIrqType","VfioIrqUnmask","VfioPciConfig","VfioRegion","VfioRegionAddr","VfioType1V2","addr","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_descriptor","as_raw_descriptor","as_raw_descriptors","as_raw_descriptors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","default","device_file","device_name","flags","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_cap_type_info","get_irqs","get_offset_for_addr","get_region_count","get_region_flags","get_region_mmap","get_region_offset","get_region_size","index","index","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","irq_disable","irq_enable","irq_mask","irq_unmask","keep_rds","new","new","new","new_noiommu","new_passthrough","read_config","region_read","region_read_from_addr","region_write","region_write_to_addr","resample_virq_enable","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vfio_dma_map","vfio_dma_map","vfio_dma_unmap","vfio_dma_unmap","vfio_get_container","vfio_get_container","vfio_get_iommu_page_size_mask","write_config","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessingRandomDev","AvailIter","Balloon","BalloonError","CommonConfig","CreateReader","CreateServer","CreateWaitContext","CreateWaitContext","CreateWriter","CreatingMessageReceiver","DescIter","Descriptor","DescriptorChain","DescriptorChainOverflow","DescriptorChainOverflow","DescriptorError","DescriptorType","DeviceConfig","DoorbellConfig","Error","EvdevAbsInfoError","EvdevEventTypesError","EvdevGrabError","EvdevIdError","EvdevNameError","EvdevPropertiesError","EvdevSerialError","EventsReadError","EventsWriteError","GetHostAddress","GuestError","GuestMemoryError","GuestMemoryError","GuestMemoryRead","GuestMemoryWrite","Input","InputError","Internal","Interrupt","InvalidChain","InvalidChain","InvalidDescriptorChain","IoError","IoError","Iommu","IommuError","IsrConfig","NOTIFY_REG_OFFSET","NoReadableDescriptors","NoWritableDescriptors","NonTransitionalBase","NotificationConfig","NotifyConfig","P9","P9Error","P9Result","PciCapabilityType","PciConfig","PciVirtioSubclass","Pmem","Queue","ReadQueue","ReadQueueEvent","ReadQueueEvent","Readable","Reader","ReaderIterator","ReceivingCommand","Rng","RngError","SharedMemoryConfig","SignalUsedQueue","SignalableInterrupt","SplitOutOfBounds","SplitOutOfBounds","TagTooLong","Tpm","UnexpectedDescriptor","VIRTIO_F_VERSION_1","VfioContainerError","VirtioDevice","VirtioInputConfig","VirtioPciCap","VirtioPciDevice","VirtioPciNotifyCap","VirtioPciShmCap","VolatileMemoryError","VolatileMemoryError","WaitError","WaitError","Writable","WriteBufferTooSmall","WriteQueue","Writer","WritingConfigEvent","ack_features","ack_features","ack_features","ack_features","ack_features","activate","activate","activate","activate","activate","activate","activate","activate","actual_size","add_used","addr","allocate_address","allocate_device_bars","allocate_io_bars","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","assign_irq","avail_ring","available_bytes","available_bytes","base_features","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_read","bytes_written","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect","console","consume","consume","consume_bytes","control_notify","control_notify","copy_config","create_descriptor_chain","debug_label","debug_label","debug_label","default","default","desc_table","device_type","device_type","device_type","device_type","device_type","device_type","device_type","device_type","do_interrupt_resample","do_interrupt_resample","drop","drop","drop","drop","drop","drop","drop","eq","features","features","features","features","features","features","features","features","flags","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","generate_acpi","generate_acpi","generate_acpi","generate_acpi","get_bar_configuration","get_device_bars","get_device_bars","get_device_caps","get_device_caps","get_interrupt_evt","get_msix_config","get_remaining","get_remaining","get_resample_evt","get_resample_evt","gpu","has_next","has_sufficient_buffer","index","interrupt_resample","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","ioevents","is_read_only","is_valid","is_write_only","iter","iter","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","len","max_size","net","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_evdev","new_keyboard","new_mouse","new_multi_touch","new_single_touch","new_switches","new_trackpad","next","next","next","next","next_async","next_avail","next_descriptor","next_used","on_device_sandboxed","on_device_sandboxed","on_device_sandboxed","peek","pop","pop_peeked","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","read","read_bar","read_bar","read_bar","read_config","read_config","read_config","read_config","read_config","read_config","read_config","read_config_register","read_exact_to","read_exact_to_at","read_exact_to_at_fut","read_obj","read_to","read_to","read_to_at","read_to_at_fut","read_to_volatile_slice","readable","ready","register_device_capabilities","reset","reset","reset","reset","reset","reset","resource_bridge","set_cap_len","set_notify","signal","signal","signal_config_changed","signal_config_changed","signal_used_queue","signal_used_queue","size","snd","split_at","split_at","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","trigger_interrupt","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_to_str","used_ring","vector","vhost","virtio_input_absinfo","virtio_input_bitmap","virtio_input_device_ids","wl","writable","write","write_all_from","write_all_from_at","write_all_from_at_fut","write_at","write_bar","write_bar","write_bar","write_config","write_config","write_config","write_config","write_config_register","write_from","write_from","write_from_at","write_from_at_fut","write_from_volatile_slice","write_iter","write_obj","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","BlockId","DISCARD_SECTOR_ALIGNMENT","ID_LEN","MAX_DISCARD_SECTORS","MAX_DISCARD_SEG","MAX_WRITE_ZEROES_SECTORS","MAX_WRITE_ZEROES_SEG","SECTOR_SHIFT","SECTOR_SIZE","VIRTIO_BLK_F_BLK_SIZE","VIRTIO_BLK_F_DISCARD","VIRTIO_BLK_F_FLUSH","VIRTIO_BLK_F_MQ","VIRTIO_BLK_F_RO","VIRTIO_BLK_F_SEG_MAX","VIRTIO_BLK_F_WRITE_ZEROES","VIRTIO_BLK_S_IOERR","VIRTIO_BLK_S_OK","VIRTIO_BLK_S_UNSUPP","VIRTIO_BLK_T_DISCARD","VIRTIO_BLK_T_FLUSH","VIRTIO_BLK_T_GET_ID","VIRTIO_BLK_T_IN","VIRTIO_BLK_T_OUT","VIRTIO_BLK_T_WRITE_ZEROES","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","asynchronous","blk_size","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_avail_features","build_config_space","capacity","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","discard_sector_alignment","fmt","fmt","fmt","from","from","from","geometry","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","max_discard_sectors","max_discard_seg","max_write_zeroes_sectors","max_write_zeroes_seg","num_queues","seg_max","size_max","to_owned","to_owned","to_owned","topology","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unused0","unused1","virtio_blk_config","virtio_blk_geometry","virtio_blk_topology","write_zeroes_may_unmap","writeback","AsyncResampleCreate","BlockAsync","CloneResampleEvent","ControlError","DiskState","FlushTimer","FsyncDisk","ReadResampleEvent","activate","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","device_type","disk_image","disk_size","drop","features","flush_disk","fmt","fmt","from","from","from","id","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","keep_rds","new","new","process_one_chain","queue_max_sizes","read_config","read_only","reset","sparse","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","0","0","0","Block","activate","as_any","as_any_mut","borrow","borrow_mut","device_type","drop","features","from","into","into_any","into_any_rc","keep_rds","new","queue_max_sizes","read_config","reset","try_from","try_into","type_id","Console","ConsoleError","RxDescriptorsExhausted","activate","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cols","default","device_type","drop","emerg_wr","features","fmt","fmt","fmt","from","from","from","handle_input","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","keep_rds","max_nr_ports","new","process_transmit_queue","process_transmit_request","queue_max_sizes","read_config","reset","rows","spawn_input_thread","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virtio_console_config","CreateFs","CreateWaitContext","Error","FS_MAX_TAG_LEN","Fs","FuseError","GetSecurebits","InvalidDescriptorChain","NoReadableDescriptors","NoWritableDescriptors","QUEUE_SIZE","ReadQueueEvent","Result","SetSecurebits","SignalUsedQueue","TagTooLong","UnshareFromParent","WaitError","ack_features","activate","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","device_type","drop","features","fmt","fmt","from","from","from","from","get_device_bars","get_device_caps","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","keep_rds","new","num_request_queues","passthrough","process_fs_queue","queue_max_sizes","read_config","tag","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virtio_fs_config","0","0","0","0","0","0","0","0","0","0","0","Always","Auto","CachePolicy","Config","FS_IOC32_GETFLAGS","FS_IOC32_SETFLAGS","FS_IOC64_GETFLAGS","FS_IOC64_SETFLAGS","FS_IOC_ENABLE_VERITY","FS_IOC_FSGETXATTR","FS_IOC_FSSETXATTR","FS_IOC_GETFLAGS","FS_IOC_GET_ENCRYPTION_POLICY_EX","FS_IOC_MEASURE_VERITY","FS_IOC_SETFLAGS","Never","PassthroughFs","access","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","ascii_casefold","attr_timeout","batch_forget","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache_policy","cfg","chromeos_tmpfile","clone","clone","clone_into","clone_into","copy_file_range","create","default","default","destroy","entry_timeout","eq","fallocate","flush","fmt","fmt","forget","from","from","from","from_str","fsync","fsyncdir","getattr","getxattr","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ioctl","keep_rds","link","listxattr","lookup","mkdir","mknod","new","open","opendir","posix_acl","read","readdir","readlink","release","releasedir","remove_mapping","removexattr","rename","rewrite_security_xattrs","rmdir","set_up_mapping","setattr","setxattr","statfs","symlink","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlink","use_dax","write","writeback","DEFAULT_DISPLAY_HEIGHT","DEFAULT_DISPLAY_WIDTH","DisplayBackend","EventDevice","FENCE_POLL_INTERVAL","FenceState","Frontend","GPU_BAR_NUM","GPU_BAR_OFFSET","GPU_BAR_SIZE","Gpu","GpuDisplayParameters","GpuMode","GpuParameters","GpuRenderServerParameters","Mode2D","ModeGfxstream","ModeVirglRenderer","QUEUE_SIZES","QueueReader","ReturnDescriptor","Stub","VIRTIO_GPU_F_CONTEXT_INIT","VIRTIO_GPU_F_CREATE_GUEST_HANDLE","VIRTIO_GPU_F_EDID","VIRTIO_GPU_F_RESOURCE_BLOB","VIRTIO_GPU_F_RESOURCE_SYNC","VIRTIO_GPU_F_RESOURCE_UUID","VIRTIO_GPU_F_VIRGL","VIRTIO_GPU_SHM_ID_HOST_VISIBLE","VirtioScanoutBlobData","Wayland","X","ack_features","activate","add_used","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_descriptor","as_raw_descriptors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_path","cache_path","cache_size","cache_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_fence_handler","default","default","default","default","deserialize","deserialize","deserialize","deserialize","device_tube","device_type","display","displays","drm_format","drop","eq","events_clear","events_read","features","fence_poll","flush_buffered_events","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_device_bars","get_device_caps","gfxstream_use_guest_angle","gfxstream_use_syncfd","has_pending_fences","height","height","index","initialize_frontend","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_buffered_events_empty","keep_rds","keyboard","kind","len","mode","mouse","new","new","num_capsets","num_scanouts","offsets","path","pop","process_display","process_queue","process_resource_bridge","queue_max_sizes","read_config","recv_event_encoded","render_server","renderer_use_egl","renderer_use_gles","renderer_use_glx","renderer_use_surfaceless","return_cursor","send_event_encoded","send_report","serialize","serialize","serialize","serialize","set_device_tube","signal_used","strides","to_owned","to_owned","to_owned","to_owned","to_owned","touchscreen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udmabuf","use_vulkan","virtio_gpu_config","width","width","write_config","0","0","CloneKillEvent","CreateKillEvent","CreateWaitContext","CtrlQueue","DescriptorChain","InterruptResample","Kill","Net","NetError","ReadCtrlData","ReadCtrlHeader","RxDescriptorsExhausted","RxQueue","RxTap","TapEnable","TapGetMtu","TapOpen","TapSetIp","TapSetMacAddress","TapSetNetmask","TapSetVnetHdrSize","TapValidate","Token","TxQueue","VirtioNetConfig","WaitContextDisableTap","WaitContextEnableTap","WaitError","WriteAck","WriteBuffer","ack_features","activate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_token","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_config","class","clone","clone","clone","clone_into","clone_into","clone_into","cmd","default","device_type","drop","features","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw_token","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","keep_rds","new","new_from_name","process_ctrl","process_rx","process_tx","queue_max_sizes","read_config","reset","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_and_configure_tap","virtio_features_to_tap_offload","virtio_net_ctrl_hdr","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Buffer","BufferInfo","Fence","GetBuffer","GetFence","Invalid","InvalidResource","PlaneInfo","RESOURE_PLANE_NUM","RecieveFailure","Resource","ResourceBridgeError","ResourceInfo","ResourceRequest","ResourceResponse","SendFailure","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deserialize","deserialize","deserialize","deserialize","deserialize","file","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_resource_info","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","modifier","offset","planes","serialize","serialize","serialize","serialize","serialize","stride","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","1","1","0","file","id","seqno","0","common","constants","layout","vios_backend","Error","UnsupportedFrameRate","UnsupportedVirtioFrameRate","UnsupportedVirtioPcmFormat","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","from_sample_format","from_virtio_frame_rate","from_virtio_sample_format","get_virtio_direction_name","get_virtio_snd_r_pcm_cmd_name","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","virtio_frame_rate","0","0","0","VIRTIO_SND_CHMAP_BC","VIRTIO_SND_CHMAP_BLC","VIRTIO_SND_CHMAP_BRC","VIRTIO_SND_CHMAP_FC","VIRTIO_SND_CHMAP_FCH","VIRTIO_SND_CHMAP_FL","VIRTIO_SND_CHMAP_FLC","VIRTIO_SND_CHMAP_FLH","VIRTIO_SND_CHMAP_FLW","VIRTIO_SND_CHMAP_FR","VIRTIO_SND_CHMAP_FRC","VIRTIO_SND_CHMAP_FRH","VIRTIO_SND_CHMAP_FRW","VIRTIO_SND_CHMAP_LFE","VIRTIO_SND_CHMAP_LLFE","VIRTIO_SND_CHMAP_MAX_SIZE","VIRTIO_SND_CHMAP_MONO","VIRTIO_SND_CHMAP_NA","VIRTIO_SND_CHMAP_NONE","VIRTIO_SND_CHMAP_RC","VIRTIO_SND_CHMAP_RL","VIRTIO_SND_CHMAP_RLC","VIRTIO_SND_CHMAP_RLFE","VIRTIO_SND_CHMAP_RR","VIRTIO_SND_CHMAP_RRC","VIRTIO_SND_CHMAP_SL","VIRTIO_SND_CHMAP_SR","VIRTIO_SND_CHMAP_TC","VIRTIO_SND_CHMAP_TFC","VIRTIO_SND_CHMAP_TFL","VIRTIO_SND_CHMAP_TFLC","VIRTIO_SND_CHMAP_TFR","VIRTIO_SND_CHMAP_TFRC","VIRTIO_SND_CHMAP_TRC","VIRTIO_SND_CHMAP_TRL","VIRTIO_SND_CHMAP_TRR","VIRTIO_SND_CHMAP_TSL","VIRTIO_SND_CHMAP_TSR","VIRTIO_SND_D_INPUT","VIRTIO_SND_D_OUTPUT","VIRTIO_SND_EVT_JACK_CONNECTED","VIRTIO_SND_EVT_JACK_DISCONNECTED","VIRTIO_SND_EVT_PCM_PERIOD_ELAPSED","VIRTIO_SND_EVT_PCM_XRUN","VIRTIO_SND_JACK_F_REMAP","VIRTIO_SND_PCM_FMT_A_LAW","VIRTIO_SND_PCM_FMT_DSD_U16","VIRTIO_SND_PCM_FMT_DSD_U32","VIRTIO_SND_PCM_FMT_DSD_U8","VIRTIO_SND_PCM_FMT_FLOAT","VIRTIO_SND_PCM_FMT_FLOAT64","VIRTIO_SND_PCM_FMT_IEC958_SUBFRAME","VIRTIO_SND_PCM_FMT_IMA_ADPCM","VIRTIO_SND_PCM_FMT_MU_LAW","VIRTIO_SND_PCM_FMT_S16","VIRTIO_SND_PCM_FMT_S18_3","VIRTIO_SND_PCM_FMT_S20","VIRTIO_SND_PCM_FMT_S20_3","VIRTIO_SND_PCM_FMT_S24","VIRTIO_SND_PCM_FMT_S24_3","VIRTIO_SND_PCM_FMT_S32","VIRTIO_SND_PCM_FMT_S8","VIRTIO_SND_PCM_FMT_U16","VIRTIO_SND_PCM_FMT_U18_3","VIRTIO_SND_PCM_FMT_U20","VIRTIO_SND_PCM_FMT_U20_3","VIRTIO_SND_PCM_FMT_U24","VIRTIO_SND_PCM_FMT_U24_3","VIRTIO_SND_PCM_FMT_U32","VIRTIO_SND_PCM_FMT_U8","VIRTIO_SND_PCM_F_EVT_SHMEM_PERIODS","VIRTIO_SND_PCM_F_EVT_XRUNS","VIRTIO_SND_PCM_F_MSG_POLLING","VIRTIO_SND_PCM_F_SHMEM_GUEST","VIRTIO_SND_PCM_F_SHMEM_HOST","VIRTIO_SND_PCM_RATE_11025","VIRTIO_SND_PCM_RATE_16000","VIRTIO_SND_PCM_RATE_176400","VIRTIO_SND_PCM_RATE_192000","VIRTIO_SND_PCM_RATE_22050","VIRTIO_SND_PCM_RATE_32000","VIRTIO_SND_PCM_RATE_384000","VIRTIO_SND_PCM_RATE_44100","VIRTIO_SND_PCM_RATE_48000","VIRTIO_SND_PCM_RATE_5512","VIRTIO_SND_PCM_RATE_64000","VIRTIO_SND_PCM_RATE_8000","VIRTIO_SND_PCM_RATE_88200","VIRTIO_SND_PCM_RATE_96000","VIRTIO_SND_R_CHMAP_INFO","VIRTIO_SND_R_JACK_INFO","VIRTIO_SND_R_JACK_REMAP","VIRTIO_SND_R_PCM_INFO","VIRTIO_SND_R_PCM_PREPARE","VIRTIO_SND_R_PCM_RELEASE","VIRTIO_SND_R_PCM_SET_PARAMS","VIRTIO_SND_R_PCM_START","VIRTIO_SND_R_PCM_STOP","VIRTIO_SND_S_BAD_MSG","VIRTIO_SND_S_IO_ERR","VIRTIO_SND_S_NOT_SUPP","VIRTIO_SND_S_OK","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","association","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_bytes","channels","channels","channels_max","channels_min","chmaps","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","connected","count","data","default","default","default","default","default","default","default","default","default","default","default","default","default","direction","direction","features","features","features","format","formats","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hda_fn_nid","hda_reg_caps","hda_reg_defconf","hdr","hdr","hdr","hdr","hdr","hdr","hdr","hdr","hdr","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","jack_id","jacks","latency_bytes","padding","padding","padding","period_bytes","positions","rate","rates","sequence","size","start_id","status","stream_id","stream_id","streams","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","virtio_snd_chmap_info","virtio_snd_config","virtio_snd_event","virtio_snd_hdr","virtio_snd_info","virtio_snd_jack_hdr","virtio_snd_jack_info","virtio_snd_jack_remap","virtio_snd_pcm_hdr","virtio_snd_pcm_info","virtio_snd_pcm_set_params","virtio_snd_pcm_status","virtio_snd_pcm_xfer","virtio_snd_query_info","BadDriverMsg","BaseMmapError","BufferStatusSenderLost","ClientEventNotifier","ClientNew","CommandFailed","CreateEvent","CreateReader","CreateThread","CreateWriter","Descriptor","DupError","Error","EventCreateError","EventDupError","EventWriteError","FileSizeError","GuestMmapError","IOBufferError","ImpossibleState","InvalidJackId","InvalidStreamId","NoStreamsAvailable","OutOfSpace","PlatformNotSupported","ProtocolError","ProtocolErrorKind","QueueEvt","QueueIO","Result","ServerConnectionError","ServerError","ServerIOError","ServerMmapError","Sound","SoundError","StreamThreadRecv","StreamThreadSend","UnexpectedConfigSize","UnexpectedMessageSize","UnexpectedNumberOfFileDescriptors","UnixSeqpacketDupError","UnsupportedFrameRate","VersionMismatch","VioSClient","VioSShmStreamSource","VioSStreamParams","VioSndShmStream","VolatileMemoryError","WaitContextCreateError","WaitCtx","WaitError","WrongDirection","activate","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_bytes","callback","channels","chmap_info","device_type","drop","drop","features","features","fmt","fmt","fmt","fmt","fmt","fmt","format","frame_rate","frame_size","from","from","from","from","from","from","from","from","get_event_notifier","ignore","inject_audio_data","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","jack_info","keep_fds","keep_fds","keep_rds","new","new_sound","new_stream","num_channels","num_chmaps","num_jacks","num_streams","period_bytes","pop_event","prepare_stream","queue_max_sizes","rate","read_config","release_stream","remap_jack","request_audio_data","reset","set_stream_parameters","set_stream_parameters_raw","start_bg_thread","start_stream","stop_bg_thread","stop_stream","stream_info","streams","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait_for_next_action_with_timeout","write_config","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","0","0","0","0","0","0","0","0","0","0","0","0","0","1","Break","Buffer","Prepare","Release","SetParams","Start","Stop","Stream","StreamMsg","StreamProxy","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","drop","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","msg_sender","reply_control_op_status","reply_pcm_buffer_status","send","send_msg","try_from","try_from","try_from","try_into","try_into","try_into","try_new","try_set_real_time_priority","type_id","type_id","type_id","vios_error_to_status_code","0","0","0","0","0","0","1","CloneKillEvent","CreateKillEvent","CreateTube","CreateWaitContext","Err","Error","MsixChanged","MsixEntryChanged","Net","Ok","Result","TapEnable","TapOpen","TapSetIp","TapSetMacAddress","TapSetNetmask","TapSetOffload","TapSetVnetHdrSize","VhostDevRequest","VhostDevResponse","VhostGetFeatures","VhostIrqCreate","VhostIrqRead","VhostNetSetBackend","VhostOpen","VhostSetFeatures","VhostSetMemTable","VhostSetOwner","VhostSetVringAddr","VhostSetVringBase","VhostSetVringCall","VhostSetVringKick","VhostSetVringNum","VhostVsockSetCid","VhostVsockStart","Vsock","WaitError","ack_features","ack_features","acked_features","activate","activate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","control_notify","deserialize","deserialize","device_type","device_type","drop","drop","features","features","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","keep_rds","keep_rds","new","new","new_for_testing","on_device_sandboxed","on_device_sandboxed","queue_max_sizes","queue_max_sizes","read_config","reset","serialize","serialize","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","user","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","device","proxy","vmm","run_block_device","run_console_device","run_fs_device","run_gpu_device","run_net_device","run_vsock_device","run_wl_device","AcceptConnection","CreateListener","CreateWaitContext","CreateWriter","Error","FailedAck","InvalidSiblingMessage","ReadSiblingHeader","ReadSiblingPayload","Result","RxBufferTooSmall","RxDescriptorsExhausted","VirtioPciDoorbellCap","VirtioVhostUser","WaitContextDisableSiblingVmSocket","WaitContextEnableSiblingVmSocket","WaitError","WriteBuffer","WriterCreation","activate","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","device_type","drop","features","fmt","fmt","from","from","from","get_device_bars","get_device_caps","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","keep_rds","new","new","queue_max_sizes","read_bar","read_config","reset","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_bar","write_config","0","0","0","0","0","0","0","0","0","0","0","Block","Console","CopyConfig","CreateEvent","Error","Fs","GetConfig","GetFeatures","GetHostAddress","GetProtocolFeatures","GetQueueNum","GetVringBase","Gpu","InvalidConfigOffset","Mac80211Hwsim","MsixConfigUnavailable","MsixIrqfdUnavailable","Net","ResetOwner","Result","SetConfig","SetDeviceRequestChannel","SetFeatures","SetMemTable","SetOwner","SetProtocolFeatures","SetVringAddr","SetVringBase","SetVringCall","SetVringEnable","SetVringKick","SetVringNum","Snd","SocketConnect","SocketConnectOnMasterCreate","TagTooLong","VhostUserHandler","Vsock","Wl","ack_features","ack_features","ack_features","ack_features","ack_features","ack_features","ack_features","ack_features","ack_features","activate","activate","activate","activate","activate","activate","activate","activate","activate","activate","activate_vring","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","avail_features","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","device_type","device_type","device_type","device_type","device_type","device_type","device_type","device_type","device_type","drop","drop","drop","drop","drop","drop","drop","drop","features","features","features","features","features","features","features","features","features","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_device_bars","get_device_caps","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","keep_rds","new","new","new","new","new","new","new","new","new","new_from_path","new_from_stream","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_max_sizes","queue_sizes","read_config","read_config","read_config","read_config","read_config","read_config","read_config","read_config","read_config","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","set_device_request_channel","set_mem_table","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_config","write_config","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","config_len","data_len","len","max","offset","DMA_BUF_IOCTL_SYNC","DescriptorsExhausted","QUEUE_SIZE","QUEUE_SIZES","SYNC_IOC_FILE_INFO","VIRTIO_WL_F_SEND_FENCES","VIRTIO_WL_F_TRANS_FLAGS","Wl","WlState","ack_features","activate","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","device_type","drop","features","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","keep_rds","new","new","process_in_queue","process_out_queue","queue_max_sizes","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_ctx"],"q":["devicesdevices::HostHotPlugKey","devices::PciDeviceError","","","","","","","","devices::PitError","","","","","","devices::ProxyError","","devices::acpi","","","","","","","","","","","","","","","","","","","","","","devices::bat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::direct_io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::direct_irq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::direct_irq::DirectIrqError","devices::irqchipdevices::pl030","","","","","","","","","","","","","","","","","","","","devices::serial_device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::serial_device::Error","","","","","devices::usb","","devices::usb::host_backend","","","","devices::usb::host_backend::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::usb::host_backend::error::Error","","","","","","","","","","","","","","","","","","","","","","","","devices::usb::host_backend::host_backend_device_provider","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::usb::host_backend::host_backend_device_provider::HostBackendDeviceProvider","","devices::usb::host_backend::host_device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::usb::host_backend::usb_endpoint","","","","","","","","","","","","","","","","devices::usb::xhci","","","","","","devices::usb::xhci::scatter_gather_buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::usb::xhci::scatter_gather_buffer::Error","","","","","","devices::usb::xhci::usb_hub","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::usb::xhci::usb_hub::Error","","","","","","","","","","devices::usb::xhci::xhci_backend_device","","","","","","","","","","","","","","","","","","","","","","","","devices::usb::xhci::xhci_backend_device_provider","","","devices::usb::xhci::xhci_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::usb::xhci::xhci_transfer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::usb::xhci::xhci_transfer::Error","","","","","","","","devices::usb::xhci::xhci_transfer::XhciTransferState","devices::usb::xhci::xhci_transfer::XhciTransferType","","","","devices::vfiodevices::vfio::VfioError","","","","","","","","","","","","","","","","","","devices::virtiodevices::virtio::BalloonError","","","devices::virtio::DescriptorError","","","","devices::virtio::Error","","","","devices::virtio::InputError","","","","","","","","","","","","","devices::virtio::IommuError","","","","","","","","","devices::virtio::P9Error","","","","","","","","devices::virtio::RngError","devices::virtio::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::block::asynchronous","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::block::asynchronous::ControlError","","","","","devices::virtio::block::block","","","","","","","","","","","","","","","","","","","","","devices::virtio::console","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::fs::Error","","","","","","","","","","","devices::virtio::fs::passthrough","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::gpudevices::virtio::gpu::DisplayBackend","","devices::virtio::net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::net::NetError","","","","","","","","","","","","","","","","","","","devices::virtio::resource_bridge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::resource_bridge::ResourceBridgeError","","","","","devices::virtio::resource_bridge::ResourceInfo","","devices::virtio::resource_bridge::ResourceRequest","","devices::virtio::resource_bridge::ResourceResponse","devices::virtio::snd","","","","devices::virtio::snd::common","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::snd::common::Error","","","devices::virtio::snd::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::snd::layoutdevices::virtio::snd::vios_backenddevices::virtio::snd::vios_backend::Error","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::snd::vios_backend::ProtocolErrorKind","","","","","","devices::virtio::snd::vios_backend::SoundError","","","","","","","","","","","","","","devices::virtio::snd::vios_backend::streams","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::snd::vios_backend::streams::StreamMsg","","","","","","","devices::virtio::vhost","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::vhost::Error","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::vhost::VhostDevRequest","devices::virtio::vhost::VhostDevResponse","devices::virtio::vhost::user","","","devices::virtio::vhost::user::device","","","","","","","devices::virtio::vhost::user::proxy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::vhost::user::proxy::Error","","","","","","","","","","","devices::virtio::vhost::user::vmmdevices::virtio::vhost::user::vmm::Error","","","","","","","","","","","","","","","","","","","","","","","","","","","","devices::virtio::wl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["AC97 audio device emulation. Provides the PCI interface …","","Holds the parameters for a AC97 device","","","A device container for routing reads and writes over some …","Information about how a device was accessed.","Trait for devices that respond to reads or writes in an …","Trait for generic device abstraction, that is, all devices …","","","Holds a base and length representing the address space …","","","Setup of the device capabilities failed.","Error while cloning event for worker thread.","A CMOS/RTC device commonly seen on x86 I/O port 0x70/0x71.","Error while creating event.","Create VioS client failed.","Creating WaitContext failed.","","","","","","","The key to identify hotplug device from host view. like …","Trait for devices that notify hotplug event into guest","A i8042 PS/2 controller that emulates just enough to …","","","","","","","","Allocating space for an IO BAR failed.","Registering an IO BAR failed.","","","","MSIX Allocator encounters out-of-space","MSIX Allocator encounters overflow","MSIX Allocator encounters size of zero","","","","","","The insertion failed because the new device overlapped …","PCI Device Address, AKA Bus:Device.Function","PCI Address is not allocated.","PCI Address allocation failure.","","Classes of PCI nodes.","Emulates PCI configuration access mechanism #1 (I/O ports …","Emulates PCI memory-mapped configuration access mechanism.","","","PCI has four interrupt pins A-&gt;D.","Emulates the PCI Root bridge.","","","","","","Wraps an inner <code>BusDevice</code> that is run inside a child …","Errors for proxy devices.","","Emulates serial COM ports commonly seen on x86 I/O ports …","","","Error while trying to create worker thread.","","","Error while trying to create timer.","","","","","Implements the Vfio Pci device, then a pci device is added …","","Implements the PCI transport for virtio devices.","Error while waiting for events.","","","Add a <code>device</code> to this root PCI bus.","Add hotplug device into this bus","","","Absolute address of the device’s access in its address …","Allocate and return an unique bus, device and function …","","","","","Allocates the needed device BAR space. Returns a Vec of …","Allocates the needed device BAR space. Returns a Vec of …","","","","Allocates the needed IO BAR space using the <code>allocate</code> …","Allocates the needed IO BAR space using the <code>allocate</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assign a legacy PCI IRQ to this device. The device may …","Assign a legacy PCI IRQ to this device. The device may …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a register from the configuration space. Only used by …","Gets a register from the configuration space. Only used by …","","Sets a register in the configuration space. Only used by …","Sets a register in the configuration space. Only used by …","","","","Returns true if <code>addr</code> is within the range.","Returns a label suitable for debug output.","Returns a label suitable for debug output.","","","","","","","","","","","","","","","","","","","Invoked when the device is destroyed","Invoked when the device is destroyed","Invoked when the device is destroyed","Invoked when the device is destroyed","","","Gets the vfio device backing <code>File</code>.","","","","","","enable pcie enhanced configuration access and set base mmio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct PciAddress and register tuple from …","","Construct PciAddress from string …","","","","Returns the configuration of a base address register, if …","","","","","get guest pci address from the specified host_key","","","","Gets a list of all ranges registered by this BusDevice.","Gets a list of all ranges registered by this BusDevice.","","","Get the removed children devices under pci bridge","Get the removed children devices under pci bridge","","Notify hotplug in event into guest","","Notify hotplug out event into guest","","ID of the entity requesting a device access, usually the …","Puts the given device at the given address space.","Puts the given device that implements BusDeviceSync at the …","Gets the interrupt event used to interrupt the driver when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a list of ioevents that should be registered with the …","Gets a list of ioevents that should be registered with the …","","","","","Check whether the hotplug bus is available to add the new …","","A vector of device-specific file descriptors that must be …","","","","","","","Return the minijail policy file path for the current …","","","","","Constructs a CMOS/RTC device with initial data. …","Constructs a i8042 device that will signal the given event …","Creates an ‘Ac97Dev’ that uses the given <code>GuestMemory</code> …","Create an empty PCI root bus.","","","","Constructs a new PCIE root port","","Constructs a new Vfio Pci device for the give Vfio device","","Constructs a new Vfio Platform device for the given Vfio …","Takes the given device and isolates it into another …","","Constructs an a bus with an empty address space.","Offset from base address that the device was accessed at.","Invoked when the device is sandboxed.","Invoked when the device is sandboxed.","Invoked when the device is sandboxed.","Invoked when the device is sandboxed.","Returns true if there is overlap with the given range.","","","","","","Queues raw bytes for the guest to read and signals the …","","Reads at <code>offset</code> from this device","Reads at <code>offset</code> from this device","","","","","","","","","Reads data from the device that owns the range containing …","Reads from a BAR region mapped in to the device.","","","","","Reads from a PCI configuration register.","","","","","","","Register any capabilties specified by the device.","Register any capabilties specified by the device.","","","Remove the given device at the given address space.","notify the devices which are invoked before the VM resumes …","notify the devices which are invoked before the VM resumes …","","","","","","","Sets the id that will be used for BusAccessInfo.","","Macro helps to build a static register.","","","","Encode PciAddress into CONFIG_ADDRESS value.","","","","","","","","","","","","","","","","","","Convert B:D:F PCI address to unsigned 32 bit integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an <code>Ac97Dev</code> with suitable audio server inside based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implements virtio devices, queues, and transport …","","Writes at <code>offset</code> into this device","Writes at <code>offset</code> into this device","","","","","","","","","Writes <code>data</code> to the device that owns the range containing …","Writes to a BAR region mapped in to the device.","","","","","Writes to a PCI configuration register.","","","","","","","","","","","","","","","","","","","","","","ACPI PM resource for handling OS suspend/resume request","","","the ACPI PM register length.","","","","","","","","","","","Constructs ACPI Power Management Resouce.","","","","","","","","Errors for battery devices.","the GoldFish Battery MMIO length.","GoldFish Battery state","","","","","","","","","","","","","","","","","","","","","","","return the fds used by this device","Create GoldfishBattery device model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create simple direct I/O access device.","Create simple direct mmio access device.","Reads at <code>offset</code> from this device","Reads at <code>offset</code> from this device","Reads at <code>offset</code> from this device","Reads at <code>offset</code> from this device","","","","","","","Writes at <code>offset</code> into this device","Writes at <code>offset</code> into this device","Writes at <code>offset</code> into this device","Writes at <code>offset</code> into this device","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable hardware triggered interrupt handling.","Create DirectIrq object to access hardware triggered …","","","","","","","","","","","","","Trait that abstracts interactions with interrupt …","A capability the <code>IrqChip</code> can possibly expose.","","","IrqChip implementation where the entire IrqChip is …","The KvmSplitIrqsChip supports KVM’s SPLIT_IRQCHIP …","","","APIC TSC-deadline timer mode.","A capability the <code>IrqChip</code> can possibly expose.","Extended xAPIC (x2APIC) standard.","Add a vcpu to the irq chip.","Add a vcpu to the irq chip.","Add a vcpu to the irq chip.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Broadcast an end of interrupt.","Broadcast an end of interrupt. This should never be called …","Broadcast an end of interrupt. For KvmSplitIrqChip this …","Checks if a particular <code>IrqChipCap</code> is available.","","","","","","","","","","","","Finalize irqchip setup. Should be called once all devices …","Finalize irqchip setup. Should be called once all devices …","Finalize irqchip setup. Should be called once all devices …","","","","","","","","","Determines the external interrupt number that the PIC is …","Get the current state of the IOAPIC","Get the current state of the IOAPIC","Get the current state of the IOAPIC","","Get the current state of the specified VCPU’s local APIC","Get the current state of the specified VCPU’s local APIC","Get the current state of the specified VCPU’s local APIC","Get the current MP state of the specified VCPU.","Get the current MP state of the specified VCPU.","Get the current MP state of the specified VCPU.","Get the current state of the PIC","Get the current state of the PIC","Get the current state of the PIC","Get the current state of the primary or secondary PIC","Retrieves the state of the PIT.","Retrieves the state of the PIT. Gets the pit state via the …","Retrieves the state of the PIT. Gets the pit state via the …","Notifies the irq chip that the specified VCPU has executed …","Notifies the irq chip that the specified VCPU has executed …","Notifies the irq chip that the specified VCPU has executed …","Determines whether the PIC has an interrupt ready.","Injects any pending interrupts for <code>vcpu</code>.","Injects any pending interrupts for <code>vcpu</code>. For …","Injects any pending interrupts for <code>vcpu</code>. For …","Determines whether the PIC has fired an interrupt to LAPIC.","","","","","","","","","","","","","","","","","","","","","","","","","Return a vector of all registered irq numbers and their …","Return a vector of all registered irq numbers and their …","Return a vector of all registered irq numbers and their …","Makes unrunnable VCPUs return immediately from …","Makes unrunnable VCPUs return immediately from …","Makes unrunnable VCPUs return immediately from …","Determines whether the (primary) PIC is completely masked.","Construct a new KvmKernelIrqchip.","Construct a new KvmSplitIrqChip.","","","Returns true if the PIT uses port 0x61 for the PC speaker, …","Returns true if the PIT uses port 0x61 for the PC speaker, …","Returns true if the PIT uses port 0x61 for the PC speaker, …","Process any irqs events that were delayed because of any …","The KvmKernelIrqChip doesn’t process irq events itself …","The KvmSplitIrqChip’s ioapic may be locked because a …","","","Register an event that can trigger an interrupt for a …","Register an event that can trigger an interrupt for a …","Register an event that can trigger an interrupt for a …","","","Route an IRQ line to an interrupt controller, or to a …","Route an IRQ line to an interrupt controller, or to a …","Route an IRQ line to an interrupt controller, or to a …","Either assert or deassert an IRQ line.  Sends to either an …","Either assert or deassert an IRQ line.  Sends to either an …","Either assert or deassert an IRQ line.  Sends to either an …","","","Service an IRQ event by asserting then deasserting an IRQ …","Service an IRQ event by asserting then deasserting an IRQ …","Service an IRQ event by asserting then deasserting an IRQ …","Set the current state of the IOAPIC","Set the current state of the IOAPIC","Set the current state of the IOAPIC","","Replace all irq routes with the supplied routes","Replace all irq routes with the supplied routes","Replace all irq routes with the supplied routes","Set the current state of the specified VCPU’s local APIC","Set the current state of the specified VCPU’s local APIC","Set the current state of the specified VCPU’s local APIC","Set the current MP state of the specified VCPU.","Set the current MP state of the specified VCPU.","Set the current MP state of the specified VCPU.","Set the current state of the PIC","Set the current state of the PIC","Set the current state of the PIC","Set the current state of the primary or secondary PIC","Sets the state of the PIT.","Sets the state of the PIT. Sets the pit state via the KVM …","Sets the state of the PIT. Sets the pit state via the KVM …","","","","","","Attempt to create a shallow clone of this IrqChip instance.","Attempt to clone this IrqChip instance.","Attempt to clone this IrqChip instance.","","","","","","","","","","","","","","","","","","","Unregister an event for a particular GSI.","Unregister an event for a particular GSI.","Unregister an event for a particular GSI.","Blocks until <code>vcpu</code> is in a runnable state or until …","Blocks until <code>vcpu</code> is in a runnable state or until …","Blocks until <code>vcpu</code> is in a runnable state or until …","","","","","","An emulated ARM pl030 RTC","","","","","","","","","","","Constructs a Pl030 device","","","","","","","","","","","","","","","Abstraction over serial-like devices that can be created …","Serial device hardware types","Holds the parameters for a serial device","Enum for possible type of serial devices","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to create a serial device from the defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cannot get interface descriptor for (interface, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Host backend device provider is a xhci backend device …","ProviderInner listens to control socket.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Control endpoint should receive data stage next.","Host device is a device connected to host.","Control endpoint should receive setup stage next.","Control endpoint should receive status stage next.","","","","","","","","","","","","","","","","","","","","","","","","Create a new host device.","","","","","","","","","","Isochronous, Bulk or Interrupt endpoint.","","","","","","Handle a xhci transfer.","","","","","Returns true is this endpoint matches number and direction.","Create new endpoint. This function will panic if endpoint …","","","","","","","","","","","","","","","See xHCI spec 3.2.8 for scatter/gather transfer. It’s …","","","","","","","","","","","","","","","","","","","","","","","Total len of this buffer.","Create a new buffer from transfer descriptor.","Read content to buffer, return number of bytes read.","","","","","","","","Write content from buffer, return number of bytes written.","","","","","","","","","","","","","","UsbHub is a set of usb ports.","A port on usb hub. It could have a device connected to it.","","","","","","","","","","","","","Connect backend to next empty port.","Detach current connected backend. Returns false when there …","Disconnect device from port. Returns false if port id is …","","","","","","Get current connected backend.","Get a specific port of the hub.","","","","","","","","","","","","","Create a new usb port that has nothing connected to it.","Create usb hub with no device attached.","Reset all ports.","Inform the guest kernel there is device connected to this …","Inform the guest kernel that device has been detached.","","","","","","","","","","","","","","","","","","","","","The type USB device provided by the backend device.","","","Address of this usb device, as in Set Address standard usb …","Xhci backend device is a virtual device connected to xHCI …","","","","","","","Returns the type of USB device provided by this device.","Get product id of this device.","Get vendor id of this device.","","","","","Reset the backend device.","Set address of this backend.","Submit a xhci transfer to backend.","","","","Xhci backend provider will run on an EventLoop and connect …","Keep raw descriptors that should be kept open.","Start the provider on EventLoop.","xHCI PCI interface implementation.","Use this handle to fail xhci controller.","","","","","","","","","","","","","","","","Init xhci controller when it’s forked.","","","","","","","","","","Create new xhci controller.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When transfer is submitted, it will contain a transfer …","Type of usb endpoints.","","","","Xhci transfer denotes a transfer initiated by guest os …","Xhci Transfer manager holds reference to all ongoing …","Current state of xhci transfer.","Type of a transfer received handled by transfer ring.","","","","","","","","","","","","","","","","","","","","","","","","","Cancel all current transfers.","","","","","Build a new XhciTransfer. Endpoint id is the id in xHCI …","","","","","","","","","","","","","","Get endpoint number.","get transfer direction.","Get transfer type.","","","","","","","","","","","","","","","","","","","","","","","","Analyze transfer descriptor and return transfer type.","Create a new manager.","This functions should be invoked when transfer is …","Send this transfer to backend if it’s a valid transfer.","Get state of this transfer.","","","","","Try to cancel this transfer, if it’s possible.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper trait for managing VFIO setup","VfioContainer contain multi VfioGroup, and delegate an …","Vfio device for exposing regions which could be read/write …","","","","Vfio Irq information used to assign and …","","","","Vfio Irq type used to enable/disable/mask/unmask vfio irq","","","","Address on VFIO memory region.","","offset in the region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","close vfio device","","Gets the vfio device backing <code>File</code>.","Returns PCI device name, formatted as BUS:DEVICE.FUNCTION …","","","","","","","","","","","","","","","find the specified cap type in device regions Input: type_…","Query interrupt information return: Vector of interrupts …","Returns file offset corresponding to the given …","get a number of regions return: Number of regions of vfio …","get a region’s flag the return’s value may conatin: …","get a region’s mmap info vector","get a region’s offset return: Region offset from the …","get a region’s size return: Region size from the start …","","region number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","disable vfio device’s irq and disconnect Irqfd Event …","Enable vfio device’s irq and associate Irqfd Event with …","Mask vfio device irq","Unmask vfio device irq","get vfio device’s descriptors which are passed into …","Open VfioContainer with IOMMU enabled.","","","Open VfioContainer with IOMMU disabled.","Create a new vfio device, then guest read/write on this …","","Read region’s data from VFIO device into buf index: …","Reads a value from the specified <code>VfioRegionAddr.addr</code> + …","write the data from buf into a vfio device region index: …","Writes data into the specified <code>VfioRegionAddr.addr</code> + <code>offset</code>…","When intx is enabled, irqfd is used to trigger a level …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add (iova, user_addr) map into vfio container iommu table","","Remove (iova, user_addr) map from vfio container iommu …","The single place to create a VFIO container for a PCI …","","","","","","","","","","","","","","","","","","","","","","Can’t access /dev/urandom","Consuming iterator over all available descriptor chain …","Virtio device for memory balloon inflation/deflation.","","","","Failed to create a 9p server.","","Creating WaitContext failed.","","Failed to create async message receiver.","An iterator over a single descriptor chain.  Not to be …","","A virtio descriptor chain.","","","","","","","","","","","","","","","Failed to read events from the source","Failed to write events to the source","","","","","","","Virtio input device","","An internal I/O error occurred.","","","","A DescriptorChain contains invalid data.","","","Virtio device for IOMMU memory management.","","","Offset from the base MMIO address of a virtio device used …","A request is missing readable descriptors.","A request is missing writable descriptors.","","","","Virtio device for sharing specific directories on the host …","Errors that occur during operation of a virtio 9P device.","","","","Subclasses for virtio.","","A virtio queue’s parameters.","","","Error while reading from the virtio queue’s Event.","","Provides high-level interface over the sequence of memory …","An iterator over <code>DataInit</code> objects on readable descriptors …","Failed to receive command message.","Virtio device for exposing entropy to the guest OS through …","","","Failed to signal the virio used queue.","","","","The tag for the 9P device was too large to fit in the …","Virtio vTPM device.","","","","Trait for virtio devices to be driven by a virtio …","","","Implements the PCI transport for virtio devices.","","","","","","Error while polling for events.","","","","Provides high-level interface over the sequence of memory …","Failed to write config event.","","","Acknowledges that this set of features should be enabled.","Acknowledges that this set of features should be enabled.","Acknowledges that this set of features should be enabled …","Activates this device for real usage.","","","","","","","","Return the actual size of the queue, as the driver may not …","Puts an available descriptor head into the used ring for …","Guest physical address of device specific data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Guest physical address of the available ring","Returns number of bytes available for reading.  May return …","Returns number of bytes available for writing.  May return …","Returns the set of reserved base features common to all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns number of bytes already read from the descriptor …","Returns number of bytes already written to the descriptor …","","","","","","","","","","","","","","","","","","","","","","","","","Reads objects by consuming all the remaining data in the …","","Consumes <code>amt</code> bytes from the underlying descriptor chain. …","Writes a collection of objects into the descriptor chain …","Consumes <code>amt</code> bytes from the underlying descriptor chain. …","","","Copy virtio device configuration data from a subslice of …","Test utility function to create a descriptor chain in …","Returns a label suitable for debug output.","Returns a label suitable for debug output.","","","","Guest physical address of the descriptor table","The virtio device type.","","","","","","","","Reads the status and writes to the interrupt event. Doesn…","","","","","","","","","","","","","","","","The set of feature bits that this device supports in …","The set of feature bits that this device supports in …","Includes next, write, and indirect bits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns any additional BAR configuration required by the …","Returns any additional BAR configuration required by the …","Returns any additional capabiltiies required by the device.","Returns any additional capabiltiies required by the device.","Get a reference to the interrupt event.","Get a reference to the msix configuration","Returns a <code>&amp;[VolatileSlice]</code> that represents all the …","Returns a <code>&amp;[VolatileSlice]</code> that represents all the …","Get the event to signal resampling is needed if it exists.","","","Gets if this descriptor chain has another descriptor chain …","","Index into the descriptor table","Handle interrupt resampling event, reading the value from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Produces an iterator over all the descriptors in this …","","If the driver designated this as a read only descriptor.","","If the driver designated this as a write only descriptor.","Creates an iterator for sequentially reading <code>DataInit</code> …","A consuming iterator over all available descriptor chain …","A vector of device-specific file descriptors that must be …","","","","","","","","","Length of device specific data","The maximal size in elements offered by the device","","Creates a new virtio balloon device.","","Create a new virtio IOMMU device.","","","Create a new virtio rng device that gets random data from …","","Constructs a new PCI transport for the given virtio device.","Construct a new Reader wrapper over <code>desc_chain</code>.","Construct a new Writer wrapper over <code>desc_chain</code>.","Constructs an empty virtio queue with the given <code>max_size</code>.","","","","Creates a new virtio input device from an event device node","Creates a new virtio keyboard, which supports the same …","Creates a new virtio mouse which supports primary, …","Creates a new virtio touch device which supports multi …","Creates a new virtio touch device which supports single …","Creates a new virtio device for switches.","Creates a new virtio trackpad device which supports …","","","","Index into the descriptor table of the next descriptor if …","Asynchronously read the next descriptor chain from the …","","Gets the next descriptor in this descriptor chain, if …","","Invoked when the device is sandboxed.","Invoked when the device is sandboxed.","","Get the first available descriptor chain without removing …","If a new DescriptorHead is available, returns one and …","Remove the first available descriptor chain from the queue.","The maximum size of each queue that this device supports.","","","","","","","","","Reads from a BAR region mapped in to the device.","Reads from a BAR region mapped in to the device.","","","","","","","Reads this device configuration space at <code>offset</code>.","Reads this device configuration space at <code>offset</code>.","","Reads data from the descriptor chain similar to ‘read_to…","Reads data from the descriptor chain similar to ‘…","Reads exactly <code>count</code> bytes from the chain to the disk …","Reads an object from the descriptor chain buffer.","","Reads data from the descriptor chain buffer into a file …","Reads data from the descriptor chain buffer into a File at …","Reads data from the descriptor chain buffer into an …","Reads data into a volatile slice up to the minimum of the …","Returns an iterator that only yields the readable …","Inidcates if the queue is finished with configuration","","","","","Optionally deactivates this device. If the reset method is …","Optionally deactivates this device. If the reset method is …","Reset queue to a clean state","This module defines the protocol between <code>virtio-wayland</code> …","","Enable / Disable guest notify device that requests are …","Writes to the irqfd to VMM to deliver virtual interrupt to …","Virtqueue Interrupts From The Device","Notify the driver that the device configuration has …","","Notify the driver that buffers have been placed in the …","Notify the driver that buffers have been placed in the …","The queue size in elements the driver selected","","Splits this <code>Reader</code> into two at the given offset in the …","Splits this <code>Writer</code> into two at the given offset in the …","","","","","","","","","","","","","","","","","","","inject interrupt into guest on this queue return true: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a string representation of the given virtio device …","Guest physical address of the used ring","MSI-X vector for the queue. Don’t care for INTx","Implements vhost-based virtio devices.","","","","This module implements the virtio wayland used by the …","Returns an iterator that only yields the writable …","","","","","","Writes to a BAR region mapped in to the device.","Writes to a BAR region mapped in to the device.","","","","Writes to this device configuration space at <code>offset</code>.","Writes to this device configuration space at <code>offset</code>.","","","Writes data to the descriptor chain buffer from a file …","Writes data to the descriptor chain buffer from a File at …","Writes data to the descriptor chain buffer from an …","Reads data into a volatile slice up to the minimum of the …","Writes all objects produced by <code>iter</code> into the descriptor …","Writes an object to the descriptor chain buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Virtio block device identifier. This is an ASCII string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the feature flags given the specified attributes.","Builds and returns the config structure used to specify …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Virtio device for exposing block level read/write …","","Errors that happen in block outside of executing a request.","Tracks the state of an anynchronous disk.","","","","","","","","","","","","","","","","","","","","","","Periodically flushes the disk when the given timer fires.","","","","","","","","","","","","","","","","","","Creates a <code>DiskState</code> with the given params.","Create a new virtio block device that operates on the …","Process one descriptor chain asynchronously.","","","","","","","","","","","","","","","","","","","","","Virtio device for exposing block level read/write …","","","","","","","","","","","","","","Create a new virtio block device that operates on the …","","","","","","","Virtio console device.","","There are no more available descriptors to receive into","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks for input from <code>buffer</code> and transfers it to the …","","","","","","","","","","","","","","","Processes the data taken from the given transmit queue …","Writes the available data from the reader into the given …","","","","","Starts a thread that reads rx and sends the input back via …","","","","","","","","","","","","","Failed to create the file system.","Creating WaitContext failed.","Errors that may occur during the creation or operation of …","The maximum allowable length of the tag used to identify a …","","Error happened in FUSE.","Failed to get the securebits for the worker thread.","The <code>len</code> field of the header is too small.","A request is missing readable descriptors.","A request is missing writable descriptors.","","Error while reading from the virtio queue’s Event.","","Failed to set the securebits for the worker thread.","Failed to signal the virio used queue.","The tag for the Fs device was too long to fit in the …","Calling unshare to disassociate FS attributes from parent …","Error while polling for events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of request queues","","","","","Filesystem name (UTF-8, not NUL-terminated, padded with …","","","","","","","","","","","","kernel/include/uapi/linux/virtio_fs.h","","","","","","","","","","","","The client should always cache file data. This means that …","The client is free to choose when and how to cache file …","The caching policy that the file system should report to …","Options that configure the behavior of the file system.","","","","","","","","","","","","The client should never cache file data and all I/O should …","A file system that simply “passes through” all …","","","","","","","","Use case-insensitive lookups for directory entries (ASCII …","How long the FUSE client should consider file and …","","","","","","","","The caching policy the file system should use. See the …","","","","","","","","","","","","How long the FUSE client should consider directory entries …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable support for POSIX acls.","","","","","","","","","Controls whether security.* xattrs (except for …","","","","","","","","","","","","","","","","","","","Use DAX for shared files.","","Whether the file system should enabled writeback caching. …","","","Indicates a backend that should be tried for the gpu to …","Encapsulates a virtual event device, such as a mouse or …","","","","","","","","","","","","","","","","","","Emulate a display without actually displaying it.","","","","","","","","","","Use the wayland backend with the given socket path if …","Open a connection to the X server at the given display if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a handler that writes into the completed fence queue","","","","","","","","","Returns the device tube to the main process.","","Returns the internal connection to the compositor and its …","","","","","","","","","Flushes the buffered events that did not fit into the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes the internal device state so that it can begin …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Processes the internal <code>display</code> events and returns <code>true</code> if …","Processes virtio messages on <code>queue</code>.","Processes incoming requests on <code>resource_bridge</code>.","","","","","","","","","","Sends the given <code>event</code>, returning <code>Ok(true)</code> if, after this …","","","","","","Sets the device tube to the main process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cloning kill event failed.","Creating kill event failed.","Creating WaitContext failed.","","Descriptor chain was invalid.","","","","","Error reading data from control queue.","Error reading header from control queue.","There are no more available descriptors to receive into.","","","Enabling tap interface failed.","Couldn’t get the MTU from the tap device.","Open tap device failed.","Setting tap IP failed.","Setting tap mac address failed.","Setting tap netmask failed.","Setting vnet header size failed.","Validating tap interface failed.","","","","Removing read event from the tap fd events failed.","Adding read event to the tap fd events failed.","Error while waiting for events.","Failed writing an ack in response to a control message.","Writing to a buffer in the guest failed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new virtio network device from a tap device that …","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new virtio network device with the given IP …","Try to open the already-configured TAP interface <code>name</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts virtio-net feature bits to tap’s offload bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts SampleFormat to VIRTIO_SND_PCM_FMT_*","Converts VIRTIO_SND_PCM_RATE_* enum to frame rate","Converts VIRTIO_SND_PCM_FMT_* enum to SampleFormat","","Get the name of VIRTIO_SND_R_PCM_* enums","","","","","","","","","Converts frame rate to VIRTIO_SND_PCM_RATE_* enumhe client for the VioS backend","Adapter that provides the ShmStreamSource trait around the …","Groups the parameters used to configure a stream prior to …","Adapter around a VioS stream that implements the ShmStream …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the configuration information on a channel map","","","","","","","","","","","","","","","","","","","","","","","Gets an Event object that will trigger every time an event …","","Send audio frames to the server. Blocks the calling thread …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the configuration information on a jack","Get a list of file descriptors used by the implementation.","Get a list of file descriptors used by the implementation.","","Creates a new stream source given the path to the audio …","Creates a new virtio sound device connected to a VioS …","Creates a new stream","","Get the number of channel maps","Get the number of jacks","Get the number of pcm streams","","Retrieves one event. Callers should have received a …","Send the PREPARE_STREAM command to the server.","","","","Send the RELEASE_STREAM command to the server.","Remap a jack. This should only be called if the jack …","Request audio frames from the server. It blocks until the …","","Configures a stream with the given parameters.","Configures a stream with the given parameters.","Starts the background thread that receives release …","Send the START_STREAM command to the server.","Stops the background thread.","Send the STOP_STREAM command to the server.","Get the configuration information on a pcm stream","","","","","","","","","","","","","","","","","","","","","Create a new client given the path to the audio server’s …","","","","","","","","","Waits until the next time a frame should be sent to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Messages that the worker can send to the stream (thread).","Basically a proxy to the thread handling a particular …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the underlying sender to clone it or send messages","Encapsulates sending the virtio_snd_hdr struct back to the …","Encapsulates sending the virtio_snd_pcm_status struct back …","Convenience function to send a message to this stream’s …","Send a message to the stream thread on the other side of …","","","","","","","Start a new stream thread and return its handler.","Attempts to set the current thread’s priority to a value …","","","","Gets the appropriate virtio-snd error to return to the …","","","","","","","","Cloning kill event failed.","Creating kill event failed.","Creating tube failed.","Creating wait context failed.","","","Mask or unmask all the MSI entries for a Virtio Vhost …","Mask or unmask a MSI entry for a Virtio Vhost device.","","","","Enabling tap interface failed.","Open tap device failed.","Setting tap IP failed.","Setting tap mac address failed.","Setting tap netmask failed.","Setting tap interface offload flags failed.","Setting vnet header size failed.","","","Get features failed.","Failed to create vhost event.","Failed to read vhost event.","Net set backend failed.","Failed to open vhost device.","Set features failed.","Set mem table failed.","Set owner failed.","Set vring addr failed.","Set vring base failed.","Set vring call failed.","Set vring kick failed.","Set vring num failed.","Failed to set CID for guest.","Failed to start vhost-vsock driver.","","Error while waiting for events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new virtio network device with the given IP …","Create a new virtio-vsock device with the given VM cid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module implements the “Vhost User” Virtio device …","","Starts a vhost-user block device. Returns an error if the …","Starts a vhost-user console device. Returns an error if …","Starts a vhost-user fs device. Returns an error if the …","","Starts a vhost-user net device. Returns an error if the …","Returns an error if the given <code>args</code> is invalid or the …","Starts a vhost-user wayland device. Returns an error if …","Failed to accept connection on a socket.","Failed to create a listener.","Failed to create a wait context object.","Failed to create a Writer object.","","Failed to send ACK in response to Vhost-user sibling …","Invalid Vhost-user sibling message.","Failed to read payload of a Vhost-user sibling header.","Failed to read payload of a Vhost-user sibling message.","","Rx buffer too small to accomodate data.","There are no more available descriptors to receive into.","","","Removing read event from the sibling VM socket events …","Adding read event to the sibling VM socket events failed.","Failed to wait for events.","Writing to a buffer in the guest failed.","Failed to create a Writer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Failed to copy config to a buffer.","Failed to create <code>base::Event</code>.","","","Failed to get config.","Failed to get features.","Failed to get host address.","Failed to get protocol features.","Failed to get number of queues.","Failed to get vring base offset.","","Invalid config offset is given.","","MSI-X config is unavailable.","MSI-X irqfd is unavailable.","","Failed to reset owner.","","Failed to set config.","Failed to set device request channel.","Failed to set features.","Failed to set memory map regions.","Failed to set owner.","Failed to set protocol features.","Failed to set vring address.","Failed to set vring base offset.","Failed to set eventfd to signal used vring buffers.","Failed to enable or disable vring.","Failed to set eventfd for adding buffers to vring.","Failed to set the size of the queue.","","Failed to connect socket.","Failed to create Master from a UDS path.","The tag for the Fs device was too long to fit in the …","","","","","","","Enables a set of features.","","","","","","","","","","Activates vrings.","","","","","","Activates a vring for the given <code>queue</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>VhostUserHandler</code> instance attached to the …","Creates a <code>VhostUserHandler</code> instance attached to the …","","","","","","","","","","Returns a vector of sizes of each queue.","","","","","Gets the device configuration space at <code>offset</code> and writes …","","","","","","","","","Deactivates all vrings.","","","","","","Sets the channel for device-specific messages.","Sets the memory map regions so it can translate the vring …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes <code>data</code> into the device configuration space at <code>offset</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>WlState</code> instance for running a virtio-wl …","","Handle incoming events and forward them to the VM over the …","Handle messages from the output queue and forward them to …","","","","","","","","","","","","This is a hack so that we can drive the inner WaitContext …"],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["arc",3,["mutex"]],["mutex",3,["busdevice"]],["pciaddress",3]]],[[["hosthotplugkey",4],["pciaddress",3]]],[[["hosthotplugkey",4],["pciaddress",3]]],null,null,[[["systemallocator",3]],[["pciaddress",3],["error",4],["result",4,["pciaddress","error"]]]],[[["systemallocator",3]],[["pciaddress",3],["error",4],["result",4,["pciaddress","error"]]]],[[["systemallocator",3]],[["pciaddress",3],["pcideviceerror",4],["result",4,["pciaddress","pcideviceerror"]]]],[[["systemallocator",3]],[["pciaddress",3],["error",4],["result",4,["pciaddress","error"]]]],[[["systemallocator",3]],[["pcideviceerror",4],["result",4,["pciaddress","pcideviceerror"]],["pciaddress",3]]],[[["systemallocator",3]],[["error",4],["vec",3],["result",4,["vec","error"]]]],[[["systemallocator",3]],[["error",4],["vec",3],["result",4,["vec","error"]]]],[[["systemallocator",3]],[["vec",3],["result",4,["vec","pcideviceerror"]],["pcideviceerror",4]]],[[["systemallocator",3]],[["result",4,["vec","pcideviceerror"]],["vec",3],["pcideviceerror",4]]],[[["systemallocator",3]],[["error",4],["vec",3],["result",4,["vec","error"]]]],[[["systemallocator",3]],[["error",4],["vec",3],["result",4,["vec","error"]]]],[[["systemallocator",3]],[["error",4],["vec",3],["result",4,["vec","error"]]]],[[["systemallocator",3]],[["vec",3],["result",4,["vec","pcideviceerror"]],["pcideviceerror",4]]],[[["systemallocator",3]],[["result",4,["vec","pcideviceerror"]],["vec",3],["pcideviceerror",4]]],[[["systemallocator",3]],[["vec",3],["result",4,["vec","error"]],["error",4]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],[["option",4,["pcidevice"]],["pcidevice",8]]],[[],[["option",4,["pcidevice"]],["pcidevice",8]]],[[],[["option",4,["pcidevice"]],["pcidevice",8]]],[[],[["option",4,["pcidevice"]],["pcidevice",8]]],[[],[["option",4,["vfioplatformdevice"]],["vfioplatformdevice",3]]],[[],[["option",4,["vfioplatformdevice"]],["vfioplatformdevice",3]]],[[],[["option",4,["vfioplatformdevice"]],["vfioplatformdevice",3]]],[[],[["option",4,["vfioplatformdevice"]],["vfioplatformdevice",3]]],[[],[["option",4,["vfioplatformdevice"]],["vfioplatformdevice",3]]],[[],[["option",4,["vfioplatformdevice"]],["vfioplatformdevice",3]]],[[["option",4,["u32"]],["event",3],["u32",15]],["option",4]],[[["option",4,["u32"]],["event",3],["u32",15]],["option",4]],[[["option",4,["u32"]],["event",3],["u32",15]],["option",4]],[[["option",4,["u32"]],["event",3],["u32",15]],["option",4]],[[["option",4,["u32"]],["event",3],["u32",15]],["option",4]],[[["event",3],["u32",15],["option",4,["event"]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["busaccessinfo",3]],[[],["bustype",4]],[[],["hosthotplugkey",4]],[[],["busrange",3]],[[],["bus",3]],[[],["ac97backend",4]],[[],["ac97parameters",3]],[[],["pciclasscode",4]],[[],["pciaddress",3]],[[],["pciinterruptpin",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["busrange",3]],["ordering",4]],[[["pciaddress",3]],["ordering",4]],[[["usize",15]],["u32",15]],[[["usize",15]],["u32",15]],[[["usize",15]],["u32",15]],[[["usize",15],["u64",15]],["configwriteresult",3]],[[["usize",15],["u64",15]],["configwriteresult",3]],[[["usize",15],["u64",15]],["configwriteresult",3]],[[["usize",15],["pciaddress",3]],["u32",15]],[[["usize",15],["u64",15],["pciaddress",3]]],[[["u64",15]],["bool",15]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[],["ac97parameters",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],null,[[],["file",3]],null,null,null,[[]],[[]],[[["u64",15]]],[[["busaccessinfo",3]],["bool",15]],[[["bustype",4]],["bool",15]],[[["busrange",3]],["bool",15]],[[["pciaddress",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["u32",15]]],[[["str",15]],["result",4]],[[["str",15]]],null,[[["sdt",3],["vec",3,["sdt"]]],[["option",4,["vec"]],["vec",3,["sdt"]]]],[[["sdt",3],["vec",3,["sdt"]]],[["option",4,["vec"]],["vec",3,["sdt"]]]],[[["usize",15]],[["option",4,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[["usize",15]],[["option",4,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[["usize",15]],[["option",4,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[["usize",15]],[["option",4,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[["usize",15]],[["option",4,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[["hosthotplugkey",4]],[["option",4,["pciaddress"]],["pciaddress",3]]],[[["hosthotplugkey",4]],[["option",4,["pciaddress"]],["pciaddress",3]]],[[],["pitstate",3]],[[],[["vec",3,["vfioirq"]],["vfioerror",4],["result",4,["vec","vfioerror"]]]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["u8",15]],[[],[["vec",3,["pciaddress"]],["pciaddress",3]]],[[],[["vec",3,["pciaddress"]],["pciaddress",3]]],[[],[["vec",3,["pciaddress"]],["pciaddress",3]]],[[["pciaddress",3]]],[[["pciaddress",3]]],[[["pciaddress",3]]],[[["pciaddress",3]]],null,[[["u64",15],["mutex",3,["busdevice"]],["arc",3,["mutex"]]],[["result",4,["error"]],["error",4]]],[[["u64",15],["arc",3,["busdevicesync"]],["busdevicesync",8]],[["result",4,["error"]],["error",4]]],[[],["event",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["pcidevice"]],["option",4,["box"]]]],[[["box",3]],[["box",3,["pcidevice"]],["option",4,["box"]]]],[[["box",3]],[["option",4,["box"]],["box",3,["vfioplatformdevice"]]]],[[["box",3]],[["option",4,["box"]],["box",3,["vfioplatformdevice"]]]],[[["box",3]],[["option",4,["box"]],["box",3,["vfioplatformdevice"]]]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[["vfioirq",3]],["bool",15]],null,[[["pciaddress",3]],[["option",4,["u8"]],["u8",15]]],[[["pciaddress",3]],[["option",4,["u8"]],["u8",15]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],null,[[],["str",15]],null,[[["into",8,["i64"]],["i64",15]],["option",4]],[[["busaccessinfo",3]],["bool",15]],[[["pciaddress",3]],["bool",15]],[[["u64",15]],["cmos",3]],[[["event",3]],["i8042device",3]],[[["shmstreamsource",8],["ac97backend",4],["box",3,["shmstreamsource"]],["guestmemory",3]]],[[["bus",3],["weak",3,["bus"]]]],[[["arc",3,["mutex"]],["mutex",3,["pciroot"]],["event",3]]],[[["usize",15],["arc",3,["mutex"]],["mutex",3,["pciroot"]]]],[[["u8",15],["mutex",3,["pciedevice"]],["arc",3,["mutex"]],["tube",3]]],[[]],[[["stubpciparameters",3]],["stubpcidevice",3]],[[["vfiodevice",3],["option",4,["u8"]],["u8",15],["tube",3]]],[[["event",3],["mutex",3,["clock"]],["arc",3,["mutex"]]],[["piterror",4],["pit",3],["result",4,["pit","piterror"]]]],[[["tube",3],["vfiodevice",3]]],[[["minijail",3],["busdevice",8],["vec",3,["rawdescriptor"]],["rawdescriptor",6]],[["result",4,["proxydevice","error"]],["proxydevice",3],["error",4]]],[[["option",4,["box"]],["vec",3,["rawdescriptor"]],["rawdescriptor",6],["option",4,["box"]],["event",3],["protectiontype",4],["box",3,["read"]],["box",3,["write"]]],["serial",3]],[[],["bus",3]],null,[[]],[[]],[[]],[[]],[[["u64",15]],["bool",15]],[[["busrange",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pciaddress",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["pid_t",6]],null,null,[[],["result",6]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["u64",15]],["bool",15]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["usize",15]],["u32",15]],[[["usize",15]],["u32",15]],[[["usize",15]],["u32",15]],[[["usize",15]],["u32",15]],[[["usize",15]],["u32",15]],null,null,[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["pcideviceerror"]],["pcideviceerror",4]]],[[],[["result",4,["pcideviceerror"]],["pcideviceerror",4]]],[[["u64",15]],[["result",4,["error"]],["error",4]]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["pitstate",3]]],null,null,null,null,[[["usize",15]],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["u32",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15]],[["pciclasscode",4],["result",4,["pciclasscode","pciclasscodeparseerror"]],["pciclasscodeparseerror",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["guestmemory",3],["ac97parameters",3]],[["error",4],["result",4,["error"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["u64",15]],["bool",15]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["string",3]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["event",3]],["acpipmresource",3]],[[["busaccessinfo",3]]],[[]],[[["vec",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["busaccessinfo",3]]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["u64",15],["event",3],["u32",15],["box",3,["createpowermonitorfn"]],["tube",3],["option",4,["box"]]],[["batteryerror",4],["result",4,["batteryerror"]]]],[[["busaccessinfo",3]]],[[["vec",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["busaccessinfo",3]]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["path",3],["bool",15]],[["result",4,["error"]],["error",3]]],[[["path",3],["bool",15]],[["result",4,["error"]],["error",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["i32",15]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["u32",15]],[["directirqerror",4],["result",4,["directirqerror"]]]],[[["event",3],["option",4,["event"]]],[["directirqerror",4],["result",4,["directirqerror"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["vcpu",8]],["result",6]],[[["usize",15],["vcpu",8]],["result",6]],[[["usize",15],["vcpu",8]],["result",6]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["irqchip",8]],[[],["irqchip",8]],[[],["irqchip",8]],[[],["irqchip",8]],[[],["irqchip",8]],[[],["irqchip",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],["result",6]],[[["u8",15]],["result",6]],[[["u8",15]],["result",6]],[[["irqchipcap",4]],["bool",15]],[[["irqchipcap",4]],["bool",15]],[[["irqchipcap",4]],["bool",15]],[[],["irqchipcap",4]],[[],["vcpurunstate",4]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[["u8",15]]],[[["irqchipcap",4]],["bool",15]],[[["vcpurunstate",4]],["bool",15]],[[["bus",3],["systemallocator",3]],["result",6]],[[["bus",3],["systemallocator",3]],["result",6]],[[["bus",3],["systemallocator",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["u8"]],["u8",15]]],[[],[["result",6,["ioapicstate"]],["ioapicstate",3]]],[[],[["result",6,["ioapicstate"]],["ioapicstate",3]]],[[],[["result",6,["ioapicstate"]],["ioapicstate",3]]],[[],["ioapicstate",3]],[[["usize",15]],[["result",6,["lapicstate"]],["lapicstate",3]]],[[["usize",15]],[["result",6,["lapicstate"]],["lapicstate",3]]],[[["usize",15]],[["result",6,["lapicstate"]],["lapicstate",3]]],[[["usize",15]],[["result",6,["mpstate"]],["mpstate",4]]],[[["usize",15]],[["result",6,["mpstate"]],["mpstate",4]]],[[["usize",15]],[["result",6,["mpstate"]],["mpstate",4]]],[[["picselect",4]],[["result",6,["picstate"]],["picstate",3]]],[[["picselect",4]],[["result",6,["picstate"]],["picstate",3]]],[[["picselect",4]],[["result",6,["picstate"]],["picstate",3]]],[[["picselect",4]],["picstate",3]],[[],[["pitstate",3],["result",6,["pitstate"]]]],[[],[["pitstate",3],["result",6,["pitstate"]]]],[[],[["pitstate",3],["result",6,["pitstate"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],[[["vcpu",8]],["result",6]],[[["vcpu",8]],["result",6]],[[["vcpu",8]],["result",6]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["result",6,["vec"]],["vec",3]]],[[],[["result",6,["vec"]],["vec",3]]],[[],[["result",6,["vec"]],["vec",3]]],[[]],[[]],[[]],[[],["bool",15]],[[["usize",15],["kvmvm",3]],[["result",6,["kvmkernelirqchip"]],["kvmkernelirqchip",3]]],[[["usize",15],["tube",3],["option",4,["usize"]],["kvmvm",3]],["result",6]],[[],["pic",3]],[[["tube",3],["usize",15]],[["ioapic",3],["result",6,["ioapic"]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],[[["option",4,["event"]],["u32",15],["event",3]],[["result",6,["option"]],["option",4,["irqeventindex"]]]],[[["option",4,["event"]],["u32",15],["event",3]],[["result",6,["option"]],["option",4,["irqeventindex"]]]],[[["option",4,["event"]],["u32",15],["event",3]],[["result",6,["option"]],["option",4,["irqeventindex"]]]],[[["vec",3,["event"]],["vec",3,["vec"]]]],[[["vec",3,["event"]],["vec",3,["vec"]]]],[[["irqroute",3]],["result",6]],[[["irqroute",3]],["result",6]],[[["irqroute",3]],["result",6]],[[["u32",15],["bool",15]],["result",6]],[[["u32",15],["bool",15]],["result",6]],[[["u32",15],["bool",15]],["result",6]],[[["u8",15],["bool",15]],["bool",15]],[[["usize",15],["bool",15]],["bool",15]],[[["irqeventindex",6]],["result",6]],[[["irqeventindex",6]],["result",6]],[[["irqeventindex",6]],["result",6]],[[["ioapicstate",3]],["result",6]],[[["ioapicstate",3]],["result",6]],[[["ioapicstate",3]],["result",6]],[[["ioapicstate",3]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["usize",15],["lapicstate",3]],["result",6]],[[["usize",15],["lapicstate",3]],["result",6]],[[["usize",15],["lapicstate",3]],["result",6]],[[["usize",15],["mpstate",4]],["result",6]],[[["usize",15],["mpstate",4]],["result",6]],[[["usize",15],["mpstate",4]],["result",6]],[[["picselect",4],["picstate",3]],["result",6]],[[["picselect",4],["picstate",3]],["result",6]],[[["picselect",4],["picstate",3]],["result",6]],[[["picselect",4],["picstate",3]]],[[["pitstate",3]],["result",6]],[[["pitstate",3]],["result",6]],[[["pitstate",3]],["result",6]],[[]],[[]],[[],[["box",3,["irqchipx86_64"]],["result",6,["box"]]]],[[],[["box",3,["irqchipx86_64"]],["result",6,["box"]]]],[[],[["box",3,["irqchipx86_64"]],["result",6,["box"]]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15],["event",3]],["result",6]],[[["u32",15],["event",3]],["result",6]],[[["u32",15],["event",3]],["result",6]],[[["vcpu",8]],[["result",6,["vcpurunstate"]],["vcpurunstate",4]]],[[["vcpu",8]],[["result",6,["vcpurunstate"]],["vcpurunstate",4]]],[[["vcpu",8]],[["result",6,["vcpurunstate"]],["vcpurunstate",4]]],[[["busaccessinfo",3]]],[[["busaccessinfo",3]]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["string",3]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["event",3]],["pl030",3]],[[["busaccessinfo",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["busaccessinfo",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["minijail",3]],[["error",4],["result",4,["error"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["serialtype",4]],[[],["serialhardware",4]],[[],["serialparameters",3]],[[]],[[]],[[]],[[["serialhardware",4]],["ordering",4]],null,[[["vec",3],["event",3],["protectiontype",4]],[["result",4,["error"]],["error",4],["serialdevice",8]]],null,[[["serialhardware",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],null,null,[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["option",4,["box"]],["vec",3,["rawdescriptor"]],["rawdescriptor",6],["option",4,["box"]],["event",3],["protectiontype",4],["box",3,["read"]],["box",3,["write"]]]],null,[[["serialhardware",4]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],["result",6]],[[["failhandle",8],["arc",3,["failhandle"]],["arc",3,["eventloop"]],["usbhub",3],["arc",3,["usbhub"]],["eventloop",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[["controlendpointstate",4]],["bool",15]],[[]],[[]],[[],["backendtype",4]],[[],["u16",15]],[[],["u16",15]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["failhandle",8],["arc",3,["asyncjobqueue"]],["mutex",3,["device"]],["arc",3,["mutex"]],["asyncjobqueue",3],["arc",3,["failhandle"]]],[["result",6,["hostdevice"]],["hostdevice",3]]],[[],["result",6]],[[["usbdeviceaddress",6]]],[[["xhcitransfer",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[["xhcitransfer",3]],["result",6]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["u8",15],["transferdirection",4]],["bool",15]],[[["endpointtype",4],["u8",15],["arc",3,["asyncjobqueue"]],["arc",3,["mutex"]],["arc",3,["failhandle"]],["failhandle",8],["mutex",3,["device"]],["asyncjobqueue",3],["endpointdirection",4]],["usbendpoint",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["usize",15],["error",4],["result",4,["usize","error"]]]],[[["guestmemory",3],["vec",3,["addressedtrb"]],["addressedtrb",3]],[["scattergatherbuffer",3],["error",4],["result",4,["scattergatherbuffer","error"]]]],[[],[["usize",15],["error",4],["result",4,["usize","error"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["error",4],["result",4,["usize","error"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["xhcibackenddevice",8],["box",3,["xhcibackenddevice"]]],[["result",4,["u8","error"]],["u8",15],["error",4]]],[[],[["error",4],["result",4,["error"]]]],[[["u8",15]],[["error",4],["result",4,["error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["option",4,["box"]],["mutexguard",3,["option"]]]],[[["u8",15]],[["option",4,["arc"]],["arc",3,["usbport"]]]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["backendtype",4],["u8",15],["register",3,["u32"]],["u32",15],["mutex",3,["interrupter"]],["arc",3,["mutex"]]],["usbport",3]],[[["xhciregs",3],["arc",3,["mutex"]],["mutex",3,["interrupter"]]],["usbhub",3]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["interruptererror"]],["interruptererror",4]]],[[],[["result",4,["interruptererror"]],["interruptererror",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["backendtype",4]],["bool",15]],[[]],[[],["backendtype",4]],[[],["u16",15]],[[],["u16",15]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["result",6]],[[["usbdeviceaddress",6]]],[[["xhcitransfer",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["failhandle",8],["arc",3,["failhandle"]],["arc",3,["eventloop"]],["usbhub",3],["arc",3,["usbhub"]],["eventloop",3]],["result",6]],null,null,[[["systemallocator",3]],[["pcideviceerror",4],["result",4,["pciaddress","pcideviceerror"]],["pciaddress",3]]],[[["systemallocator",3]],[["vec",3],["result",4,["vec","pcideviceerror"]],["pcideviceerror",4]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["option",4,["u32"]],["event",3],["u32",15]],["option",4]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[["usize",15]],[["option",4,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["xhciregs",3]],["xhcifailhandle",3]],[[["guestmemory",3],["hostbackenddeviceprovider",4]]],[[]],[[["u64",15]]],[[["usize",15]],["u32",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15]]],[[["usize",15],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["transferdirection",4]],[[],["xhcitransfermanager",3]],[[]],[[]],[[["addressedtrb",3],["u8",15],["mutex",3,["interrupter"]],["vec",3,["addressedtrb"]],["guestmemory",3],["usbport",3],["event",3],["arc",3,["mutex"]],["arc",3,["usbport"]]],["xhcitransfer",3]],[[]],[[["transferdirection",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["transferdirection",4]],[[],[["error",4],["result",4,["xhcitransfertype","error"]],["xhcitransfertype",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["guestmemory",3],["vec",3,["addressedtrb"]],["addressedtrb",3]],[["error",4],["result",4,["xhcitransfertype","error"]],["xhcitransfertype",4]]],[[],["xhcitransfermanager",3]],[[["transferstatus",4],["u32",15]],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],["arc",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vfioregionaddr",3]],[[]],[[]],[[],["vfioregionaddr",3]],[[],["file",3]],[[],["string",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[],[["vec",3,["vfioirq"]],["vfioerror",4],["result",4,["vec","vfioerror"]]]],[[["vfioregionaddr",3]],[["u64",15],["vfioerror",4],["result",4,["u64","vfioerror"]]]],[[],["u32",15]],[[["u32",15]],["u32",15]],[[["u32",15]],[["vec",3,["vfio_region_sparse_mmap_area"]],["vfio_region_sparse_mmap_area",3]]],[[["u32",15]],["u64",15]],[[["u32",15]],["u64",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["u32",15]],[["result",4,["vfioerror"]],["vfioerror",4]]],[[["u32",15]],[["result",4,["vfioerror"]],["vfioerror",4]]],[[["u32",15]],[["result",4,["vfioerror"]],["vfioerror",4]]],[[["u32",15]],[["result",4,["vfioerror"]],["vfioerror",4]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vfioerror",4],["result",4,["vfioerror"]]]],[[["arc",3,["mutex"]],["mutex",3,["vfiocontainer"]]],[["vfioerror",4],["result",4,["vfioerror"]]]],[[["arc",3,["vfiodevice"]],["vfiodevice",3]]],[[],[["vfioerror",4],["result",4,["vfioerror"]]]],[[["bool",15],["arc",3,["mutex"]],["mutex",3,["vfiocontainer"]]],[["vfioerror",4],["result",4,["vfioerror"]]]],[[["u32",15]],["datainit",8]],[[["u64",15],["u32",15]]],[[["u64",15],["vfioregionaddr",3]],["datainit",8]],[[["u64",15],["u32",15]]],[[["u64",15],["vfioregionaddr",3]]],[[["event",3],["u32",15]],[["result",4,["vfioerror"]],["vfioerror",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15],["bool",15]],[["result",4,["vfioerror"]],["vfioerror",4]]],[[["u64",15],["bool",15]],[["result",4,["vfioerror"]],["vfioerror",4]]],[[["u64",15]],[["result",4,["vfioerror"]],["vfioerror",4]]],[[["u64",15]],[["result",4,["vfioerror"]],["vfioerror",4]]],[[["asref",8,["path"]],["path",3],["bool",15]],[["vfioerror",4],["arc",3,["mutex"]],["result",4,["arc","vfioerror"]]]],[[["asref",8,["path"]],["path",3],["bool",15]],[["vfioerror",4],["arc",3,["mutex"]],["result",4,["arc","vfioerror"]]]],[[],[["u64",15],["vfioerror",4],["result",4,["u64","vfioerror"]]]],[[["u32",15],["datainit",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["u16",15]],[[["u16",15],["guestmemory",3],["u32",15]]],null,[[["systemallocator",3]],[["pciaddress",3],["pcideviceerror",4],["result",4,["pciaddress","pcideviceerror"]]]],[[["systemallocator",3]],[["vec",3],["result",4,["vec","pcideviceerror"]],["pcideviceerror",4]]],[[["systemallocator",3]],[["vec",3],["result",4,["vec","pcideviceerror"]],["pcideviceerror",4]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["option",4,["u32"]],["event",3],["u32",15]],["option",4]],null,[[],["usize",15]],[[],["usize",15]],[[["protectiontype",4]],["u64",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["reader",3]],[[],["writer",3]],[[],["descriptortype",4]],[[],["virtio_input_device_ids",3]],[[],["virtio_input_absinfo",3]],[[],["virtio_input_bitmap",3]],[[],["descriptorchain",3]],[[],["queue",3]],[[],["virtiopcicap",3]],[[],["virtiopcinotifycap",3]],[[],["virtiopcishmcap",3]],[[],["pcivirtiosubclass",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6],["fromiterator",8,["result"]]]],null,[[["usize",15]]],[[["intoiterator",8]],["result",6]],[[["usize",15]]],[[["msixstatus",4]]],[[["msixstatus",4]]],[[["u64",15]]],[[["vec",3],["guestaddress",3],["u32",15],["guestmemory",3]],[["descriptorchain",3],["error",4],["result",4,["descriptorchain","error"]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["virtio_input_device_ids",3]],[[],["virtio_input_absinfo",3]],null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["descriptortype",4]],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["sdt",3],["option",4],["vec",3,["sdt"]]],[["option",4,["vec"]],["vec",3,["sdt"]]]],[[["sdt",3],["option",4],["vec",3,["sdt"]]],[["option",4,["vec"]],["vec",3,["sdt"]]]],[[["sdt",3],["option",4],["vec",3,["sdt"]]],[["option",4,["vec"]],["vec",3,["sdt"]]]],[[["sdt",3],["vec",3,["sdt"]]],[["option",4,["vec"]],["vec",3,["sdt"]]]],[[["usize",15]],[["option",4,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[["pciaddress",3]],[["vec",3,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[["pciaddress",3]],[["vec",3,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[],[["box",3,["pcicapability"]],["vec",3,["box"]]]],[[],[["box",3,["pcicapability"]],["vec",3,["box"]]]],[[],["event",3]],[[],["option",4]],[[],["smallvec",3]],[[],["smallvec",3]],[[],[["event",3],["option",4,["event"]]]],[[],[["event",3],["option",4,["event"]]]],null,[[],["bool",15]],[[["u32",15]],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[],["desciter",3]],[[],["vec",3]],[[],["bool",15]],[[["guestmemory",3]],["bool",15]],[[],["bool",15]],[[],[["readeriterator",3],["datainit",8]]],[[["guestmemory",3]],["availiter",3]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],null,null,null,[[["u64",15],["tube",3]],[["result",4,["balloon","balloonerror"]],["balloon",3],["balloonerror",4]]],[[["event",3],["arc",3,["atomicusize"]],["arc",3,["mutex"]],["atomicusize",3],["option",4,["arc"]],["u16",15]],["interrupt",3]],[[["u64",15],["btreemap",3,["u32","arc"]],["u32",15],["arc",3,["mutex"]]],[["sysresult",6,["iommu"]],["iommu",3]]],[[["u64",15],["str",15],["config",3]],[["p9",3],["p9result",6,["p9"]]]],[[["u64",15],["file",3],["guestaddress",3],["memslot",6],["tube",3],["option",4,["tube"]]],[["sysresult",6,["pmem"]],["pmem",3]]],[[["u64",15]],[["rngerror",4],["result",4,["rng","rngerror"]],["rng",3]]],[[["pathbuf",3]],["tpm",3]],[[["box",3,["virtiodevice"]],["virtiodevice",8],["guestmemory",3],["tube",3]],["result",6]],[[["guestmemory",3],["descriptorchain",3]],[["result",4,["reader","error"]],["error",4],["reader",3]]],[[["guestmemory",3],["descriptorchain",3]],[["result",4,["writer","error"]],["writer",3],["error",4]]],[[["u16",15]],["queue",3]],[[["u8",15],["u32",15],["pcicapabilitytype",4]]],[[["u8",15],["u32",15],["le32",3],["pcicapabilitytype",4]]],[[["u64",15],["u8",15],["pcicapabilitytype",4]]],[[["u64",15]],[["input",3,["evdeveventsource"]],["inputerror",4],["result",4,["input","inputerror"]]]],[[["u64",15],["u32",15]],[["inputerror",4],["result",4,["input","inputerror"]],["input",3,["socketeventsource"]]]],[[["u64",15],["u32",15]],[["inputerror",4],["result",4,["input","inputerror"]],["input",3,["socketeventsource"]]]],[[["u64",15],["u32",15]],[["inputerror",4],["result",4,["input","inputerror"]],["input",3,["socketeventsource"]]]],[[["u64",15],["u32",15]],[["inputerror",4],["result",4,["input","inputerror"]],["input",3,["socketeventsource"]]]],[[["u64",15],["u32",15]],[["inputerror",4],["result",4,["input","inputerror"]],["input",3,["socketeventsource"]]]],[[["u64",15],["u32",15]],[["inputerror",4],["result",4,["input","inputerror"]],["input",3,["socketeventsource"]]]],[[],[["result",6],["option",4,["result"]]]],[[],["option",4]],[[],["option",4]],null,[[["guestmemory",3],["eventasync",3]]],null,[[],[["descriptorchain",3],["option",4,["descriptorchain"]]]],null,[[]],[[]],[[]],[[["guestmemory",3]],[["descriptorchain",3],["option",4,["descriptorchain"]]]],[[["guestmemory",3]],[["descriptorchain",3],["option",4,["descriptorchain"]]]],[[["guestmemory",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["usize",15]],["u32",15]],[[["usize",15],["filereadwritevolatile",8]],["result",6]],[[["usize",15],["u64",15],["filereadwriteatvolatile",8]],["result",6]],[[["usize",15],["u64",15]]],[[],[["result",6],["datainit",8]]],[[["usize",15],["u64",15],["file",3]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["filereadwritevolatile",8]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["u64",15],["filereadwriteatvolatile",8]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["u64",15]]],[[["volatileslice",3]],["usize",15]],[[]],null,[[],[["result",4,["pcideviceerror"]],["pcideviceerror",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],null,[[["u8",15]]],[[["guestmemory",3],["bool",15]]],[[["u16",15],["u32",15]]],[[["u16",15],["u32",15]]],[[]],[[]],[[["u16",15]]],[[["u16",15]]],null,null,[[["usize",15]],["reader",3]],[[["usize",15]],["writer",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["signalableinterrupt",8],["guestmemory",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]],[["str",15],["option",4,["str"]]]],null,null,null,null,null,null,null,[[]],[[],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["filereadwritevolatile",8]],["result",6]],[[["usize",15],["u64",15],["filereadwriteatvolatile",8]],["result",6]],[[["usize",15],["u64",15]]],[[["usize",15]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15],["file",3]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["filereadwritevolatile",8]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["u64",15],["filereadwriteatvolatile",8]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["u64",15]]],[[["volatileslice",3]],["usize",15]],[[["iterator",8]],["result",6]],[[["datainit",8]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15],["bool",15]],["u64",15]],[[["u64",15],["u16",15],["u32",15]],["virtio_blk_config",3]],null,[[],["virtio_blk_geometry",3]],[[],["virtio_blk_topology",3]],[[],["virtio_blk_config",3]],[[]],[[]],[[]],[[],["virtio_blk_geometry",3]],[[],["virtio_blk_topology",3]],[[],["virtio_blk_config",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,null,null,null,null,[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],null,null,[[]],[[],["u64",15]],[[["rc",3,["refcell"]],["asyncmutex",3,["diskstate"]],["timerasync",3],["rc",3,["asyncmutex"]],["refcell",3,["bool"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["atomicu64",3],["blockid",6],["bool",15],["arc",3,["atomicu64"]],["asyncdisk",8],["option",4,["blockid"]],["box",3,["asyncdisk"]]],["diskstate",3]],[[["u64",15],["blockid",6],["option",4,["tube"]],["toasyncdisk",8],["u32",15],["bool",15],["tube",3],["box",3,["toasyncdisk"]],["option",4,["blockid"]]],[["sysresult",6,["blockasync"]],["blockasync",3]]],[[["rc",3,["refcell"]],["asyncmutex",3,["diskstate"]],["descriptorchain",3],["rc",3,["asyncmutex"]],["rc",3,["refcell"]],["guestmemory",3],["rc",3,["refcell"]],["refcell",3,["bool"]],["refcell",3,["timerasync"]],["refcell",3,["queue"]]]],[[]],[[["u64",15]]],null,[[],["bool",15]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["u32",15]],[[]],[[],["u64",15]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["u64",15],["blockid",6],["option",4,["tube"]],["box",3,["diskfile"]],["diskfile",8],["u32",15],["bool",15],["tube",3],["option",4,["blockid"]]],[["block",3],["sysresult",6,["block"]]]],[[]],[[["u64",15]]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["virtio_console_config",3]],[[]],null,[[],["virtio_console_config",3]],[[],["u32",15]],[[]],null,[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["guestmemory",3],["queue",3],["vecdeque",3]],[["consoleerror",4],["result",4,["consoleerror"]]]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],null,[[["option",4,["box"]],["vec",3,["rawdescriptor"]],["rawdescriptor",6],["option",4,["box"]],["event",3],["protectiontype",4],["box",3,["read"]],["box",3,["write"]]],["console",3]],[[["guestmemory",3],["queue",3],["write",8]]],[[["write",8],["reader",3]],[["result",6,["u32"]],["u32",15]]],[[]],[[["u64",15]]],[[],["bool",15]],null,[[["box",3,["read"]],["event",3],["read",8]],[["option",4,["arc"]],["arc",3,["mutex"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["virtio_fs_config",3]],[[]],[[],["u32",15]],[[]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["error",4]],["error",4]],[[["pciaddress",3]],[["vec",3,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[],[["box",3,["pcicapability"]],["vec",3,["box"]]]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["u64",15],["usize",15],["config",3],["tube",3],["str",15]],[["fs",3],["result",6,["fs"]]]],null,null,[[["queue",3],["u32",15],["guestmemory",3],["arc",3],["arc",3]],["result",6]],[[]],[[["u64",15]]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,null,[[["u64",15],["context",3],["u32",15]],["result",6]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[["context",3],["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["config",3]],[[["context",3],["u32",15]],[["entry",3],["result",6,["entry"]]]],[[],["cachepolicy",4]],[[],["config",3]],[[]],[[]],[[["u64",15],["context",3]],[["usize",15],["result",6,["usize"]]]],[[["u64",15],["cstr",3],["u32",15],["context",3]],["result",6]],[[]],[[]],[[]],null,[[["cachepolicy",4]],["bool",15]],[[["u64",15],["u32",15],["context",3]],["result",6]],[[["u64",15],["context",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u64",15],["context",3]]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["u64",15],["bool",15],["context",3]],["result",6]],[[["u64",15],["bool",15],["context",3]],["result",6]],[[["u64",15],["context",3],["option",4,["u64"]]],["result",6]],[[["u64",15],["cstr",3],["u32",15],["context",3]],[["result",6,["getxattrreply"]],["getxattrreply",4]]],[[["fsoptions",3]],[["result",6,["fsoptions"]],["fsoptions",3]]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["u64",15],["ioctlflags",3],["u32",15],["read",8],["context",3]],[["result",6,["ioctlreply"]],["ioctlreply",4]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["u64",15],["context",3],["cstr",3]],[["entry",3],["result",6,["entry"]]]],[[["u64",15],["context",3],["u32",15]],[["result",6,["listxattrreply"]],["listxattrreply",4]]],[[["u64",15],["context",3],["cstr",3]],[["entry",3],["result",6,["entry"]]]],[[["u64",15],["cstr",3],["u32",15],["context",3]],[["entry",3],["result",6,["entry"]]]],[[["u64",15],["cstr",3],["u32",15],["context",3]],[["entry",3],["result",6,["entry"]]]],[[["config",3]],[["passthroughfs",3],["result",6,["passthroughfs"]]]],[[["u64",15],["context",3],["u32",15]],["result",6]],[[["u64",15],["context",3],["u32",15]],["result",6]],null,[[["u64",15],["zerocopywriter",8],["u32",15],["option",4,["u64"]],["context",3],["write",8]],[["usize",15],["result",6,["usize"]]]],[[["u64",15],["u32",15],["context",3]],["result",6]],[[["u64",15],["context",3]],[["result",6,["vec"]],["vec",3,["u8"]]]],[[["u64",15],["u32",15],["bool",15],["option",4,["u64"]],["context",3]],["result",6]],[[["u64",15],["u32",15],["context",3]],["result",6]],[[["mapper",8]],["result",6]],[[["u64",15],["context",3],["cstr",3]],["result",6]],[[["u64",15],["cstr",3],["u32",15],["context",3]],["result",6]],null,[[["u64",15],["context",3],["cstr",3]],["result",6]],[[["u64",15],["usize",15],["u32",15],["context",3],["mapper",8]],["result",6]],[[["u64",15],["option",4,["u64"]],["context",3],["stat64",3],["setattrvalid",3]],["result",6]],[[["u64",15],["cstr",3],["u32",15],["context",3]],["result",6]],[[["u64",15],["context",3]],[["result",6,["statvfs64"]],["statvfs64",3]]],[[["cstr",3],["u64",15],["context",3]],[["entry",3],["result",6,["entry"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15],["context",3],["cstr",3]],["result",6]],null,[[["u64",15],["option",4,["u64"]],["u32",15],["bool",15],["read",8],["context",3],["zerocopyreader",8]],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["u16",15],["guestmemory",3],["u32",15]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["i32",15]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["virtio_gpu_config",3]],[[],["gpumode",4]],[[],["gpudisplayparameters",3]],[[],["virtioscanoutblobdata",3]],[[],["displaybackend",4]],[[]],[[]],[[]],[[]],[[]],[[["guestmemory",3],["mutex",3,["fencestate"]],["arc",3,["mutex"]]],["rutabagafencehandler",6]],[[]],[[],["virtio_gpu_config",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4,["tube"]],["tube",3]]],[[],["u32",15]],[[],["rc",3]],null,null,[[]],[[["gpumode",4]],["bool",15]],null,null,[[],["u64",15]],[[]],[[],[["error",3],["result",4,["bool","error"]],["bool",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pciaddress",3]],[["vec",3,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[],[["box",3,["pcicapability"]],["vec",3,["box"]]]],null,null,[[],["bool",15]],null,null,null,[[["rutabagafencehandler",6],["mutex",3,["fencestate"]],["arc",3,["mutex"]]],[["frontend",3],["option",4,["frontend"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["unixstream",3]],["eventdevice",3]],[[],["eventdevicekind",4]],null,null,[[["unixstream",3]],["eventdevice",3]],[[["vec",3,["tube"]],["gpuparameters",3],["displaybackend",4],["arc",3,["mutex"]],["vec",3,["eventdevice"]],["safedescriptor",3],["tube",3],["btreemap",3,["string","pathbuf"]],["u64",15],["pathbuf",3],["option",4,["tube"]],["option",4,["safedescriptor"]],["eventdevice",3],["string",3],["event",3],["mutex",3,["option"]],["bool",15],["vec",3,["displaybackend"]]],["gpu",3]],[[["eventdevicekind",4],["unixstream",3]],["eventdevice",3]],null,null,null,null,[[["guestmemory",3]],[["descriptorchain",3],["option",4,["descriptorchain"]]]],[[],["bool",15]],[[["guestmemory",3],["queuereader",8]],["bool",15]],[[["tube",3]],["result",6]],[[]],[[["u64",15]]],[[],[["result",4,["virtio_input_event","error"]],["error",3],["virtio_input_event",3]]],null,null,null,null,null,[[],[["returndescriptor",3],["option",4,["returndescriptor"]]]],[[["virtio_input_event",3]],[["error",3],["result",4,["bool","error"]],["bool",15]]],[[],[["error",3],["result",4,["bool","error"]],["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tube",3]]],[[["guestmemory",3]]],null,[[]],[[]],[[]],[[]],[[]],[[["unixstream",3]],["eventdevice",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],["virtionetconfig",3]],null,[[],["virtio_net_ctrl_hdr",3]],[[],["virtionetconfig",3]],[[],["token",4]],[[]],[[]],[[]],null,[[],["virtionetconfig",3]],[[],["u32",15]],[[]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u64",15],["u16",15]],[["result",4,["net","neterror"]],["net",3],["neterror",4]]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["u64",15],["macaddress",3],["ipv4addr",3],["u16",15]],[["result",4,["net","neterror"]],["net",3],["neterror",4]]],[[["u64",15],["u16",15]],[["result",4,["net","neterror"]],["net",3],["neterror",4]]],[[["u64",15],["queue",3],["u16",15],["guestmemory",3]],[["result",4,["neterror"]],["neterror",4]]],[[["queue",3],["guestmemory",3]],[["result",4,["neterror"]],["neterror",4]]],[[["queue",3],["guestmemory",3]]],[[]],[[["u64",15]]],[[],["bool",15]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u16",15]],[["result",4,["neterror"]],["neterror",4]]],[[["u64",15]],["c_uint",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["planeinfo",3]],[[]],[[],["planeinfo",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tube",3],["resourcerequest",4]],[["resourcebridgeerror",4],["result",4,["resourceinfo","resourcebridgeerror"]],["resourceinfo",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["sampleformat",4]],["u8",15]],[[["u8",15]],[["result",4,["u32","error"]],["error",4],["u32",15]]],[[["u8",15]],[["error",4],["result",4,["sampleformat","error"]],["sampleformat",4]]],[[["u8",15]],["str",15]],[[["u32",15]],["str",15]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u32",15]],[["error",4],["result",4,["u8","error"]],["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["virtio_snd_config",3]],[[],["virtio_snd_hdr",3]],[[],["virtio_snd_jack_hdr",3]],[[],["virtio_snd_event",3]],[[],["virtio_snd_query_info",3]],[[],["virtio_snd_info",3]],[[],["virtio_snd_pcm_info",3]],[[],["virtio_snd_pcm_hdr",3]],[[],["virtio_snd_pcm_set_params",3]],[[],["virtio_snd_pcm_xfer",3]],[[],["virtio_snd_pcm_status",3]],[[],["virtio_snd_jack_info",3]],[[],["virtio_snd_jack_remap",3]],[[],["virtio_snd_chmap_info",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["virtio_snd_config",3]],[[],["virtio_snd_hdr",3]],[[],["virtio_snd_jack_hdr",3]],[[],["virtio_snd_event",3]],[[],["virtio_snd_query_info",3]],[[],["virtio_snd_info",3]],[[],["virtio_snd_pcm_info",3]],[[],["virtio_snd_pcm_hdr",3]],[[],["virtio_snd_pcm_set_params",3]],[[],["virtio_snd_pcm_status",3]],[[],["virtio_snd_jack_info",3]],[[],["virtio_snd_jack_remap",3]],[[],["virtio_snd_chmap_info",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]],[["result",4,["boxerror"]],["boxerror",6]]],null,[[["u32",15]],[["virtio_snd_chmap_info",3],["option",4,["virtio_snd_chmap_info"]]]],[[],["u32",15]],[[]],[[]],[[],["u64",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[],["u32",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",4],["result",4,["event","error"]],["event",3]]],[[],[["result",4,["boxerror"]],["boxerror",6]]],[[["usize",15],["fnonce",8],["u32",15]],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["u32",15]],[["virtio_snd_jack_info",3],["option",4,["virtio_snd_jack_info"]]]],[[],[["vec",3,["rawfd"]],["rawfd",6]]],[[],[["vec",3,["rawfd"]],["rawfd",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["asref",8,["path"]],["path",3]],[["error",4],["viosshmstreamsource",3],["result",4,["viosshmstreamsource","error"]]]],[[["asref",8,["path"]],["u64",15],["path",3]],[["result",6,["sound"]],["sound",3]]],[[["usize",15],["u32",15],["streamdirection",4],["audiosharedmemory",8],["sampleformat",4]],[["result",4,["box","boxerror"]],["box",3,["shmstream"]],["boxerror",6]]],[[],["usize",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,[[],[["virtio_snd_event",3],["option",4,["virtio_snd_event"]]]],[[["u32",15]],[["error",4],["result",4,["error"]]]],[[]],null,[[["u64",15]]],[[["u32",15]],[["error",4],["result",4,["error"]]]],[[["u32",15]],[["error",4],["result",4,["error"]]]],[[["usize",15],["u32",15],["fnonce",8]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[["viosstreamparams",3],["u32",15]],[["error",4],["result",4,["error"]]]],[[["virtio_snd_pcm_set_params",3]],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[["u32",15]],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[["u32",15]],[["error",4],["result",4,["error"]]]],[[["u32",15]],[["option",4,["virtio_snd_pcm_info"]],["virtio_snd_pcm_info",3]]],null,[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["asref",8,["path"]],["path",3]],[["viosclient",3],["error",4],["result",4,["viosclient","error"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["duration",3]],[["result",4,["option","boxerror"]],["option",4,["serverrequest"]],["boxerror",6]]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["sender",3]],[[["arc",3],["u32",15],["descriptorchain",3],["interrupt",3],["guestmemory",3]],["result",6]],[[["arc",3],["u32",15],["descriptorchain",3],["interrupt",3],["guestmemory",3]],["result",6]],[[["streammsg",4]],["result",6]],[[["sender",3],["streammsg",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["arc",3,["interrupt"]],["arc",3,["viosclient"]],["viosclient",3],["guestmemory",3],["arc",3,["mutex"]],["u32",15],["interrupt",3],["mutex",3,["queue"]],["bool",15]],[["result",6,["streamproxy"]],["streamproxy",3]]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["vioserror",4]],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],[[["u64",15]]],[[],["u64",15]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["msixstatus",4]]],[[],["result",4]],[[],["result",4]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["u64",15],["macaddress",3],["ipv4addr",3],["path",3]],[["net",3],["result",6,["net"]]]],[[["u64",15],["file",3]],[["result",6,["vsock"]],["vsock",3]]],[[["u64",15]],["vsock",3]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["virtiopcidoorbellcap",3]],[[]],[[],["u32",15]],[[]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["pciaddress",3]],[["vec",3,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[],[["box",3,["pcicapability"]],["vec",3,["box"]]]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["u64",15],["unixlistener",3]],[["virtiovhostuser",3],["result",6,["virtiovhostuser"]]]],[[["virtiopcicap",3],["u32",15]]],[[]],[[["usize",15],["u64",15]]],[[["u64",15]]],[[],["bool",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["u64",15]]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]],["result",6]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["interrupt",3],["guestmemory",3]],["result",6]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[["usize",15],["queue",3],["guestmemory",3],["event",3]],["result",6]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pciaddress",3]],[["vec",3,["pcibarconfiguration"]],["pcibarconfiguration",3]]],[[],[["box",3,["pcicapability"]],["vec",3,["box"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["u64",15],["asref",8,["path"]],["path",3]],[["result",6,["block"]],["block",3]]],[[["u64",15],["asref",8,["path"]],["path",3]],[["result",6,["console"]],["console",3]]],[[["u64",15],["asref",8,["path"]],["str",15],["path",3]],[["fs",3],["result",6,["fs"]]]],[[["u64",15],["asref",8,["path"]],["tube",3],["path",3]],[["result",6,["gpu"]],["gpu",3]]],[[["u64",15],["asref",8,["path"]],["path",3]],[["error",4],["mac80211hwsim",3],["result",4,["mac80211hwsim","error"]]]],[[["u64",15],["asref",8,["path"]],["path",3]],[["net",3],["result",4,["net","error"]],["error",4]]],[[["u64",15],["asref",8,["path"]],["path",3]],[["result",6,["snd"]],["snd",3]]],[[["u64",15],["asref",8,["path"]],["path",3]],[["vsock",3],["result",6,["vsock"]]]],[[["u64",15],["asref",8,["path"]],["path",3]],[["wl",3],["result",6,["wl"]]]],[[["asref",8,["path"]],["u64",15],["vhostuserprotocolfeatures",3],["path",3]],["result",6]],[[["u64",15],["vhostuserprotocolfeatures",3],["unixstream",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15],["usize",15]],[["result",6,["vec"]],["vec",3,["u16"]]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]],["result",6]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]],["result",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["tube",3]],["result",6]],[[["guestmemory",3]],["result",6]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15]]],[[["u64",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["ioctlnr",6]],null,null,null,[[],["ioctlnr",6]],null,null,null,null,[[["u64",15]]],[[["vec",3,["event"]],["queue",3],["interrupt",3],["event",3],["guestmemory",3],["vec",3,["queue"]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["global",3],["box",3,["global"]]],[["box",3,["any","global"]],["global",3],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["string",3],["map",3,["string","pathbuf"]],["pathbuf",3],["bool",15],["tube",3],["option",4,["tube"]]],["wlstate",3]],[[["u64",15],["string",3],["map",3,["string","pathbuf"]],["pathbuf",3],["tube",3],["option",4,["tube"]]],[["result",6,["wl"]],["wl",3]]],[[["queue",3],["guestmemory",3],["wlstate",3]],[["result",4,["descriptorsexhausted"]],["descriptorsexhausted",3]]],[[["queue",3],["guestmemory",3],["wlstate",3]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["waitcontext",3]]],"p":[[4,"PciClassCode"],[4,"PciDeviceError"],[4,"PitError"],[4,"BusError"],[4,"ProxyError"],[4,"PciInterruptPin"],[4,"BusType"],[4,"Ac97Backend"],[4,"HostHotPlugKey"],[3,"PciRoot"],[8,"HotPlugBus"],[3,"PcieRootPort"],[3,"StubPciParameters"],[3,"BusAccessInfo"],[8,"PciDevice"],[3,"Ac97Dev"],[3,"PciBridge"],[3,"StubPciDevice"],[3,"VfioPciDevice"],[3,"VfioPlatformDevice"],[3,"Cmos"],[3,"I8042Device"],[3,"PciConfigIo"],[3,"PciConfigMmio"],[3,"Pit"],[3,"ProxyDevice"],[3,"Serial"],[3,"BusRange"],[3,"Bus"],[3,"Ac97Parameters"],[3,"PciAddress"],[8,"BusDeviceObj"],[8,"BusDevice"],[8,"BusDeviceSync"],[8,"BusResumeDevice"],[13,"Vfio"],[13,"CapabilitiesSetup"],[13,"CreateViosClientFailed"],[13,"IoAllocationFailed"],[13,"IoRegistrationFailed"],[13,"MsixAllocatorOverflow"],[13,"CloneEvent"],[13,"CreateEvent"],[13,"CreateWaitContext"],[13,"SpawnThread"],[13,"TimerCreateError"],[13,"WaitError"],[13,"ForkingJail"],[13,"Tube"],[3,"ACPIPMResource"],[4,"BatteryError"],[3,"GoldfishBattery"],[3,"DirectIo"],[3,"DirectMmio"],[4,"DirectIrqError"],[3,"DirectIrq"],[13,"Open"],[4,"VcpuRunState"],[4,"IrqChipCap"],[8,"IrqChip"],[3,"KvmKernelIrqChip"],[3,"KvmSplitIrqChip"],[3,"Pic"],[3,"Ioapic"],[8,"IrqChipX86_64"],[3,"Pl030"],[4,"Error"],[4,"SerialType"],[4,"SerialHardware"],[3,"SerialParameters"],[8,"SerialDevice"],[13,"CloneEvent"],[13,"FileError"],[13,"InvalidSerialHardware"],[13,"InvalidSerialType"],[13,"Unimplemented"],[4,"Error"],[13,"AddToEventLoop"],[13,"BufferLen"],[13,"ClearHalt"],[13,"CreateControlTube"],[13,"CreateLibUsbContext"],[13,"CreateTransfer"],[13,"GetActiveConfig"],[13,"GetConfigDescriptor"],[13,"GetDeviceDescriptor"],[13,"GetEndpointDescriptor"],[13,"GetInterfaceDescriptor"],[13,"GetXhciTransferType"],[13,"QueueAsyncJob"],[13,"ReadBuffer"],[13,"ReadControlTube"],[13,"Reset"],[13,"SetActiveConfig"],[13,"SetInterfaceAltSetting"],[13,"SetupControlTube"],[13,"StartAsyncJobQueue"],[13,"TransferComplete"],[13,"WriteBuffer"],[13,"WriteControlTube"],[4,"HostBackendDeviceProvider"],[3,"ProviderInner"],[13,"Created"],[13,"Started"],[4,"ControlEndpointState"],[3,"HostDevice"],[3,"UsbEndpoint"],[4,"Error"],[3,"ScatterGatherBuffer"],[13,"BadTrbType"],[13,"CastTrb"],[13,"ImmediateDataTooLong"],[13,"ReadGuestMemory"],[13,"UnknownTrbType"],[13,"WriteGuestMemory"],[4,"Error"],[3,"UsbPort"],[3,"UsbHub"],[13,"AlreadyDetached"],[13,"NoSuchPort"],[13,"NoSuchDevice"],[13,"Attach"],[13,"Detach"],[4,"BackendType"],[8,"XhciBackendDevice"],[8,"XhciBackendDeviceProvider"],[3,"XhciController"],[3,"XhciFailHandle"],[4,"Error"],[4,"XhciTransferState"],[4,"TransferDirection"],[4,"XhciTransferType"],[3,"XhciTransfer"],[3,"XhciTransferManager"],[13,"BadTrbType"],[13,"CastTrb"],[13,"CreateBuffer"],[13,"DetachPort"],[13,"SendInterrupt"],[13,"TransferLength"],[13,"TrbType"],[13,"WriteCompletionEvent"],[13,"Submitted"],[13,"Normal"],[13,"SetupStage"],[13,"DataStage"],[13,"Isochronous"],[4,"VfioError"],[4,"VfioIrqType"],[3,"VfioRegionAddr"],[3,"VfioContainer"],[3,"VfioCommonSetup"],[3,"VfioIrq"],[3,"VfioDevice"],[3,"VfioPciConfig"],[3,"VfioRegion"],[8,"VfioCommonTrait"],[13,"ContainerSetIOMMU"],[13,"CreateVfioKvmDevice"],[13,"GetGroupStatus"],[13,"GroupGetDeviceFD"],[13,"GroupSetContainer"],[13,"InvalidIndex"],[13,"IommuDmaMap"],[13,"IommuDmaUnmap"],[13,"IommuGetInfo"],[13,"KvmSetDeviceAttr"],[13,"OpenContainer"],[13,"OpenGroup"],[13,"VfioDeviceGetInfo"],[13,"VfioDeviceGetRegionInfo"],[13,"VfioIrqDisable"],[13,"VfioIrqEnable"],[13,"VfioIrqMask"],[13,"VfioIrqUnmask"],[4,"RngError"],[4,"PciCapabilityType"],[4,"IommuError"],[4,"P9Error"],[4,"BalloonError"],[4,"InputError"],[4,"DescriptorError"],[4,"PciVirtioSubclass"],[4,"DescriptorType"],[3,"Balloon"],[3,"P9"],[8,"VirtioDevice"],[3,"Queue"],[3,"Input"],[3,"Iommu"],[3,"Pmem"],[3,"Rng"],[3,"Tpm"],[3,"DescriptorChain"],[3,"VirtioPciDevice"],[3,"ReaderIterator"],[3,"VirtioInputConfig"],[3,"Interrupt"],[3,"DescIter"],[3,"AvailIter"],[3,"Reader"],[3,"Writer"],[3,"virtio_input_device_ids"],[3,"virtio_input_absinfo"],[3,"virtio_input_bitmap"],[3,"VirtioPciCap"],[3,"VirtioPciNotifyCap"],[3,"VirtioPciShmCap"],[8,"SignalableInterrupt"],[13,"CreatingMessageReceiver"],[13,"ReceivingCommand"],[13,"WritingConfigEvent"],[13,"GuestMemoryError"],[13,"IoError"],[13,"SplitOutOfBounds"],[13,"VolatileMemoryError"],[13,"Descriptor"],[13,"EvdevAbsInfoError"],[13,"EvdevEventTypesError"],[13,"EvdevGrabError"],[13,"EvdevIdError"],[13,"EvdevNameError"],[13,"EvdevPropertiesError"],[13,"EvdevSerialError"],[13,"EventsReadError"],[13,"EventsWriteError"],[13,"GuestError"],[13,"ReadQueue"],[13,"WriteQueue"],[13,"CreateReader"],[13,"CreateWaitContext"],[13,"CreateWriter"],[13,"GetHostAddress"],[13,"GuestMemoryRead"],[13,"GuestMemoryWrite"],[13,"ReadQueueEvent"],[13,"VfioContainerError"],[13,"WaitError"],[13,"CreateServer"],[13,"CreateWaitContext"],[13,"Internal"],[13,"InvalidDescriptorChain"],[13,"ReadQueueEvent"],[13,"SignalUsedQueue"],[13,"TagTooLong"],[13,"WaitError"],[13,"AccessingRandomDev"],[3,"virtio_blk_geometry"],[3,"virtio_blk_topology"],[3,"virtio_blk_config"],[4,"ControlError"],[3,"BlockAsync"],[3,"DiskState"],[13,"AsyncResampleCreate"],[13,"CloneResampleEvent"],[13,"FlushTimer"],[13,"FsyncDisk"],[13,"ReadResampleEvent"],[3,"Block"],[4,"ConsoleError"],[3,"Console"],[3,"virtio_console_config"],[4,"Error"],[3,"Fs"],[3,"virtio_fs_config"],[13,"CreateFs"],[13,"CreateWaitContext"],[13,"FuseError"],[13,"GetSecurebits"],[13,"InvalidDescriptorChain"],[13,"ReadQueueEvent"],[13,"SetSecurebits"],[13,"SignalUsedQueue"],[13,"TagTooLong"],[13,"UnshareFromParent"],[13,"WaitError"],[4,"CachePolicy"],[3,"PassthroughFs"],[3,"Config"],[4,"GpuMode"],[4,"DisplayBackend"],[3,"Gpu"],[8,"QueueReader"],[3,"FenceState"],[3,"ReturnDescriptor"],[3,"Frontend"],[3,"virtio_gpu_config"],[3,"GpuDisplayParameters"],[3,"GpuRenderServerParameters"],[3,"GpuParameters"],[3,"VirtioScanoutBlobData"],[3,"EventDevice"],[13,"Wayland"],[13,"X"],[4,"NetError"],[4,"Token"],[3,"Net"],[3,"virtio_net_ctrl_hdr"],[3,"VirtioNetConfig"],[13,"CloneKillEvent"],[13,"CreateKillEvent"],[13,"CreateWaitContext"],[13,"DescriptorChain"],[13,"ReadCtrlData"],[13,"ReadCtrlHeader"],[13,"TapEnable"],[13,"TapGetMtu"],[13,"TapOpen"],[13,"TapSetIp"],[13,"TapSetMacAddress"],[13,"TapSetNetmask"],[13,"TapSetVnetHdrSize"],[13,"TapValidate"],[13,"WaitContextDisableTap"],[13,"WaitContextEnableTap"],[13,"WaitError"],[13,"WriteAck"],[13,"WriteBuffer"],[4,"ResourceInfo"],[4,"ResourceRequest"],[4,"ResourceResponse"],[4,"ResourceBridgeError"],[3,"PlaneInfo"],[3,"BufferInfo"],[13,"InvalidResource"],[13,"RecieveFailure"],[13,"SendFailure"],[13,"Buffer"],[13,"Fence"],[13,"GetBuffer"],[13,"GetFence"],[13,"Resource"],[4,"Error"],[13,"UnsupportedFrameRate"],[13,"UnsupportedVirtioFrameRate"],[13,"UnsupportedVirtioPcmFormat"],[3,"virtio_snd_config"],[3,"virtio_snd_hdr"],[3,"virtio_snd_jack_hdr"],[3,"virtio_snd_event"],[3,"virtio_snd_query_info"],[3,"virtio_snd_info"],[3,"virtio_snd_pcm_info"],[3,"virtio_snd_pcm_hdr"],[3,"virtio_snd_pcm_set_params"],[3,"virtio_snd_pcm_xfer"],[3,"virtio_snd_pcm_status"],[3,"virtio_snd_jack_info"],[3,"virtio_snd_jack_remap"],[3,"virtio_snd_chmap_info"],[4,"SoundError"],[4,"Error"],[4,"ProtocolErrorKind"],[3,"Sound"],[3,"VioSShmStreamSource"],[3,"VioSndShmStream"],[3,"VioSClient"],[3,"VioSStreamParams"],[13,"BaseMmapError"],[13,"BufferStatusSenderLost"],[13,"CommandFailed"],[13,"DupError"],[13,"EventCreateError"],[13,"EventDupError"],[13,"EventWriteError"],[13,"FileSizeError"],[13,"GuestMmapError"],[13,"InvalidJackId"],[13,"InvalidStreamId"],[13,"IOBufferError"],[13,"ProtocolError"],[13,"ServerConnectionError"],[13,"ServerError"],[13,"ServerIOError"],[13,"ServerMmapError"],[13,"UnixSeqpacketDupError"],[13,"UnsupportedFrameRate"],[13,"VolatileMemoryError"],[13,"WaitContextCreateError"],[13,"WaitError"],[13,"WrongDirection"],[13,"UnexpectedConfigSize"],[13,"UnexpectedNumberOfFileDescriptors"],[13,"VersionMismatch"],[13,"UnexpectedMessageSize"],[13,"ClientEventNotifier"],[13,"ClientNew"],[13,"CreateEvent"],[13,"CreateReader"],[13,"CreateThread"],[13,"CreateWriter"],[13,"Descriptor"],[13,"ImpossibleState"],[13,"QueueEvt"],[13,"QueueIO"],[13,"StreamThreadRecv"],[13,"StreamThreadSend"],[13,"WaitCtx"],[4,"StreamMsg"],[3,"Stream"],[3,"StreamProxy"],[13,"SetParams"],[13,"Prepare"],[13,"Start"],[13,"Stop"],[13,"Release"],[13,"Buffer"],[4,"Error"],[4,"VhostDevResponse"],[4,"VhostDevRequest"],[3,"Net"],[3,"Vsock"],[13,"CloneKillEvent"],[13,"CreateKillEvent"],[13,"CreateTube"],[13,"CreateWaitContext"],[13,"TapEnable"],[13,"TapOpen"],[13,"TapSetIp"],[13,"TapSetMacAddress"],[13,"TapSetNetmask"],[13,"TapSetOffload"],[13,"TapSetVnetHdrSize"],[13,"VhostGetFeatures"],[13,"VhostIrqCreate"],[13,"VhostIrqRead"],[13,"VhostNetSetBackend"],[13,"VhostOpen"],[13,"VhostSetFeatures"],[13,"VhostSetMemTable"],[13,"VhostSetOwner"],[13,"VhostSetVringAddr"],[13,"VhostSetVringBase"],[13,"VhostSetVringCall"],[13,"VhostSetVringKick"],[13,"VhostSetVringNum"],[13,"VhostVsockSetCid"],[13,"VhostVsockStart"],[13,"WaitError"],[13,"MsixEntryChanged"],[13,"Err"],[4,"Error"],[3,"VirtioVhostUser"],[3,"VirtioPciDoorbellCap"],[13,"AcceptConnection"],[13,"CreateListener"],[13,"CreateWaitContext"],[13,"FailedAck"],[13,"ReadSiblingHeader"],[13,"ReadSiblingPayload"],[13,"WaitContextDisableSiblingVmSocket"],[13,"WaitContextEnableSiblingVmSocket"],[13,"WaitError"],[13,"WriteBuffer"],[13,"WriterCreation"],[4,"Error"],[3,"Block"],[3,"Fs"],[3,"Gpu"],[3,"VhostUserHandler"],[3,"Mac80211Hwsim"],[3,"Net"],[3,"Snd"],[3,"Vsock"],[3,"Wl"],[3,"Console"],[13,"CopyConfig"],[13,"CreateEvent"],[13,"GetConfig"],[13,"GetFeatures"],[13,"GetHostAddress"],[13,"GetProtocolFeatures"],[13,"GetQueueNum"],[13,"GetVringBase"],[13,"ResetOwner"],[13,"SetConfig"],[13,"SetDeviceRequestChannel"],[13,"SetFeatures"],[13,"SetMemTable"],[13,"SetOwner"],[13,"SetProtocolFeatures"],[13,"SetVringAddr"],[13,"SetVringBase"],[13,"SetVringCall"],[13,"SetVringEnable"],[13,"SetVringKick"],[13,"SetVringNum"],[13,"SocketConnect"],[13,"SocketConnectOnMasterCreate"],[13,"InvalidConfigOffset"],[13,"TagTooLong"],[3,"Wl"],[3,"WlState"],[3,"DescriptorsExhausted"]]},\
"disk":{"doc":"","t":[13,8,13,13,4,13,13,13,13,13,8,8,13,13,4,13,13,4,13,13,4,4,13,13,13,13,13,13,17,13,13,13,3,17,13,13,3,13,13,13,13,13,6,13,13,3,8,13,13,13,13,13,13,13,13,13,13,13,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,12,12,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,10,11,11,11,10,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AndroidSparse","AsyncDisk","BlockDeviceNew","CompositeDisk","CompositeError","ConversionNotSupported","CreateAndroidSparseDisk","CreateCompositeDisk","CreateSingleFileDisk","DiskError","DiskFile","DiskGetLen","DuplicatePartitionLabel","EfiSystemPartition","Error","Fallocate","Fsync","GptError","GptError","HostFsType","ImagePartitionType","ImageType","InvalidDiskSize","InvalidMagicHeader","InvalidPath","InvalidProto","InvalidSpecification","LinuxFilesystem","MAX_NESTING_DEPTH","MaxNestingDepthExceeded","NoImageFiles","OpenFile","PartitionInfo","QCOW_MAGIC","Qcow2","QcowError","QcowFile","Raw","ReadSpecificationError","ReadToMem","ReadingData","ReadingHeader","Result","SeekingFile","SettingFileSize","SingleFileDisk","ToAsyncDisk","UnalignedReadWrite","UnknownType","UnknownVersion","UnsupportedComponent","WriteFromMem","WriteFromVec","WriteHeader","WriteProto","WriteZeroFiller","WritingData","WritingData","allocate","allocate","as_raw_descriptors","async_ok","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert","create_async_disk_file","create_composite_disk","create_disk_file","create_zero_filler","detect_image_type","drop","eq","eq","eq","first_zero_refcount","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","fsync","fsync","fsync","get_len","get_len","get_len","header","into","into","into","into","into","into","into","into","into_inner","into_inner","l1_table","l2_table","label","ne","new","new","new_from_backing","partition_type","path","punch_hole","punch_hole","punch_hole","read","read_at_volatile","read_to_mem","read_to_mem","read_volatile","ref_table","refcount_block","seek","seek_data","seek_hole","set_backing_file","set_len","set_len","size","to_async_disk","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","writable","write","write_at_volatile","write_from_mem","write_from_mem","write_volatile","write_zeroes","write_zeroes_at","write_zeroes_at","write_zeroes_at","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["diskdisk::CompositeError","","","","","","","","","","","","","","","","disk::Error","","","","","","","","","","","","","","","","disk::GptError",""],"d":["","An asynchronously accessible disk.","","","","","","","","","The prerequisites necessary to support a block device.","A trait for getting the length of a disk image or raw …","","","","","","","","","The type of partition.","The variants of image files on the host that can be used …","The disk size was invalid (too large).","","","","","","Nesting depth limit for disk formats that can open other …","","","","Information about a partition to create.","","","","Represents a qcow2 file. This is a sparse file format …","","","","","","","","","A disk backed by a single file that implements <code>AsyncDisk</code> …","A <code>DiskFile</code> that can be converted for asychronous access.","","","","","","","","","","There was an error writing data to one of the image files.","","","","","Check if the image file type can be used for async disk …","","","","","","","","","","","","","","","","","","","","","Copy the contents of a disk image in <code>src_file</code> into <code>dst_file</code>…","Inspect the image file type and create an appropriate disk …","Create a new composite disk image containing the given …","Inspect the image file type and create an appropriate disk …","Create a zero filler file which can be used to fill the …","Detect the type of an image file by checking for a valid …","","","","","Returns the first cluster in the file with a 0 refcount. …","","","","","","","","","","","","","","Creates a QcowFile from <code>file</code>. File must be a valid qcow2 …","","","","","","","","Asynchronously fsyncs any completed operations to the disk.","","","Get the current length of the disk in bytes.","","","Returns the <code>QcowHeader</code> for this file.","","","","","","","","","Returns the inner file consuming self.","","Returns the L1 lookup table for this file. This is only …","Returns an L2_table of cluster addresses, only used for …","","","","Creates a new QcowFile at the given path.","Creates a new QcowFile at the given path.","","","Replaces a range of bytes with a hole.","","","","","Reads from the file at ‘file_offset’ in to memory <code>mem</code> …","","","Returns the refcount table for this file. This is only …","Returns the <code>index</code>th refcount block from the file.","","","","","","","","Convert a boxed self in to a box-wrapped implementaiton of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes to the file at ‘file_offset’ from memory <code>mem</code> at …","","","","Writes up to <code>length</code> bytes of zeroes to the stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,2,1,0,2,2,2,2,3,0,0,3,4,0,2,2,0,3,2,0,0,5,3,3,3,3,4,0,2,3,3,0,0,1,2,0,1,3,2,2,2,0,2,2,0,0,3,2,3,3,2,2,3,3,3,5,2,6,7,7,0,6,7,3,8,4,5,2,1,6,7,3,8,4,5,2,1,8,4,8,4,0,0,0,0,0,0,7,8,4,1,7,7,7,3,3,8,4,5,5,2,2,1,6,7,7,3,3,8,4,5,2,1,9,6,7,10,6,7,7,6,7,3,8,4,5,2,1,9,6,7,7,8,8,6,7,7,8,8,9,6,7,7,7,9,6,7,7,7,7,7,7,7,6,7,8,11,8,4,3,5,2,6,7,3,8,4,5,2,1,6,7,3,8,4,5,2,1,6,7,3,8,4,5,2,1,8,7,7,9,6,7,7,9,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[["file",3]],[["bool",15],["result",6,["bool"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["partitioninfo",3]],[[],["imagepartitiontype",4]],[[]],[[]],[[["u32",15],["file",3],["imagetype",4]],["result",6]],[[["file",3]],[["box",3,["toasyncdisk"]],["result",6,["box"]]]],[[["file",3],["path",3]],[["error",4],["result",4,["error"]]]],[[["file",3],["u32",15]],[["result",6,["box"]],["box",3,["diskfile"]]]],[[["asref",8,["path"]],["path",3]],[["error",4],["result",4,["error"]]]],[[["file",3]],[["imagetype",4],["result",6,["imagetype"]]]],[[]],[[["partitioninfo",3]],["bool",15]],[[["imagepartitiontype",4]],["bool",15]],[[["imagetype",4]],["bool",15]],[[],[["result",4,["option","error"]],["option",4,["u64"]],["error",4]]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["file",3],["u32",15]],[["result",4,["qcowfile","error"]],["qcowfile",3],["error",4]]],[[["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[],["result",6]],[[],[["u64",15],["result",6,["u64"]]]],[[],[["u64",15],["result",6,["u64"]]]],[[],[["u64",15],["result",6,["u64"]]]],[[],["qcowheader",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]],[["box",3,["toasyncdisk"]],["toasyncdisk",8]]],[[["box",3]],[["box",3,["toasyncdisk"]],["toasyncdisk",8]]],[[]],[[["usize",15]],[["option",4],["result",4,["option","error"]],["error",4]]],null,[[["partitioninfo",3]],["bool",15]],[[["executor",4],["file",3]],["result",6]],[[["u64",15],["file",3]],[["result",4,["qcowfile","error"]],["qcowfile",3],["error",4]]],[[["str",15],["file",3],["u32",15]],[["result",4,["qcowfile","error"]],["qcowfile",3],["error",4]]],null,null,[[["u64",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["u64",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["u64",15]],["result",6]],[[],[["result",6,["usize"]],["usize",15]]],[[["u64",15],["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],[[["u64",15],["guestmemory",3],["arc",3,["guestmemory"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["guestmemory",3],["arc",3,["guestmemory"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],[[]],[[["usize",15]],[["error",4],["result",4,["option","error"]],["option",4]]],[[["seekfrom",4]],[["result",6,["u64"]],["u64",15]]],[[["u64",15]],[["result",6,["option"]],["option",4,["u64"]]]],[[["u64",15]],[["result",6,["option"]],["option",4,["u64"]]]],[[["option",4,["box"]],["box",3,["diskfile"]]]],[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],null,[[["executor",4],["box",3]],[["box",3,["asyncdisk"]],["result",6,["box"]]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],[["result",6,["usize"]],["usize",15]]],[[["u64",15],["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],[[["u64",15],["guestmemory",3],["arc",3,["guestmemory"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["guestmemory",3],["arc",3,["guestmemory"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],[[["usize",15]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u64",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["u64",15]],[["box",3,["future"]],["pin",3,["box"]]]],[[["u64",15],["usize",15]],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"ImageType"],[4,"Error"],[4,"CompositeError"],[4,"ImagePartitionType"],[4,"GptError"],[3,"SingleFileDisk"],[3,"QcowFile"],[3,"PartitionInfo"],[8,"AsyncDisk"],[8,"DiskGetLen"],[8,"ToAsyncDisk"],[13,"DiskError"],[13,"DuplicatePartitionLabel"],[13,"GptError"],[13,"InvalidPath"],[13,"InvalidProto"],[13,"InvalidSpecification"],[13,"NoImageFiles"],[13,"OpenFile"],[13,"ReadSpecificationError"],[13,"UnalignedReadWrite"],[13,"UnknownVersion"],[13,"UnsupportedComponent"],[13,"WriteHeader"],[13,"WriteProto"],[13,"WriteZeroFiller"],[13,"BlockDeviceNew"],[13,"CreateAndroidSparseDisk"],[13,"CreateCompositeDisk"],[13,"CreateSingleFileDisk"],[13,"Fallocate"],[13,"Fsync"],[13,"HostFsType"],[13,"QcowError"],[13,"ReadingData"],[13,"ReadingHeader"],[13,"ReadToMem"],[13,"SeekingFile"],[13,"SettingFileSize"],[13,"WriteFromMem"],[13,"WriteFromVec"],[13,"WritingData"],[13,"InvalidDiskSize"],[13,"WritingData"]]},\
"downcast_rs":{"doc":"Build status Latest version Documentation","t":[8,8,10,10,14,10,10,10],"n":["Downcast","DowncastSync","as_any","as_any_mut","impl_downcast","into_any","into_any_arc","into_any_rc"],"q":["downcast_rs","","","","","","",""],"d":["Supports conversion to <code>Any</code>. Traits to be extended by …","Extends <code>Downcast</code> to support <code>Sync</code> traits that thus support …","Convert <code>&amp;Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This is …","Convert <code>&amp;mut Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This …","Adds downcasting support to traits that extend …","Convert <code>Box&lt;dyn Trait&gt;</code> (where <code>Trait: Downcast</code>) to …","Convert <code>Arc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Arc&lt;Any&gt;</code>. …","Convert <code>Rc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Rc&lt;Any&gt;</code>. …"],"i":[0,0,1,1,0,1,2,1],"f":[null,null,[[],["any",8]],[[],["any",8]],null,[[["box",3]],[["any",8],["box",3,["any"]]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]]],"p":[[8,"Downcast"],[8,"DowncastSync"]]},\
"enumn":{"doc":"github crates-io docs-rs","t":[24],"n":["N"],"q":["enumn"],"d":[""],"i":[0],"f":[null],"p":[]},\
"fastrand":{"doc":"A simple and fast random number generator.","t":[3,5,11,5,11,5,11,11,11,11,11,11,5,11,11,5,11,5,11,11,11,5,11,5,11,5,11,5,11,5,11,11,5,11,5,11,11,11,5,11,5,11,11,11,11,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,11],"n":["Rng","alphabetic","alphabetic","alphanumeric","alphanumeric","bool","bool","borrow","borrow_mut","clone","clone_into","default","digit","digit","eq","f32","f32","f64","f64","fmt","from","i128","i128","i16","i16","i32","i32","i64","i64","i8","i8","into","isize","isize","lowercase","lowercase","ne","new","seed","seed","shuffle","shuffle","to_owned","try_from","try_into","type_id","u128","u128","u16","u16","u32","u32","u64","u64","u8","u8","uppercase","uppercase","usize","usize","with_seed"],"q":["fastrand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A random number generator.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>bool</code>.","Generates a random <code>bool</code>.","","","Clones the generator by deterministically deriving a new …","","","Generates a random digit in the given <code>base</code>.","Generates a random digit in the given <code>base</code>.","","Generates a random <code>f32</code> in range <code>0..1</code>.","Generates a random <code>f32</code> in range <code>0..1</code>.","Generates a random <code>f64</code> in range <code>0..1</code>.","Generates a random <code>f64</code> in range <code>0..1</code>.","","","Generates a random <code>i128</code> in the given range.","Generates a random <code>i128</code> in the given range.","Generates a random <code>i16</code> in the given range.","Generates a random <code>i16</code> in the given range.","Generates a random <code>i32</code> in the given range.","Generates a random <code>i32</code> in the given range.","Generates a random <code>i64</code> in the given range.","Generates a random <code>i64</code> in the given range.","Generates a random <code>i8</code> in the given range.","Generates a random <code>i8</code> in the given range.","","Generates a random <code>isize</code> in the given range.","Generates a random <code>isize</code> in the given range.","Generates a random <code>char</code> in range a-z.","Generates a random <code>char</code> in range a-z.","","Creates a new random number generator.","Initializes the thread-local generator with the given seed.","Initializes this generator with the given seed.","Shuffles a slice randomly.","Shuffles a slice randomly.","","","","","Generates a random <code>u128</code> in the given range.","Generates a random <code>u128</code> in the given range.","Generates a random <code>u16</code> in the given range.","Generates a random <code>u16</code> in the given range.","Generates a random <code>u32</code> in the given range.","Generates a random <code>u32</code> in the given range.","Generates a random <code>u64</code> in the given range.","Generates a random <code>u64</code> in the given range.","Generates a random <code>u8</code> in the given range.","Generates a random <code>u8</code> in the given range.","Generates a random <code>char</code> in range A-Z.","Generates a random <code>char</code> in range A-Z.","Generates a random <code>usize</code> in the given range.","Generates a random <code>usize</code> in the given range.","Creates a new random number generator with the initial …"],"i":[0,0,1,0,1,0,1,1,1,1,1,1,0,1,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1],"f":[null,[[],["char",15]],[[],["char",15]],[[],["char",15]],[[],["char",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["rng",3]],[[]],[[],["rng",3]],[[["u32",15]],["char",15]],[[["u32",15]],["char",15]],[[["rng",3]],["bool",15]],[[],["f32",15]],[[],["f32",15]],[[],["f64",15]],[[],["f64",15]],[[["formatter",3]],["result",6]],[[]],[[],["i128",15]],[[],["i128",15]],[[],["i16",15]],[[],["i16",15]],[[],["i32",15]],[[],["i32",15]],[[],["i64",15]],[[],["i64",15]],[[],["i8",15]],[[],["i8",15]],[[]],[[],["isize",15]],[[],["isize",15]],[[],["char",15]],[[],["char",15]],[[["rng",3]],["bool",15]],[[],["rng",3]],[[["u64",15]]],[[["u64",15]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u128",15]],[[],["u128",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u8",15]],[[],["u8",15]],[[],["char",15]],[[],["char",15]],[[],["usize",15]],[[],["usize",15]],[[["u64",15]]]],"p":[[3,"Rng"]]},\
"fuse":{"doc":"","t":[16,13,13,13,4,13,13,13,13,8,13,8,6,3,13,8,11,11,11,11,0,11,11,11,11,11,10,11,11,10,0,11,0,11,11,11,11,11,11,11,10,0,10,12,12,12,12,12,12,12,12,12,3,13,13,3,16,8,13,3,8,4,16,16,4,4,13,13,13,8,8,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,12,11,11,12,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,10,12,12,12,12,12,12,12,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,5,11,11,11,11,12,12,12,12,12,12,12,18,18,18,18,18,18,13,3,3,3,18,13,3,13,3,3,18,18,18,18,18,13,3,13,13,3,13,3,18,18,18,18,13,13,3,3,18,18,3,17,17,18,18,17,17,17,17,17,17,17,17,13,3,3,13,3,13,3,3,3,13,3,13,17,18,13,3,13,13,3,3,18,18,18,17,3,13,3,3,13,3,13,13,13,3,3,3,3,18,17,17,3,17,13,3,13,3,3,13,13,3,3,18,18,18,18,18,13,3,13,3,18,3,3,3,4,3,13,3,3,3,17,4,13,3,3,3,13,3,18,17,18,18,13,13,3,3,18,18,17,17,17,18,17,13,3,13,13,13,13,3,13,13,3,3,13,13,13,3,3,13,13,18,18,18,18,18,13,3,3,13,3,3,13,13,13,3,13,3,13,13,18,18,13,18,18,17,17,17,13,3,3,18,18,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,5],"n":["ClosureWriter","DecodeMessage","EncodeMessage","EndpointSetup","Error","FlushMessage","InvalidCString","InvalidHeaderLength","InvalidXattrSize","Mapper","MissingParameter","Reader","Result","Server","TooManyIovecs","Writer","borrow","borrow","borrow_mut","borrow_mut","filesystem","fmt","fmt","from","from","handle_message","has_sufficient_buffer","into","into","map","mount","new","sys","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unmap","worker","write_at","0","0","0","0","0","0","0","1","1","Context","Count","Count","DirEntry","DirIter","DirectoryIterator","Done","Entry","FileSystem","GetxattrReply","Handle","Inode","IoctlReply","ListxattrReply","Names","Retry","Value","ZeroCopyReader","ZeroCopyWriter","access","attr","attr_timeout","batch_forget","bmap","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chromeos_tmpfile","clone","clone_into","copy_file_range","copy_to_end","copy_to_end","create","destroy","entry_timeout","fallocate","flush","fmt","forget","from","from","from","from","from","from","from","fsync","fsyncdir","generation","getattr","getlk","getxattr","gid","init","ino","inode","into","into","into","into","into","into","ioctl","link","listxattr","lookup","lseek","max_buffer_size","mkdir","mknod","name","next","notify_reply","offset","open","opendir","pid","poll","read","read_exact_to","read_to","readdir","readlink","release","releasedir","remove_mapping","removexattr","rename","rmdir","set_up_mapping","setattr","setlk","setlkw","setxattr","statfs","symlink","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","uid","unlink","write","write_all_from","write_from","0","0","0","input","output","0","0","AllowOther","BlockSize","DefaultPermissions","Extra","FD","GroupId","MaxRead","MountOption","RootMode","UserId","borrow","borrow_mut","fmt","from","into","mount","to_string","try_from","try_into","type_id","0","0","0","0","0","0","0","ASYNC_DIO","ASYNC_READ","ATIME","ATIME_NOW","ATOMIC_O_TRUNC","AUTO_INVAL_DATA","Access","AccessIn","Attr","AttrOut","BIG_WRITES","BatchForget","BatchForgetIn","Bmap","BmapIn","BmapOut","CACHE_DIR","CACHE_SYMLINKS","COMPAT","COMPAT_X32","CTIME","ChromeOsTmpfile","ChromeOsTmpfileIn","CodeMax","CopyFileRange","CopyFileRangeIn","Create","CreateIn","DIR","DIRECT_IO","DONT_MASK","DO_READDIRPLUS","Delete","Destroy","Dirent","Direntplus","EXPLICIT_INVAL_DATA","EXPORT_SUPPORT","EntryOut","FATTR_FH","FATTR_LOCKOWNER","FILE_OPS","FLOCK_LOCKS","FUSE_COMPAT_22_INIT_OUT_SIZE","FUSE_COMPAT_ATTR_OUT_SIZE","FUSE_COMPAT_ENTRY_OUT_SIZE","FUSE_COMPAT_INIT_OUT_SIZE","FUSE_COMPAT_MKNOD_IN_SIZE","FUSE_COMPAT_STATFS_SIZE","FUSE_COMPAT_WRITE_IN_SIZE","FUSE_MIN_READ_BUFFER","Fallocate","FallocateIn","FileLock","Flush","FlushIn","Forget","ForgetIn","ForgetOne","FsOptions","Fsync","FsyncIn","Fsyncdir","GETATTR_FH","GID","Getattr","GetattrIn","Getlk","Getxattr","GetxattrIn","GetxattrOut","HANDLE_KILLPRIV","HAS_IOCTL_DIR","IOCTL_32BIT","IOCTL_MAX_IOV","InHeader","Init","InitIn","InitOut","Interrupt","InterruptIn","InvalEntry","InvalInode","Ioctl","IoctlFlags","IoctlIn","IoctlIovec","IoctlOut","KEEP_CACHE","KERNEL_MINOR_VERSION","KERNEL_VERSION","Kstatfs","LK_FLOCK","Link","LinkIn","Listxattr","LkIn","LkOut","Lookup","Lseek","LseekIn","LseekOut","MAP_ALIGNMENT","MAX_PAGES","MODE","MTIME","MTIME_NOW","Mkdir","MkdirIn","Mknod","MknodIn","NONSEEKABLE","NotifyDeleteOut","NotifyInvalEntryOut","NotifyInvalInodeOut","NotifyOpcode","NotifyPollWakeupOut","NotifyReply","NotifyRetrieveIn","NotifyStoreOut","Notify_Retrieve_Out","OLDEST_SUPPORTED_KERNEL_MINOR_VERSION","Opcode","Open","OpenIn","OpenOptions","OpenOut","Opendir","OutHeader","PARALLEL_DIROPS","POLL_SCHEDULE_NOTIFY","POSIX_ACL","POSIX_LOCKS","Poll","Poll","PollIn","PollOut","READ","READDIRPLUS_AUTO","READ_LOCKOWNER","RELEASE_FLOCK_UNLOCK","RELEASE_FLUSH","RETRY","ROOT_ID","Read","ReadIn","Readdir","Readdirplus","Readlink","Release","ReleaseIn","Releasedir","RemoveMapping","RemoveMappingIn","RemoveMappingOne","Removexattr","Rename","Rename2","Rename2In","RenameIn","Retrieve","Rmdir","SIZE","SPLICE_MOVE","SPLICE_READ","SPLICE_WRITE","STREAM","SetUpMapping","SetUpMappingFlags","SetUpMappingIn","Setattr","SetattrIn","SetattrValid","Setlk","Setlkw","Setxattr","SetxattrIn","Statfs","StatfsOut","Store","Symlink","UID","UNRESTRICTED","Unlink","WRITE","WRITEBACK_CACHE","WRITE_CACHE","WRITE_KILL_PRIV","WRITE_LOCKOWNER","Write","WriteIn","WriteOut","ZERO_MESSAGE_OPEN","ZERO_MESSAGE_OPENDIR","all","all","all","all","all","arg","atime","atime","atimensec","atimensec","attr","attr","attr_valid","attr_valid","attr_valid_nsec","attr_valid_nsec","base","bavail","bfree","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blksize","block","block","blocks","blocks","blocksize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsize","child","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","congestion_threshold","contains","contains","contains","contains","contains","count","count","ctime","ctime","ctimensec","ctimensec","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","difference","difference","difference","difference","difference","dirent","dummy","dummy","dummy","dummy1","dummy2","dummy3","dummy4","empty","empty","empty","empty","empty","end","entry_out","entry_valid","entry_valid_nsec","eq","eq","eq","eq","eq","error","events","extend","extend","extend","extend","extend","ffree","fh","fh","fh","fh","fh","fh","fh","fh","fh","fh","fh","fh","fh","fh","fh_dst","fh_src","files","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foffset","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","frsize","fsync_flags","generation","gid","gid","gid","hash","hash","hash","hash","hash","in_iovs","in_size","ino","ino","ino","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","kh","kh","len","len","len","len","len","len","len","length","lk","lk","lk_flags","lock_owner","lock_owner","lock_owner","lock_owner","lock_owner","major","major","map_alignment","mask","max_background","max_pages","max_readahead","max_readahead","max_write","minor","minor","mode","mode","mode","mode","mode","mode","mode","moffset","moffset","mtime","mtime","mtimensec","mtimensec","n","n","namelen","namelen","namelen","namelen","ne","ne","ne","ne","ne","newdir","newdir","nlink","nlookup","nlookup","nodeid","nodeid","nodeid","nodeid","nodeid","nodeid_dst","not","not","not","not","not","notify_unique","off","off","off_dst","off_src","offset","offset","offset","offset","offset","offset","offset","offset","oldnodeid","opcode","open_flags","out_iovs","out_size","owner","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pid","pid","rdev","rdev","read_flags","release_flags","remove","remove","remove","remove","remove","result","revents","set","set","set","set","set","size","size","size","size","size","size","size","size","size","size","size","spare","st","start","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","time_gran","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","uid","uid","umask","umask","umask","umask","union","union","union","union","union","unique","unique","unique","unused","unused","unused","unused4","unused5","valid","whence","write_flags","start_message_loop"],"q":["fuse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fuse::Error","","","","","","","","","fuse::filesystem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fuse::filesystem::GetxattrReply","","fuse::filesystem::IoctlReply","","","fuse::filesystem::ListxattrReply","","fuse::mount","","","","","","","","","","","","","","","","","","","","fuse::mount::MountOption","","","","","","","fuse::sysfuse::worker"],"d":["The type passed in to the closure in <code>write_at</code>. For most …","A request is missing readable descriptors. Failed to …","Failed to encode protocol messages.","Failed to set up FUSE endpoint to talk with.","Errors that may occur during the creation or operation of …","Failed to flush protocol messages.","A C string parameter is invalid.","The <code>len</code> field of the header is too small.","The <code>size</code> field of the <code>SetxattrIn</code> message does not match …","A trait for memory mapping for DAX.","One or more parameters are missing.","A trait for reading from the underlying FUSE endpoint.","","","Requested too many <code>iovec</code>s for an <code>ioctl</code> retry.","A trait for writing to the underlying FUSE endpoint. The …","","","","","","","","","","","Checks if the writer can still accept certain amount of …","","","Maps <code>size</code> bytes starting at <code>file_offset</code> bytes from within …","","","","","","","","","","","Unmaps <code>size</code> bytes at <code>offset</code> bytes from the start of the …","","Allows a closure to generate and write data at the current …","","","","","","","","","","Additional context associated with requests.","The size of the buffer needed to hold the value of the …","This size of the buffer needed to hold the full list of …","Represents information about an entry in a directory.","An iterator over the entries of a directory. See the …","A trait for iterating over the contents of a directory. …","Indicates that the ioctl was processed.","Information about a path in the filesystem.","The main trait that connects a file system with a …","A reply to a <code>getxattr</code> method call.","Represents a file or directory that is open for …","Represents a location in the filesystem tree and can be …","A reply to an <code>ioctl</code> method call.","A reply to a <code>listxattr</code> method call.","A buffer containing a nul-separated list of the names of …","Indicates that the ioctl should be retried. This is only a …","The value of the requested extended attribute. This can be …","A trait for directly copying data from the fuse transport …","A trait for directly copying data from a <code>File</code> into the …","Check file access permissions.","Inode attributes. Even if <code>attr_timeout</code> is zero, <code>attr</code> must …","How long the values in <code>attr</code> should be considered valid. If …","Forget about multiple inodes.","TODO: support this","","","","","","","","","","","","","Create an unnamed temporary file.","","","Copy a range of data from one file to another","Copies all remaining bytes from <code>self</code> into <code>f</code> at offset <code>off</code>. …","Copies all remaining bytes from <code>f</code> at offset <code>off</code> into <code>self</code>. …","Create and open a file.","Clean up the file system.","How long the name associated with this <code>Entry</code> should be …","Allocate requested space for file data.","Flush the contents of a file.","","Forget about an inode.","","","","","","","","Synchronize file contents.","Synchronize the contents of a directory.","The generation number for this <code>Entry</code>. Typically used for …","Get attributes for a file / directory.","TODO: support this","Get an extended attribute.","The group ID of the calling process.","Initialize the file system.","The inode number for this entry. This does NOT have to be …","An <code>Inode</code> that uniquely identifies this path. During <code>lookup</code>…","","","","","","","Perform an ioctl on a file or directory.","Create a hard link.","List extended attribute names.","Look up a directory entry by name and get its attributes.","TODO: support this","Maximum size of the buffer that the filesystem can …","Create a directory.","Create a file node.","The name of this directory entry. There are no …","Returns the next entry in the directory or <code>None</code> if there …","TODO: support this","Any non-zero value that the kernel can use to identify the …","Open a file.","Open a directory for reading.","The thread group ID of the calling process.","TODO: support this","Read data from a file.","Copies exactly <code>count</code> bytes of data from <code>self</code> into <code>f</code> at …","Copies at most <code>count</code> bytes from <code>self</code> directly into <code>f</code> at …","Read a directory.","Read a symbolic link.","Release an open file.","Release an open directory.","Remove memory mappings.","Remove an extended attribute.","Rename a file / directory.","Remove a directory.","Set up memory mappings.","Set attributes for a file / directory.","TODO: support this","TODO: support this","Set an extended attribute.","Get information about the file system.","Create a symbolic link.","","","","","","","","","","","","","","The type of this directory entry. Valid values are any of …","","","","","","","The user ID of the calling process.","Remove a file.","Write data to a file.","Copies exactly <code>count</code> bytes of data from <code>f</code> at offset <code>off</code> …","Copies at most <code>count</code> bytes from <code>f</code> at offset <code>off</code> directly …","","","","Data that should be read by the kernel module and sent to …","Buffer space that should be prepared so that the server …","","","","","","","","","","Mount options to pass to mount(2) for a FUSE filesystem. …","","","","","","","","Initiates a FUSE mount at <code>mountpoint</code> directory with <code>flags</code> …","","","","","","","","","","","","Indicates that the filesystem supports asynchronous direct …","Indicates that the filesystem supports asynchronous read …","","","Indicates that the filesystem supports the <code>O_TRUNC</code> open …","Traditionally, while a file is open the FUSE kernel module …","","","","","FileSystem can handle write size larger than 4kB.","","","","","","","Indicates that the kernel may cache responses to <code>readlink</code> …","32bit compat ioctl on 64bit machine","32-bit compat ioctl on 64-bit machine with 64-bit time_t.","","","","","","","","","Is a directory","","Indicates that the kernel should not apply the umask to …","Indicates that the filesystem supports readdirplus.","","","","","Indicates support for invalidating cached pages only on …","Indicates that the filesystem supports lookups of “.” …","","","","Kernel sends file handle for fstat, etc… (not yet …","If set, then calls to <code>flock</code> will be emulated using POSIX …","","","","","","","","The read buffer is required to be at least 8k, but may be …","","","","","","","","","A bitfield passed in as a parameter to and returned from …","","","","","","","","","","","","Indicates that the file system is responsible for …","Indicates that the filesystem supports ioctl’s on …","32bit ioctl","Maximum of in_iovecs + out_iovecs","","","","","","","","","","","","Describes a region of memory in the address space of the …","","","Minor version number of this interface.","Version number of this interface.","","","","","","","","","","","","Indicates that the <code>map_alignment</code> field of the <code>InitOut</code> …","Indicates that the <code>max_pages</code> field of the <code>InitOut</code> struct …","","","","","","","","","","","","","","","","","","Oldest supported minor version of the fuse interface.","","","","Options controlling the behavior of files opened by the …","","","","Indicates support for parallel directory operations. If …","Request poll notify.","Indicates support for POSIX ACLs.","Indicates that the filesystem supports “remote” …","","","","","Create readable mapping.","Indicates that the filesystem supports adaptive …","","","","Retry with new iovecs","The ID of the inode corresponding to the root directory of …","","","","","","","","","","","","","","","","","","","","Indicates that the server should try to move pages instead …","Indicates that the server should try to use <code>splice(2)</code> when …","Indicates that the server should try to use <code>splice(2)</code> when …","","","","","","","","","","","","","","","","","Not restricted to well-formed ioctls, retry allowed","","Create writable mapping.","Indicates that writeback caching should be enabled. This …","Delayed write from page cache, file handle is guessed.","Kill the suid and sgid bits.","<code>lock_owner</code> field is valid.","","","","Indicates support for zero-message opens. If this flag is …","Indicates support for zero-message opens for directories. …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","The start address of the memory region. This must be in …","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flagseturns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flagsonvert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","The length of the memory region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-placeeturns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","Start the FUSE message handling loop. Returns when an …"],"i":[1,2,2,2,0,2,2,2,2,0,2,0,0,0,2,0,3,2,3,2,0,2,2,3,2,3,1,3,2,4,0,3,0,2,3,2,3,2,3,2,4,0,1,5,6,7,8,9,10,11,10,11,0,12,13,0,14,0,15,0,0,0,14,14,0,0,13,15,12,0,0,14,16,16,14,14,16,17,12,13,15,18,16,17,12,13,15,18,14,18,18,14,19,20,14,14,16,14,14,18,14,16,17,12,13,15,18,18,14,14,16,14,14,14,18,14,17,16,16,17,12,13,15,18,14,14,14,14,14,14,14,14,17,21,14,17,14,14,18,14,14,19,19,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,18,16,17,12,13,15,18,16,17,12,13,15,18,17,16,17,12,13,15,18,18,14,14,20,20,22,23,24,25,25,26,27,28,28,28,28,28,28,28,0,28,28,28,28,28,28,28,0,28,28,28,28,29,30,31,32,33,34,35,36,36,37,37,36,36,38,0,0,0,36,38,0,38,0,0,39,36,40,40,37,38,0,41,38,0,38,0,40,39,36,36,41,38,0,0,36,36,0,0,0,36,36,0,0,0,0,0,0,0,0,38,0,0,38,0,38,0,0,0,38,0,38,0,37,38,0,38,38,0,0,36,36,40,0,0,38,0,0,38,0,41,41,38,0,0,0,0,39,0,0,0,0,38,0,38,0,0,38,38,0,0,36,36,37,37,37,38,0,38,0,39,0,0,0,0,0,38,0,0,0,0,0,38,0,0,0,38,0,36,0,36,36,38,41,0,0,42,36,0,0,0,40,0,38,0,38,38,38,38,0,38,38,0,0,38,38,38,0,0,41,38,37,36,36,36,39,38,0,0,38,0,0,38,38,38,0,38,0,41,38,37,40,38,42,36,0,0,0,38,0,0,36,36,37,39,36,40,42,43,44,45,44,45,46,47,46,47,46,47,48,49,49,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,44,50,51,44,49,50,37,39,36,40,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,37,39,36,40,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,49,93,37,39,36,40,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,37,39,36,40,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,43,37,39,36,40,42,37,39,36,40,42,80,37,39,36,40,42,55,101,44,45,44,45,44,49,52,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,37,39,36,40,42,90,55,56,47,96,96,96,96,37,39,36,40,42,52,90,46,46,37,39,36,40,42,88,83,37,39,36,40,42,49,56,45,65,66,67,68,69,72,76,43,83,86,97,100,99,99,49,56,61,63,64,66,68,69,73,79,80,43,82,83,99,100,37,37,37,37,37,39,39,39,39,39,36,36,36,36,36,40,40,40,40,40,42,42,42,42,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,100,37,39,36,40,42,44,44,49,49,52,38,41,46,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,49,72,46,44,45,87,37,39,36,40,42,82,43,44,89,91,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,37,39,36,40,42,37,39,36,40,42,83,85,48,87,88,91,99,100,102,86,76,77,76,45,66,67,68,69,79,80,80,78,80,80,79,80,80,79,80,44,57,58,59,45,64,86,100,102,44,45,44,45,38,41,49,89,92,93,37,39,36,40,42,60,61,44,53,54,46,54,87,94,95,99,37,39,36,40,42,95,89,91,99,99,68,69,86,94,95,96,97,98,62,87,65,82,43,76,44,49,57,61,45,64,65,67,68,69,70,72,74,75,76,78,50,84,86,87,92,93,94,95,97,92,93,37,39,36,40,42,52,87,44,57,68,66,37,39,36,40,42,82,84,37,39,36,40,42,44,45,68,69,70,73,74,75,94,95,96,49,71,52,37,39,36,40,42,37,39,36,40,42,37,39,36,40,42,80,37,39,36,40,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,37,39,36,40,42,37,39,36,40,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,37,39,36,40,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,52,89,37,39,36,40,42,44,49,52,38,41,46,53,54,55,56,47,57,58,59,60,61,62,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,50,51,43,48,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,44,45,87,57,58,59,64,37,39,36,40,42,81,87,88,63,67,80,45,45,45,97,69,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["mapper",8],["zerocopyreader",8],["writer",8],["zerocopywriter",8],["reader",8]],[["usize",15],["result",6,["usize"]]]],[[["u32",15]],["bool",15]],[[]],[[]],[[["u64",15],["usize",15],["asrawfd",8],["u32",15]],["result",6]],null,[[],["server",3]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15]],["result",6]],null,[[["usize",15]],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["context",3],["u32",15]],["result",6]],null,null,[[["context",3],["vec",3]]],[[],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3],["u32",15]],[["result",6,["entry"]],["entry",3]]],[[],["context",3]],[[]],[[["context",3],["u64",15]],[["usize",15],["result",6,["usize"]]]],[[["u64",15],["file",3]],[["usize",15],["result",6,["usize"]]]],[[["u64",15],["file",3]],[["usize",15],["result",6,["usize"]]]],[[["cstr",3],["u32",15],["context",3]],["result",6]],[[]],null,[[["u64",15],["u32",15],["context",3]],["result",6]],[[["context",3],["u64",15]],["result",6]],[[["formatter",3]],["result",6]],[[["context",3],["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[["inheader",3]]],[[]],[[["context",3],["bool",15]],["result",6]],[[["context",3],["bool",15]],["result",6]],null,[[["context",3],["option",4]],["result",6]],[[],["result",6]],[[["context",3],["cstr",3],["u32",15]],[["getxattrreply",4],["result",6,["getxattrreply"]]]],null,[[["fsoptions",3]],[["result",6,["fsoptions"]],["fsoptions",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15],["u32",15],["context",3],["ioctlflags",3],["read",8]],[["result",6,["ioctlreply"]],["ioctlreply",4]]],[[["context",3],["cstr",3]],[["result",6,["entry"]],["entry",3]]],[[["context",3],["u32",15]],[["listxattrreply",4],["result",6,["listxattrreply"]]]],[[["context",3],["cstr",3]],[["result",6,["entry"]],["entry",3]]],[[],["result",6]],[[],["u32",15]],[[["cstr",3],["u32",15],["context",3]],[["result",6,["entry"]],["entry",3]]],[[["cstr",3],["u32",15],["context",3]],[["result",6,["entry"]],["entry",3]]],null,[[],[["direntry",3],["option",4,["direntry"]]]],[[],["result",6]],null,[[["context",3],["u32",15]],["result",6]],[[["context",3],["u32",15]],["result",6]],null,[[],["result",6]],[[["u64",15],["write",8],["u32",15],["option",4,["u64"]],["context",3],["zerocopywriter",8]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["u64",15],["file",3]],["result",6]],[[["usize",15],["u64",15],["file",3]],[["usize",15],["result",6,["usize"]]]],[[["context",3],["u64",15],["u32",15]],["result",6]],[[["context",3]],[["vec",3,["u8"]],["result",6,["vec"]]]],[[["u64",15],["u32",15],["bool",15],["context",3],["option",4,["u64"]]],["result",6]],[[["context",3],["u32",15]],["result",6]],[[["mapper",8]],["result",6]],[[["context",3],["cstr",3]],["result",6]],[[["context",3],["cstr",3],["u32",15]],["result",6]],[[["context",3],["cstr",3]],["result",6]],[[["u64",15],["usize",15],["u32",15],["mapper",8],["context",3]],["result",6]],[[["option",4],["context",3],["setattrvalid",3],["stat64",3]],["result",6]],[[],["result",6]],[[],["result",6]],[[["cstr",3],["u32",15],["context",3]],["result",6]],[[["context",3]],[["result",6,["statvfs64"]],["statvfs64",3]]],[[["context",3],["cstr",3]],[["result",6,["entry"]],["entry",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["context",3],["cstr",3]],["result",6]],[[["u64",15],["option",4,["u64"]],["context",3],["read",8],["u32",15],["bool",15],["zerocopyreader",8]],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["u64",15],["file",3]],["result",6]],[[["usize",15],["u64",15],["file",3]],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["c_ulong",6],["asref",8,["osstr"]],["osstr",3],["str",15]],[["result",4,["error"]],["error",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["setattrvalid",3]]],[[["openoptions",3]]],[[["fsoptions",3]]],[[["ioctlflags",3]]],[[["setupmappingflags",3]]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["setattrvalid",3]],[[],["openoptions",3]],[[],["fsoptions",3]],[[],["ioctlflags",3]],[[],["setupmappingflags",3]],[[],["attr",3]],[[],["kstatfs",3]],[[],["filelock",3]],[[],["opcode",4]],[[],["notifyopcode",4]],[[],["entryout",3]],[[],["forgetin",3]],[[],["forgetone",3]],[[],["batchforgetin",3]],[[],["getattrin",3]],[[],["attrout",3]],[[],["mknodin",3]],[[],["mkdirin",3]],[[],["chromeostmpfilein",3]],[[],["renamein",3]],[[],["rename2in",3]],[[],["linkin",3]],[[],["setattrin",3]],[[],["openin",3]],[[],["createin",3]],[[],["openout",3]],[[],["releasein",3]],[[],["flushin",3]],[[],["readin",3]],[[],["writein",3]],[[],["writeout",3]],[[],["statfsout",3]],[[],["fsyncin",3]],[[],["setxattrin",3]],[[],["getxattrin",3]],[[],["getxattrout",3]],[[],["lkin",3]],[[],["lkout",3]],[[],["accessin",3]],[[],["initin",3]],[[],["initout",3]],[[],["interruptin",3]],[[],["bmapin",3]],[[],["bmapout",3]],[[],["ioctlin",3]],[[],["ioctliovec",3]],[[],["ioctlout",3]],[[],["pollin",3]],[[],["pollout",3]],[[],["notifypollwakeupout",3]],[[],["fallocatein",3]],[[],["inheader",3]],[[],["outheader",3]],[[],["dirent",3]],[[],["direntplus",3]],[[],["notifyinvalinodeout",3]],[[],["notifyinvalentryout",3]],[[],["notifydeleteout",3]],[[],["notifystoreout",3]],[[],["notify_retrieve_out",3]],[[],["notifyretrievein",3]],[[],["lseekin",3]],[[],["lseekout",3]],[[],["copyfilerangein",3]],[[],["setupmappingin",3]],[[],["removemappingin",3]],[[],["removemappingone",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["setattrvalid",3]],["ordering",4]],[[["openoptions",3]],["ordering",4]],[[["fsoptions",3]],["ordering",4]],[[["ioctlflags",3]],["ordering",4]],[[["setupmappingflags",3]],["ordering",4]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,[[],["attr",3]],[[],["kstatfs",3]],[[],["filelock",3]],[[],["entryout",3]],[[],["forgetin",3]],[[],["forgetone",3]],[[],["batchforgetin",3]],[[],["getattrin",3]],[[],["attrout",3]],[[],["mknodin",3]],[[],["mkdirin",3]],[[],["chromeostmpfilein",3]],[[],["renamein",3]],[[],["rename2in",3]],[[],["linkin",3]],[[],["setattrin",3]],[[],["openin",3]],[[],["createin",3]],[[],["openout",3]],[[],["releasein",3]],[[],["flushin",3]],[[],["readin",3]],[[],["writein",3]],[[],["writeout",3]],[[],["statfsout",3]],[[],["fsyncin",3]],[[],["setxattrin",3]],[[],["getxattrin",3]],[[],["getxattrout",3]],[[],["lkin",3]],[[],["lkout",3]],[[],["accessin",3]],[[],["initin",3]],[[],["initout",3]],[[],["interruptin",3]],[[],["bmapin",3]],[[],["bmapout",3]],[[],["ioctlin",3]],[[],["ioctliovec",3]],[[],["ioctlout",3]],[[],["pollin",3]],[[],["pollout",3]],[[],["notifypollwakeupout",3]],[[],["fallocatein",3]],[[],["inheader",3]],[[],["outheader",3]],[[],["dirent",3]],[[],["direntplus",3]],[[],["notifyinvalinodeout",3]],[[],["notifyinvalentryout",3]],[[],["notifydeleteout",3]],[[],["notifystoreout",3]],[[],["notify_retrieve_out",3]],[[],["notifyretrievein",3]],[[],["lseekin",3]],[[],["lseekout",3]],[[],["copyfilerangein",3]],[[],["setupmappingin",3]],[[],["removemappingin",3]],[[],["removemappingone",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["setattrvalid",3]],["bool",15]],[[["openoptions",3]],["bool",15]],[[["fsoptions",3]],["bool",15]],[[["ioctlflags",3]],["bool",15]],[[["setupmappingflags",3]],["bool",15]],null,null,[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[["stat64",3]],["attr",3]],[[]],[[["statvfs64",3]]],[[]],[[]],[[]],[[]],[[]],[[["entry",3]],["entryout",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],null,null,null,null,[[["setattrvalid",3]],["bool",15]],[[["openoptions",3]],["bool",15]],[[["fsoptions",3]],["bool",15]],[[["ioctlflags",3]],["bool",15]],[[["setupmappingflags",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["setattrvalid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["openoptions",3]],[["option",4,["ordering"]],["ordering",4]]],[[["fsoptions",3]],[["option",4,["ordering"]],["ordering",4]]],[[["ioctlflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["setupmappingflags",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["filesystem",8],["file",3],["u32",15],["sync",8]],["result",6]]],"p":[[8,"Writer"],[4,"Error"],[3,"Server"],[8,"Mapper"],[13,"DecodeMessage"],[13,"EncodeMessage"],[13,"EndpointSetup"],[13,"FlushMessage"],[13,"InvalidCString"],[13,"InvalidXattrSize"],[13,"TooManyIovecs"],[4,"GetxattrReply"],[4,"ListxattrReply"],[8,"FileSystem"],[4,"IoctlReply"],[3,"Entry"],[3,"DirEntry"],[3,"Context"],[8,"ZeroCopyReader"],[8,"ZeroCopyWriter"],[8,"DirectoryIterator"],[13,"Value"],[13,"Count"],[13,"Done"],[13,"Retry"],[13,"Names"],[13,"Count"],[4,"MountOption"],[13,"FD"],[13,"RootMode"],[13,"UserId"],[13,"GroupId"],[13,"MaxRead"],[13,"BlockSize"],[13,"Extra"],[3,"FsOptions"],[3,"SetattrValid"],[4,"Opcode"],[3,"OpenOptions"],[3,"IoctlFlags"],[4,"NotifyOpcode"],[3,"SetUpMappingFlags"],[3,"IoctlIn"],[3,"Attr"],[3,"SetattrIn"],[3,"EntryOut"],[3,"AttrOut"],[3,"IoctlIovec"],[3,"Kstatfs"],[3,"BmapIn"],[3,"BmapOut"],[3,"FileLock"],[3,"ForgetIn"],[3,"ForgetOne"],[3,"BatchForgetIn"],[3,"GetattrIn"],[3,"MknodIn"],[3,"MkdirIn"],[3,"ChromeOsTmpfileIn"],[3,"RenameIn"],[3,"Rename2In"],[3,"LinkIn"],[3,"OpenIn"],[3,"CreateIn"],[3,"OpenOut"],[3,"ReleaseIn"],[3,"FlushIn"],[3,"ReadIn"],[3,"WriteIn"],[3,"WriteOut"],[3,"StatfsOut"],[3,"FsyncIn"],[3,"SetxattrIn"],[3,"GetxattrIn"],[3,"GetxattrOut"],[3,"LkIn"],[3,"LkOut"],[3,"AccessIn"],[3,"InitIn"],[3,"InitOut"],[3,"InterruptIn"],[3,"IoctlOut"],[3,"PollIn"],[3,"PollOut"],[3,"NotifyPollWakeupOut"],[3,"FallocateIn"],[3,"InHeader"],[3,"OutHeader"],[3,"Dirent"],[3,"Direntplus"],[3,"NotifyInvalInodeOut"],[3,"NotifyInvalEntryOut"],[3,"NotifyDeleteOut"],[3,"NotifyStoreOut"],[3,"Notify_Retrieve_Out"],[3,"NotifyRetrieveIn"],[3,"LseekIn"],[3,"LseekOut"],[3,"CopyFileRangeIn"],[3,"SetUpMappingIn"],[3,"RemoveMappingIn"],[3,"RemoveMappingOne"]]},\
"futures":{"doc":"Abstractions for asynchronous programming.","tn":["future","io","join","lock","never","pending","pin_mut","poll","prelude","ready","select","select_biased","sink","stream","stream_select","task","try_join","mpsc","oneshot","Receiver","SendError","Sender","TryRecvError","TrySendError","UnboundedReceiver","UnboundedSender","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","close","close_channel","close_channel","disconnect","disconnect","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash_receiver","hash_receiver","into","into","into","into","into","into","into","into_inner","into_send_error","is_closed","is_closed","is_connected_to","is_connected_to","is_disconnected","is_disconnected","is_full","is_full","is_terminated","is_terminated","ne","ne","poll_close","poll_close","poll_flush","poll_flush","poll_next","poll_next","poll_ready","poll_ready","poll_ready","poll_ready","same_receiver","same_receiver","start_send","start_send","start_send","start_send","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_next","try_poll_next","try_poll_next","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded","unbounded_send","Canceled","Cancellation","Receiver","Sender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancellation","channel","clone","clone_into","close","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_future","into_future","is_canceled","is_connected_to","is_terminated","poll","poll","poll_canceled","send","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll","try_recv","type_id","type_id","type_id","type_id","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxFuture","CatchUnwind","Done","Done","Either","ErrInto","Error","Flatten","FlattenSink","FlattenStream","Fuse","FusedFuture","Future","Future","Future","FutureExt","FutureObj","Gone","Gone","Inspect","InspectErr","InspectOk","IntoFuture","IntoStream","Join","Join3","Join4","Join5","JoinAll","Lazy","Left","LocalBoxFuture","LocalFutureObj","Map","MapErr","MapInto","MapOk","MapOkOrElse","MaybeDone","NeverError","Ok","OkInto","OptionFuture","OrElse","Output","Pending","PollFn","PollImmediate","Ready","Remote","RemoteHandle","Right","Select","SelectAll","SelectOk","Shared","Then","TryFlatten","TryFlattenStream","TryFuture","TryFutureExt","TryJoin","TryJoin3","TryJoin4","TryJoin5","TryJoinAll","TryMaybeDone","TrySelect","UnitError","UnsafeFutureObj","UnwrapOrElse","WeakShared","abortable","and_then","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed_local","catch_unwind","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consume","default","downgrade","drop","drop","drop","err","err_into","factor_first","factor_second","flatten","flatten_sink","flatten_stream","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","fuse","inspect","inspect_err","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_raw","into_raw","into_stream","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","join","join3","join4","join5","join_all","lazy","left_future","map","map_err","map_into","map_ok","map_ok_or_else","maybe_done","never_error","now_or_never","ok","ok_into","or_else","output_mut","output_mut","peek","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_read","poll_read_vectored","poll_ready","poll_ready","poll_ready","poll_ready","poll_seek","poll_unpin","poll_write","poll_write_vectored","ready","remote_handle","right_future","select","select_all","select_ok","shared","size_hint","size_hint","size_hint","size_hint","size_hint","start_send","start_send","start_send","start_send","strong_count","take_output","take_output","terminated","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_flatten","try_flatten_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_join","try_join3","try_join4","try_join5","try_join_all","try_maybe_done","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_unpin","try_select","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_error","unwrap_or_else","upgrade","weak_count","0","0","0","0","0","0","0","1","AddrInUse","AddrNotAvailable","AllowStdIo","AlreadyExists","ArgumentListTooLong","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","BrokenPipe","BufReader","BufWriter","Chain","Close","ConnectionAborted","ConnectionRefused","ConnectionReset","Copy","CopyBuf","CrossesDevices","Current","Cursor","Deadlock","DirectoryNotEmpty","Empty","End","Error","ErrorKind","ExecutableFileBusy","FileTooLarge","FilenameTooLong","FilesystemLoop","FilesystemQuotaExceeded","FillBuf","Flush","HostUnreachable","Interrupted","IntoSink","InvalidData","InvalidInput","IoSlice","IoSliceMut","IsADirectory","LineWriter","Lines","NetworkDown","NetworkUnreachable","NotADirectory","NotConnected","NotFound","NotSeekable","Other","OutOfMemory","PermissionDenied","Read","ReadExact","ReadHalf","ReadLine","ReadOnlyFilesystem","ReadToEnd","ReadToString","ReadUntil","ReadVectored","Repeat","ResourceBusy","Result","ReuniteError","SeeKRelative","Seek","SeekFrom","Sink","StaleNetworkFileHandle","Start","StorageFull","Take","TimedOut","TooManyLinks","UnexpectedEof","Unsupported","Window","WouldBlock","Write","WriteAll","WriteHalf","WriteVectored","WriteZero","advance","advance","advance_slices","advance_slices","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","cause","chain","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","consume","consume","consume","consume","consume","consume","consume","consume","consume","consume_unpin","copy","copy_buf","default","deref","deref","deref_mut","description","empty","end","eq","eq","eq","fill_buf","fill_buf","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_os_error","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_sink","kind","last_os_error","limit","lines","ne","ne","new","new","new","new","new","new","new","new","new","partial_cmp","partial_cmp","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_next","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_ready","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek_relative","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","position","raw_os_error","read","read","read_exact","read_exact","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","read_vectored","read_vectored","repeat","reunite","reunite","seek","seek","seek_relative","set","set_limit","set_position","sink","source","split","start","start_send","stream_position","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity","with_capacity","write","write","write_all","write_all","write_fmt","write_vectored","write_vectored","0","0","0","MappedMutexGuard","Mutex","MutexGuard","MutexLockFuture","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mut","into","into","into","into","into_future","into_inner","is_terminated","lock","map","map","new","poll","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","Never","AsyncBufRead","AsyncRead","AsyncSeek","AsyncWrite","Error","Error","Error","Future","Item","Ok","Ok","Output","Sink","Stream","TryFuture","TryStream","consume","future","poll","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_next","poll_read","poll_read_vectored","poll_ready","poll_seek","poll_write","poll_write_vectored","sink","size_hint","start_send","stream","try_poll","try_poll_next","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxFuture","CatchUnwind","Done","Done","Either","ErrInto","Error","Flatten","FlattenSink","FlattenStream","Fuse","FusedFuture","Future","Future","Future","FutureExt","FutureObj","Gone","Gone","Inspect","InspectErr","InspectOk","IntoFuture","IntoStream","Join","Join3","Join4","Join5","JoinAll","Lazy","Left","LocalBoxFuture","LocalFutureObj","Map","MapErr","MapInto","MapOk","MapOkOrElse","MaybeDone","NeverError","Ok","OkInto","OptionFuture","OrElse","Output","Pending","PollFn","PollImmediate","Ready","Remote","RemoteHandle","Right","Select","SelectAll","SelectOk","Shared","Then","TryFlatten","TryFlattenStream","TryFuture","TryFutureExt","TryJoin","TryJoin3","TryJoin4","TryJoin5","TryJoinAll","TryMaybeDone","TrySelect","UnitError","UnsafeFutureObj","UnwrapOrElse","WeakShared","abortable","and_then","boxed","boxed_local","catch_unwind","drop","err","err_into","flatten","flatten_sink","flatten_stream","fuse","inspect","inspect_err","inspect_ok","into_future","into_raw","into_stream","is_terminated","join","join3","join4","join5","join_all","lazy","left_future","map","map_err","map_into","map_ok","map_ok_or_else","maybe_done","never_error","now_or_never","ok","ok_into","or_else","pending","poll","poll_fn","poll_immediate","poll_unpin","ready","remote_handle","right_future","select","select_all","select_ok","shared","then","try_flatten","try_flatten_stream","try_join","try_join3","try_join4","try_join5","try_join_all","try_maybe_done","try_poll","try_poll_unpin","try_select","unit_error","unwrap_or_else","0","0","0","0","0","0","Buffer","Close","Drain","Error","Fanout","Feed","Flush","Send","SendAll","Sink","SinkErrInto","SinkExt","SinkMapErr","Unfold","With","WithFlatMap","buffer","close","drain","fanout","feed","flush","left_sink","poll_close","poll_close_unpin","poll_flush","poll_flush_unpin","poll_ready","poll_ready_unpin","right_sink","send","send_all","sink_err_into","sink_map_err","start_send","start_send_unpin","unfold","with","with_flat_map","0","0","1","1","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxStream","BufferUnordered","Buffered","CatchUnwind","Chain","Chunks","Collect","Concat","Cycle","Empty","Enumerate","ErrInto","Error","Filter","FilterMap","FlatMap","Flatten","Fold","ForEach","ForEachConcurrent","Forward","Fuse","FusedStream","FuturesOrdered","FuturesUnordered","Inspect","InspectErr","InspectOk","IntoAsyncRead","IntoStream","Item","Iter","Left","LocalBoxStream","Map","MapErr","MapOk","Next","NextIf","NextIfEq","Ok","Once","OrElse","Peek","PeekMut","Peekable","Pending","PollFn","PollImmediate","PollNext","ReadyChunks","Repeat","RepeatWith","ReuniteError","Right","Scan","Select","SelectAll","SelectNextSome","SelectWithStrategy","Skip","SkipWhile","SplitSink","SplitStream","Stream","StreamExt","StreamFuture","Take","TakeUntil","TakeWhile","Then","TryBufferUnordered","TryBuffered","TryChunks","TryChunksError","TryCollect","TryConcat","TryFilter","TryFilterMap","TryFlatten","TryFold","TryForEach","TryForEachConcurrent","TryNext","TrySkipWhile","TryStream","TryStreamExt","TryTakeWhile","TryUnfold","Unfold","Unzip","Zip","abortable","all","and_then","any","boxed","boxed_local","buffer_unordered","buffered","by_ref","catch_unwind","chain","chunks","collect","concat","count","cycle","empty","enumerate","err_into","filter","filter_map","flat_map","flatten","fold","for_each","for_each_concurrent","forward","fuse","futures_unordered","inspect","inspect_err","inspect_ok","into_async_read","into_future","into_stream","is_terminated","iter","left_stream","map","map_err","map_ok","next","once","or_else","peekable","pending","poll_fn","poll_immediate","poll_next","poll_next_unpin","ready_chunks","repeat","repeat_with","right_stream","scan","select","select_all","select_all","select_next_some","select_with_strategy","size_hint","skip","skip_while","split","take","take_until","take_while","then","try_buffer_unordered","try_buffered","try_chunks","try_collect","try_concat","try_filter","try_filter_map","try_flatten","try_fold","try_for_each","try_for_each_concurrent","try_next","try_poll_next","try_poll_next_unpin","try_skip_while","try_take_while","try_unfold","unfold","unzip","zip","FuturesUnordered","IntoIter","Iter","IterMut","IterPinMut","IterPinRef","IntoIter","Iter","IterMut","SelectAll","select_all","Buffer","Close","Drain","Error","Fanout","Feed","Flush","Send","SendAll","Sink","SinkErrInto","SinkExt","SinkMapErr","Unfold","With","WithFlatMap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone_into","clone_into","close","drain","fanout","feed","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_terminated","is_terminated","is_terminated","is_terminated","left_sink","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close_unpin","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush_unpin","poll_next","poll_next","poll_next","poll_next","poll_next","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready_unpin","right_sink","send","send_all","sink_err_into","sink_map_err","size_hint","size_hint","size_hint","size_hint","size_hint","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send_unpin","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","with","with_flat_map","0","0","1","1","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxStream","BufferUnordered","Buffered","CatchUnwind","Chain","Chunks","Collect","Concat","Cycle","Empty","Enumerate","ErrInto","Error","Filter","FilterMap","FlatMap","Flatten","Fold","ForEach","ForEachConcurrent","Forward","Fuse","FusedStream","FuturesOrdered","FuturesUnordered","Inspect","InspectErr","InspectOk","IntoAsyncRead","IntoStream","Item","Iter","Left","LocalBoxStream","Map","MapErr","MapOk","Next","NextIf","NextIfEq","Ok","Once","OrElse","Peek","PeekMut","Peekable","Pending","PollFn","PollImmediate","PollNext","ReadyChunks","Repeat","RepeatWith","ReuniteError","Right","Scan","Select","SelectAll","SelectNextSome","SelectWithStrategy","Skip","SkipWhile","SplitSink","SplitStream","Stream","StreamExt","StreamFuture","Take","TakeUntil","TakeWhile","Then","TryBufferUnordered","TryBuffered","TryChunks","TryChunksError","TryCollect","TryConcat","TryFilter","TryFilterMap","TryFlatten","TryFold","TryForEach","TryForEachConcurrent","TryNext","TrySkipWhile","TryStream","TryStreamExt","TryTakeWhile","TryUnfold","Unfold","Unzip","Zip","abort","abortable","all","and_then","any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed_local","buffer_unordered","buffered","by_ref","catch_unwind","chain","chunks","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect","concat","consume","count","cycle","default","default","default","default","drop","empty","enumerate","eq","eq","eq","err_into","extend","extend","extend","filter","filter_map","flat_map","flatten","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","for_each","for_each_concurrent","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","fuse","futures_unordered","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","inspect","inspect_err","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_async_read","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_stream","is_aborted","is_done","is_empty","is_empty","is_empty","is_stopped","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","iter","iter","iter","iter_mut","iter_mut","iter_pin_mut","iter_pin_ref","left_stream","len","len","len","map","map_err","map_ok","ne","new","new","new","new","new_pair","next","next_if","next_if_eq","once","or_else","peek","peek_mut","peekable","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next_unpin","poll_peek","poll_peek_mut","poll_read","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_write","push","push","push","ready_chunks","repeat","repeat_with","reunite","reunite","right_stream","scan","select","select_all","select_all","select_next_some","select_with_strategy","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip_while","spawn_local_obj","spawn_obj","split","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","take","take_future","take_result","take_until","take_while","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","toggle","try_buffer_unordered","try_buffered","try_chunks","try_collect","try_concat","try_filter","try_filter_map","try_flatten","try_fold","try_for_each","try_for_each_concurrent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next_unpin","try_skip_while","try_take_while","try_unfold","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","unzip","zip","FuturesUnordered","IntoIter","Iter","IterMut","IterPinMut","IterPinRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","IntoIter","Iter","IterMut","SelectAll","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","next","next","next","select_all","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ArcWake","AtomicWaker","Context","FutureObj","LocalFutureObj","LocalSpawn","LocalSpawnExt","Pending","Poll","RawWaker","RawWakerVTable","Ready","Spawn","SpawnError","SpawnExt","UnsafeFutureObj","Waker","WakerRef","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branch","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","deref","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_output","from_output","from_raw","from_residual","from_residual","from_waker","hash","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future_obj","into_raw","is_pending","is_ready","is_shutdown","map","map_err","map_err","map_ok","map_ok","ne","ne","ne","new","new","new","new","new","new","new_unowned","noop_waker","noop_waker_ref","partial_cmp","poll","poll","register","shutdown","spawn","spawn_local","spawn_local_obj","spawn_local_with_handle","spawn_obj","spawn_with_handle","status","status_local","take","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wake","wake","wake","wake_by_ref","wake_by_ref","waker","waker","waker_ref","will_wake","0"],"q":["futures","","","","","","","","","","","","","","","","","futures::channel","","futures::channel::mpsc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures::channel::oneshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures::futurefutures::future::Either","","futures::future::MaybeDone","","futures::future::TryMaybeDone","","futures::iofutures::io::SeekFrom","","","futures::lock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures::never","futures::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures::prelude::future","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures::prelude::future::Either","","futures::prelude::future::MaybeDone","","futures::prelude::future::TryMaybeDone","","futures::prelude::sink","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures::prelude::streamfutures::prelude::stream::futures_unordered","","","","","","futures::prelude::stream::select_all","","","","","futures::sinkfutures::streamfutures::stream::futures_unordered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures::stream::select_all","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures::taskfutures::task::Poll"],"d":["Asynchronous values.","Asynchronous I/O.","Polls multiple futures simultaneously, returning a tuple …","Futures-powered synchronization primitives.","This module contains the <code>Never</code> type.","A macro which yields to the event loop once.","Pins a value on the stack.","A macro which returns the result of polling a future once …","A “prelude” for crates using the <code>futures</code> crate.","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Polls multiple futures and streams simultaneously, …","Polls multiple futures and streams simultaneously, …","Asynchronous sinks.","Asynchronous streams.","Combines several streams, all producing the same <code>Item</code> …","Tools for working with tasks.","Polls multiple futures simultaneously, resolving to a …","A multi-producer, single-consumer queue for sending values …","A channel for sending a single message between …","The receiving end of a bounded mpsc channel.","The error type for <code>Sender</code>s used as <code>Sink</code>s.","The transmission end of a bounded mpsc channel.","The error type returned from <code>try_next</code>.","The error type returned from <code>try_send</code>.","The receiving end of an unbounded mpsc channel.","The transmission end of an unbounded mpsc channel.","","","","","","","","","","","","","","","Creates a bounded mpsc channel for communicating between …","","","","","","","","","Closes the receiving half of a channel, without dropping …","Closes the receiving half of a channel, without dropping …","Closes this channel from the sender side, preventing any …","Closes this channel from the sender side, preventing any …","Disconnects this sender from the channel, closing it if …","Disconnects this sender from the channel, closing it if …","","","","","","","","","","","","","","","","","","","","","","Hashes the receiver into the provided hasher","Hashes the receiver into the provided hasher","","","","","","","","Returns the message that was attempted to be sent but …","Drops the message and converts into a <code>SendError</code>.","Returns whether this channel is closed without needing a …","Returns whether this channel is closed without needing a …","Returns whether the sender send to this receiver.","Returns whether the sender send to this receiver.","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the channel …","Returns <code>true</code> if this error is a result of the channel …","","","","","","","","","","","","Polls the channel to determine if there is guaranteed …","","Check if the channel is ready to receive a message.","Returns whether the senders send to the same receiver.","Returns whether the senders send to the same receiver.","","Send a message on the channel.","Send a message on the channel.","","","","","","","","","","","","","","","","","","","","","","","Tries to receive the next message without notifying a …","Tries to receive the next message without notifying a …","","","Attempts to send a message on this <code>Sender</code>, returning the …","","","","","","","","Creates an unbounded mpsc channel for communicating …","Sends a message along this channel.","Error returned from a <code>Receiver</code> when the corresponding …","A future that resolves when the receiving end of a channel …","A future for a value that will be provided by another …","A means of transmitting a single value to another task.","","","","","","","","","Creates a future that resolves when this <code>Sender</code>’s …","Creates a new one-shot channel for sending a single value …","","","Gracefully close this receiver, preventing any subsequent …","","","","","","","","","","","","","","","","","","","Tests to see whether this <code>Sender</code>’s corresponding <code>Receiver</code>","Tests to see whether this <code>Sender</code> is connected to the given …","","","","Polls this <code>Sender</code> half to detect whether its associated …","Completes this oneshot with a successful result.","","","","","","","","","","","","Attempts to receive a message outside of the context of a …","","","","","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>and_then</code> method.","An owned dynamically typed <code>Future</code> for use in cases where …","Future for the <code>catch_unwind</code> method.","The output of the completed future","The output of the completed future","Combines two different futures, streams, or sinks having …","Future for the <code>err_into</code> method.","The type of failures yielded by this future","Future for the <code>flatten</code> method.","Sink for the <code>flatten_sink</code> method.","Stream for the <code>flatten_stream</code> method.","Future for the <code>fuse</code> method.","A future which tracks whether or not the underlying future …","A future represents an asynchronous computation.","A not-yet-completed future","A not-yet-completed future","An extension trait for <code>Future</code>s that provides a variety of …","A custom trait object for polling futures, roughly akin to …","The empty variant after the result of a <code>MaybeDone</code> has been …","The empty variant after the result of a <code>TryMaybeDone</code> has …","Future for the <code>inspect</code> method.","Future for the <code>inspect_err</code> method.","Future for the <code>inspect_ok</code> method.","Future for the <code>into_future</code> method.","Stream for the <code>into_stream</code> method.","Future for the <code>join</code> function.","Future for the <code>join3</code> function.","Future for the <code>join4</code> function.","Future for the <code>join5</code> function.","Future for the <code>join_all</code> function.","Future for the <code>lazy</code> function.","First branch of the type","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","A custom trait object for polling futures, roughly akin to …","Future for the <code>map</code> method.","Future for the <code>map_err</code> method.","Future for the <code>map_into</code> combinator.","Future for the <code>map_ok</code> method.","Future for the <code>map_ok_or_else</code> method.","A future that may have completed.","Future for the <code>never_error</code> combinator.","The type of successful values yielded by this future","Future for the <code>ok_into</code> method.","A future representing a value which may or may not be …","Future for the <code>or_else</code> method.","The type of value produced on completion.","Future for the <code>pending()</code> function.","Future for the <code>poll_fn</code> function.","Future for the <code>poll_immediate</code> function.","Future for the <code>ready</code> function.","A future which sends its output to the corresponding …","The handle to a remote future returned by <code>remote_handle</code>. …","Second branch of the type","Future for the <code>select()</code> function.","Future for the <code>select_all</code> function.","Future for the <code>select_ok</code> function.","Future for the <code>shared</code> method.","Future for the <code>then</code> method.","Future for the <code>try_flatten</code> method.","Future for the <code>try_flatten_stream</code> method.","A convenience for futures that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning futures","Future for the <code>try_join</code> function.","Future for the <code>try_join3</code> function.","Future for the <code>try_join4</code> function.","Future for the <code>try_join5</code> function.","Future for the <code>try_join_all</code> function.","A future that may have completed with an error.","Future for the <code>try_select()</code> function.","Future for the <code>unit_error</code> combinator.","A custom implementation of a future trait object for …","Future for the <code>unwrap_or_else</code> method.","A weak reference to a <code>Shared</code> that can be upgraded much …","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …","Executes another future after this one resolves …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Catches unwinding panics while polling the future.","","","","","","","","","","","","","","","","","Creates a new <code>WeakShared</code> for this <code>Shared</code>.","Drops the future represented by the given fat pointer.","","","Create a future that is immediately ready with an error …","Maps this future’s <code>Error</code> to a new error type using the …","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Flatten the execution of this future when the output of …","Flattens the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drops this handle <em>without</em> canceling the underlying future.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fuse a future such that <code>poll</code> will never again be called …","Do something with the output of a future before passing it …","Do something with the error value of a future before …","Do something with the success value of a future before …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps the value from this immediately ready future.","Consumes this combinator, returning the underlying futures.","Extract the value of an either over two equivalent types.","Convert an owned instance into a (conceptually owned) fat …","","Convert this future into a single element stream.","Returns <code>true</code> if the underlying future should no longer be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Creates a future which represents a collection of the …","Creates a new future that allows delayed execution of a …","Wrap this future in an <code>Either</code> future, making it the …","Map this future’s output to a different type, returning …","Maps this future’s error value to a different value.","Map this future’s output to a different type, returning …","Maps this future’s success value to a different value.","Maps this future’s success value to a different value, …","Wraps a future into a <code>MaybeDone</code>","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Evaluates and consumes the future, returning the resulting …","Create a future that is immediately ready with a success …","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Executes another future if this one resolves to an error. …","Returns an <code>Option</code> containing a mutable reference to the …","Returns an <code>Option</code> containing a mutable reference to the …","Returns <code>Some</code> containing a reference to this <code>Shared</code>’s …","Creates a future which never resolves, representing a …","Attempt to resolve the future to a final value, registering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new future wrapping around a function returning …","Creates a future that is immediately ready with an Option …","","","","","","","","","","","","","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","","","Creates a future that is immediately ready with a value.","Turn this future into a future that yields <code>()</code> on …","Wrap this future in an <code>Either</code> future, making it the …","Waits for either one of two differently-typed futures to …","Creates a new future which will select over a list of …","Creates a new future which will select the first …","Create a cloneable handle to this future where all handles …","","","","","","","","","","Gets the number of strong pointers to this allocation.","Attempt to take the output of a <code>MaybeDone</code> without driving …","Attempt to take the output of a <code>TryMaybeDone</code> without …","Creates a new <code>Fuse</code>-wrapped future which is already …","Chain on a computation for when a future finished, passing …","","","","","","","","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Creates a future which represents either a collection of …","Wraps a future into a <code>TryMaybeDone</code>","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryFuture::try_poll</code> on …","Waits for either one of two differently-typed futures to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Unwraps this future’s output, producing a future with …","Attempts to upgrade this <code>WeakShared</code> into a <code>Shared</code>.","Gets the number of weak pointers to this allocation.","","","","","","","","","A socket address could not be bound because the address is …","A nonexistent interface was requested or the requested …","A simple wrapper type which allows types which implement …","An entity already exists, often a file.","Program argument list too long.","Read bytes asynchronously.","An extension trait which adds utility methods to …","Read bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncRead</code> …","Seek bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncSeek</code> …","Write bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncWrite</code>…","The operation failed because a pipe was closed.","The <code>BufReader</code> struct adds buffering to any reader.","Wraps a writer and buffers its output.","Reader for the <code>chain</code> method.","Future for the <code>close</code> method.","The connection was aborted (terminated) by the remote …","The connection was refused by the remote server.","The connection was reset by the remote server.","Future for the <code>copy()</code> function.","Future for the <code>copy_buf()</code> function.","Cross-device or cross-filesystem (hard) link or rename.","Sets the offset to the current position plus the specified …","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …","Deadlock (avoided).","A non-empty directory was specified where an empty …","Reader for the <code>empty()</code> function.","Sets the offset to the size of this object plus the …","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","A list specifying general categories of I/O error.","Executable file is busy.","File larger than allowed or supported.","Filename too long.","Loop in the filesystem or IO subsystem; often, too many …","Filesystem quota was exceeded.","Future for the <code>fill_buf</code> method.","Future for the <code>flush</code> method.","The remote host is not reachable.","This operation was interrupted.","Sink for the <code>into_sink</code> method.","Data not valid for the operation were encountered.","A parameter was incorrect.","A buffer type used with <code>Write::write_vectored</code>.","A buffer type used with <code>Read::read_vectored</code>.","The filesystem object is, unexpectedly, a directory.","Wrap a writer, like <code>BufWriter</code> does, but prioritizes …","Stream for the <code>lines</code> method.","The system’s networking is down.","The network containing the remote host is not reachable.","A filesystem object is, unexpectedly, not a directory.","The network operation failed because it was not connected …","An entity was not found, often a file.","Seek on unseekable file.","A custom error that does not fall under any other I/O …","An operation could not be completed, because it failed to …","The operation lacked the necessary privileges to complete.","Future for the <code>read</code> method.","Future for the <code>read_exact</code> method.","The readable half of an object returned from …","Future for the <code>read_line</code> method.","The filesystem or storage medium is read-only, but a write …","Future for the <code>read_to_end</code> method.","Future for the <code>read_to_string</code> method.","Future for the <code>read_until</code> method.","Future for the <code>read_vectored</code> method.","Reader for the <code>repeat()</code> function.","Resource is busy.","A specialized <code>Result</code> type for I/O operations.","Error indicating a <code>ReadHalf&lt;T&gt;</code> and <code>WriteHalf&lt;T&gt;</code> were not …","Future for the <code>BufReader::seek_relative</code> method.","Future for the <code>seek</code> method.","Enumeration of possible methods to seek within an I/O …","Writer for the <code>sink()</code> function.","Stale network file handle.","Sets the offset to the provided number of bytes.","The underlying storage (typically, a filesystem) is full.","Reader for the <code>take</code> method.","The I/O operation’s timeout expired, causing it to be …","Too many (hard) links to the same filesystem object.","An error returned when an operation could not be completed …","This operation is unsupported on this platform.","A owned window around an underlying buffer.","The operation needs to block to complete, but the blocking …","Future for the <code>write</code> method.","Future for the <code>write_all</code> method.","The writable half of an object returned from …","Future for the <code>write_vectored</code> method.","An error returned when an operation could not be completed …","Advance the internal cursor of the slice.","Advance the internal cursor of the slice.","Advance the internal cursor of the slices.","Advance the internal cursor of the slices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the internally buffered data.","Returns a reference to the internally buffered data.","Returns a reference to <code>buf_writer</code>’s internally buffered …","","Creates an adaptor which will chain this stream with …","","","","","","","","","","","Creates a future which will entirely close this <code>AsyncWrite</code>.","","","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","","","","","","A convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …","Creates a future which copies all the bytes from one …","Creates a future which copies all the bytes from one …","","","","","","Constructs a new handle to an empty reader.","Returns the end index of this window into the underlying …","","","","Creates a future which will wait for a non-empty buffer to …","","Creates a future which will entirely flush this <code>AsyncWrite</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>NulError</code> into a <code>io::Error</code>.","Converts an <code>ErrorKind</code> into an <code>Error</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of an <code>Error</code> from a particular OS …","Returns a mutable reference to the inner error wrapped by …","Returns a mutable reference to the contained IO object.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Gets mutable references to the underlying readers in this …","Gets a mutable reference to the underlying value in this …","Acquires a mutable reference to the underlying sink or …","Gets a mutable reference to the underlying buffer inside …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Gets pinned mutable references to the underlying readers …","Acquires a pinned mutable reference to the underlying sink …","Returns a reference to the inner error wrapped by this …","Returns a reference to the contained IO object.","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Gets references to the underlying readers in this <code>Chain</code>.","Gets a reference to the underlying value in this cursor.","Acquires a reference to the underlying sink or stream that …","Gets a shared reference to the underlying buffer inside of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the <code>Error</code>, returning its inner error (if any).","Consumes self and returns the contained IO object.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes the <code>Chain</code>, returning the wrapped readers.","Consumes this cursor, returning the underlying value.","Consumes this combinator, returning the underlying sink or …","Consumes this <code>Window</code>, returning the underlying buffer.","Allow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.","Returns the corresponding <code>ErrorKind</code> for this error.","Returns an error representing the last OS error which …","Returns the remaining number of bytes that can be read …","Returns a stream over the lines of this reader. This …","","","Creates a new I/O error from a known kind of error as well …","Creates a new <code>IoSliceMut</code> wrapping a byte slice.","Creates a new <code>IoSlice</code> wrapping a byte slice.","Creates a new <code>AllowStdIo</code> from an existing IO object.","Creates a new <code>BufReader</code> with a default buffer capacity. …","Creates a new <code>BufWriter</code> with a default buffer capacity. …","Create a new <code>LineWriter</code> with default buffer capacity. The …","Creates a new cursor wrapping the provided underlying …","Creates a new window around the buffer <code>t</code> defaulting to the …","","","","","","","","","","","","","","","","","","","","Attempt to close the object.","","","","","Forward to <code>buf_writer</code> ’s <code>BufWriter::poll_close()</code>","","","","","","","Attempt to return the contents of the internal buffer, …","","","","","","","","Attempt to flush the object, ensuring that any buffered …","","","","","Forward to <code>buf_writer</code> ’s <code>BufWriter::poll_flush()</code>","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","","","","","","","","","","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","","Attempt to seek to an offset, in bytes, in a stream.","","Seek to an offset, in bytes, in the underlying reader.","Seek to the offset, in bytes, in the underlying writer.","","Attempts to seek relative to the current position. If the …","Attempt to write bytes from <code>buf</code> into the object.","","","","","","","","","","","","","","","","","","","","","Attempt to write bytes from <code>bufs</code> into the object using …","Returns the current position of this cursor.","Returns the OS error that this error represents (if any).","Tries to read some bytes directly into the given <code>buf</code> in …","","Creates a future which will read exactly enough bytes to …","","Creates a future which will read all the bytes associated …","Creates a future which will read all the bytes from this …","","Creates a future which will read all the bytes from this …","","Creates a future which will read all the bytes associated …","Creates a future which will read from the <code>AsyncRead</code> into …","","Creates an instance of a reader that infinitely repeats …","Attempts to put the two “halves” of a split …","Attempts to put the two “halves” of a split …","Creates a future which will seek an IO object, and then …","","Seeks relative to the current position. If the new …","Changes the range of this window to the range specified.","Sets the number of bytes that can be read before this …","Sets the position of this cursor.","Creates an instance of a writer which will successfully …","","Helper method for splitting this read/write object into …","Returns the starting index of this window into the …","","Creates a future which will return the current seek …","Creates an AsyncRead adapter which will read at most <code>limit</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>BufReader</code> with the specified buffer capacity.","Creates a new <code>BufWriter</code> with the specified buffer capacity.","Creates a new <code>LineWriter</code> with the specified buffer …","Creates a future which will write bytes from <code>buf</code> into the …","","Write data into this object.","","","Creates a future which will write bytes from <code>bufs</code> into the …","","","","","An RAII guard returned by the <code>MutexGuard::map</code> and …","A futures-aware mutex.","An RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …","A future which resolves when the target mutex has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the underlying data.","","","","","","Consumes this mutex, returning the underlying data.","","Acquire the lock asynchronously.","Returns a locked view over a portion of the locked data.","Returns a locked view over a portion of the locked data.","Creates a new futures-aware mutex.","","","","","","","","","","Attempt to acquire the lock immediately.","","","","","A type with no possible values.","Read bytes asynchronously.","Read bytes asynchronously.","Seek bytes asynchronously.","Write bytes asynchronously.","The type of failures yielded by this future","The type of failures yielded by this future","The type of value produced by the sink when an error …","A future represents an asynchronous computation.","Values yielded by the stream.","The type of successful values yielded by this future","The type of successful values yielded by this future","The type of value produced on completion.","A <code>Sink</code> is a value into which other values can be sent, …","A stream of values produced asynchronously.","A convenience for futures that return <code>Result</code> values that …","A convenience for streams that return <code>Result</code> values that …","Tells this buffer that <code>amt</code> bytes have been consumed from …","Asynchronous values.","Attempt to resolve the future to a final value, registering","Flush any remaining output and close this sink, if …","Attempt to close the object.","Attempt to return the contents of the internal buffer, …","Flush any remaining output from this sink.","Attempt to flush the object, ensuring that any buffered …","Attempt to pull out the next value of this stream, …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempts to prepare the <code>Sink</code> to receive a value.","Attempt to seek to an offset, in bytes, in a stream.","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","Asynchronous sinks.","Returns the bounds on the remaining length of the stream.","Begin the process of sending a value to the sink. Each …","Asynchronous streams.","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>and_then</code> method.","An owned dynamically typed <code>Future</code> for use in cases where …","Future for the <code>catch_unwind</code> method.","The output of the completed future","The output of the completed future","Combines two different futures, streams, or sinks having …","Future for the <code>err_into</code> method.","The type of failures yielded by this future","Future for the <code>flatten</code> method.","Sink for the <code>flatten_sink</code> method.","Stream for the <code>flatten_stream</code> method.","Future for the <code>fuse</code> method.","A future which tracks whether or not the underlying future …","A future represents an asynchronous computation.","A not-yet-completed future","A not-yet-completed future","An extension trait for <code>Future</code>s that provides a variety of …","A custom trait object for polling futures, roughly akin to …","The empty variant after the result of a <code>MaybeDone</code> has been …","The empty variant after the result of a <code>TryMaybeDone</code> has …","Future for the <code>inspect</code> method.","Future for the <code>inspect_err</code> method.","Future for the <code>inspect_ok</code> method.","Future for the <code>into_future</code> method.","Stream for the <code>into_stream</code> method.","Future for the <code>join</code> function.","Future for the <code>join3</code> function.","Future for the <code>join4</code> function.","Future for the <code>join5</code> function.","Future for the <code>join_all</code> function.","Future for the <code>lazy</code> function.","First branch of the type","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","A custom trait object for polling futures, roughly akin to …","Future for the <code>map</code> method.","Future for the <code>map_err</code> method.","Future for the <code>map_into</code> combinator.","Future for the <code>map_ok</code> method.","Future for the <code>map_ok_or_else</code> method.","A future that may have completed.","Future for the <code>never_error</code> combinator.","The type of successful values yielded by this future","Future for the <code>ok_into</code> method.","A future representing a value which may or may not be …","Future for the <code>or_else</code> method.","The type of value produced on completion.","Future for the <code>pending()</code> function.","Future for the <code>poll_fn</code> function.","Future for the <code>poll_immediate</code> function.","Future for the <code>ready</code> function.","A future which sends its output to the corresponding …","The handle to a remote future returned by <code>remote_handle</code>. …","Second branch of the type","Future for the <code>select()</code> function.","Future for the <code>select_all</code> function.","Future for the <code>select_ok</code> function.","Future for the <code>shared</code> method.","Future for the <code>then</code> method.","Future for the <code>try_flatten</code> method.","Future for the <code>try_flatten_stream</code> method.","A convenience for futures that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning futures","Future for the <code>try_join</code> function.","Future for the <code>try_join3</code> function.","Future for the <code>try_join4</code> function.","Future for the <code>try_join5</code> function.","Future for the <code>try_join_all</code> function.","A future that may have completed with an error.","Future for the <code>try_select()</code> function.","Future for the <code>unit_error</code> combinator.","A custom implementation of a future trait object for …","Future for the <code>unwrap_or_else</code> method.","A weak reference to a <code>Shared</code> that can be upgraded much …","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …","Executes another future after this one resolves …","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Catches unwinding panics while polling the future.","Drops the future represented by the given fat pointer.","Create a future that is immediately ready with an error …","Maps this future’s <code>Error</code> to a new error type using the …","Flatten the execution of this future when the output of …","Flattens the execution of this future when the successful …","Flatten the execution of this future when the successful …","Fuse a future such that <code>poll</code> will never again be called …","Do something with the output of a future before passing it …","Do something with the error value of a future before …","Do something with the success value of a future before …","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","Convert an owned instance into a (conceptually owned) fat …","Convert this future into a single element stream.","Returns <code>true</code> if the underlying future should no longer be …","Joins the result of two futures, waiting for them both to …","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Creates a future which represents a collection of the …","Creates a new future that allows delayed execution of a …","Wrap this future in an <code>Either</code> future, making it the …","Map this future’s output to a different type, returning …","Maps this future’s error value to a different value.","Map this future’s output to a different type, returning …","Maps this future’s success value to a different value.","Maps this future’s success value to a different value, …","Wraps a future into a <code>MaybeDone</code>","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Evaluates and consumes the future, returning the resulting …","Create a future that is immediately ready with a success …","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Executes another future if this one resolves to an error. …","Creates a future which never resolves, representing a …","Attempt to resolve the future to a final value, registering","Creates a new future wrapping around a function returning …","Creates a future that is immediately ready with an Option …","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","Creates a future that is immediately ready with a value.","Turn this future into a future that yields <code>()</code> on …","Wrap this future in an <code>Either</code> future, making it the …","Waits for either one of two differently-typed futures to …","Creates a new future which will select over a list of …","Creates a new future which will select the first …","Create a cloneable handle to this future where all handles …","Chain on a computation for when a future finished, passing …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","Joins the result of two futures, waiting for them both to …","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Creates a future which represents either a collection of …","Wraps a future into a <code>TryMaybeDone</code>","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","A convenience method for calling <code>TryFuture::try_poll</code> on …","Waits for either one of two differently-typed futures to …","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Unwraps this future’s output, producing a future with …","","","","","","","Sink for the <code>buffer</code> method.","Future for the <code>close</code> method.","Sink for the <code>drain</code> function.","The type of value produced by the sink when an error …","Sink that clones incoming items and forwards them to two …","Future for the <code>feed</code> method.","Future for the <code>flush</code> method.","Future for the <code>send</code> method.","Future for the <code>send_all</code> method.","A <code>Sink</code> is a value into which other values can be sent, …","Sink for the <code>sink_err_into</code> method.","An extension trait for <code>Sink</code>s that provides a variety of …","Sink for the <code>sink_map_err</code> method.","Sink for the <code>unfold</code> function.","Sink for the <code>with</code> method.","Sink for the <code>with_flat_map</code> method.","Adds a fixed-size buffer to the current sink.","Close the sink.","Create a sink that will just discard all items given to it.","Fanout items to multiple sinks.","A future that completes after the given item has been …","Flush the sink, processing all pending items.","Wrap this sink in an <code>Either</code> sink, making it the left-hand …","Flush any remaining output and close this sink, if …","A convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …","Flush any remaining output from this sink.","A convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …","Attempts to prepare the <code>Sink</code> to receive a value.","A convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …","Wrap this stream in an <code>Either</code> stream, making it the …","A future that completes after the given item has been …","A future that completes after the given stream has been …","Map this sink’s error to a different error type using …","Transforms the error returned by the sink.","Begin the process of sending a value to the sink. Each …","A convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …","Create a sink from a function which processes one item at …","Composes a function <em>in front of</em> the sink.","Composes a function <em>in front of</em> the sink.","","","","","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Stream for the <code>and_then</code> method.","An owned dynamically typed <code>Stream</code> for use in cases where …","Stream for the <code>buffer_unordered</code> method.","Stream for the <code>buffered</code> method.","Stream for the <code>catch_unwind</code> method.","Stream for the <code>chain</code> method.","Stream for the <code>chunks</code> method.","Future for the <code>collect</code> method.","Future for the <code>concat</code> method.","Stream for the <code>cycle</code> method.","Stream for the <code>empty</code> function.","Stream for the <code>enumerate</code> method.","Stream for the <code>err_into</code> method.","The type of failures yielded by this future","Stream for the <code>filter</code> method.","Stream for the <code>filter_map</code> method.","Stream for the <code>flat_map</code> method.","Stream for the <code>flatten</code> method.","Future for the <code>fold</code> method.","Future for the <code>for_each</code> method.","Future for the <code>for_each_concurrent</code> method.","Future for the <code>forward</code> method.","Stream for the <code>fuse</code> method.","A stream which tracks whether or not the underlying stream …","An unbounded queue of futures.","A set of futures which may complete in any order.","Stream for the <code>inspect</code> method.","Stream for the <code>inspect_err</code> method.","Stream for the <code>inspect_ok</code> method.","Reader for the <code>into_async_read</code> method.","Stream for the <code>into_stream</code> method.","Values yielded by the stream.","Stream for the <code>iter</code> function.","Poll the first stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","Stream for the <code>map</code> method.","Stream for the <code>map_err</code> method.","Stream for the <code>map_ok</code> method.","Future for the <code>next</code> method.","Future for the <code>Peekable::next_if</code> method.","Future for the <code>Peekable::next_if_eq</code> method.","The type of successful values yielded by this future","A stream which emits single element and then EOF.","Stream for the <code>or_else</code> method.","Future for the <code>Peekable::peek</code> method.","Future for the <code>Peekable::peek_mut</code> method.","A <code>Stream</code> that implements a <code>peek</code> method.","Stream for the <code>pending()</code> function.","Stream for the <code>poll_fn</code> function.","Stream for the poll_immediate function.","Type to tell <code>SelectWithStrategy</code> which stream to poll next.","Stream for the <code>ready_chunks</code> method.","Stream for the <code>repeat</code> function.","An stream that repeats elements of type <code>A</code> endlessly by …","Error indicating a <code>SplitSink&lt;S&gt;</code> and <code>SplitStream&lt;S&gt;</code> were …","Poll the second stream.","Stream for the <code>scan</code> method.","Stream for the <code>select()</code> function.","An unbounded set of streams","Future for the <code>select_next_some</code> method.","Stream for the <code>select_with_strategy()</code> function. See …","Stream for the <code>skip</code> method.","Stream for the <code>skip_while</code> method.","A <code>Sink</code> part of the split pair","A <code>Stream</code> part of the split pair","A stream of values produced asynchronously.","An extension trait for <code>Stream</code>s that provides a variety of …","Future for the <code>into_future</code> method.","Stream for the <code>take</code> method.","Stream for the <code>take_until</code> method.","Stream for the <code>take_while</code> method.","Stream for the <code>then</code> method.","Stream for the <code>try_buffer_unordered</code> method.","Stream for the <code>try_buffered</code> method.","Stream for the <code>try_chunks</code> method.","Error indicating, that while chunk was collected inner …","Future for the <code>try_collect</code> method.","Future for the <code>try_concat</code> method.","Stream for the <code>try_filter</code> method.","Stream for the <code>try_filter_map</code> method.","Stream for the <code>try_flatten</code> method.","Future for the <code>try_fold</code> method.","Future for the <code>try_for_each</code> method.","Future for the <code>try_for_each_concurrent</code> method.","Future for the <code>try_next</code> method.","Stream for the <code>try_skip_while</code> method.","A convenience for streams that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning streams","Stream for the <code>try_take_while</code> method.","Stream for the <code>try_unfold</code> function.","Stream for the <code>unfold</code> function.","Future for the <code>unzip</code> method.","Stream for the <code>zip</code> method.","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …","Execute predicate over asynchronous stream, and return <code>true</code>…","Chain on a computation for when a value is ready, passing …","Execute predicate over asynchronous stream, and return <code>true</code>…","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures.","Borrows a stream, rather than consuming it.","Catches unwinding panics while polling the stream.","Adapter for chaining two streams.","An adaptor for chunking up items of the stream inside a …","Transforms a stream into a collection, returning a future …","Concatenate all items of a stream into a single extendable …","Drives the stream to completion, counting the number of …","Repeats a stream endlessly.","Creates a stream which contains no elements.","Creates a stream which gives the current iteration count …","Wraps the current stream in a new stream which converts …","Filters the values produced by this stream according to …","Filters the values produced by this stream while …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Flattens a stream of streams into just one continuous …","Execute an accumulating asynchronous computation over a …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","A future that completes after the given stream has been …","Fuse a stream such that <code>poll_next</code> will never again be …","An unbounded set of futures.","Do something with each item of this stream, afterwards …","Do something with the error value of this stream, …","Do something with the success value of this stream, …","Adapter that converts this stream into an <code>AsyncRead</code>.","Converts this stream into a future of …","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Returns <code>true</code> if the stream should no longer be polled.","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …","Wrap this stream in an <code>Either</code> stream, making it the …","Maps this stream’s items to a different type, returning …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Creates a future that resolves to the next item in the …","Creates a stream of a single element.","Chain on a computation for when an error happens, passing …","Creates a new stream which exposes a <code>peek</code> method.","Creates a stream which never returns any elements.","Creates a new stream wrapping a function returning …","Creates a new stream that always immediately returns …","Attempt to pull out the next value of this stream, …","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","An adaptor for chunking up ready items of the stream …","Create a stream which produces the same item repeatedly.","Creates a new stream that repeats elements of type <code>A</code> …","Wrap this stream in an <code>Either</code> stream, making it the …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","This function will attempt to pull items from both …","An unbounded set of streams","Convert a list of streams into a <code>Stream</code> of results from …","Returns a <code>Future</code> that resolves when the next item in this …","This function will attempt to pull items from both …","Returns the bounds on the remaining length of the stream.","Creates a new stream which skips <code>n</code> items of the underlying …","Skip elements on this stream while the provided …","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …","Creates a new stream of at most <code>n</code> items of the underlying …","Take elements from this stream until the provided future …","Take elements from this stream while the provided …","Computes from this stream’s items new items of a …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","An adaptor for chunking up successful items of the stream …","Attempt to transform a stream into a collection, returning …","Attempt to concatenate all items of a stream into a single …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream while …","Flattens a stream of streams into just one continuous …","Attempt to execute an accumulating asynchronous …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","Creates a future that attempts to resolve the next item in …","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","A convenience method for calling <code>TryStream::try_poll_next</code> …","Skip elements on this stream while the provided …","Take elements on this stream while the provided …","Creates a <code>TryStream</code> from a seed and a closure returning a …","Creates a <code>Stream</code> from a seed and a closure returning a …","Converts a stream of pairs into a future, which resolves …","An adapter for zipping two streams together.","A set of futures which may complete in any order.","Owned iterator over all futures in the unordered set.","Immutable iterator over all the futures in the unordered …","Mutable iterator over all futures in the unordered set.","Mutable iterator over all futures in the unordered set.","Immutable iterator over all futures in the unordered set.","Owned iterator over all streams in the unordered set.","Immutable iterator over all streams in the unordered set.","Mutable iterator over all streams in the unordered set.","An unbounded set of streams","Convert a list of streams into a <code>Stream</code> of results from …","Sink for the <code>buffer</code> method.","Future for the <code>close</code> method.","Sink for the <code>drain</code> function.","The type of value produced by the sink when an error …","Sink that clones incoming items and forwards them to two …","Future for the <code>feed</code> method.","Future for the <code>flush</code> method.","Future for the <code>send</code> method.","Future for the <code>send_all</code> method.","A <code>Sink</code> is a value into which other values can be sent, …","Sink for the <code>sink_err_into</code> method.","An extension trait for <code>Sink</code>s that provides a variety of …","Sink for the <code>sink_map_err</code> method.","Sink for the <code>unfold</code> function.","Sink for the <code>with</code> method.","Sink for the <code>with_flat_map</code> method.","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a fixed-size buffer to the current sink.","","","","","Close the sink.","Create a sink that will just discard all items given to it.","Fanout items to multiple sinks.","A future that completes after the given item has been …","Flush the sink, processing all pending items.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner sinks.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Get a pinned mutable reference to the inner sinks.","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Get a shared reference to the inner sinks.","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","","","","","","","","","","","","","","","","","","","Consumes this combinator, returning the underlying sinks.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","","","","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …","","","","","","Flush any remaining output and close this sink, if …","","","","","","","","","A convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …","Flush any remaining output from this sink.","","","","","","","","","A convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …","","","","","","Attempts to prepare the <code>Sink</code> to receive a value.","","","","","","","","","A convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …","Wrap this stream in an <code>Either</code> stream, making it the …","A future that completes after the given item has been …","A future that completes after the given stream has been …","Map this sink’s error to a different error type using …","Transforms the error returned by the sink.","","","","","","Begin the process of sending a value to the sink. Each …","","","","","","","","","A convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a sink from a function which processes one item at …","Composes a function <em>in front of</em> the sink.","Composes a function <em>in front of</em> the sink.","","","","","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Stream for the <code>and_then</code> method.","An owned dynamically typed <code>Stream</code> for use in cases where …","Stream for the <code>buffer_unordered</code> method.","Stream for the <code>buffered</code> method.","Stream for the <code>catch_unwind</code> method.","Stream for the <code>chain</code> method.","Stream for the <code>chunks</code> method.","Future for the <code>collect</code> method.","Future for the <code>concat</code> method.","Stream for the <code>cycle</code> method.","Stream for the <code>empty</code> function.","Stream for the <code>enumerate</code> method.","Stream for the <code>err_into</code> method.","The type of failures yielded by this future","Stream for the <code>filter</code> method.","Stream for the <code>filter_map</code> method.","Stream for the <code>flat_map</code> method.","Stream for the <code>flatten</code> method.","Future for the <code>fold</code> method.","Future for the <code>for_each</code> method.","Future for the <code>for_each_concurrent</code> method.","Future for the <code>forward</code> method.","Stream for the <code>fuse</code> method.","A stream which tracks whether or not the underlying stream …","An unbounded queue of futures.","A set of futures which may complete in any order.","Stream for the <code>inspect</code> method.","Stream for the <code>inspect_err</code> method.","Stream for the <code>inspect_ok</code> method.","Reader for the <code>into_async_read</code> method.","Stream for the <code>into_stream</code> method.","Values yielded by the stream.","Stream for the <code>iter</code> function.","Poll the first stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","Stream for the <code>map</code> method.","Stream for the <code>map_err</code> method.","Stream for the <code>map_ok</code> method.","Future for the <code>next</code> method.","Future for the <code>Peekable::next_if</code> method.","Future for the <code>Peekable::next_if_eq</code> method.","The type of successful values yielded by this future","A stream which emits single element and then EOF.","Stream for the <code>or_else</code> method.","Future for the <code>Peekable::peek</code> method.","Future for the <code>Peekable::peek_mut</code> method.","A <code>Stream</code> that implements a <code>peek</code> method.","Stream for the <code>pending()</code> function.","Stream for the <code>poll_fn</code> function.","Stream for the poll_immediate function.","Type to tell <code>SelectWithStrategy</code> which stream to poll next.","Stream for the <code>ready_chunks</code> method.","Stream for the <code>repeat</code> function.","An stream that repeats elements of type <code>A</code> endlessly by …","Error indicating a <code>SplitSink&lt;S&gt;</code> and <code>SplitStream&lt;S&gt;</code> were …","Poll the second stream.","Stream for the <code>scan</code> method.","Stream for the <code>select()</code> function.","An unbounded set of streams","Future for the <code>select_next_some</code> method.","Stream for the <code>select_with_strategy()</code> function. See …","Stream for the <code>skip</code> method.","Stream for the <code>skip_while</code> method.","A <code>Sink</code> part of the split pair","A <code>Stream</code> part of the split pair","A stream of values produced asynchronously.","An extension trait for <code>Stream</code>s that provides a variety of …","Future for the <code>into_future</code> method.","Stream for the <code>take</code> method.","Stream for the <code>take_until</code> method.","Stream for the <code>take_while</code> method.","Stream for the <code>then</code> method.","Stream for the <code>try_buffer_unordered</code> method.","Stream for the <code>try_buffered</code> method.","Stream for the <code>try_chunks</code> method.","Error indicating, that while chunk was collected inner …","Future for the <code>try_collect</code> method.","Future for the <code>try_concat</code> method.","Stream for the <code>try_filter</code> method.","Stream for the <code>try_filter_map</code> method.","Stream for the <code>try_flatten</code> method.","Future for the <code>try_fold</code> method.","Future for the <code>try_for_each</code> method.","Future for the <code>try_for_each_concurrent</code> method.","Future for the <code>try_next</code> method.","Stream for the <code>try_skip_while</code> method.","A convenience for streams that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning streams","Stream for the <code>try_take_while</code> method.","Stream for the <code>try_unfold</code> function.","Stream for the <code>unfold</code> function.","Future for the <code>unzip</code> method.","Stream for the <code>zip</code> method.","Abort the <code>Abortable</code> stream/future associated with this …","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …","Execute predicate over asynchronous stream, and return <code>true</code>…","Chain on a computation for when a value is ready, passing …","Execute predicate over asynchronous stream, and return <code>true</code>…rap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures.","Borrows a stream, rather than consuming it.","Catches unwinding panics while polling the stream.","Adapter for chaining two streams.","An adaptor for chunking up items of the stream inside a …","Clears the set, removing all futures.","Clears the set, removing all streams.","","","","","","","","","","","","","","","","","","","","","Transforms a stream into a collection, returning a future …","Concatenate all items of a stream into a single extendable …","","Drives the stream to completion, counting the number of …","Repeats a stream endlessly.","","","","","","Creates a stream which contains no elements.","Creates a stream which gives the current iteration count …","","","","Wraps the current stream in a new stream which converts …","","","","Filters the values produced by this stream according to …","Filters the values produced by this stream while …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Flattens a stream of streams into just one continuous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute an accumulating asynchronous computation over a …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","A future that completes after the given stream has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fuse a stream such that <code>poll_next</code> will never again be …","An unbounded set of futures.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying stream that …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying streams …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying stream that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying streams that this …","","Do something with each item of this stream, afterwards …","Do something with the error value of this stream, …","Do something with the success value of this stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapter that converts this stream into an <code>AsyncRead</code>.","Converts this stream into a future of …","","","","","","","","","","","","","","","","","","","","","","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying stream.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying streams.","","","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Checks whether the task has been aborted. Note that all …","Returns whether the underlying stream has finished or not.","Returns <code>true</code> if the queue contains no futures","Returns <code>true</code> if the set contains no futures.","Returns <code>true</code> if the set contains no streams","Whether the stream was stopped yet by the stopping future …","Returns <code>true</code> if the stream should no longer be polled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …","Returns an iterator that allows inspecting each future in …","Returns an iterator that allows inspecting each stream in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows modifying each stream in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows inspecting each future in …","Wrap this stream in an <code>Either</code> stream, making it the …","Returns the number of futures contained in the queue.","Returns the number of futures contained in the set.","Returns the number of streams contained in the set.","Maps this stream’s items to a different type, returning …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","","Constructs a new, empty <code>FuturesOrdered</code>","Constructs a new, empty <code>FuturesUnordered</code>.","Constructs a new, empty <code>SelectAll</code>","Creates a new <code>Abortable</code> future/stream using an existing …","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which can …","Creates a future that resolves to the next item in the …","Creates a future which will consume and return the next …","Creates a future which will consume and return the next …","Creates a stream of a single element.","Chain on a computation for when an error happens, passing …","Produces a future which retrieves a reference to the next …","Produces a future which retrieves a mutable reference to …","Creates a new stream which exposes a <code>peek</code> method.","Creates a stream which never returns any elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream wrapping a function returning …","Creates a new stream that always immediately returns …","Attempt to pull out the next value of this stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","Peek retrieves a reference to the next item in the stream.","Peek retrieves a mutable reference to the next item in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Push a future into the queue.","Push a future into the set.","Push a stream into the set.","An adaptor for chunking up ready items of the stream …","Create a stream which produces the same item repeatedly.","Creates a new stream that repeats elements of type <code>A</code> …","Attempts to put the two “halves” of a split …","Attempts to put the two “halves” of a split …","Wrap this stream in an <code>Either</code> stream, making it the …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","This function will attempt to pull items from both …","An unbounded set of streams","Convert a list of streams into a <code>Stream</code> of results from …","Returns a <code>Future</code> that resolves when the next item in this …","This function will attempt to pull items from both …","Returns the bounds on the remaining length of the stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream which skips <code>n</code> items of the underlying …","Skip elements on this stream while the provided …","","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream of at most <code>n</code> items of the underlying …","Extract the stopping future out of the combinator. The …","Once the stopping future is resolved, this method can be …","Take elements from this stream until the provided future …","Take elements from this stream while the provided …","Computes from this stream’s items new items of a …","","","","","","","","","","","","","","Toggle the value and return the old one.","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","An adaptor for chunking up successful items of the stream …","Attempt to transform a stream into a collection, returning …","Attempt to concatenate all items of a stream into a single …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream while …","Flattens a stream of streams into just one continuous …","Attempt to execute an accumulating asynchronous …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …reates a future that attempts to resolve the next item in …","","","","","","","","","","","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryStream::try_poll_next</code> …","Skip elements on this stream while the provided …","Take elements on this stream while the provided …","Creates a <code>TryStream</code> from a seed and a closure returning a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Stream</code> from a seed and a closure returning a …","Converts a stream of pairs into a future, which resolves …","An adapter for zipping two streams together.","A set of futures which may complete in any order.","Owned iterator over all futures in the unordered set.","Immutable iterator over all the futures in the unordered …","Mutable iterator over all futures in the unordered set.","Mutable iterator over all futures in the unordered set.","Immutable iterator over all futures in the unordered set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Owned iterator over all streams in the unordered set.","Immutable iterator over all streams in the unordered set.","Mutable iterator over all streams in the unordered set.","An unbounded set of streams","","","","","","","","","","","","","","","","","","","","","","Convert a list of streams into a <code>Stream</code> of results from …","","","","","","","","","","","","","A way of waking up a specific task.","A synchronization primitive for task wakeup.","The <code>Context</code> of an asynchronous task.","A custom trait object for polling futures, roughly akin to …","A custom trait object for polling futures, roughly akin to …","The <code>LocalSpawn</code> is similar to <code>Spawn</code>, but allows spawning …","Extension trait for <code>LocalSpawn</code>.","Represents that a value is not ready yet.","Indicates whether a value is available or if the current …","A <code>RawWaker</code> allows the implementor of a task executor to …","A virtual function pointer table (vtable) that specifies …","Represents that a value is immediately ready.","The <code>Spawn</code> trait allows for pushing futures onto an …","An error that occurred during spawning.","Extension trait for <code>Spawn</code>.","A custom implementation of a future trait object for …","A <code>Waker</code> is a handle for waking up a task by notifying its …","A <code>Waker</code> that is only valid for a given lifetime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drops the future represented by the given fat pointer.","","","","","","","","","","","","","","","","","","Use a <code>Wake</code>-able type as a <code>Waker</code>.","","","Convert to a <code>Ready</code> variant.","","","Use a <code>Wake</code>-able type as a <code>RawWaker</code>.","","","","","","","","","","","","","","","","","","Creates a new <code>Waker</code> from <code>RawWaker</code>.","","","Create a new <code>Context</code> from a <code>&amp;Waker</code>.","","","","","","","","","","","","","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.","Convert an owned instance into a (conceptually owned) fat …","Returns <code>true</code> if the poll is a <code>Pending</code> value.","Returns <code>true</code> if the poll is a <code>Poll::Ready</code> value.","Check whether spawning failed to the executor being shut …","Maps a <code>Poll&lt;T&gt;</code> to <code>Poll&lt;U&gt;</code> by applying a function to a …","Maps a <code>Poll::Ready&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …","Maps a <code>Poll::Ready&lt;Result&lt;T, E&gt;&gt;</code> to …","Maps a <code>Poll&lt;Result&lt;T, E&gt;&gt;</code> to <code>Poll&lt;Result&lt;U, E&gt;&gt;</code> by …","Maps a <code>Poll&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …","","","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>,","Create an <code>AtomicWaker</code>.","Create a <code>LocalFutureObj</code> from a custom trait object …","Create a <code>FutureObj</code> from a custom trait object …","Create a new <code>WakerRef</code> from a <code>Waker</code> reference.","Create a new <code>WakerRef</code> from a <code>Waker</code> that must not be …","Create a new <code>Waker</code> which does nothing when <code>wake()</code> is …","Get a static reference to a <code>Waker</code> which does nothing when …","","","","Registers the waker to be notified on calls to <code>wake</code>.","Spawning failed because the executor has been shut down.","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a future that will be run to completion.","Spawns a task that polls the given future to completion …","Spawns a future that will be run to completion.","Spawns a task that polls the given future to completion …","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wake up the task associated with this <code>Waker</code>.","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.","Indicates that the associated task is ready to make …","Indicates that the associated task is ready to make …","Wake up the task associated with this <code>Waker</code> without …","Creates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.","Returns a reference to the <code>Waker</code> for the current task.","Creates a reference to a <code>Waker</code> from a reference to …","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,0,2,3,6,7,2,3,6,7,4,5,2,3,2,3,4,5,6,7,1,1,2,3,4,5,6,6,7,7,1,2,3,4,5,6,7,2,3,1,2,3,4,5,6,7,7,7,2,3,2,3,6,7,6,7,4,5,6,7,2,3,2,3,4,5,2,2,3,3,2,3,2,2,3,3,2,3,6,7,1,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,4,5,4,5,2,1,2,3,4,5,6,7,0,3,0,0,0,0,8,9,10,11,8,9,10,11,9,0,11,11,8,8,9,11,8,9,10,11,11,8,9,10,11,8,9,10,11,8,10,9,9,8,8,10,9,9,11,11,8,9,10,11,8,9,10,11,8,8,8,9,10,11,0,0,0,0,0,0,0,12,13,0,0,14,0,0,0,0,0,0,12,13,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,14,0,0,0,16,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,67,67,67,18,19,51,52,53,54,15,18,19,51,52,53,54,15,15,52,18,68,16,18,0,17,15,15,67,17,67,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,34,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,21,22,60,66,67,67,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,18,17,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,54,60,15,68,16,67,69,18,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,15,15,0,0,0,0,0,0,67,67,17,67,17,17,0,67,67,0,17,17,12,13,18,0,16,18,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,25,38,39,15,15,15,25,38,39,15,15,0,0,25,27,38,39,53,15,15,15,25,38,39,15,15,67,15,15,0,67,67,0,0,0,67,25,27,38,39,15,25,38,39,15,18,12,13,23,67,18,19,51,52,53,54,15,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,0,0,0,0,0,0,14,18,20,22,23,24,26,28,29,30,31,32,33,34,36,37,40,41,42,43,44,45,46,47,48,49,50,51,13,54,61,62,63,64,65,66,15,25,27,38,39,15,17,0,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,12,13,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,15,67,17,19,18,70,71,72,73,74,75,76,76,77,77,0,77,77,0,0,0,0,0,0,0,0,77,0,0,0,0,77,77,77,0,0,77,78,0,77,77,0,78,0,0,77,77,77,77,77,0,0,77,77,0,77,77,0,0,77,0,0,77,77,77,77,77,77,77,77,77,0,0,0,0,77,0,0,0,0,0,77,0,0,0,0,0,0,77,78,77,0,77,77,77,77,0,77,0,0,0,0,77,79,80,79,80,81,81,82,79,77,80,78,83,84,85,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,81,111,112,113,82,79,77,80,78,83,84,85,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,81,111,112,113,87,89,90,82,114,77,80,78,86,95,77,80,78,86,95,115,77,86,116,83,86,86,87,89,91,95,110,117,0,0,95,79,80,79,82,0,81,77,78,86,117,86,115,86,82,82,79,77,80,78,83,84,85,76,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,81,111,112,113,82,82,82,82,79,77,80,78,83,84,85,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,81,111,112,113,82,82,86,87,89,91,95,110,81,87,89,91,110,82,86,87,89,90,91,95,110,81,77,86,82,79,77,80,78,83,84,85,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,81,111,112,113,88,92,93,94,96,97,100,101,102,103,104,105,106,107,111,112,113,82,86,87,89,91,95,110,81,115,82,82,110,117,78,86,82,79,80,86,87,89,90,95,81,77,86,88,92,93,94,96,97,100,101,102,103,104,105,106,107,111,112,113,118,85,86,87,89,90,95,95,95,95,98,109,116,83,86,87,89,91,95,110,118,85,86,87,89,90,95,95,95,95,98,109,99,119,83,84,86,87,89,91,95,108,110,84,86,87,89,91,95,108,119,98,120,86,87,89,95,87,118,85,86,87,89,90,95,95,95,95,109,85,86,87,89,90,95,95,95,95,109,118,95,82,114,86,114,86,117,114,86,114,86,117,114,86,0,108,109,121,86,87,81,110,95,0,82,114,81,98,121,114,77,80,78,86,95,82,76,82,79,77,80,78,83,84,85,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,81,111,112,113,82,79,77,80,78,83,84,85,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,81,111,112,113,88,92,93,94,96,97,100,101,102,103,104,105,106,107,111,112,113,99,82,79,77,80,78,83,84,85,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,81,111,112,113,87,89,90,115,86,115,86,86,115,86,122,123,124,0,0,0,0,125,126,127,128,125,126,127,128,125,127,128,127,128,126,127,128,125,126,127,128,125,125,125,126,127,128,125,125,126,127,128,126,125,126,125,127,128,125,126,125,126,127,128,125,126,127,128,125,125,126,127,128,0,0,0,0,0,14,129,130,0,131,14,129,16,0,0,0,0,116,0,16,130,118,116,130,118,131,119,119,130,120,118,118,0,131,130,0,14,129,0,0,0,0,0,0,0,12,13,0,0,14,0,0,0,0,0,0,12,13,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,14,0,0,0,16,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,67,67,67,68,0,17,67,17,67,67,67,17,17,17,68,67,69,0,0,0,0,0,0,67,67,17,67,17,17,0,67,67,0,17,17,0,16,0,0,67,0,67,67,0,0,0,67,67,17,17,0,0,0,0,0,0,14,17,0,67,17,70,71,72,73,74,75,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,132,132,0,132,132,132,132,130,132,130,132,130,132,132,132,132,132,132,130,132,0,132,132,133,134,133,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,135,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,137,136,136,136,136,136,136,136,136,136,136,136,136,136,0,136,137,136,136,136,136,136,136,136,136,136,0,136,137,137,137,136,137,138,0,136,136,137,137,136,0,137,136,0,0,0,131,136,136,0,0,136,136,0,0,0,136,0,131,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,137,137,137,129,137,137,137,0,0,136,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,139,140,141,142,143,144,145,146,147,148,149,150,151,139,140,141,142,143,144,145,146,147,148,149,150,151,132,146,149,146,149,132,0,132,132,132,139,140,141,142,143,144,145,146,147,148,149,150,151,139,140,141,142,143,144,145,146,147,148,149,150,151,142,145,146,149,150,151,142,145,146,149,150,151,142,145,146,149,150,151,139,140,141,142,143,144,145,146,147,148,149,150,151,139,140,143,144,147,142,145,146,149,150,151,145,146,150,151,132,139,140,143,144,147,130,141,142,145,146,148,149,150,151,132,130,141,142,145,146,148,149,150,151,132,145,146,149,150,151,130,141,142,145,146,148,149,150,151,132,132,132,132,132,132,145,146,149,150,151,130,141,142,145,146,148,149,150,151,132,146,149,139,140,141,142,143,144,145,146,147,148,149,150,151,139,140,141,142,143,144,145,146,147,148,149,150,151,139,140,143,144,147,145,146,149,150,151,139,140,141,142,143,144,145,146,147,148,149,150,151,0,132,132,133,134,133,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,135,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,0,136,137,136,133,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,135,228,229,230,231,232,152,233,133,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,135,228,229,230,231,232,152,233,136,136,136,136,136,136,136,136,155,230,220,221,222,223,225,226,135,231,152,233,220,221,222,223,225,226,135,231,152,233,136,136,219,136,136,154,155,135,230,155,0,136,134,135,233,137,154,155,230,136,136,136,136,133,133,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,134,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,135,228,229,230,231,232,152,233,233,136,136,136,136,133,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,135,228,229,230,231,232,152,233,154,155,230,136,0,161,162,163,164,168,169,170,171,172,175,180,181,182,183,184,185,186,187,188,189,190,191,195,196,197,198,199,200,201,202,203,206,207,208,211,214,215,216,217,227,228,161,162,163,164,168,169,170,171,172,175,180,181,182,183,184,185,186,187,188,189,190,191,195,196,197,198,199,200,201,202,203,206,207,208,211,214,215,216,217,227,228,161,162,163,164,168,169,170,171,172,175,180,181,182,183,184,185,186,187,188,189,190,191,195,196,197,198,199,200,201,202,203,206,207,208,211,214,215,216,217,227,228,135,136,137,137,133,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,135,228,229,230,231,232,152,233,137,136,157,158,159,165,166,167,169,173,174,176,177,178,179,192,204,205,209,210,212,218,231,161,162,163,164,168,169,170,171,172,175,180,181,182,183,184,185,186,187,188,189,190,191,195,196,197,198,199,200,201,202,203,206,207,208,211,214,215,216,217,227,228,155,230,137,231,168,154,155,230,184,138,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,195,196,197,198,199,200,201,202,203,204,206,207,208,209,211,212,214,215,218,221,222,223,224,225,226,227,228,229,230,0,155,230,155,230,155,155,136,154,155,230,136,137,137,134,154,155,230,231,152,136,175,175,0,137,175,175,136,0,157,158,159,165,166,167,169,173,174,176,177,178,179,192,204,205,209,210,212,218,231,161,162,163,164,168,170,171,172,175,180,181,182,183,184,185,187,188,189,190,191,194,196,197,198,199,200,201,202,203,206,207,208,211,214,215,216,217,219,219,161,162,163,164,168,170,171,172,175,180,181,182,183,184,185,187,188,189,190,191,194,196,197,198,199,200,201,202,203,206,207,208,211,214,215,216,217,219,0,0,131,153,154,155,156,160,161,162,163,164,168,170,171,172,175,180,181,182,183,184,185,186,187,188,189,190,191,193,195,196,197,198,199,200,201,202,203,206,207,208,211,213,214,215,216,217,220,221,222,223,224,225,226,227,228,229,230,231,136,175,175,219,161,162,163,164,168,170,171,172,175,180,181,182,183,184,185,187,188,189,190,191,194,196,197,198,199,200,201,202,203,206,207,208,211,214,215,216,217,219,154,155,230,136,0,0,193,194,136,136,0,0,0,136,0,131,154,155,156,160,161,162,163,164,168,170,171,172,175,180,181,182,183,184,185,186,187,188,189,190,191,195,196,197,198,199,200,201,202,203,206,207,211,214,215,220,221,222,223,224,225,226,136,136,155,155,136,161,162,163,164,168,170,171,172,175,180,181,182,183,184,185,187,188,189,190,191,194,196,197,198,199,200,201,202,203,206,207,208,211,214,215,216,217,136,184,184,136,136,136,220,221,222,223,225,226,135,231,152,233,133,134,233,135,137,137,137,137,137,137,137,137,137,137,137,133,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,135,228,229,230,231,232,152,233,133,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,135,228,229,230,231,232,152,233,137,159,165,166,174,204,205,209,210,212,218,231,129,153,154,155,156,160,162,163,164,168,170,171,172,175,180,181,182,183,184,185,189,190,191,193,195,196,197,198,199,200,201,202,203,206,207,208,211,213,214,215,216,217,220,221,222,223,224,225,227,228,229,230,231,137,137,137,0,133,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,135,228,229,230,231,232,152,233,0,136,136,0,0,0,0,0,0,234,235,236,237,238,234,235,236,237,238,234,235,236,237,238,234,235,236,237,238,234,235,236,237,238,234,235,236,237,238,234,235,236,237,238,234,235,236,237,238,234,235,236,237,238,234,235,236,237,238,234,235,236,237,238,0,0,0,0,239,240,241,239,240,241,239,240,241,239,240,241,239,240,241,239,240,241,239,240,241,0,239,240,241,239,240,241,239,240,241,239,240,241,0,0,0,0,0,0,0,242,0,0,0,242,0,0,0,0,0,0,243,244,242,245,246,247,248,249,250,251,243,244,242,245,246,247,248,249,250,251,242,242,244,242,246,244,242,246,242,247,251,68,244,249,242,245,246,243,244,242,245,246,247,248,248,249,250,251,243,244,244,242,242,242,245,245,246,247,248,249,249,249,249,249,249,250,250,250,250,250,251,242,242,244,242,242,243,242,243,244,242,245,246,247,248,249,250,251,249,250,249,68,242,242,248,242,242,242,242,242,242,245,246,245,246,247,249,250,251,251,0,0,242,249,250,247,248,252,253,254,253,255,252,255,254,247,244,242,246,248,243,244,242,245,246,247,248,249,250,251,243,244,242,245,246,247,248,249,250,251,249,250,243,244,242,245,246,247,248,249,250,251,244,247,256,256,244,0,243,0,244,257],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[],["sender",3]],[[],["unboundedsender",3]],[[],["senderror",3]],[[],["trysenderror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["senderror",3]],["bool",15]],[[["trysenderror",3]],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["senderror",3]],[[],["bool",15]],[[],["bool",15]],[[["receiver",3]],["bool",15]],[[["unboundedreceiver",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["senderror",3]],["bool",15]],[[["trysenderror",3]],["bool",15]],[[["context",3],["pin",3,["sender"]],["sender",3]],[["poll",4,["result"]],["result",4]]],[[["unboundedsender",3],["context",3],["pin",3,["unboundedsender"]]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["sender"]],["sender",3]],[["poll",4,["result"]],["result",4]]],[[["unboundedsender",3],["context",3],["pin",3,["unboundedsender"]]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["receiver"]],["receiver",3]],[["option",4],["poll",4,["option"]]]],[[["unboundedreceiver",3],["context",3],["pin",3,["unboundedreceiver"]]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["sender"]],["sender",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["result",4,["senderror"]],["poll",4,["result"]]]],[[["unboundedsender",3],["context",3],["pin",3,["unboundedsender"]]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["result",4,["senderror"]],["poll",4,["result"]]]],[[["sender",3]],["bool",15]],[[["unboundedsender",3]],["bool",15]],[[["pin",3,["sender"]],["sender",3]],["result",4]],[[],[["result",4,["senderror"]],["senderror",3]]],[[],[["result",4,["senderror"]],["senderror",3]]],[[["unboundedsender",3],["pin",3,["unboundedsender"]]],["result",4]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["option","tryrecverror"]],["option",4],["tryrecverror",3]]],[[],[["result",4,["option","tryrecverror"]],["option",4],["tryrecverror",3]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],[["result",4,["trysenderror"]],["trysenderror",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],[["result",4,["trysenderror"]],["trysenderror",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cancellation",3]],[[]],[[],["canceled",3]],[[]],[[]],[[]],[[]],[[["canceled",3]],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["receiver",3]],["bool",15]],[[],["bool",15]],[[["context",3],["pin",3,["receiver"]],["receiver",3]],[["poll",4,["result"]],["result",4,["canceled"]]]],[[["context",3],["cancellation",3],["pin",3,["cancellation"]]],["poll",4]],[[["context",3]],["poll",4]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[],[["canceled",3],["result",4,["option","canceled"]],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["andthenpin",3,["box"]],["box",3,["future","global"]]]],[[],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],["catchunwind",3]],[[],["shared",3]],[[],["weakshared",3]],[[],["pending",3]],[[],["optionfuture",3]],[[],["pollimmediate",3]],[[],["ready",3]],[[],["either",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["pin",3,["either"]],["either",4]]],[[],["optionfuture",3]],[[],[["option",4,["weakshared"]],["weakshared",3]]],[[]],[[]],[[]],[[],[["ready",3,["result"]],["result",4]]],[[],["errinto",3]],[[]],[[]],[[],["flatten",3]],[[],["flattensink",3]],[[],["flattenstream",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4]],["optionfuture",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["joinall",3]],[[],["tryjoinall",3]],[[],["selectall",3]],[[],["selectok",3]],[[],["fuse",3]],[[],["inspect",3]],[[],["inspecterr",3]],[[],["inspectok",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intofuture",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["global"]],["global",3]]],[[]],[[]],[[]],[[],["intostream",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["join",3]],[[],["join3",3]],[[],["join4",3]],[[],["join5",3]],[[],["joinall",3]],[[],["lazy",3]],[[],["either",4]],[[],["map",3]],[[],["maperr",3]],[[],["mapinto",3]],[[],["mapok",3]],[[],["mapokorelse",3]],[[],["maybedone",4]],[[],["nevererror",3]],[[],["option",4]],[[],[["ready",3,["result"]],["result",4]]],[[],["okinto",3]],[[],["orelse",3]],[[["pin",3,["maybedone"]],["maybedone",4]],["option",4]],[[["pin",3,["trymaybedone"]],["trymaybedone",4]],["option",4]],[[],["option",4]],[[],["pending",3]],[[["context",3],["pin",3]],["poll",4]],[[["pin",3,["shared"]],["context",3],["shared",3]],["poll",4]],[[["pin",3,["pollfn"]],["context",3],["pollfn",3]],["poll",4]],[[["pin",3,["joinall"]],["context",3],["joinall",3]],["poll",4]],[[["context",3],["tryjoinall",3],["pin",3,["tryjoinall"]]],["poll",4]],[[["pin",3,["fuse"]],["context",3],["fuse",3]],["poll",4]],[[["context",3],["flatten",3],["pin",3,["flatten"]]],["poll",4]],[[["map",3],["context",3],["pin",3,["map"]]],["poll",4]],[[["context",3],["pin",3,["mapinto"]],["mapinto",3]],["poll",4]],[[["context",3],["pin",3,["then"]],["then",3]],["poll",4]],[[["context",3],["inspect",3],["pin",3,["inspect"]]],["poll",4]],[[["context",3],["nevererror",3],["pin",3,["nevererror"]]],["poll",4]],[[["uniterror",3],["context",3],["pin",3,["uniterror"]]],["poll",4]],[[["context",3],["catchunwind",3],["pin",3,["catchunwind"]]],["poll",4]],[[["pin",3,["remotehandle"]],["context",3],["remotehandle",3]],["poll",4]],[[["remote",3],["pin",3,["remote"]],["context",3]],["poll",4]],[[["context",3],["intofuture",3],["pin",3,["intofuture"]]],["poll",4]],[[["context",3],["tryflatten",3],["pin",3,["tryflatten"]]],["poll",4]],[[["pin",3,["andthen"]],["context",3],["andthen",3]],["poll",4]],[[["context",3],["pin",3,["orelse"]],["orelse",3]],["poll",4]],[[["context",3],["pin",3,["errinto"]],["errinto",3]],["poll",4]],[[["context",3],["pin",3,["okinto"]],["okinto",3]],["poll",4]],[[["inspectok",3],["pin",3,["inspectok"]],["context",3]],["poll",4]],[[["context",3],["inspecterr",3],["pin",3,["inspecterr"]]],["poll",4]],[[["pin",3,["mapok"]],["context",3],["mapok",3]],["poll",4]],[[["maperr",3],["context",3],["pin",3,["maperr"]]],["poll",4]],[[["context",3],["pin",3,["mapokorelse"]],["mapokorelse",3]],["poll",4]],[[["unwraporelse",3],["context",3],["pin",3,["unwraporelse"]]],["poll",4]],[[["context",3],["pin",3,["lazy"]],["lazy",3]],["poll",4]],[[["pending",3],["context",3],["pin",3,["pending"]]],["poll",4]],[[["pin",3,["maybedone"]],["maybedone",4],["context",3]],["poll",4]],[[["context",3],["pin",3,["trymaybedone"]],["trymaybedone",4]],["poll",4]],[[["context",3],["optionfuture",3],["pin",3,["optionfuture"]]],["poll",4]],[[["context",3],["pollimmediate",3],["pin",3,["pollimmediate"]]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["ready"]],["ready",3]],["poll",4]],[[["pin",3,["join"]],["context",3],["join",3]],["poll",4]],[[["context",3],["join3",3],["pin",3,["join3"]]],["poll",4]],[[["context",3],["pin",3,["join4"]],["join4",3]],["poll",4]],[[["context",3],["pin",3,["join5"]],["join5",3]],["poll",4]],[[["context",3],["pin",3,["select"]],["select",3]],["poll",4]],[[["selectall",3],["context",3],["pin",3,["selectall"]]],["poll",4]],[[["pin",3,["tryjoin"]],["context",3],["tryjoin",3]],["poll",4]],[[["tryjoin3",3],["context",3],["pin",3,["tryjoin3"]]],["poll",4]],[[["context",3],["tryjoin4",3],["pin",3,["tryjoin4"]]],["poll",4]],[[["context",3],["pin",3,["tryjoin5"]],["tryjoin5",3]],["poll",4]],[[["context",3],["pin",3,["tryselect"]],["tryselect",3]],["poll",4]],[[["context",3],["selectok",3],["pin",3,["selectok"]]],["poll",4]],[[["context",3],["pin",3,["either"]],["either",4]],["poll",4]],[[["context",3],["pin",3,["flattenstream"]],["flattenstream",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["tryflattenstream"]],["context",3],["tryflattenstream",3]],[["result",4],["poll",4,["result"]]]],[[["flattensink",3],["context",3],["pin",3,["flattensink"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["either"]],["either",4]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["either"]],["either",4]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["pin",3,["either"]],["either",4]],[["poll",4,["result"]],["result",4,["error"]]]],[[["context",3],["pin",3,["flattenstream"]],["flattenstream",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["tryflattenstream"]],["context",3],["tryflattenstream",3]],[["result",4],["poll",4,["result"]]]],[[["flattensink",3],["context",3],["pin",3,["flattensink"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["either"]],["either",4]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["pin",3,["either"]],["either",4]],[["result",4],["poll",4,["result"]]]],[[],["pollfn",3]],[[],["pollimmediate",3]],[[["context",3],["pin",3,["flattenstream"]],["flattenstream",3]],[["poll",4,["option"]],["option",4]]],[[["intostream",3],["pin",3,["intostream"]],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["tryflattenstream"]],["context",3],["tryflattenstream",3]],[["option",4],["poll",4,["option"]]]],[[["flattensink",3],["context",3],["pin",3,["flattensink"]]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pollimmediate",3],["pin",3,["pollimmediate"]]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["either"]],["either",4]],[["option",4],["poll",4,["option"]]]],[[["pin",3,["either"]],["context",3],["either",4]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["either"]],["context",3],["either",4]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["pin",3,["flattenstream"]],["flattenstream",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["tryflattenstream"]],["context",3],["tryflattenstream",3]],[["result",4],["poll",4,["result"]]]],[[["flattensink",3],["context",3],["pin",3,["flattensink"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["either"]],["either",4]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["either"]],["context",3],["seekfrom",4],["either",4]],[["poll",4,["result"]],["result",4,["u64","error"]]]],[[["context",3]],["poll",4]],[[["pin",3,["either"]],["context",3],["either",4]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["either"]],["context",3],["either",4]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[],["ready",3]],[[]],[[],["either",4]],[[],["select",3]],[[],["selectall",3]],[[],["selectok",3]],[[],["shared",3]],[[]],[[]],[[]],[[]],[[]],[[["pin",3,["flattenstream"]],["flattenstream",3]],["result",4]],[[["pin",3,["tryflattenstream"]],["tryflattenstream",3]],["result",4]],[[["flattensink",3],["pin",3,["flattensink"]]],["result",4]],[[["pin",3,["either"]],["either",4]],["result",4]],[[],[["usize",15],["option",4,["usize"]]]],[[["pin",3,["maybedone"]],["maybedone",4]],["option",4]],[[["pin",3,["trymaybedone"]],["trymaybedone",4]],["option",4]],[[],["fuse",3]],[[],["then",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tryflatten",3]],[[],["tryflattenstream",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["tryjoin",3]],[[],["tryjoin3",3]],[[],["tryjoin4",3]],[[],["tryjoin5",3]],[[],["tryjoinall",3]],[[],["trymaybedone",4]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[],["tryselect",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["uniterror",3]],[[],["unwraporelse",3]],[[],[["shared",3],["option",4,["shared"]]]],[[],[["usize",15],["option",4,["usize"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[],["chain",3]],[[],["errorkind",4]],[[],["ioslice",3]],[[],["seekfrom",4]],[[],["allowstdio",3]],[[],["cursor",3]],[[]],[[]],[[]],[[]],[[]],[[],["close",3]],[[["errorkind",4]],["ordering",4]],[[["allowstdio",3]],["ordering",4]],[[["usize",15],["pin",3]]],[[["empty",3],["usize",15],["pin",3,["empty"]]]],[[["usize",15],["pin",3,["allowstdio"]],["allowstdio",3]]],[[["usize",15]]],[[["usize",15],["bufreader",3],["pin",3,["bufreader"]]]],[[["pin",3,["bufwriter"]],["bufwriter",3],["usize",15]]],[[["pin",3,["chain"]],["usize",15],["chain",3]]],[[["pin",3,["cursor"]],["usize",15],["cursor",3]]],[[["usize",15],["pin",3,["take"]],["take",3]]],[[["usize",15]]],[[],["copy",3]],[[],["copybuf",3]],[[],["cursor",3]],[[]],[[]],[[]],[[],["str",15]],[[],["empty",3]],[[],["usize",15]],[[["errorkind",4]],["bool",15]],[[["seekfrom",4]],["bool",15]],[[["allowstdio",3]],["bool",15]],[[],["fillbuf",3]],[[],[["result",4,["error"]],["error",3]]],[[],["flush",3]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["intoinnererror",3]],["error",3]],[[]],[[["nulerror",3]],["error",3]],[[["errorkind",4]],["error",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["error",3]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bufreader",3],["pin",3,["bufreader"]]],["pin",3]],[[["pin",3,["bufwriter"]],["bufwriter",3]],["pin",3]],[[["pin",3,["chain"]],["chain",3]]],[[["pin",3,["take"]],["take",3]],["pin",3]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["box",3,["error","global"]],["option",4,["box"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intosink",3]],[[],["errorkind",4]],[[],["error",3]],[[],["u64",15]],[[],["lines",3]],[[["seekfrom",4]],["bool",15]],[[["allowstdio",3]],["bool",15]],[[["errorkind",4]],["error",3]],[[],["ioslicemut",3]],[[],["ioslice",3]],[[],["allowstdio",3]],[[],["bufreader",3]],[[],["bufwriter",3]],[[],["linewriter",3]],[[],["cursor",3]],[[],["window",3]],[[["errorkind",4]],[["option",4,["ordering"]],["ordering",4]]],[[["allowstdio",3]],[["option",4,["ordering"]],["ordering",4]]],[[["context",3],["pin",3,["seekrelative"]],["seekrelative",3]],["poll",4]],[[["pin",3,["close"]],["context",3],["close",3]],["poll",4]],[[["context",3],["pin",3,["copy"]],["copy",3]],["poll",4]],[[["copybuf",3],["pin",3,["copybuf"]],["context",3]],["poll",4]],[[["context",3],["pin",3,["fillbuf"]],["fillbuf",3]],["poll",4]],[[["context",3],["pin",3,["flush"]],["flush",3]],["poll",4]],[[["pin",3,["read"]],["context",3],["read",3]],["poll",4]],[[["pin",3,["readvectored"]],["context",3],["readvectored",3]],["poll",4]],[[["readexact",3],["context",3],["pin",3,["readexact"]]],["poll",4]],[[["readline",3],["pin",3,["readline"]],["context",3]],["poll",4]],[[["context",3],["readtoend",3],["pin",3,["readtoend"]]],["poll",4]],[[["readtostring",3],["context",3],["pin",3,["readtostring"]]],["poll",4]],[[["readuntil",3],["pin",3,["readuntil"]],["context",3]],["poll",4]],[[["context",3],["seek",3],["pin",3,["seek"]]],["poll",4]],[[["write",3],["pin",3,["write"]],["context",3]],["poll",4]],[[["pin",3,["writevectored"]],["context",3],["writevectored",3]],["poll",4]],[[["context",3],["pin",3,["writeall"]],["writeall",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["sink",3],["pin",3,["sink"]]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["pin",3,["allowstdio"]],["allowstdio",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["bufreader",3],["pin",3,["bufreader"]]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["bufwriter"]],["bufwriter",3],["context",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["linewriter"]],["context",3],["linewriter",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["cursor",3],["context",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["cursor",3],["pin",3,["cursor"]],["context",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["intosink",3],["context",3],["pin",3,["intosink"]]],[["result",4],["poll",4,["result"]]]],[[["writehalf",3],["context",3],["pin",3,["writehalf"]]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4,["error"]]]],[[["empty",3],["context",3],["pin",3,["empty"]]],[["poll",4,["result"]],["result",4,["error"]]]],[[["context",3],["pin",3,["allowstdio"]],["allowstdio",3]],[["poll",4,["result"]],["result",4,["error"]]]],[[["context",3],["bufreader",3],["pin",3,["bufreader"]]],[["poll",4,["result"]],["result",4,["error"]]]],[[["pin",3,["bufwriter"]],["bufwriter",3],["context",3]],[["poll",4,["result"]],["result",4,["error"]]]],[[["pin",3,["chain"]],["context",3],["chain",3]],[["poll",4,["result"]],["result",4,["error"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["poll",4,["result"]],["result",4,["error"]]]],[[["context",3],["pin",3,["take"]],["take",3]],[["poll",4,["result"]],["result",4,["error"]]]],[[["context",3],["pin",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["sink",3],["pin",3,["sink"]]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["pin",3,["allowstdio"]],["allowstdio",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["bufreader",3],["pin",3,["bufreader"]]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["bufwriter"]],["bufwriter",3],["context",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["linewriter"]],["context",3],["linewriter",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["cursor",3],["pin",3,["cursor"]],["context",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["cursor",3],["context",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["intosink",3],["context",3],["pin",3,["intosink"]]],[["result",4],["poll",4,["result"]]]],[[["writehalf",3],["context",3],["pin",3,["writehalf"]]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["lines",3],["pin",3,["lines"]]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["empty",3],["pin",3,["empty"]],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["repeat"]],["repeat",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["allowstdio",3],["context",3],["pin",3,["allowstdio"]]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["bufreader"]],["context",3],["bufreader",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["bufwriter"]],["bufwriter",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["chain"]],["context",3],["chain",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["pin",3,["readhalf"]],["readhalf",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["pin",3,["take"]],["take",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["repeat"]],["repeat",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["allowstdio",3],["context",3],["pin",3,["allowstdio"]]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["bufreader"]],["context",3],["bufreader",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["bufwriter"]],["bufwriter",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["chain"]],["context",3],["chain",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["pin",3,["readhalf"]],["readhalf",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["intosink",3],["context",3],["pin",3,["intosink"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3],["seekfrom",4]],[["poll",4,["result"]],["result",4,["u64","error"]]]],[[["allowstdio",3],["context",3],["pin",3,["allowstdio"]],["seekfrom",4]],[["poll",4,["result"]],["result",4,["u64","error"]]]],[[["pin",3,["bufreader"]],["context",3],["bufreader",3],["seekfrom",4]],[["poll",4,["result"]],["result",4,["u64","error"]]]],[[["pin",3,["bufwriter"]],["bufwriter",3],["context",3],["seekfrom",4]],[["poll",4,["result"]],["result",4,["u64","error"]]]],[[["pin",3,["cursor"]],["context",3],["seekfrom",4],["cursor",3]],[["poll",4,["result"]],["result",4,["u64","error"]]]],[[["pin",3,["bufreader"]],["context",3],["bufreader",3],["i64",15]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["sink",3],["pin",3,["sink"]]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["allowstdio",3],["context",3],["pin",3,["allowstdio"]]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["bufreader"]],["context",3],["bufreader",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["bufwriter"]],["bufwriter",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["linewriter"]],["context",3],["linewriter",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["cursor",3],["pin",3,["cursor"]],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["cursor",3],["pin",3,["cursor"]],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["writehalf",3],["pin",3,["writehalf"]],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["sink",3],["pin",3,["sink"]]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["allowstdio",3],["context",3],["pin",3,["allowstdio"]]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["bufreader"]],["context",3],["bufreader",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["bufwriter"]],["bufwriter",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["linewriter"]],["context",3],["linewriter",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["cursor",3],["pin",3,["cursor"]],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["cursor",3],["pin",3,["cursor"]],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["cursor"]],["context",3],["cursor",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["writehalf",3],["pin",3,["writehalf"]],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[],["u64",15]],[[],[["i32",15],["option",4,["i32"]]]],[[],["read",3]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],["readexact",3]],[[],[["result",4,["error"]],["error",3]]],[[["string",3]],["readline",3]],[[["vec",3]],["readtoend",3]],[[["vec",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["string",3]],["readtostring",3]],[[["string",3]],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u8",15],["vec",3]],["readuntil",3]],[[],["readvectored",3]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[["u8",15]],["repeat",3]],[[["writehalf",3]],[["reuniteerror",3],["result",4,["reuniteerror"]]]],[[["readhalf",3]],[["reuniteerror",3],["result",4,["reuniteerror"]]]],[[["seekfrom",4]],["seek",3]],[[["seekfrom",4]],[["u64",15],["result",4,["u64","error"]],["error",3]]],[[["i64",15],["bufreader",3],["pin",3,["bufreader"]]],["seekrelative",3]],[[]],[[["u64",15]]],[[["u64",15]]],[[],["sink",3]],[[],[["option",4,["error"]],["error",8]]],[[]],[[],["usize",15]],[[["intosink",3],["pin",3,["intosink"]]],["result",4]],[[],["seek",3]],[[["u64",15]],["take",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],["bufreader",3]],[[["usize",15]],["bufwriter",3]],[[["usize",15]],["linewriter",3]],[[],["write",3]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],[[],["writeall",3]],[[],[["result",4,["error"]],["error",3]]],[[["arguments",3]],[["result",4,["error"]],["error",3]]],[[],["writevectored",3]],[[],[["result",4,["usize","error"]],["usize",15],["error",3]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutex",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["mutex",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["mutexlockfuture",3]],[[["mutexguard",3]],["mappedmutexguard",3]],[[["mappedmutexguard",3]],["mappedmutexguard",3]],[[],["mutex",3]],[[["pin",3,["mutexlockfuture"]],["context",3],["mutexlockfuture",3]],["poll",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["mutexguard",3],["option",4,["mutexguard"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["pin",3]]],null,[[["context",3],["pin",3]],["poll",4]],[[["context",3],["pin",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4,["error"]]]],[[["context",3],["pin",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3],["seekfrom",4]],[["poll",4,["result"]],["result",4,["u64","error"]]]],[[["context",3],["pin",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],null,[[]],[[["pin",3]],["result",4]],null,[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["andthen",3]],[[],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],["catchunwind",3]],[[]],[[],[["ready",3,["result"]],["result",4]]],[[],["errinto",3]],[[],["flatten",3]],[[],["flattensink",3]],[[],["flattenstream",3]],[[],["fuse",3]],[[],["inspect",3]],[[],["inspecterr",3]],[[],["inspectok",3]],[[],["intofuture",3]],[[]],[[],["intostream",3]],[[],["bool",15]],[[],["join",3]],[[],["join3",3]],[[],["join4",3]],[[],["join5",3]],[[],["joinall",3]],[[],["lazy",3]],[[],["either",4]],[[],["map",3]],[[],["maperr",3]],[[],["mapinto",3]],[[],["mapok",3]],[[],["mapokorelse",3]],[[],["maybedone",4]],[[],["nevererror",3]],[[],["option",4]],[[],[["ready",3,["result"]],["result",4]]],[[],["okinto",3]],[[],["orelse",3]],[[],["pending",3]],[[["context",3],["pin",3]],["poll",4]],[[],["pollfn",3]],[[],["pollimmediate",3]],[[["context",3]],["poll",4]],[[],["ready",3]],[[]],[[],["either",4]],[[],["select",3]],[[],["selectall",3]],[[],["selectok",3]],[[],["shared",3]],[[],["then",3]],[[],["tryflatten",3]],[[],["tryflattenstream",3]],[[],["tryjoin",3]],[[],["tryjoin3",3]],[[],["tryjoin4",3]],[[],["tryjoin5",3]],[[],["tryjoinall",3]],[[],["trymaybedone",4]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[],["tryselect",3]],[[],["uniterror",3]],[[],["unwraporelse",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],["buffer",3]],[[],["close",3]],[[],["drain",3]],[[],["fanout",3]],[[],["feed",3]],[[],["flush",3]],[[],["either",4]],[[["context",3],["pin",3]],[["result",4],["poll",4,["result"]]]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4],["poll",4,["result"]]]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4],["poll",4,["result"]]]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[],["either",4]],[[],["send",3]],[[],["sendall",3]],[[],["sinkerrinto",3]],[[],["sinkmaperr",3]],[[["pin",3]],["result",4]],[[],["result",4]],[[],["unfold",3]],[[],["with",3]],[[],["withflatmap",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["all",3]],[[],["andthen",3]],[[],["any",3]],[[],[["pin",3,["box"]],["box",3,["stream","global"]]]],[[],[["pin",3,["box"]],["box",3,["stream","global"]]]],[[["usize",15]],["bufferunordered",3]],[[["usize",15]],["buffered",3]],[[]],[[],["catchunwind",3]],[[],["chain",3]],[[["usize",15]],["chunks",3]],[[],["collect",3]],[[],["concat",3]],[[],["count",3]],[[],["cycle",3]],[[],["empty",3]],[[],["enumerate",3]],[[],["errinto",3]],[[],["filter",3]],[[],["filtermap",3]],[[],["flatmap",3]],[[],["flatten",3]],[[],["fold",3]],[[],["foreach",3]],[[],["foreachconcurrent",3]],[[],["forward",3]],[[],["fuse",3]],null,[[],["inspect",3]],[[],["inspecterr",3]],[[],["inspectok",3]],[[],["intoasyncread",3]],[[],["streamfuture",3]],[[],["intostream",3]],[[],["bool",15]],[[],["iter",3]],[[],["either",4]],[[],["map",3]],[[],["maperr",3]],[[],["mapok",3]],[[],["next",3]],[[],["once",3]],[[],["orelse",3]],[[],["peekable",3]],[[],["pending",3]],[[],["pollfn",3]],[[],["pollimmediate",3]],[[["context",3],["pin",3]],[["option",4],["poll",4,["option"]]]],[[["context",3]],[["option",4],["poll",4,["option"]]]],[[["usize",15]],["readychunks",3]],[[],["repeat",3]],[[],["repeatwith",3]],[[],["either",4]],[[],["scan",3]],[[],["select",3]],null,[[],["selectall",3]],[[],["selectnextsome",3]],[[],["selectwithstrategy",3]],[[]],[[["usize",15]],["skip",3]],[[],["skipwhile",3]],[[]],[[["usize",15]],["take",3]],[[],["takeuntil",3]],[[],["takewhile",3]],[[],["then",3]],[[["usize",15]],["trybufferunordered",3]],[[["usize",15]],["trybuffered",3]],[[["usize",15]],["trychunks",3]],[[],["trycollect",3]],[[],["tryconcat",3]],[[],["tryfilter",3]],[[],["tryfiltermap",3]],[[],["tryflatten",3]],[[],["tryfold",3]],[[],["tryforeach",3]],[[],["tryforeachconcurrent",3]],[[],["trynext",3]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["tryskipwhile",3]],[[],["trytakewhile",3]],[[],["tryunfold",3]],[[],["unfold",3]],[[],["unzip",3]],[[],["zip",3]],null,null,null,null,null,null,null,null,null,null,[[],["selectall",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["buffer",3]],[[],["sinkmaperr",3]],[[],["with",3]],[[]],[[]],[[],["close",3]],[[],["drain",3]],[[],["fanout",3]],[[],["feed",3]],[[],["flush",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pin",3,["fanout"]],["fanout",3]]],[[["sinkerrinto",3],["pin",3,["sinkerrinto"]]],["pin",3]],[[["pin",3,["sinkmaperr"]],["sinkmaperr",3]],["pin",3]],[[["with",3],["pin",3,["with"]]],["pin",3]],[[["pin",3,["withflatmap"]],["withflatmap",3]],["pin",3]],[[["pin",3,["buffer"]],["buffer",3]],["pin",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["either",4]],[[["context",3],["pin",3,["sendall"]],["sendall",3]],["poll",4]],[[["context",3],["pin",3,["close"]],["close",3]],["poll",4]],[[["pin",3,["feed"]],["context",3],["feed",3]],["poll",4]],[[["context",3],["pin",3,["flush"]],["flush",3]],["poll",4]],[[["pin",3,["send"]],["send",3],["context",3]],["poll",4]],[[["context",3],["pin",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["drain"]],["drain",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["fanout"]],["fanout",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["sinkerrinto",3],["pin",3,["sinkerrinto"]]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["sinkmaperr"]],["context",3],["sinkmaperr",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["unfold"]],["unfold",3]],[["poll",4,["result"]],["result",4]]],[[["with",3],["pin",3,["with"]],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["withflatmap"]],["withflatmap",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["buffer"]],["context",3],["buffer",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["drain"]],["drain",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["fanout"]],["fanout",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["sinkerrinto",3],["pin",3,["sinkerrinto"]]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["sinkmaperr"]],["context",3],["sinkmaperr",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["unfold"]],["unfold",3]],[["poll",4,["result"]],["result",4]]],[[["with",3],["pin",3,["with"]],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["withflatmap"]],["withflatmap",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["buffer"]],["context",3],["buffer",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["sinkerrinto"]],["sinkerrinto",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3,["sinkmaperr"]],["sinkmaperr",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["with",3],["pin",3,["with"]],["context",3]],[["poll",4,["option"]],["option",4]]],[[["withflatmap",3],["pin",3,["withflatmap"]],["context",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["buffer"]],["buffer",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["drain"]],["drain",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["fanout"]],["fanout",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["sinkerrinto",3],["pin",3,["sinkerrinto"]]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["sinkmaperr"]],["context",3],["sinkmaperr",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["unfold"]],["unfold",3]],[["poll",4,["result"]],["result",4]]],[[["with",3],["pin",3,["with"]],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["withflatmap"]],["withflatmap",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["buffer"]],["context",3],["buffer",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[],["either",4]],[[],["send",3]],[[],["sendall",3]],[[],["sinkerrinto",3]],[[],["sinkmaperr",3]],[[]],[[]],[[]],[[]],[[]],[[["pin",3]],["result",4]],[[["pin",3,["drain"]],["drain",3]],["result",4]],[[["pin",3,["fanout"]],["fanout",3]],["result",4]],[[["sinkerrinto",3],["pin",3,["sinkerrinto"]]],["result",4]],[[["pin",3,["sinkmaperr"]],["sinkmaperr",3]],["result",4]],[[["pin",3,["unfold"]],["unfold",3]],["result",4]],[[["with",3],["pin",3,["with"]]],["result",4]],[[["pin",3,["withflatmap"]],["withflatmap",3]],["result",4]],[[["pin",3,["buffer"]],["buffer",3]],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["unfold",3]],[[],["with",3]],[[],["withflatmap",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["all",3]],[[],["andthen",3]],[[],["anypin",3,["box"]],["box",3,["stream","global"]]]],[[],[["pin",3,["box"]],["box",3,["stream","global"]]]],[[["usize",15]],["bufferunordered",3]],[[["usize",15]],["buffered",3]],[[]],[[],["catchunwind",3]],[[],["chain",3]],[[["usize",15]],["chunks",3]],[[]],[[]],[[],["iter",3]],[[],["repeat",3]],[[],["repeatwith",3]],[[],["empty",3]],[[],["pending",3]],[[],["pollimmediate",3]],[[],["pollnext",4]],[[],["abortable",3]],[[],["aborthandle",3]],[[],["aborted",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["collect",3]],[[],["concat",3]],[[["pin",3,["intoasyncread"]],["usize",15],["intoasyncread",3]]],[[],["count",3]],[[],["cycle",3]],[[],["futuresordered",3]],[[],["futuresunordered",3]],[[],["pollnext",4]],[[],["selectall",3]],[[]],[[],["empty",3]],[[],["enumerate",3]],[[["trychunkserror",3]],["bool",15]],[[["pollnext",4]],["bool",15]],[[["aborted",3]],["bool",15]],[[],["errinto",3]],[[]],[[]],[[]],[[],["filter",3]],[[],["filtermap",3]],[[],["flatmap",3]],[[],["flatten",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["fold",3]],[[],["foreach",3]],[[],["foreachconcurrent",3]],[[],["forward",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["futuresordered",3]],[[],["futuresunordered",3]],[[],["selectall",3]],[[],["fuse",3]],null,[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["enumerate",3],["pin",3,["enumerate"]]],["pin",3]],[[["filter",3],["pin",3,["filter"]]],["pin",3]],[[["pin",3,["filtermap"]],["filtermap",3]],["pin",3]],[[["flatten",3],["pin",3,["flatten"]]],["pin",3]],[[["pin",3,["fuse"]],["fuse",3]],["pin",3]],[[["streamfuture",3],["pin",3,["streamfuture"]]],[["pin",3],["option",4,["pin"]]]],[[["pin",3,["inspect"]],["inspect",3]],["pin",3]],[[["pin",3,["map"]],["map",3]],["pin",3]],[[["flatmap",3],["pin",3,["flatmap"]]],["pin",3]],[[["peekable",3],["pin",3,["peekable"]]],["pin",3]],[[["skip",3],["pin",3,["skip"]]],["pin",3]],[[["pin",3,["skipwhile"]],["skipwhile",3]],["pin",3]],[[["pin",3,["take"]],["take",3]],["pin",3]],[[["pin",3,["takewhile"]],["takewhile",3]],["pin",3]],[[["pin",3,["takeuntil"]],["takeuntil",3]],["pin",3]],[[["then",3],["pin",3,["then"]]],["pin",3]],[[["zip",3],["pin",3,["zip"]]]],[[["chunks",3],["pin",3,["chunks"]]],["pin",3]],[[["pin",3,["readychunks"]],["readychunks",3]],["pin",3]],[[["pin",3,["scan"]],["scan",3]],["pin",3]],[[["pin",3,["bufferunordered"]],["bufferunordered",3]],["pin",3]],[[["pin",3,["buffered"]],["buffered",3]],["pin",3]],[[["catchunwind",3],["pin",3,["catchunwind"]]],["pin",3]],[[["pin",3,["andthen"]],["andthen",3]],["pin",3]],[[["errinto",3],["pin",3,["errinto"]]],["pin",3]],[[["pin",3,["inspectok"]],["inspectok",3]],["pin",3]],[[["pin",3,["inspecterr"]],["inspecterr",3]],["pin",3]],[[["pin",3,["intostream"]],["intostream",3]],["pin",3]],[[["pin",3,["mapok"]],["mapok",3]],["pin",3]],[[["pin",3,["maperr"]],["maperr",3]],["pin",3]],[[["pin",3,["orelse"]],["orelse",3]],["pin",3]],[[["pin",3,["tryfilter"]],["tryfilter",3]],["pin",3]],[[["pin",3,["tryfiltermap"]],["tryfiltermap",3]],["pin",3]],[[["tryflatten",3],["pin",3,["tryflatten"]]],["pin",3]],[[["pin",3,["trychunks"]],["trychunks",3]],["pin",3]],[[["pin",3,["tryskipwhile"]],["tryskipwhile",3]],["pin",3]],[[["pin",3,["trytakewhile"]],["trytakewhile",3]],["pin",3]],[[["pin",3,["trybufferunordered"]],["trybufferunordered",3]],["pin",3]],[[["pin",3,["trybuffered"]],["trybuffered",3]],["pin",3]],[[["select",3],["pin",3,["select"]]]],[[["pin",3,["selectwithstrategy"]],["selectwithstrategy",3]]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["inspect",3]],[[],["inspecterr",3]],[[],["inspectok",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoasyncread",3]],[[],["streamfuture",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intostream",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["iter",3]],[[],["iter",3]],[[],["itermut",3]],[[],["itermut",3]],[[["pin",3,["futuresunordered"]],["futuresunordered",3]],["iterpinmut",3]],[[["pin",3,["futuresunordered"]],["futuresunordered",3]],["iterpinref",3]],[[],["either",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["map",3]],[[],["maperr",3]],[[],["mapok",3]],[[["trychunkserror",3]],["bool",15]],[[],["futuresordered",3]],[[],["futuresunordered",3]],[[],["selectall",3]],[[["abortregistration",3]],["abortable",3]],[[]],[[],["next",3]],[[["peekable",3],["pin",3,["peekable"]]],["nextif",3]],[[["pin",3,["peekable"]],["peekable",3]],["nextifeq",3]],[[],["once",3]],[[],["orelse",3]],[[["peekable",3],["pin",3,["peekable"]]],["peek",3]],[[["peekable",3],["pin",3,["peekable"]]],["peekmut",3]],[[],["peekable",3]],[[],["pending",3]],[[["context",3],["pin",3,["collect"]],["collect",3]],["poll",4]],[[["context",3],["unzip",3],["pin",3,["unzip"]]],["poll",4]],[[["pin",3,["concat"]],["context",3],["concat",3]],["poll",4]],[[["context",3],["fold",3],["pin",3,["fold"]]],["poll",4]],[[["forward",3],["context",3],["pin",3,["forward"]]],["poll",4]],[[["pin",3,["foreach"]],["context",3],["foreach",3]],["poll",4]],[[["streamfuture",3],["context",3],["pin",3,["streamfuture"]]],["poll",4]],[[["next",3],["context",3],["pin",3,["next"]]],["poll",4]],[[["selectnextsome",3],["context",3],["pin",3,["selectnextsome"]]],["poll",4]],[[["pin",3,["peek"]],["peek",3],["context",3]],["poll",4]],[[["context",3],["pin",3,["peekmut"]],["peekmut",3]],["poll",4]],[[["nextif",3],["pin",3,["nextif"]],["context",3]],["poll",4]],[[["context",3],["pin",3,["nextifeq"]],["nextifeq",3]],["poll",4]],[[["context",3],["foreachconcurrent",3],["pin",3,["foreachconcurrent"]]],["poll",4]],[[["context",3],["pin",3,["trynext"]],["trynext",3]],["poll",4]],[[["tryforeach",3],["context",3],["pin",3,["tryforeach"]]],["poll",4]],[[["context",3],["pin",3,["trycollect"]],["trycollect",3]],["poll",4]],[[["context",3],["pin",3,["tryconcat"]],["tryconcat",3]],["poll",4]],[[["pin",3,["tryfold"]],["tryfold",3],["context",3]],["poll",4]],[[["context",3],["tryforeachconcurrent",3],["pin",3,["tryforeachconcurrent"]]],["poll",4]],[[["context",3],["pin",3,["abortable"]],["abortable",3]],["poll",4]],[[["pin",3,["enumerate"]],["enumerate",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["filter"]],["filter",3]],[["poll",4,["result"]],["result",4]]],[[["filtermap",3],["context",3],["pin",3,["filtermap"]]],[["poll",4,["result"]],["result",4]]],[[["flatten",3],["context",3],["pin",3,["flatten"]]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["fuse"]],["context",3],["fuse",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["inspect"]],["inspect",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["map"]],["map",3]],[["result",4],["poll",4,["result"]]]],[[["flatmap",3],["pin",3,["flatmap"]],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["peekable"]],["context",3],["peekable",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["skip"]],["skip",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["skipwhile",3],["pin",3,["skipwhile"]]],[["poll",4,["result"]],["result",4]]],[[["context",3],["take",3],["pin",3,["take"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["takewhile",3],["pin",3,["takewhile"]]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["takeuntil"]],["takeuntil",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["then"]],["then",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["chunks"]],["chunks",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["readychunks"]],["readychunks",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["scan"]],["scan",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["bufferunordered"]],["bufferunordered",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["buffered"]],["buffered",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["splitsink"]],["splitsink",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["andthen"]],["andthen",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["errinto",3],["context",3],["pin",3,["errinto"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["inspectok"]],["inspectok",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["inspecterr"]],["inspecterr",3]],[["poll",4,["result"]],["result",4]]],[[["intostream",3],["pin",3,["intostream"]],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["mapok"]],["mapok",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["maperr"]],["maperr",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["orelse"]],["context",3],["orelse",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["tryfilter"]],["tryfilter",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["tryfiltermap",3],["pin",3,["tryfiltermap"]]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["tryflatten"]],["tryflatten",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["trychunks"]],["context",3],["trychunks",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["tryskipwhile"]],["tryskipwhile",3]],[["result",4],["poll",4,["result"]]]],[[["trytakewhile",3],["context",3],["pin",3,["trytakewhile"]]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["trybufferunordered"]],["context",3],["trybufferunordered",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["trybuffered"]],["context",3],["trybuffered",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["intoasyncread"]],["context",3],["intoasyncread",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3,["intoasyncread"]],["context",3],["intoasyncread",3]],[["poll",4,["result"]],["result",4,["error"]]]],[[["pin",3,["enumerate"]],["enumerate",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["filter"]],["filter",3]],[["poll",4,["result"]],["result",4]]],[[["filtermap",3],["context",3],["pin",3,["filtermap"]]],[["poll",4,["result"]],["result",4]]],[[["flatten",3],["context",3],["pin",3,["flatten"]]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["fuse"]],["context",3],["fuse",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["inspect"]],["inspect",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["map"]],["map",3]],[["result",4],["poll",4,["result"]]]],[[["flatmap",3],["pin",3,["flatmap"]],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["peekable"]],["context",3],["peekable",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["skip"]],["skip",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["skipwhile",3],["pin",3,["skipwhile"]]],[["poll",4,["result"]],["result",4]]],[[["context",3],["take",3],["pin",3,["take"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["takewhile",3],["pin",3,["takewhile"]]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["takeuntil"]],["takeuntil",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["then"]],["then",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["chunks"]],["chunks",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["readychunks"]],["readychunks",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["scan"]],["scan",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["bufferunordered"]],["bufferunordered",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["buffered"]],["buffered",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["splitsink"]],["splitsink",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["andthen"]],["andthen",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["errinto",3],["context",3],["pin",3,["errinto"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["inspectok"]],["inspectok",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["inspecterr"]],["inspecterr",3]],[["poll",4,["result"]],["result",4]]],[[["intostream",3],["pin",3,["intostream"]],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["mapok"]],["mapok",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["maperr"]],["maperr",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["orelse"]],["context",3],["orelse",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["tryfilter"]],["tryfilter",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["tryfiltermap",3],["pin",3,["tryfiltermap"]]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["tryflatten"]],["tryflatten",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["trychunks"]],["context",3],["trychunks",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["tryskipwhile"]],["tryskipwhile",3]],[["result",4],["poll",4,["result"]]]],[[["trytakewhile",3],["context",3],["pin",3,["trytakewhile"]]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["trybufferunordered"]],["context",3],["trybufferunordered",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["trybuffered"]],["context",3],["trybuffered",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["intoasyncread"]],["context",3],["intoasyncread",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[],["pollfn",3]],[[],["pollimmediate",3]],[[["context",3],["pin",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["pollfn"]],["pollfn",3]],[["option",4],["poll",4,["option"]]]],[[["futuresordered",3],["context",3],["pin",3,["futuresordered"]]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["futuresunordered"]],["futuresunordered",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["chain",3],["pin",3,["chain"]]],[["option",4],["poll",4,["option"]]]],[[["pin",3,["cycle"]],["cycle",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["enumerate",3],["pin",3,["enumerate"]]],[["option",4],["poll",4,["option"]]]],[[["filter",3],["context",3],["pin",3,["filter"]]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["filtermap"]],["filtermap",3]],[["option",4],["poll",4,["option"]]]],[[["flatten",3],["context",3],["pin",3,["flatten"]]],[["option",4],["poll",4,["option"]]]],[[["pin",3,["fuse"]],["context",3],["fuse",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["inspect"]],["inspect",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["map"]],["map",3]],[["poll",4,["option"]],["option",4]]],[[["flatmap",3],["pin",3,["flatmap"]],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["peekable"]],["context",3],["peekable",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["skip",3],["pin",3,["skip"]]],[["option",4],["poll",4,["option"]]]],[[["pin",3,["skipwhile"]],["context",3],["skipwhile",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["take"]],["take",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["takewhile"]],["takewhile",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["takeuntil"]],["takeuntil",3]],[["option",4],["poll",4,["option"]]]],[[["then",3],["pin",3,["then"]],["context",3]],[["option",4],["poll",4,["option"]]]],[[["zip",3],["pin",3,["zip"]],["context",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["chunks",3],["pin",3,["chunks"]]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["readychunks"]],["readychunks",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["scan"]],["scan",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["bufferunordered"]],["bufferunordered",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3,["buffered"]],["buffered",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["splitstream"]],["splitstream",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["catchunwind",3],["pin",3,["catchunwind"]]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["andthen"]],["context",3],["andthen",3]],[["poll",4,["option"]],["option",4]]],[[["errinto",3],["context",3],["pin",3,["errinto"]]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["inspectok"]],["inspectok",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["inspecterr"]],["inspecterr",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["intostream"]],["intostream",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["mapok"]],["mapok",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["maperr"]],["maperr",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["orelse"]],["orelse",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["tryfilter"]],["tryfilter",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["tryfiltermap"]],["tryfiltermap",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["tryflatten",3],["pin",3,["tryflatten"]]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["trychunks"]],["trychunks",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3,["tryunfold"]],["tryunfold",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["tryskipwhile"]],["tryskipwhile",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["trytakewhile"]],["trytakewhile",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["trybufferunordered"]],["trybufferunordered",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["trybuffered"]],["trybuffered",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["iter",3],["pin",3,["iter"]]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["repeat"]],["repeat",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3,["repeatwith"]],["context",3],["repeatwith",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["empty"]],["context",3],["empty",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3,["once"]],["context",3],["once",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["pending"]],["context",3],["pending",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3,["pollimmediate"]],["pollimmediate",3]],[["option",4],["poll",4,["option"]]]],[[["select",3],["context",3],["pin",3,["select"]]],[["poll",4,["option"]],["option",4]]],[[["pin",3,["selectwithstrategy"]],["selectwithstrategy",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3,["unfold"]],["unfold",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["selectall",3],["pin",3,["selectall"]]],[["poll",4,["option"]],["option",4]]],[[["abortable",3],["context",3],["pin",3,["abortable"]]],[["option",4],["poll",4,["option"]]]],[[["context",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["peekable",3],["pin",3,["peekable"]]],[["poll",4,["option"]],["option",4]]],[[["context",3],["peekable",3],["pin",3,["peekable"]]],[["option",4],["poll",4,["option"]]]],[[["intoasyncread",3],["pin",3,["intoasyncread"]],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3,["enumerate"]],["enumerate",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["filter"]],["filter",3]],[["poll",4,["result"]],["result",4]]],[[["filtermap",3],["context",3],["pin",3,["filtermap"]]],[["poll",4,["result"]],["result",4]]],[[["flatten",3],["context",3],["pin",3,["flatten"]]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["fuse"]],["context",3],["fuse",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["inspect"]],["inspect",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["map"]],["map",3]],[["result",4],["poll",4,["result"]]]],[[["flatmap",3],["pin",3,["flatmap"]],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["peekable"]],["context",3],["peekable",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["skip"]],["skip",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["skipwhile",3],["pin",3,["skipwhile"]]],[["poll",4,["result"]],["result",4]]],[[["context",3],["take",3],["pin",3,["take"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["takewhile",3],["pin",3,["takewhile"]]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["takeuntil"]],["takeuntil",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["then"]],["then",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["chunks"]],["chunks",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["readychunks"]],["readychunks",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["scan"]],["scan",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["bufferunordered"]],["bufferunordered",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["buffered"]],["buffered",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["splitsink"]],["splitsink",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["andthen"]],["andthen",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["errinto",3],["context",3],["pin",3,["errinto"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["inspectok"]],["inspectok",3]],[["result",4],["poll",4,["result"]]]],[[["context",3],["pin",3,["inspecterr"]],["inspecterr",3]],[["poll",4,["result"]],["result",4]]],[[["intostream",3],["pin",3,["intostream"]],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["mapok"]],["mapok",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["maperr"]],["maperr",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["orelse"]],["context",3],["orelse",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["tryfilter"]],["tryfilter",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["tryfiltermap",3],["pin",3,["tryfiltermap"]]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["tryflatten"]],["tryflatten",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["trychunks"]],["context",3],["trychunks",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3,["tryskipwhile"]],["tryskipwhile",3]],[["result",4],["poll",4,["result"]]]],[[["trytakewhile",3],["context",3],["pin",3,["trytakewhile"]]],[["poll",4,["result"]],["result",4]]],[[["pin",3,["trybufferunordered"]],["context",3],["trybufferunordered",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["trybuffered"]],["context",3],["trybuffered",3]],[["result",4],["poll",4,["result"]]]],[[["intoasyncread",3],["pin",3,["intoasyncread"]],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[]],[[]],[[]],[[["usize",15]],["readychunks",3]],[[],["repeat",3]],[[],["repeatwith",3]],[[["splitsink",3]],[["result",4,["reuniteerror"]],["reuniteerror",3]]],[[["splitstream",3]],[["result",4,["reuniteerror"]],["reuniteerror",3]]],[[],["either",4]],[[],["scan",3]],[[],["select",3]],null,[[],["selectall",3]],[[],["selectnextsome",3]],[[],["selectwithstrategy",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["skip",3]],[[],["skipwhile",3]],[[["localfutureobj",3]],[["result",4,["spawnerror"]],["spawnerror",3]]],[[["futureobj",3]],[["result",4,["spawnerror"]],["spawnerror",3]]],[[]],[[["pin",3,["enumerate"]],["enumerate",3]],["result",4]],[[["pin",3,["filter"]],["filter",3]],["result",4]],[[["filtermap",3],["pin",3,["filtermap"]]],["result",4]],[[["flatten",3],["pin",3,["flatten"]]],["result",4]],[[["pin",3,["fuse"]],["fuse",3]],["result",4]],[[["pin",3,["inspect"]],["inspect",3]],["result",4]],[[["pin",3,["map"]],["map",3]],["result",4]],[[["flatmap",3],["pin",3,["flatmap"]]],["result",4]],[[["pin",3,["peekable"]],["peekable",3]],["result",4]],[[["pin",3,["skip"]],["skip",3]],["result",4]],[[["skipwhile",3],["pin",3,["skipwhile"]]],["result",4]],[[["take",3],["pin",3,["take"]]],["result",4]],[[["takewhile",3],["pin",3,["takewhile"]]],["result",4]],[[["pin",3,["takeuntil"]],["takeuntil",3]],["result",4]],[[["pin",3,["then"]],["then",3]],["result",4]],[[["pin",3,["chunks"]],["chunks",3]],["result",4]],[[["pin",3,["readychunks"]],["readychunks",3]],["result",4]],[[["pin",3,["scan"]],["scan",3]],["result",4]],[[["pin",3,["bufferunordered"]],["bufferunordered",3]],["result",4]],[[["pin",3,["buffered"]],["buffered",3]],["result",4]],[[["pin",3,["splitsink"]],["splitsink",3]],["result",4]],[[["pin",3,["andthen"]],["andthen",3]],["result",4]],[[["errinto",3],["pin",3,["errinto"]]],["result",4]],[[["pin",3,["inspectok"]],["inspectok",3]],["result",4]],[[["pin",3,["inspecterr"]],["inspecterr",3]],["result",4]],[[["intostream",3],["pin",3,["intostream"]]],["result",4]],[[["pin",3,["mapok"]],["mapok",3]],["result",4]],[[["pin",3,["maperr"]],["maperr",3]],["result",4]],[[["pin",3,["orelse"]],["orelse",3]],["result",4]],[[["pin",3,["tryfilter"]],["tryfilter",3]],["result",4]],[[["tryfiltermap",3],["pin",3,["tryfiltermap"]]],["result",4]],[[["pin",3,["tryflatten"]],["tryflatten",3]],["result",4]],[[["pin",3,["trychunks"]],["trychunks",3]],["result",4]],[[["pin",3,["tryskipwhile"]],["tryskipwhile",3]],["result",4]],[[["trytakewhile",3],["pin",3,["trytakewhile"]]],["result",4]],[[["pin",3,["trybufferunordered"]],["trybufferunordered",3]],["result",4]],[[["pin",3,["trybuffered"]],["trybuffered",3]],["result",4]],[[["usize",15]],["take",3]],[[],["option",4]],[[],["option",4]],[[],["takeuntil",3]],[[],["takewhile",3]],[[],["then",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["pollnext",4]],[[["usize",15]],["trybufferunordered",3]],[[["usize",15]],["trybuffered",3]],[[["usize",15]],["trychunks",3]],[[],["trycollect",3]],[[],["tryconcat",3]],[[],["tryfilter",3]],[[],["tryfiltermap",3]],[[],["tryflatten",3]],[[],["tryfold",3]],[[],["tryforeach",3]],[[],["tryforeachconcurrent",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["trynext",3]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["context",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["tryskipwhile",3]],[[],["trytakewhile",3]],[[],["tryunfold",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["unfold",3]],[[],["unzip",3]],[[],["zip",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["selectall",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["controlflow",4]],[[],["controlflow",4]],[[],["waker",3]],[[],["poll",4]],[[],["rawwakervtable",3]],[[]],[[]],[[]],[[["poll",4]],["ordering",4]],[[],["atomicwaker",3]],[[],["waker",3]],[[]],[[]],[[]],[[["poll",4]],["bool",15]],[[["rawwaker",3]],["bool",15]],[[["rawwakervtable",3]],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["arc",3]],["waker",3]],[[]],[[]],[[],["poll",4]],[[]],[[]],[[["arc",3]],["rawwaker",3]],[[]],[[]],[[]],[[["futureobj",3]],["localfutureobj",3]],[[["pin",3,["box"]],["box",3,["global"]]],["localfutureobj",3]],[[["future",8],["box",3,["future","global"]],["global",3]],["localfutureobj",3]],[[["box",3,["future","global"]],["pin",3,["box"]]],["localfutureobj",3]],[[["box",3,["global"]],["global",3]],["localfutureobj",3]],[[]],[[["pin",3,["box"]],["box",3,["global"]]],["futureobj",3]],[[]],[[["box",3,["global"]],["global",3]],["futureobj",3]],[[["pin",3,["box"]],["box",3,["future","global"]]],["futureobj",3]],[[["future",8],["global",3],["box",3,["future","global"]]],["futureobj",3]],[[]],[[],[["option",4,["result"]],["poll",4,["option"]]]],[[],[["poll",4,["result"]],["result",4]]],[[["rawwaker",3]],["waker",3]],[[["result",4,["infallible"]],["infallible",4]],[["poll",4,["option"]],["option",4,["result"]]]],[[["result",4,["infallible"]],["infallible",4]],[["poll",4,["result"]],["result",4]]],[[["waker",3]],["context",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["futureobj",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["poll",4]],[[],[["option",4,["result"]],["poll",4,["option"]]]],[[],[["poll",4,["result"]],["result",4]]],[[],[["poll",4,["result"]],["result",4]]],[[],[["poll",4,["option"]],["option",4,["result"]]]],[[["poll",4]],["bool",15]],[[["rawwaker",3]],["bool",15]],[[["rawwakervtable",3]],["bool",15]],[[["rawwakervtable",3]],["rawwaker",3]],[[],["rawwakervtable",3]],[[],["atomicwaker",3]],[[],["localfutureobj",3]],[[],["futureobj",3]],[[["waker",3]],["wakerref",3]],[[["manuallydrop",3,["waker"]],["waker",3]],["wakerref",3]],[[],["waker",3]],[[],["waker",3]],[[["poll",4]],[["option",4,["ordering"]],["ordering",4]]],[[["localfutureobj",3],["context",3],["pin",3,["localfutureobj"]]],["poll",4]],[[["futureobj",3],["pin",3,["futureobj"]],["context",3]],["poll",4]],[[["waker",3]]],[[],["spawnerror",3]],[[],[["result",4,["spawnerror"]],["spawnerror",3]]],[[],[["result",4,["spawnerror"]],["spawnerror",3]]],[[["localfutureobj",3]],[["result",4,["spawnerror"]],["spawnerror",3]]],[[],[["remotehandle",3],["result",4,["remotehandle","spawnerror"]],["spawnerror",3]]],[[["futureobj",3]],[["result",4,["spawnerror"]],["spawnerror",3]]],[[],[["remotehandle",3],["result",4,["remotehandle","spawnerror"]],["spawnerror",3]]],[[],[["result",4,["spawnerror"]],["spawnerror",3]]],[[],[["result",4,["spawnerror"]],["spawnerror",3]]],[[],[["option",4,["waker"]],["waker",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["arc",3]]],[[["arc",3]]],[[]],[[["arc",3]],["waker",3]],[[],["waker",3]],[[["arc",3]],["wakerref",3]],[[["waker",3]],["bool",15]],null],"p":[[3,"TryRecvError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"Receiver"],[3,"Sender"],[3,"Cancellation"],[3,"Canceled"],[4,"MaybeDone"],[4,"TryMaybeDone"],[8,"TryFuture"],[4,"Either"],[8,"Future"],[8,"TryFutureExt"],[3,"Shared"],[3,"WeakShared"],[3,"PollFn"],[3,"JoinAll"],[3,"TryJoinAll"],[3,"Fuse"],[3,"Flatten"],[3,"FlattenStream"],[3,"Map"],[3,"IntoStream"],[3,"MapInto"],[3,"Then"],[3,"Inspect"],[3,"NeverError"],[3,"UnitError"],[3,"CatchUnwind"],[3,"RemoteHandle"],[3,"Remote"],[3,"IntoFuture"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"FlattenSink"],[3,"AndThen"],[3,"OrElse"],[3,"ErrInto"],[3,"OkInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"MapOkOrElse"],[3,"UnwrapOrElse"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollImmediate"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TrySelect"],[3,"SelectOk"],[8,"FutureExt"],[8,"UnsafeFutureObj"],[8,"FusedFuture"],[13,"Left"],[13,"Right"],[13,"Future"],[13,"Done"],[13,"Future"],[13,"Done"],[3,"ReuniteError"],[4,"ErrorKind"],[4,"SeekFrom"],[3,"IoSliceMut"],[3,"IoSlice"],[3,"Window"],[3,"Error"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"AllowStdIo"],[3,"BufReader"],[3,"SeeKRelative"],[3,"BufWriter"],[3,"LineWriter"],[3,"Chain"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Cursor"],[3,"FillBuf"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadVectored"],[3,"ReadExact"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"Seek"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Take"],[3,"Write"],[3,"WriteVectored"],[3,"WriteAll"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncBufRead"],[8,"AsyncBufReadExt"],[8,"AsyncWrite"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncSeekExt"],[13,"Start"],[13,"End"],[13,"Current"],[3,"Mutex"],[3,"MutexLockFuture"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[8,"TryStream"],[8,"Sink"],[8,"Stream"],[8,"SinkExt"],[3,"ReuniteError"],[3,"TryChunksError"],[4,"PollNext"],[8,"StreamExt"],[8,"TryStreamExt"],[8,"FusedStream"],[3,"SendAll"],[3,"Close"],[3,"Drain"],[3,"Fanout"],[3,"Feed"],[3,"Flush"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Send"],[3,"Unfold"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[3,"AbortHandle"],[3,"PollFn"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"Chain"],[3,"Collect"],[3,"Unzip"],[3,"Concat"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"Forward"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"FlatMap"],[3,"Next"],[3,"SelectNextSome"],[3,"Peekable"],[3,"Peek"],[3,"PeekMut"],[3,"NextIf"],[3,"NextIfEq"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"TakeUntil"],[3,"Then"],[3,"Zip"],[3,"Chunks"],[3,"ReadyChunks"],[3,"Scan"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitStream"],[3,"SplitSink"],[3,"CatchUnwind"],[3,"AndThen"],[3,"ErrInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"IntoStream"],[3,"MapOk"],[3,"MapErr"],[3,"OrElse"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryChunks"],[3,"TryFold"],[3,"TryUnfold"],[3,"TrySkipWhile"],[3,"TryTakeWhile"],[3,"TryBufferUnordered"],[3,"TryBuffered"],[3,"TryForEachConcurrent"],[3,"IntoAsyncRead"],[3,"Iter"],[3,"Repeat"],[3,"RepeatWith"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollImmediate"],[3,"Select"],[3,"SelectWithStrategy"],[3,"Unfold"],[3,"SelectAll"],[3,"Abortable"],[3,"AbortRegistration"],[3,"Aborted"],[3,"IterPinMut"],[3,"IterMut"],[3,"IterPinRef"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[4,"Poll"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"AtomicWaker"],[3,"SpawnError"],[3,"LocalFutureObj"],[3,"FutureObj"],[3,"WakerRef"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"LocalSpawn"],[8,"Spawn"],[8,"ArcWake"],[13,"Ready"]]},\
"futures_channel":{"doc":"Asynchronous channels.","tn":["mpsc","oneshot","Receiver","SendError","Sender","TryRecvError","TrySendError","UnboundedReceiver","UnboundedSender","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","close","close_channel","close_channel","disconnect","disconnect","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash_receiver","hash_receiver","into","into","into","into","into","into","into","into_inner","into_send_error","is_closed","is_closed","is_connected_to","is_connected_to","is_disconnected","is_disconnected","is_full","is_full","is_terminated","is_terminated","ne","ne","poll_close","poll_close","poll_flush","poll_flush","poll_next","poll_next","poll_ready","poll_ready","poll_ready","poll_ready","same_receiver","same_receiver","start_send","start_send","start_send","start_send","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_next","try_poll_next","try_poll_next","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded","unbounded_send","Canceled","Cancellation","Receiver","Sender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancellation","channel","clone","clone_into","close","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_future","into_future","is_canceled","is_connected_to","is_terminated","poll","poll","poll_canceled","send","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll","try_recv","type_id","type_id","type_id","type_id"],"q":["futures_channel","","futures_channel::mpsc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures_channel::oneshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A multi-producer, single-consumer queue for sending values …","A channel for sending a single message between …","The receiving end of a bounded mpsc channel.","The error type for <code>Sender</code>s used as <code>Sink</code>s.","The transmission end of a bounded mpsc channel.","The error type returned from <code>try_next</code>.","The error type returned from <code>try_send</code>.","The receiving end of an unbounded mpsc channel.","The transmission end of an unbounded mpsc channel.","","","","","","","","","","","","","","","Creates a bounded mpsc channel for communicating between …","","","","","","","","","Closes the receiving half of a channel, without dropping …","Closes the receiving half of a channel, without dropping …","Closes this channel from the sender side, preventing any …","Closes this channel from the sender side, preventing any …","Disconnects this sender from the channel, closing it if …","Disconnects this sender from the channel, closing it if …","","","","","","","","","","","","","","","","","","","","","","Hashes the receiver into the provided hasher","Hashes the receiver into the provided hasher","","","","","","","","Returns the message that was attempted to be sent but …","Drops the message and converts into a <code>SendError</code>.","Returns whether this channel is closed without needing a …","Returns whether this channel is closed without needing a …","Returns whether the sender send to this receiver.","Returns whether the sender send to this receiver.","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the channel …","Returns <code>true</code> if this error is a result of the channel …","","","","","","","","","","","Polls the channel to determine if there is guaranteed …","","Check if the channel is ready to receive a message.","","Returns whether the senders send to the same receiver.","Returns whether the senders send to the same receiver.","","Send a message on the channel.","","Send a message on the channel.","","","","","","","","","","","","","","","","","","","","","","Tries to receive the next message without notifying a …","Tries to receive the next message without notifying a …","","","Attempts to send a message on this <code>Sender</code>, returning the …","","","","","","","","Creates an unbounded mpsc channel for communicating …","Sends a message along this channel.","Error returned from a <code>Receiver</code> when the corresponding …","A future that resolves when the receiving end of a channel …","A future for a value that will be provided by another …","A means of transmitting a single value to another task.","","","","","","","","","Creates a future that resolves when this <code>Sender</code>’s …","Creates a new one-shot channel for sending a single value …","","","Gracefully close this receiver, preventing any subsequent …","","","","","","","","","","","","","","","","","","","Tests to see whether this <code>Sender</code>’s corresponding <code>Receiver</code>","Tests to see whether this <code>Sender</code> is connected to the given …","","","","Polls this <code>Sender</code> half to detect whether its associated …","Completes this oneshot with a successful result.","","","","","","","","","","","","Attempts to receive a message outside of the context of a …","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,0,2,3,6,7,2,3,6,7,4,5,2,3,2,3,4,5,6,7,1,1,2,3,4,5,6,6,7,7,1,2,3,4,5,6,7,2,3,1,2,3,4,5,6,7,7,7,2,3,2,3,6,7,6,7,4,5,6,7,2,3,2,3,4,5,2,2,3,3,2,3,2,2,3,3,2,3,6,7,1,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,4,5,4,5,2,1,2,3,4,5,6,7,0,3,0,0,0,0,8,9,10,11,8,9,10,11,9,0,11,11,8,8,9,11,8,9,10,11,11,8,9,10,11,8,9,10,11,8,10,9,9,8,8,10,9,9,11,11,8,9,10,11,8,9,10,11,8,8,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[],["senderror",3]],[[],["trysenderror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["senderror",3]],["bool",15]],[[["trysenderror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["senderror",3]],[[],["bool",15]],[[],["bool",15]],[[["receiver",3]],["bool",15]],[[["unboundedreceiver",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["senderror",3]],["bool",15]],[[["trysenderror",3]],["bool",15]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["context",3]],[["result",4,["senderror"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["result",4,["senderror"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[],["bool",15]],[[],["bool",15]],[[["pin",3]],["result",4]],[[],[["result",4,["senderror"]],["senderror",3]]],[[["pin",3]],["result",4]],[[],[["result",4,["senderror"]],["senderror",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["option","tryrecverror"]],["option",4],["tryrecverror",3]]],[[],[["result",4,["option","tryrecverror"]],["option",4],["tryrecverror",3]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],[["trysenderror",3],["result",4,["trysenderror"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],[["trysenderror",3],["result",4,["trysenderror"]]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cancellation",3]],[[]],[[],["canceled",3]],[[]],[[]],[[]],[[]],[[["canceled",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["receiver",3]],["bool",15]],[[],["bool",15]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4,["canceled"]]]],[[["pin",3],["context",3]],["poll",4]],[[["context",3]],["poll",4]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[],[["result",4,["option","canceled"]],["option",4],["canceled",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"TryRecvError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"Receiver"],[3,"Sender"],[3,"Cancellation"],[3,"Canceled"]]},\
"futures_core":{"doc":"Core traits and types for asynchronous operations in Rust.","t":[0,14,0,0,6,16,8,6,16,8,10,10,6,16,8,16,6,16,8,8,10,10,11,10],"n":["future","ready","stream","task","BoxFuture","Error","FusedFuture","LocalBoxFuture","Ok","TryFuture","is_terminated","try_poll","BoxStream","Error","FusedStream","Item","LocalBoxStream","Ok","Stream","TryStream","is_terminated","poll_next","size_hint","try_poll_next"],"q":["futures_core","","","","futures_core::future","","","","","","","","futures_core::stream","","","","","","","","","","",""],"d":["Futures.","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Asynchronous streams.","Task notification.","An owned dynamically typed <code>Future</code> for use in cases where …","The type of failures yielded by this future","A future which tracks whether or not the underlying future …","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","The type of successful values yielded by this future","A convenience for futures that return <code>Result</code> values that …","Returns <code>true</code> if the underlying future should no longer be …","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","An owned dynamically typed <code>Stream</code> for use in cases where …","The type of failures yielded by this future","A stream which tracks whether or not the underlying stream …","Values yielded by the stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","The type of successful values yielded by this future","A stream of values produced asynchronously.","A convenience for streams that return <code>Result</code> values that …","Returns <code>true</code> if the stream should no longer be polled.","Attempt to pull out the next value of this stream, …","Returns the bounds on the remaining length of the stream.","Poll this <code>TryStream</code> as if it were a <code>Stream</code>."],"i":[0,0,0,0,0,1,0,0,1,0,2,1,0,3,0,4,0,3,0,0,5,4,4,3],"f":[null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],null,null,null,null,null,null,null,null,[[],["bool",15]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]]],"p":[[8,"TryFuture"],[8,"FusedFuture"],[8,"TryStream"],[8,"Stream"],[8,"FusedStream"]]},\
"futures_io":{"doc":"Asynchronous I/O","t":[8,8,8,8,10,10,10,10,10,11,11,10,10,11,11],"n":["AsyncBufRead","AsyncRead","AsyncSeek","AsyncWrite","consume","poll_close","poll_fill_buf","poll_flush","poll_read","poll_read_vectored","poll_read_vectored","poll_seek","poll_write","poll_write_vectored","poll_write_vectored"],"q":["futures_io","","","","","","","","","","","","","",""],"d":["Read bytes asynchronously.","Read bytes asynchronously.","Seek bytes asynchronously.","Write bytes asynchronously.","Tells this buffer that <code>amt</code> bytes have been consumed from …","Attempt to close the object.","Attempt to return the contents of the internal buffer, …","Attempt to flush the object, ensuring that any buffered …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to seek to an offset, in bytes, in a stream.","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","Attempt to write bytes from <code>bufs</code> into the object using …"],"i":[0,0,0,0,1,2,1,2,3,3,3,4,2,2,2],"f":[null,null,null,null,[[["pin",3],["usize",15]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3],["seekfrom",4]],[["result",6,["u64"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]]],"p":[[8,"AsyncBufRead"],[8,"AsyncWrite"],[8,"AsyncRead"],[8,"AsyncSeek"]]},\
"futures_macro":{"doc":"The futures-rs procedural macro implementations.","t":[14,14,14,14,23,14],"n":["join_internal","select_biased_internal","select_internal","stream_select_internal","test_internal","try_join_internal"],"q":["futures_macro","","","","",""],"d":["The <code>join!</code> macro.","The <code>select_biased!</code> macro.","The <code>select!</code> macro.","The <code>stream_select!</code> macro.","","The <code>try_join!</code> macro."],"i":[0,0,0,0,0,0],"f":[null,null,null,null,null,null],"p":[]},\
"futures_sink":{"doc":"Asynchronous sinks","t":[16,8,10,10,10,10],"n":["Error","Sink","poll_close","poll_flush","poll_ready","start_send"],"q":["futures_sink","","","","",""],"d":["The type of value produced by the sink when an error …","A <code>Sink</code> is a value into which other values can be sent, …","Flush any remaining output and close this sink, if …","Flush any remaining output from this sink.","Attempts to prepare the <code>Sink</code> to receive a value.","Begin the process of sending a value to the sink. Each …"],"i":[1,0,1,1,1,1],"f":[null,null,[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3]],["result",4]]],"p":[[8,"Sink"]]},\
"futures_task":{"doc":"Tools for working with tasks.","t":[8,3,3,8,8,3,8,3,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,5,5,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,5],"n":["ArcWake","FutureObj","LocalFutureObj","LocalSpawn","Spawn","SpawnError","UnsafeFutureObj","WakerRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into_future","into_future","into_future_obj","into_raw","is_shutdown","new","new","new","new_unowned","noop_waker","noop_waker_ref","poll","poll","shutdown","spawn_local_obj","spawn_obj","status","status","status_local","status_local","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wake","wake","wake_by_ref","waker","waker_ref"],"q":["futures_task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A way of waking up a specific task.","A custom trait object for polling futures, roughly akin to …","A custom trait object for polling futures, roughly akin to …","The <code>LocalSpawn</code> is similar to <code>Spawn</code>, but allows spawning …","The <code>Spawn</code> trait allows for pushing futures onto an …","An error that occurred during spawning.","A custom implementation of a future trait object for …","A <code>Waker</code> that is only valid for a given lifetime.","","","","","","","","","","Drops the future represented by the given fat pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.","Convert an owned instance into a (conceptually owned) fat …","Check whether spawning failed to the executor being shut …","Create a <code>LocalFutureObj</code> from a custom trait object …","Create a <code>FutureObj</code> from a custom trait object …","Create a new <code>WakerRef</code> from a <code>Waker</code> reference.","Create a new <code>WakerRef</code> from a <code>Waker</code> that must not be …","Create a new <code>Waker</code> which does nothing when <code>wake()</code> is …","Get a static reference to a <code>Waker</code> which does nothing when …","","","Spawning failed because the executor has been shut down.","Spawns a future that will be run to completion.","Spawns a future that will be run to completion.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","","","","","","","","","","","","","","Indicates that the associated task is ready to make …","Indicates that the associated task is ready to make …","Indicates that the associated task is ready to make …","Creates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.","Creates a reference to a <code>Waker</code> from a reference to …"],"i":[0,0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,4,5,2,1,1,2,3,4,1,2,2,2,2,2,2,3,3,3,3,3,4,1,2,3,4,2,3,2,5,1,2,3,4,4,0,0,2,3,1,6,7,7,7,6,6,1,1,2,3,4,1,2,3,4,1,2,3,4,8,8,8,0,0],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["waker",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["box",3,["future"]],["future",8]]],[[["futureobj",3]]],[[]],[[["pin",3,["box"]],["box",3,["future"]]]],[[["box",3]]],[[["pin",3,["box"]],["box",3]]],[[["future",8],["box",3,["future"]]]],[[["pin",3,["box"]],["box",3,["future"]]]],[[["pin",3,["box"]],["box",3]]],[[]],[[["box",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["futureobj",3]],[[]],[[],["bool",15]],[[["unsafefutureobj",8]]],[[["send",8],["unsafefutureobj",8]]],[[["waker",3]]],[[["manuallydrop",3,["waker"]],["waker",3]]],[[],["waker",3]],[[],["waker",3]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[]],[[["localfutureobj",3]],[["spawnerror",3],["result",4,["spawnerror"]]]],[[["futureobj",3]],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["arc",3]]],[[["arc",3]]],[[["arc",3]]],[[["arc",3]],["waker",3]],[[["arc",3]],["wakerref",3]]],"p":[[3,"SpawnError"],[3,"LocalFutureObj"],[3,"FutureObj"],[3,"WakerRef"],[8,"UnsafeFutureObj"],[8,"LocalSpawn"],[8,"Spawn"],[8,"ArcWake"]]},\
"futures_util":{"doc":"Combinators and utilities for working with <code>Future</code>s, <code>Stream</code>…","t":[0,0,14,0,0,14,14,14,14,14,14,0,0,14,0,14,3,3,3,3,3,6,3,13,13,4,3,16,3,3,3,3,8,13,13,8,3,13,13,3,3,3,3,3,3,3,3,3,3,3,13,6,3,3,3,3,3,3,4,3,16,3,3,3,3,3,3,3,3,3,13,3,3,3,3,3,3,3,8,8,3,3,3,3,3,4,3,3,8,3,3,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,8,8,8,8,8,8,8,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,3,3,16,3,3,3,3,3,8,3,8,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,12,12,3,3,3,3,3,6,3,3,3,3,3,3,3,3,3,3,3,16,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,16,3,13,6,3,3,3,3,3,3,16,3,3,3,3,3,3,3,3,4,3,3,3,3,13,3,3,3,3,3,3,3,3,3,8,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,8,3,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,5,0,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,3,8,8,8,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,5],"n":["future","io","join","lock","never","pending","pin_mut","poll","ready","select","select_biased","sink","stream","stream_select","task","try_join","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxFuture","CatchUnwind","Done","Done","Either","ErrInto","Error","Flatten","FlattenSink","FlattenStream","Fuse","FusedFuture","Future","Future","FutureExt","FutureObj","Gone","Gone","Inspect","InspectErr","InspectOk","IntoFuture","IntoStream","Join","Join3","Join4","Join5","JoinAll","Lazy","Left","LocalBoxFuture","LocalFutureObj","Map","MapErr","MapInto","MapOk","MapOkOrElse","MaybeDone","NeverError","Ok","OkInto","OptionFuture","OrElse","Pending","PollFn","PollImmediate","Ready","Remote","RemoteHandle","Right","Select","SelectAll","SelectOk","Shared","Then","TryFlatten","TryFlattenStream","TryFuture","TryFutureExt","TryJoin","TryJoin3","TryJoin4","TryJoin5","TryJoinAll","TryMaybeDone","TrySelect","UnitError","UnsafeFutureObj","UnwrapOrElse","WeakShared","abort","abortable","and_then","and_then","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed_local","boxed_local","catch_unwind","catch_unwind","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consume","default","downgrade","drop","drop","eq","err","err_into","err_into","factor_first","factor_second","flatten","flatten","flatten_sink","flatten_sink","flatten_stream","flatten_stream","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","fuse","fuse","inspect","inspect","inspect_err","inspect_err","inspect_ok","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_raw","into_stream","into_stream","is_aborted","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","join","join3","join4","join5","join_all","lazy","left_future","left_future","map","map","map_err","map_err","map_into","map_into","map_ok","map_ok","map_ok_or_else","map_ok_or_else","maybe_done","never_error","never_error","new","new_pair","now_or_never","now_or_never","ok","ok_into","ok_into","or_else","or_else","output_mut","output_mut","peek","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_read","poll_read_vectored","poll_ready","poll_ready","poll_ready","poll_ready","poll_seek","poll_unpin","poll_unpin","poll_write","poll_write_vectored","ready","remote_handle","remote_handle","right_future","right_future","select","select_all","select_ok","shared","shared","size_hint","size_hint","size_hint","size_hint","size_hint","start_send","start_send","start_send","start_send","strong_count","take_output","take_output","terminated","then","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_flatten","try_flatten","try_flatten_stream","try_flatten_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_join","try_join3","try_join4","try_join5","try_join_all","try_maybe_done","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_unpin","try_poll_unpin","try_select","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_error","unit_error","unwrap_or_else","unwrap_or_else","upgrade","weak_count","0","0","0","0","0","0","0","1","AllowStdIo","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","BufReader","BufWriter","Chain","Close","Copy","CopyBuf","Cursor","Empty","FillBuf","Flush","IntoSink","LineWriter","Lines","Read","ReadExact","ReadHalf","ReadLine","ReadToEnd","ReadToString","ReadUntil","ReadVectored","Repeat","ReuniteError","SeeKRelative","Seek","Sink","Take","Window","Write","WriteAll","WriteHalf","WriteVectored","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","chain","clone","clone","clone_into","clone_into","close","cmp","consume","consume","consume","consume","consume","consume","consume","consume","consume","consume_unpin","copy","copy_buf","default","empty","end","eq","fill_buf","fill_buf","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_sink","limit","lines","ne","new","new","new","new","new","new","partial_cmp","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_next","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_ready","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek_relative","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","position","read","read","read_exact","read_exact","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","read_vectored","read_vectored","repeat","reunite","reunite","seek","seek","seek_relative","set","set_limit","set_position","sink","split","start","start_send","stream_position","take","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity","with_capacity","write","write","write_all","write_all","write_fmt","write_vectored","write_vectored","MappedMutexGuard","Mutex","MutexGuard","MutexLockFuture","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mut","into","into","into","into","into_future","into_inner","is_terminated","lock","map","map","new","poll","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","Never","Buffer","Close","Drain","Error","Fanout","Feed","Flush","Send","SendAll","Sink","SinkErrInto","SinkExt","SinkMapErr","Unfold","With","WithFlatMap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone_into","clone_into","close","drain","fanout","feed","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_terminated","is_terminated","is_terminated","is_terminated","left_sink","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close_unpin","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush_unpin","poll_next","poll_next","poll_next","poll_next","poll_next","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready_unpin","right_sink","send","send_all","sink_err_into","sink_map_err","size_hint","size_hint","size_hint","size_hint","size_hint","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send_unpin","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","with","with_flat_map","0","0","1","1","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxStream","BufferUnordered","Buffered","CatchUnwind","Chain","Chunks","Collect","Concat","Cycle","Empty","Enumerate","ErrInto","Error","Filter","FilterMap","FlatMap","Flatten","Fold","ForEach","ForEachConcurrent","Forward","Fuse","FusedStream","FuturesOrdered","FuturesUnordered","Inspect","InspectErr","InspectOk","IntoAsyncRead","IntoStream","Item","Iter","Left","LocalBoxStream","Map","MapErr","MapOk","Next","NextIf","NextIfEq","Ok","Once","OrElse","Peek","PeekMut","Peekable","Pending","PollFn","PollImmediate","PollNext","ReadyChunks","Repeat","RepeatWith","ReuniteError","Right","Scan","Select","SelectAll","SelectNextSome","SelectWithStrategy","Skip","SkipWhile","SplitSink","SplitStream","Stream","StreamExt","StreamFuture","Take","TakeUntil","TakeWhile","Then","TryBufferUnordered","TryBuffered","TryChunks","TryChunksError","TryCollect","TryConcat","TryFilter","TryFilterMap","TryFlatten","TryFold","TryForEach","TryForEachConcurrent","TryNext","TrySkipWhile","TryStream","TryStreamExt","TryTakeWhile","TryUnfold","Unfold","Unzip","Zip","abortable","all","all","and_then","and_then","any","any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed_local","boxed_local","buffer_unordered","buffer_unordered","buffered","buffered","by_ref","by_ref","catch_unwind","catch_unwind","chain","chain","chunks","chunks","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect","collect","concat","concat","consume","count","count","cycle","cycle","default","default","default","default","drop","empty","enumerate","enumerate","eq","eq","err_into","err_into","extend","extend","extend","filter","filter","filter_map","filter_map","flat_map","flat_map","flatten","flatten","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","for_each","for_each","for_each_concurrent","for_each_concurrent","forward","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","fuse","fuse","futures_unordered","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","inspect","inspect","inspect_err","inspect_err","inspect_ok","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_async_read","into_async_read","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_stream","into_stream","is_done","is_empty","is_stopped","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","iter","left_stream","left_stream","len","map","map","map_err","map_err","map_ok","map_ok","ne","new","next","next","next_if","next_if_eq","once","or_else","or_else","peek","peek_mut","peekable","peekable","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next_unpin","poll_next_unpin","poll_peek","poll_peek_mut","poll_read","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_write","push","ready_chunks","ready_chunks","repeat","repeat_with","reunite","reunite","right_stream","right_stream","scan","scan","select","select_all","select_all","select_next_some","select_next_some","select_with_strategy","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip","skip_while","skip_while","spawn_local_obj","spawn_obj","split","split","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","take","take","take_future","take_result","take_until","take_until","take_while","take_while","then","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","try_buffer_unordered","try_buffer_unordered","try_buffered","try_buffered","try_chunks","try_chunks","try_collect","try_collect","try_concat","try_concat","try_filter","try_filter","try_filter_map","try_filter_map","try_flatten","try_flatten","try_fold","try_fold","try_for_each","try_for_each","try_for_each_concurrent","try_for_each_concurrent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_next","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next_unpin","try_poll_next_unpin","try_skip_while","try_skip_while","try_take_while","try_take_while","try_unfold","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","unzip","unzip","zip","zip","FuturesUnordered","IntoIter","Iter","IterMut","IterPinMut","IterPinRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","iter_pin_mut","iter_pin_ref","len","new","next","next","next","next","next","push","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","IntoIter","Iter","IterMut","SelectAll","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","len","new","next","next","next","push","select_all","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ArcWake","AtomicWaker","FutureObj","LocalFutureObj","LocalSpawn","LocalSpawnExt","Spawn","SpawnError","SpawnExt","UnsafeFutureObj","WakerRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into_future","into_future","into_future_obj","into_raw","is_shutdown","new","new","new","new","new_unowned","noop_waker","noop_waker_ref","poll","poll","register","shutdown","spawn","spawn","spawn_local","spawn_local","spawn_local_obj","spawn_local_with_handle","spawn_local_with_handle","spawn_obj","spawn_with_handle","spawn_with_handle","status","status_local","take","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","type_id","type_id","type_id","type_id","type_id","wake","wake","wake_by_ref","waker","waker_ref"],"q":["futures_util","","","","","","","","","","","","","","","","futures_util::futurefutures_util::future::Either","","futures_util::future::MaybeDone","","futures_util::future::TryMaybeDone","","futures_util::iofutures_util::lock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures_util::never","futures_util::sinkfutures_util::streamfutures_util::stream::futures_unordered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures_util::stream::select_all","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","futures_util::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Asynchronous values.","Asynchronous I/O.","Polls multiple futures simultaneously, returning a tuple …","Futures-powered synchronization primitives.","This module contains the <code>Never</code> type.","A macro which yields to the event loop once.","Pins a value on the stack.","A macro which returns the result of polling a future once …","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Polls multiple futures and streams simultaneously, …","Polls multiple futures and streams simultaneously, …","Asynchronous sinks.","Asynchronous streams.","Combines several streams, all producing the same <code>Item</code> …","Tools for working with tasks.","Polls multiple futures simultaneously, resolving to a …","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>and_then</code> method.","An owned dynamically typed <code>Future</code> for use in cases where …","Future for the <code>catch_unwind</code> method.","The output of the completed future","The output of the completed future","Combines two different futures, streams, or sinks having …","Future for the <code>err_into</code> method.","The type of failures yielded by this future","Future for the <code>flatten</code> method.","Sink for the <code>flatten_sink</code> method.","Stream for the <code>flatten_stream</code> method.","Future for the <code>fuse</code> method.","A future which tracks whether or not the underlying future …","A not-yet-completed future","A not-yet-completed future","An extension trait for <code>Future</code>s that provides a variety of …","A custom trait object for polling futures, roughly akin to …","The empty variant after the result of a <code>MaybeDone</code> has been …","The empty variant after the result of a <code>TryMaybeDone</code> has …","Future for the <code>inspect</code> method.","Future for the <code>inspect_err</code> method.","Future for the <code>inspect_ok</code> method.","Future for the <code>into_future</code> method.","Stream for the <code>into_stream</code> method.","Future for the <code>join</code> function.","Future for the <code>join3</code> function.","Future for the <code>join4</code> function.","Future for the <code>join5</code> function.","Future for the <code>join_all</code> function.","Future for the <code>lazy</code> function.","First branch of the type","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","A custom trait object for polling futures, roughly akin to …","Future for the <code>map</code> method.","Future for the <code>map_err</code> method.","Future for the <code>map_into</code> combinator.","Future for the <code>map_ok</code> method.","Future for the <code>map_ok_or_else</code> method.","A future that may have completed.","Future for the <code>never_error</code> combinator.","The type of successful values yielded by this future","Future for the <code>ok_into</code> method.","A future representing a value which may or may not be …","Future for the <code>or_else</code> method.","Future for the <code>pending()</code> function.","Future for the <code>poll_fn</code> function.","Future for the <code>poll_immediate</code> function.","Future for the <code>ready</code> function.","A future which sends its output to the corresponding …","The handle to a remote future returned by <code>remote_handle</code>. …","Second branch of the type","Future for the <code>select()</code> function.","Future for the <code>select_all</code> function.","Future for the <code>select_ok</code> function.","Future for the <code>shared</code> method.","Future for the <code>then</code> method.","Future for the <code>try_flatten</code> method.","Future for the <code>try_flatten_stream</code> method.","A convenience for futures that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning futures","Future for the <code>try_join</code> function.","Future for the <code>try_join3</code> function.","Future for the <code>try_join4</code> function.","Future for the <code>try_join5</code> function.","Future for the <code>try_join_all</code> function.","A future that may have completed with an error.","Future for the <code>try_select()</code> function.","Future for the <code>unit_error</code> combinator.","A custom implementation of a future trait object for …","Future for the <code>unwrap_or_else</code> method.","A weak reference to a <code>Shared</code> that can be upgraded much …","Abort the <code>Abortable</code> stream/future associated with this …","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …","Executes another future after this one resolves …","Executes another future after this one resolves …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Catches unwinding panics while polling the future.","Catches unwinding panics while polling the future.","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>WeakShared</code> for this <code>Shared</code>.","Drops the future represented by the given fat pointer.","","","Create a future that is immediately ready with an error …","Maps this future’s <code>Error</code> to a new error type using the …","Maps this future’s <code>Error</code> to a new error type using the …","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Flatten the execution of this future when the output of …","Flatten the execution of this future when the output of …","Flattens the execution of this future when the successful …","Flattens the execution of this future when the successful …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drops this handle <em>without</em> canceling the underlying future.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fuse a future such that <code>poll</code> will never again be called …","Fuse a future such that <code>poll</code> will never again be called …","Do something with the output of a future before passing it …","Do something with the output of a future before passing it …","Do something with the error value of a future before …","Do something with the error value of a future before …","Do something with the success value of a future before …","Do something with the success value of a future before …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps the value from this immediately ready future.","Consumes this combinator, returning the underlying futures.","Extract the value of an either over two equivalent types.","Convert an owned instance into a (conceptually owned) fat …","Convert this future into a single element stream.","Convert this future into a single element stream.","Checks whether the task has been aborted. Note that all …","Returns <code>true</code> if the underlying future should no longer be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Creates a future which represents a collection of the …","Creates a new future that allows delayed execution of a …","Wrap this future in an <code>Either</code> future, making it the …","Wrap this future in an <code>Either</code> future, making it the …","Map this future’s output to a different type, returning …","Map this future’s output to a different type, returning …","Maps this future’s error value to a different value.","Maps this future’s error value to a different value.","Map this future’s output to a different type, returning …","Map this future’s output to a different type, returning …","Maps this future’s success value to a different value.","Maps this future’s success value to a different value.","Maps this future’s success value to a different value, …","Maps this future’s success value to a different value, …","Wraps a future into a <code>MaybeDone</code>","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Creates a new <code>Abortable</code> future/stream using an existing …","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which can …","Evaluates and consumes the future, returning the resulting …","Evaluates and consumes the future, returning the resulting …","Create a future that is immediately ready with a success …","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Executes another future if this one resolves to an error. …","Executes another future if this one resolves to an error. …","Returns an <code>Option</code> containing a mutable reference to the …","Returns an <code>Option</code> containing a mutable reference to the …","Returns <code>Some</code> containing a reference to this <code>Shared</code>’s …","Creates a future which never resolves, representing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new future wrapping around a function returning …","Creates a future that is immediately ready with an Option …","","","","","","","","","","","","","","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","","","Creates a future that is immediately ready with a value.","Turn this future into a future that yields <code>()</code> on …","Turn this future into a future that yields <code>()</code> on …","Wrap this future in an <code>Either</code> future, making it the …","Wrap this future in an <code>Either</code> future, making it the …","Waits for either one of two differently-typed futures to …","Creates a new future which will select over a list of …","Creates a new future which will select the first …","Create a cloneable handle to this future where all handles …","Create a cloneable handle to this future where all handles …","","","","","","","","","","Gets the number of strong pointers to this allocation.","Attempt to take the output of a <code>MaybeDone</code> without driving …","Attempt to take the output of a <code>TryMaybeDone</code> without …","Creates a new <code>Fuse</code>-wrapped future which is already …","Chain on a computation for when a future finished, passing …","Chain on a computation for when a future finished, passing …","","","","","","","","","","","","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Creates a future which represents either a collection of …","Wraps a future into a <code>TryMaybeDone</code>","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryFuture::try_poll</code> on …","A convenience method for calling <code>TryFuture::try_poll</code> on …","Waits for either one of two differently-typed futures to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Unwraps this future’s output, producing a future with …","Unwraps this future’s output, producing a future with …","Attempts to upgrade this <code>WeakShared</code> into a <code>Shared</code>.","Gets the number of weak pointers to this allocation.","","","","","","","","","A simple wrapper type which allows types which implement …","Read bytes asynchronously.","An extension trait which adds utility methods to …","Read bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncRead</code> …","Seek bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncSeek</code> …","Write bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncWrite</code>…","The <code>BufReader</code> struct adds buffering to any reader.","Wraps a writer and buffers its output.","Reader for the <code>chain</code> method.","Future for the <code>close</code> method.","Future for the <code>copy()</code> function.","Future for the <code>copy_buf()</code> function.","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …","Reader for the <code>empty()</code> function.","Future for the <code>fill_buf</code> method.","Future for the <code>flush</code> method.","Sink for the <code>into_sink</code> method.","Wrap a writer, like <code>BufWriter</code> does, but prioritizes …","Stream for the <code>lines</code> method.","Future for the <code>read</code> method.","Future for the <code>read_exact</code> method.","The readable half of an object returned from …","Future for the <code>read_line</code> method.","Future for the <code>read_to_end</code> method.","Future for the <code>read_to_string</code> method.","Future for the <code>read_until</code> method.","Future for the <code>read_vectored</code> method.","Reader for the <code>repeat()</code> function.","Error indicating a <code>ReadHalf&lt;T&gt;</code> and <code>WriteHalf&lt;T&gt;</code> were not …","Future for the <code>BufReader::seek_relative</code> method.","Future for the <code>seek</code> method.","Writer for the <code>sink()</code> function.","Reader for the <code>take</code> method.","A owned window around an underlying buffer.","Future for the <code>write</code> method.","Future for the <code>write_all</code> method.","The writable half of an object returned from …","Future for the <code>write_vectored</code> method.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the internally buffered data.","Returns a reference to the internally buffered data.","Returns a reference to <code>buf_writer</code>’s internally buffered …","Creates an adaptor which will chain this stream with …","","","","","Creates a future which will entirely close this <code>AsyncWrite</code>.","","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","","","","","","A convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …","Creates a future which copies all the bytes from one …","Creates a future which copies all the bytes from one …","","Constructs a new handle to an empty reader.","Returns the end index of this window into the underlying …","","Creates a future which will wait for a non-empty buffer to …","","Creates a future which will entirely flush this <code>AsyncWrite</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the contained IO object.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Gets mutable references to the underlying readers in this …","Gets a mutable reference to the underlying value in this …","Acquires a mutable reference to the underlying sink or …","Gets a mutable reference to the underlying buffer inside …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Gets pinned mutable references to the underlying readers …","Acquires a pinned mutable reference to the underlying sink …","Returns a reference to the contained IO object.","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Gets references to the underlying readers in this <code>Chain</code>.","Gets a reference to the underlying value in this cursor.","Acquires a reference to the underlying sink or stream that …","Gets a shared reference to the underlying buffer inside of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes self and returns the contained IO object.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes the <code>Chain</code>, returning the wrapped readers.","Consumes this cursor, returning the underlying value.","Consumes this combinator, returning the underlying sink or …","Consumes this <code>Window</code>, returning the underlying buffer.","Allow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.","Returns the remaining number of bytes that can be read …","Returns a stream over the lines of this reader. This …","","Creates a new <code>AllowStdIo</code> from an existing IO object.","Creates a new <code>BufReader</code> with a default buffer capacity. …","Creates a new <code>BufWriter</code> with a default buffer capacity. …","Create a new <code>LineWriter</code> with default buffer capacity. The …","Creates a new cursor wrapping the provided underlying …","Creates a new window around the buffer <code>t</code> defaulting to the …","","","","","","","","","","","","","","","","","","","Attempt to close the object.","","","","","Forward to <code>buf_writer</code> ’s <code>BufWriter::poll_close()</code>","","","","","","","Attempt to return the contents of the internal buffer, …","","","","","","","","Attempt to flush the object, ensuring that any buffered …","","","","","Forward to <code>buf_writer</code> ’s <code>BufWriter::poll_flush()</code>","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","","","","","","","","","","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","","Attempt to seek to an offset, in bytes, in a stream.","","Seek to an offset, in bytes, in the underlying reader.","Seek to the offset, in bytes, in the underlying writer.","","Attempts to seek relative to the current position. If the …","Attempt to write bytes from <code>buf</code> into the object.","","","","","","","","","","","","","","","","","","","","","Attempt to write bytes from <code>bufs</code> into the object using …","Returns the current position of this cursor.","Tries to read some bytes directly into the given <code>buf</code> in …","","Creates a future which will read exactly enough bytes to …","","Creates a future which will read all the bytes associated …","Creates a future which will read all the bytes from this …","","Creates a future which will read all the bytes from this …","","Creates a future which will read all the bytes associated …","Creates a future which will read from the <code>AsyncRead</code> into …","","Creates an instance of a reader that infinitely repeats …","Attempts to put the two “halves” of a split …","Attempts to put the two “halves” of a split …","Creates a future which will seek an IO object, and then …","","Seeks relative to the current position. If the new …","Changes the range of this window to the range specified.","Sets the number of bytes that can be read before this …","Sets the position of this cursor.","Creates an instance of a writer which will successfully …","Helper method for splitting this read/write object into …","Returns the starting index of this window into the …","","Creates a future which will return the current seek …","Creates an AsyncRead adapter which will read at most <code>limit</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>BufReader</code> with the specified buffer capacity.","Creates a new <code>BufWriter</code> with the specified buffer capacity.","Creates a new <code>LineWriter</code> with the specified buffer …","Creates a future which will write bytes from <code>buf</code> into the …","","Write data into this object.","","","Creates a future which will write bytes from <code>bufs</code> into the …","","An RAII guard returned by the <code>MutexGuard::map</code> and …","A futures-aware mutex.","An RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …","A future which resolves when the target mutex has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the underlying data.","","","","","","Consumes this mutex, returning the underlying data.","","Acquire the lock asynchronously.","Returns a locked view over a portion of the locked data.","Returns a locked view over a portion of the locked data.","Creates a new futures-aware mutex.","","","","","","","","","","Attempt to acquire the lock immediately.","","","","","A type with no possible values.","Sink for the <code>buffer</code> method.","Future for the <code>close</code> method.","Sink for the <code>drain</code> function.","The type of value produced by the sink when an error …","Sink that clones incoming items and forwards them to two …","Future for the <code>feed</code> method.","Future for the <code>flush</code> method.","Future for the <code>send</code> method.","Future for the <code>send_all</code> method.","A <code>Sink</code> is a value into which other values can be sent, …","Sink for the <code>sink_err_into</code> method.","An extension trait for <code>Sink</code>s that provides a variety of …","Sink for the <code>sink_map_err</code> method.","Sink for the <code>unfold</code> function.","Sink for the <code>with</code> method.","Sink for the <code>with_flat_map</code> method.","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a fixed-size buffer to the current sink.","","","","","Close the sink.","Create a sink that will just discard all items given to it.","Fanout items to multiple sinks.","A future that completes after the given item has been …","Flush the sink, processing all pending items.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner sinks.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Get a pinned mutable reference to the inner sinks.","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Get a shared reference to the inner sinks.","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","","","","","","","","","","","","","","","","","","","Consumes this combinator, returning the underlying sinks.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","","","","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …","","","","","","Flush any remaining output and close this sink, if …","","","","","","","","","A convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …","Flush any remaining output from this sink.","","","","","","","","","A convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …","","","","","","Attempts to prepare the <code>Sink</code> to receive a value.","","","","","","","","","A convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …","Wrap this stream in an <code>Either</code> stream, making it the …","A future that completes after the given item has been …","A future that completes after the given stream has been …","Map this sink’s error to a different error type using …","Transforms the error returned by the sink.","","","","","","Begin the process of sending a value to the sink. Each …","","","","","","","","","A convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a sink from a function which processes one item at …","Composes a function <em>in front of</em> the sink.","Composes a function <em>in front of</em> the sink.","","","","","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Stream for the <code>and_then</code> method.","An owned dynamically typed <code>Stream</code> for use in cases where …","Stream for the <code>buffer_unordered</code> method.","Stream for the <code>buffered</code> method.","Stream for the <code>catch_unwind</code> method.","Stream for the <code>chain</code> method.","Stream for the <code>chunks</code> method.","Future for the <code>collect</code> method.","Future for the <code>concat</code> method.","Stream for the <code>cycle</code> method.","Stream for the <code>empty</code> function.","Stream for the <code>enumerate</code> method.","Stream for the <code>err_into</code> method.","The type of failures yielded by this future","Stream for the <code>filter</code> method.","Stream for the <code>filter_map</code> method.","Stream for the <code>flat_map</code> method.","Stream for the <code>flatten</code> method.","Future for the <code>fold</code> method.","Future for the <code>for_each</code> method.","Future for the <code>for_each_concurrent</code> method.","Future for the <code>forward</code> method.","Stream for the <code>fuse</code> method.","A stream which tracks whether or not the underlying stream …","An unbounded queue of futures.","A set of futures which may complete in any order.","Stream for the <code>inspect</code> method.","Stream for the <code>inspect_err</code> method.","Stream for the <code>inspect_ok</code> method.","Reader for the <code>into_async_read</code> method.","Stream for the <code>into_stream</code> method.","Values yielded by the stream.","Stream for the <code>iter</code> function.","Poll the first stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","Stream for the <code>map</code> method.","Stream for the <code>map_err</code> method.","Stream for the <code>map_ok</code> method.","Future for the <code>next</code> method.","Future for the <code>Peekable::next_if</code> method.","Future for the <code>Peekable::next_if_eq</code> method.","The type of successful values yielded by this future","A stream which emits single element and then EOF.","Stream for the <code>or_else</code> method.","Future for the <code>Peekable::peek</code> method.","Future for the <code>Peekable::peek_mut</code> method.","A <code>Stream</code> that implements a <code>peek</code> method.","Stream for the <code>pending()</code> function.","Stream for the <code>poll_fn</code> function.","Stream for the poll_immediate function.","Type to tell <code>SelectWithStrategy</code> which stream to poll next.","Stream for the <code>ready_chunks</code> method.","Stream for the <code>repeat</code> function.","An stream that repeats elements of type <code>A</code> endlessly by …","Error indicating a <code>SplitSink&lt;S&gt;</code> and <code>SplitStream&lt;S&gt;</code> were …","Poll the second stream.","Stream for the <code>scan</code> method.","Stream for the <code>select()</code> function.","An unbounded set of streams","Future for the <code>select_next_some</code> method.","Stream for the <code>select_with_strategy()</code> function. See …","Stream for the <code>skip</code> method.","Stream for the <code>skip_while</code> method.","A <code>Sink</code> part of the split pair","A <code>Stream</code> part of the split pair","A stream of values produced asynchronously.","An extension trait for <code>Stream</code>s that provides a variety of …","Future for the <code>into_future</code> method.","Stream for the <code>take</code> method.","Stream for the <code>take_until</code> method.","Stream for the <code>take_while</code> method.","Stream for the <code>then</code> method.","Stream for the <code>try_buffer_unordered</code> method.","Stream for the <code>try_buffered</code> method.","Stream for the <code>try_chunks</code> method.","Error indicating, that while chunk was collected inner …","Future for the <code>try_collect</code> method.","Future for the <code>try_concat</code> method.","Stream for the <code>try_filter</code> method.","Stream for the <code>try_filter_map</code> method.","Stream for the <code>try_flatten</code> method.","Future for the <code>try_fold</code> method.","Future for the <code>try_for_each</code> method.","Future for the <code>try_for_each_concurrent</code> method.","Future for the <code>try_next</code> method.","Stream for the <code>try_skip_while</code> method.","A convenience for streams that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning streams","Stream for the <code>try_take_while</code> method.","Stream for the <code>try_unfold</code> function.","Stream for the <code>unfold</code> function.","Future for the <code>unzip</code> method.","Stream for the <code>zip</code> method.","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …","Execute predicate over asynchronous stream, and return <code>true</code>…","Execute predicate over asynchronous stream, and return <code>true</code>…","Chain on a computation for when a value is ready, passing …","Chain on a computation for when a value is ready, passing …","Execute predicate over asynchronous stream, and return <code>true</code>…","Execute predicate over asynchronous stream, and return <code>true</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures.","An adaptor for creating a buffered list of pending futures.","Borrows a stream, rather than consuming it.","Borrows a stream, rather than consuming it.","Catches unwinding panics while polling the stream.","Catches unwinding panics while polling the stream.","Adapter for chaining two streams.","Adapter for chaining two streams.","An adaptor for chunking up items of the stream inside a …","An adaptor for chunking up items of the stream inside a …","","","","","","","","","","","","","","","Transforms a stream into a collection, returning a future …","Transforms a stream into a collection, returning a future …","Concatenate all items of a stream into a single extendable …","Concatenate all items of a stream into a single extendable …","","Drives the stream to completion, counting the number of …","Drives the stream to completion, counting the number of …","Repeats a stream endlessly.","Repeats a stream endlessly.","","","","","","Creates a stream which contains no elements.","Creates a stream which gives the current iteration count …","Creates a stream which gives the current iteration count …","","","Wraps the current stream in a new stream which converts …","Wraps the current stream in a new stream which converts …","","","","Filters the values produced by this stream according to …","Filters the values produced by this stream according to …","Filters the values produced by this stream while …","Filters the values produced by this stream while …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute an accumulating asynchronous computation over a …","Execute an accumulating asynchronous computation over a …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","A future that completes after the given stream has been …","A future that completes after the given stream has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fuse a stream such that <code>poll_next</code> will never again be …","Fuse a stream such that <code>poll_next</code> will never again be …","An unbounded set of futures.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying stream that …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying streams …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying stream that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying streams that this …","","Do something with each item of this stream, afterwards …","Do something with each item of this stream, afterwards …","Do something with the error value of this stream, …","Do something with the error value of this stream, …","Do something with the success value of this stream, …","Do something with the success value of this stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapter that converts this stream into an <code>AsyncRead</code>.","Adapter that converts this stream into an <code>AsyncRead</code>.","Converts this stream into a future of …","Converts this stream into a future of …","","","","","","","","","","","","","","","","","","","","","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying stream.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying streams.","","","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Returns whether the underlying stream has finished or not.","Returns <code>true</code> if the queue contains no futures","Whether the stream was stopped yet by the stopping future …","Returns <code>true</code> if the stream should no longer be polled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …","Wrap this stream in an <code>Either</code> stream, making it the …","Wrap this stream in an <code>Either</code> stream, making it the …","Returns the number of futures contained in the queue.","Maps this stream’s items to a different type, returning …","Maps this stream’s items to a different type, returning …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","","Constructs a new, empty <code>FuturesOrdered</code>","Creates a future that resolves to the next item in the …","Creates a future that resolves to the next item in the …","Creates a future which will consume and return the next …","Creates a future which will consume and return the next …","Creates a stream of a single element.","Chain on a computation for when an error happens, passing …","Chain on a computation for when an error happens, passing …","Produces a future which retrieves a reference to the next …","Produces a future which retrieves a mutable reference to …","Creates a new stream which exposes a <code>peek</code> method.","Creates a new stream which exposes a <code>peek</code> method.","Creates a stream which never returns any elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream wrapping a function returning …","Creates a new stream that always immediately returns …","Attempt to pull out the next value of this stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","Peek retrieves a reference to the next item in the stream.","Peek retrieves a mutable reference to the next item in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Push a future into the queue.","An adaptor for chunking up ready items of the stream …","An adaptor for chunking up ready items of the stream …","Create a stream which produces the same item repeatedly.","Creates a new stream that repeats elements of type <code>A</code> …","Attempts to put the two “halves” of a split …","Attempts to put the two “halves” of a split …","Wrap this stream in an <code>Either</code> stream, making it the …","Wrap this stream in an <code>Either</code> stream, making it the …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","This function will attempt to pull items from both …","An unbounded set of streams","Convert a list of streams into a <code>Stream</code> of results from …","Returns a <code>Future</code> that resolves when the next item in this …","Returns a <code>Future</code> that resolves when the next item in this …","This function will attempt to pull items from both …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bounds on the remaining length of the stream.","Creates a new stream which skips <code>n</code> items of the underlying …","Creates a new stream which skips <code>n</code> items of the underlying …","Skip elements on this stream while the provided …","Skip elements on this stream while the provided …","","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream of at most <code>n</code> items of the underlying …","Creates a new stream of at most <code>n</code> items of the underlying …","Extract the stopping future out of the combinator. The …","Once the stopping future is resolved, this method can be …","Take elements from this stream until the provided future …","Take elements from this stream until the provided future …","Take elements from this stream while the provided …","Take elements from this stream while the provided …","Computes from this stream’s items new items of a …","Computes from this stream’s items new items of a …","","","","","","","","","","Toggle the value and return the old one.","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","An adaptor for chunking up successful items of the stream …","An adaptor for chunking up successful items of the stream …","Attempt to transform a stream into a collection, returning …","Attempt to transform a stream into a collection, returning …","Attempt to concatenate all items of a stream into a single …","Attempt to concatenate all items of a stream into a single …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream while …","Attempt to filter the values produced by this stream while …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Attempt to execute an accumulating asynchronous …","Attempt to execute an accumulating asynchronous …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a future that attempts to resolve the next item in …","Creates a future that attempts to resolve the next item in …","","","","","","","","","","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryStream::try_poll_next</code> …","A convenience method for calling <code>TryStream::try_poll_next</code> …","Skip elements on this stream while the provided …","Skip elements on this stream while the provided …","Take elements on this stream while the provided …","Take elements on this stream while the provided …","Creates a <code>TryStream</code> from a seed and a closure returning a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Stream</code> from a seed and a closure returning a …","Converts a stream of pairs into a future, which resolves …","Converts a stream of pairs into a future, which resolves …","An adapter for zipping two streams together.","An adapter for zipping two streams together.","A set of futures which may complete in any order.","Owned iterator over all futures in the unordered set.","Immutable iterator over all the futures in the unordered …","Mutable iterator over all futures in the unordered set.","Mutable iterator over all futures in the unordered set.","Immutable iterator over all futures in the unordered set.","","","","","","","","","","","Clears the set, removing all futures.","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the set contains no futures.","Returns an iterator that allows inspecting each future in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows inspecting each future in …","Returns the number of futures contained in the set.","Constructs a new, empty <code>FuturesUnordered</code>.","","","","","","Push a future into the set.","","","","","","","","","","","","","","","","","","","","","Owned iterator over all streams in the unordered set.","Immutable iterator over all streams in the unordered set.","Mutable iterator over all streams in the unordered set.","An unbounded set of streams","","","","","","","Clears the set, removing all streams.","","","","","","","","","","","","","Returns <code>true</code> if the set contains no streams","Returns an iterator that allows inspecting each stream in …","Returns an iterator that allows modifying each stream in …","Returns the number of streams contained in the set.","Constructs a new, empty <code>SelectAll</code>","","","","Push a stream into the set.","Convert a list of streams into a <code>Stream</code> of results from …","","","","","","","","","","","","","A way of waking up a specific task.","A synchronization primitive for task wakeup.","A custom trait object for polling futures, roughly akin to …","A custom trait object for polling futures, roughly akin to …","The <code>LocalSpawn</code> is similar to <code>Spawn</code>, but allows spawning …","Extension trait for <code>LocalSpawn</code>.","The <code>Spawn</code> trait allows for pushing futures onto an …","An error that occurred during spawning.","Extension trait for <code>Spawn</code>.","A custom implementation of a future trait object for …","A <code>Waker</code> that is only valid for a given lifetime.","","","","","","","","","","","","","Drops the future represented by the given fat pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.","Convert an owned instance into a (conceptually owned) fat …","Check whether spawning failed to the executor being shut …","Create an <code>AtomicWaker</code>.","Create a <code>LocalFutureObj</code> from a custom trait object …","Create a <code>FutureObj</code> from a custom trait object …","Create a new <code>WakerRef</code> from a <code>Waker</code> reference.","Create a new <code>WakerRef</code> from a <code>Waker</code> that must not be …","Create a new <code>Waker</code> which does nothing when <code>wake()</code> is …","Get a static reference to a <code>Waker</code> which does nothing when …","","","Registers the waker to be notified on calls to <code>wake</code>.","Spawning failed because the executor has been shut down.","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a future that will be run to completion.","Spawns a task that polls the given future to completion …","Spawns a task that polls the given future to completion …","Spawns a future that will be run to completion.","Spawns a task that polls the given future to completion …","Spawns a task that polls the given future to completion …","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …","","","","","","","","","","","","","","","","","","","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.","Indicates that the associated task is ready to make …","Indicates that the associated task is ready to make …","Creates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.","Creates a reference to a <code>Waker</code> from a reference to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,3,0,0,0,0,0,1,2,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,57,5,58,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,57,5,58,59,59,59,59,59,59,7,8,40,41,42,43,4,56,5,58,7,8,40,41,42,43,4,56,5,58,4,41,7,60,7,58,0,6,6,4,4,59,59,6,6,59,59,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,57,5,58,58,23,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,57,5,58,10,11,49,55,59,59,59,59,6,6,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,57,5,58,7,6,6,9,10,11,12,13,15,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,43,49,4,60,59,59,56,61,7,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,4,4,0,0,0,0,0,0,59,59,59,59,6,6,59,59,6,6,6,6,0,59,59,56,5,59,59,0,6,6,6,6,1,2,7,0,7,9,10,11,12,13,15,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,14,27,28,4,4,4,14,27,28,4,4,0,0,14,16,27,28,42,4,56,4,4,14,27,28,4,4,59,59,4,4,0,59,59,59,59,0,0,0,59,59,14,16,27,28,4,14,27,28,4,7,1,2,12,59,59,7,8,40,41,42,43,4,56,5,58,58,6,6,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,57,5,58,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,57,5,58,0,0,0,0,0,0,3,7,9,11,12,13,15,17,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,38,39,40,2,43,50,51,52,53,54,55,4,56,14,16,27,28,4,56,6,6,0,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,2,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,56,57,5,58,59,59,6,6,8,7,62,63,64,65,66,67,68,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,69,70,71,72,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,99,100,70,71,72,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,99,100,74,76,77,101,73,82,73,82,102,73,103,70,73,73,74,76,78,82,97,104,0,0,82,0,69,73,104,73,102,73,70,71,72,68,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,99,100,70,71,72,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,99,100,73,74,76,78,82,97,69,74,76,78,97,73,74,76,77,78,82,97,69,73,70,71,72,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,99,100,75,79,80,81,83,84,87,88,89,90,91,92,93,94,98,99,100,73,74,76,78,82,97,69,102,97,104,73,73,74,76,77,82,69,73,75,79,80,81,83,84,87,88,89,90,91,92,93,94,98,99,100,105,72,73,74,76,77,82,82,82,82,85,96,103,70,73,74,76,78,82,97,105,72,73,74,76,77,82,82,82,82,85,96,86,106,70,71,73,74,76,78,82,95,97,71,73,74,76,78,82,95,106,85,107,73,74,76,82,74,105,72,73,74,76,77,82,82,82,82,96,72,73,74,76,77,82,82,82,82,96,105,82,101,73,101,73,104,101,73,101,73,104,101,73,0,95,96,108,73,74,69,97,82,0,101,69,85,108,101,73,82,68,70,71,72,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,99,100,70,71,72,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,99,100,75,79,80,81,83,84,87,88,89,90,91,92,93,94,98,99,100,86,70,71,72,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,98,99,100,74,76,77,102,73,102,73,73,102,73,0,0,0,0,109,110,111,112,109,110,111,112,109,111,112,111,112,110,111,112,109,110,111,112,109,109,109,110,111,112,109,109,110,111,112,110,109,110,109,111,112,109,110,109,110,111,112,109,110,111,112,109,109,110,111,112,0,0,0,0,113,0,0,0,0,0,0,0,0,0,0,0,0,114,115,116,117,118,119,120,121,122,123,124,125,126,114,115,116,117,118,119,120,121,122,123,124,125,126,127,121,124,121,124,127,0,127,127,127,114,115,116,117,118,119,120,121,122,123,124,125,126,114,115,116,117,118,119,120,121,122,123,124,125,126,117,120,121,124,125,126,117,120,121,124,125,126,117,120,121,124,125,126,114,115,116,117,118,119,120,121,122,123,124,125,126,114,115,118,119,122,117,120,121,124,125,126,120,121,125,126,127,114,115,118,119,122,113,116,117,120,121,123,124,125,126,127,113,116,117,120,121,123,124,125,126,127,120,121,124,125,126,113,116,117,120,121,123,124,125,126,127,127,127,127,127,127,120,121,124,125,126,113,116,117,120,121,123,124,125,126,127,121,124,114,115,116,117,118,119,120,121,122,123,124,125,126,114,115,116,117,118,119,120,121,122,123,124,125,126,114,115,118,119,122,120,121,124,125,126,114,115,116,117,118,119,120,121,122,123,124,125,126,0,127,127,128,129,128,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,132,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,133,134,134,133,133,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,129,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,132,210,211,212,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,129,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,132,210,211,212,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,202,203,204,205,207,208,132,202,203,204,205,207,208,132,133,133,133,133,201,133,133,133,133,136,137,132,212,137,0,133,133,129,132,134,134,136,137,212,133,133,133,133,133,133,133,133,128,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,129,129,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,132,210,211,212,133,133,133,133,133,133,133,133,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,129,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,132,210,211,212,136,137,212,133,133,0,143,144,145,146,150,151,152,153,154,157,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,188,189,190,193,196,197,198,199,209,210,143,144,145,146,150,151,152,153,154,157,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,188,189,190,193,196,197,198,199,209,210,143,144,145,146,150,151,152,153,154,157,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,188,189,190,193,196,197,198,199,209,210,132,133,133,134,134,134,134,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,129,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,132,210,211,212,134,134,133,133,139,140,141,147,148,149,151,155,156,158,159,160,161,174,186,187,191,192,194,200,143,144,145,146,150,151,152,153,154,157,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,188,189,190,193,196,197,198,199,209,210,137,212,134,134,150,136,166,213,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,177,178,179,180,181,182,183,184,185,186,188,189,190,191,193,194,196,197,200,203,204,205,206,207,208,209,210,211,212,0,133,133,136,133,133,134,134,134,134,129,136,133,133,157,157,0,134,134,157,157,133,133,0,139,140,141,147,148,149,151,155,156,158,159,160,161,174,186,187,191,192,194,200,143,144,145,146,150,152,153,154,157,162,163,164,165,166,167,169,170,171,172,173,176,178,179,180,181,182,183,184,185,188,189,190,193,196,197,198,199,201,201,143,144,145,146,150,152,153,154,157,162,163,164,165,166,167,169,170,171,172,173,176,178,179,180,181,182,183,184,185,188,189,190,193,196,197,198,199,201,0,0,131,135,136,137,138,142,143,144,145,146,150,152,153,154,157,162,163,164,165,166,167,168,169,170,171,172,173,175,177,178,179,180,181,182,183,184,185,188,189,190,193,195,196,197,198,199,202,203,204,205,206,207,208,209,210,211,212,133,133,157,157,201,143,144,145,146,150,152,153,154,157,162,163,164,165,166,167,169,170,171,172,173,176,178,179,180,181,182,183,184,185,188,189,190,193,196,197,198,199,201,136,133,133,0,0,175,176,133,133,133,133,0,0,0,133,133,0,136,137,138,142,143,144,145,146,150,152,153,154,157,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,185,188,189,193,196,197,202,203,204,205,206,207,208,131,133,133,133,133,137,137,133,133,143,144,145,146,150,152,153,154,157,162,163,164,165,166,167,169,170,171,172,173,176,178,179,180,181,182,183,184,185,188,189,190,193,196,197,198,199,133,133,166,166,133,133,133,133,133,133,202,203,204,205,207,208,132,128,129,132,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,129,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,132,210,211,212,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,129,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,132,210,211,212,134,134,141,147,148,156,186,187,191,192,194,200,130,135,136,137,138,142,144,145,146,150,152,153,154,157,162,163,164,165,166,167,171,172,173,175,177,178,179,180,181,182,183,184,185,188,189,190,193,195,196,197,198,199,202,203,204,205,206,207,209,210,211,212,134,134,134,134,134,134,0,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,129,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,132,210,211,212,0,133,133,133,133,0,0,0,0,0,0,214,215,216,217,218,214,215,216,217,218,137,214,215,216,217,218,214,215,216,217,218,214,215,216,217,218,214,215,216,217,218,137,137,137,137,137,137,137,214,215,216,217,218,137,214,215,216,217,218,214,215,216,217,218,214,215,216,217,218,214,215,216,217,218,0,0,0,0,219,220,221,219,220,221,212,219,220,221,219,220,221,219,220,221,219,220,221,212,212,212,212,212,219,220,221,212,0,219,220,221,219,220,221,219,220,221,219,220,221,0,0,0,0,0,0,0,0,0,0,0,222,223,224,225,226,222,223,224,225,226,222,226,60,224,222,223,223,224,225,226,222,223,224,224,224,224,224,224,225,225,225,225,225,226,222,223,224,225,226,224,225,224,60,223,222,224,225,226,226,0,0,224,225,222,223,227,227,228,228,229,228,228,230,227,227,230,229,222,223,222,223,224,225,226,222,223,224,225,226,224,225,222,223,224,225,226,222,231,231,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["andthen",3]],[[],["andthenboxfuture",6]],[[],["boxfuture",6]],[[],["localboxfuture",6]],[[],["localboxfuture",6]],[[],["catchunwind",3]],[[],["catchunwind",3]],[[]],[[]],[[]],[[],["optionfuture",3]],[[],["pollimmediate",3]],[[],["ready",3]],[[],["either",4]],[[],["abortable",3]],[[],["aborthandle",3]],[[],["aborted",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pin",3],["usize",15]]],[[]],[[],[["weakshared",3],["option",4,["weakshared"]]]],[[]],[[]],[[["aborted",3]],["bool",15]],[[],[["result",4],["ready",3,["result"]]]],[[],["errinto",3]],[[],["errinto",3]],[[]],[[]],[[],["flatten",3]],[[],["flatten",3]],[[],["flattensink",3]],[[],["flattensink",3]],[[],["flattenstream",3]],[[],["flattenstream",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["fuse",3]],[[],["fuse",3]],[[],["inspect",3]],[[],["inspect",3]],[[],["inspecterr",3]],[[],["inspecterr",3]],[[],["inspectok",3]],[[],["inspectok",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intofuture",3]],[[],["intofuture",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3]],[[]],[[]],[[],["intostream",3]],[[],["intostream",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["join",3]],[[],["join3",3]],[[],["join4",3]],[[],["join5",3]],[[],["joinall",3]],[[],["lazy",3]],[[],["either",4]],[[],["either",4]],[[],["map",3]],[[],["map",3]],[[],["maperr",3]],[[],["maperr",3]],[[],["mapinto",3]],[[],["mapinto",3]],[[],["mapok",3]],[[],["mapok",3]],[[],["mapokorelse",3]],[[],["mapokorelse",3]],[[["future",8]],[["future",8],["maybedone",4]]],[[],["nevererror",3]],[[],["nevererror",3]],[[["abortregistration",3]]],[[]],[[],["option",4]],[[],["option",4]],[[],[["result",4],["ready",3,["result"]]]],[[],["okinto",3]],[[],["okinto",3]],[[],["orelse",3]],[[],["orelse",3]],[[["pin",3]],["option",4]],[[["pin",3]],["option",4]],[[],["option",4]],[[],["pending",3]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[],["pollfn",3]],[[["future",8]],[["future",8],["pollimmediate",3]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3],["seekfrom",4]],[["result",6,["u64"]],["poll",4,["result"]]]],[[["context",3]],["poll",4]],[[["context",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[],["ready",3]],[[]],[[]],[[],["either",4]],[[],["either",4]],[[],["select",3]],[[],["selectall",3]],[[],["selectok",3]],[[],["shared",3]],[[],["shared",3]],[[]],[[]],[[]],[[]],[[]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[],[["usize",15],["option",4,["usize"]]]],[[["pin",3]],["option",4]],[[["pin",3]],["option",4]],[[]],[[],["then",3]],[[],["then",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["tryflatten",3]],[[],["tryflatten",3]],[[],["tryflattenstream",3]],[[],["tryflattenstream",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["tryjoin",3]],[[],["tryjoin3",3]],[[],["tryjoin4",3]],[[],["tryjoin5",3]],[[],["tryjoinall",3]],[[["tryfuture",8]],[["tryfuture",8],["trymaybedone",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[],["tryselect",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["uniterror",3]],[[],["uniterror",3]],[[],["unwraporelse",3]],[[],["unwraporelse",3]],[[],[["option",4,["shared"]],["shared",3]]],[[],[["usize",15],["option",4,["usize"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["chain",3]],[[],["allowstdio",3]],[[],["cursor",3]],[[]],[[]],[[],["close",3]],[[["allowstdio",3]],["ordering",4]],[[["usize",15],["pin",3]]],[[["pin",3],["usize",15]]],[[["usize",15]]],[[["pin",3],["usize",15]]],[[["pin",3],["usize",15]]],[[["pin",3],["usize",15]]],[[["pin",3],["usize",15]]],[[["pin",3],["usize",15]]],[[["pin",3],["usize",15]]],[[["usize",15]]],[[],[["copy",3],["sized",8]]],[[],[["copybuf",3],["sized",8]]],[[],["cursor",3]],[[],["empty",3]],[[],["usize",15]],[[["allowstdio",3]],["bool",15]],[[],["fillbuf",3]],[[],["result",6]],[[],["flush",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]]],[[["pin",3]],["pin",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["asref",8],["intosink",3]]],[[],["u64",15]],[[],["lines",3]],[[["allowstdio",3]],["bool",15]],[[]],[[]],[[]],[[],["linewriter",3]],[[]],[[]],[[["allowstdio",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4,["error"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",6],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4,["error"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["seekfrom",4],["pin",3],["context",3]],[["poll",4,["result"]],["result",4,["u64","error"]]]],[[["pin",3],["context",3],["seekfrom",4]],[["poll",4,["result"]],["result",6,["u64"]]]],[[["pin",3],["context",3],["seekfrom",4]],[["poll",4,["result"]],["result",6,["u64"]]]],[[["pin",3],["context",3],["seekfrom",4]],[["poll",4,["result"]],["result",6,["u64"]]]],[[["pin",3],["context",3],["seekfrom",4]],[["poll",4,["result"]],["result",6,["u64"]]]],[[["pin",3],["context",3],["i64",15]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["result",4,["usize","error"]],["poll",4,["result"]]]],[[],["u64",15]],[[],["read",3]],[[],[["usize",15],["result",6,["usize"]]]],[[],["readexact",3]],[[],["result",6]],[[["string",3]],["readline",3]],[[["vec",3]],["readtoend",3]],[[["vec",3]],[["usize",15],["result",6,["usize"]]]],[[["string",3]],["readtostring",3]],[[["string",3]],[["usize",15],["result",6,["usize"]]]],[[["vec",3],["u8",15]],["readuntil",3]],[[],["readvectored",3]],[[],[["usize",15],["result",6,["usize"]]]],[[["u8",15]],["repeat",3]],[[["writehalf",3]],[["result",4,["reuniteerror"]],["reuniteerror",3]]],[[["readhalf",3]],[["result",4,["reuniteerror"]],["reuniteerror",3]]],[[["seekfrom",4]],["seek",3]],[[["seekfrom",4]],[["u64",15],["result",6,["u64"]]]],[[["pin",3],["i64",15]],["seekrelative",3]],[[["rangebounds",8,["usize"]],["usize",15]]],[[["u64",15]]],[[["u64",15]]],[[],["sink",3]],[[]],[[],["usize",15]],[[["pin",3]],["result",4]],[[],["seek",3]],[[["u64",15]],["take",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],["linewriter",3]],[[],["write",3]],[[],[["usize",15],["result",6,["usize"]]]],[[],["writeall",3]],[[],["result",6]],[[["arguments",3]],["result",6]],[[],["writevectored",3]],[[],[["usize",15],["result",6,["usize"]]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["mutexlockfuture",3]],[[],[["mappedmutexguard",3],["sized",8]]],[[],[["mappedmutexguard",3],["sized",8]]],[[]],[[["pin",3],["context",3]],["poll",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4,["mutexguard"]],["mutexguard",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["buffer",3]],[[],["sinkmaperr",3]],[[]],[[]],[[]],[[],["close",3]],[[],["drain",3]],[[],["fanout",3]],[[],["feed",3]],[[],["flush",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pin",3]]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["either",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[],["either",4]],[[],["send",3]],[[],[["sized",8],["sendall",3]]],[[],["sinkerrinto",3]],[[],["sinkmaperr",3]],[[]],[[]],[[]],[[]],[[]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["unfold",3]],[[],["with",3]],[[],["withflatmap",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["all",3]],[[],["all",3]],[[],["andthen",3]],[[],["andthen",3]],[[],["any",3]],[[],["anyboxstream",6]],[[],["boxstream",6]],[[],["localboxstream",6]],[[],["localboxstream",6]],[[["usize",15]],["bufferunordered",3]],[[["usize",15]],["bufferunordered",3]],[[["usize",15]],["buffered",3]],[[["usize",15]],["buffered",3]],[[]],[[]],[[],["catchunwind",3]],[[],["catchunwind",3]],[[],["chain",3]],[[],["chain",3]],[[["usize",15]],["chunks",3]],[[["usize",15]],["chunks",3]],[[],["iter",3]],[[],["repeat",3]],[[],["repeatwith",3]],[[]],[[]],[[],["pollimmediate",3]],[[],["pollnext",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["default",8],["collect",3],["extend",8]]],[[],[["default",8],["collect",3],["extend",8]]],[[],["concat",3]],[[],["concat",3]],[[["pin",3],["usize",15]]],[[],["count",3]],[[],["count",3]],[[],["cycle",3]],[[],["cycle",3]],[[]],[[]],[[]],[[]],[[]],[[],["empty",3]],[[],["enumerate",3]],[[],["enumerate",3]],[[["trychunkserror",3]],["bool",15]],[[["pollnext",4]],["bool",15]],[[],["errinto",3]],[[],["errinto",3]],[[]],[[]],[[["intoiterator",8]]],[[],["filter",3]],[[],["filter",3]],[[],["filtermap",3]],[[],["filtermap",3]],[[],["flatmap",3]],[[],["flatmap",3]],[[],["flatten",3]],[[],["flatten",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["fold",3]],[[],["fold",3]],[[],["foreach",3]],[[],["foreach",3]],[[],["foreachconcurrent",3]],[[],["foreachconcurrent",3]],[[],["forward",3]],[[],["forward",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[],["fuse",3]],[[],["fuse",3]],null,[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],[["pin",3],["option",4,["pin"]]]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]]],[[["pin",3]]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["inspect",3]],[[],["inspect",3]],[[],["inspecterr",3]],[[],["inspecterr",3]],[[],["inspectok",3]],[[],["inspectok",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoasyncread",3]],[[],["intoasyncread",3]],[[],["streamfuture",3]],[[],["streamfuture",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intostream",3]],[[],["intostream",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["either",4]],[[],["either",4]],[[],["usize",15]],[[],["map",3]],[[],["map",3]],[[],["maperr",3]],[[],["maperr",3]],[[],["mapok",3]],[[],["mapok",3]],[[["trychunkserror",3]],["bool",15]],[[]],[[],["next",3]],[[],["next",3]],[[["pin",3]],["nextif",3]],[[["pin",3]],["nextifeq",3]],[[["future",8]],[["future",8],["once",3]]],[[],["orelse",3]],[[],["orelse",3]],[[["pin",3]],["peek",3]],[[["pin",3]],["peekmut",3]],[[],["peekable",3]],[[],["peekable",3]],[[],["pending",3]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6]]],[[],["pollfn",3]],[[["stream",8]],[["stream",8],["pollimmediate",3]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["context",3]],[["poll",4,["option"]],["option",4]]],[[["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4,["option"]]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",6,["usize"]]]],[[]],[[["usize",15]],["readychunks",3]],[[["usize",15]],["readychunks",3]],[[],["repeat",3]],[[["fnmut",8]],[["repeatwith",3],["fnmut",8]]],[[["splitsink",3]],[["result",4,["reuniteerror"]],["reuniteerror",3]]],[[["splitstream",3]],[["result",4,["reuniteerror"]],["reuniteerror",3]]],[[],["either",4]],[[],["either",4]],[[],["scan",3]],[[],["scan",3]],[[],["select",3]],null,[[],["selectall",3]],[[],["selectnextsome",3]],[[],["selectnextsome",3]],[[],["selectwithstrategy",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["skip",3]],[[["usize",15]],["skip",3]],[[],["skipwhile",3]],[[],["skipwhile",3]],[[["localfutureobj",3]],[["spawnerror",3],["result",4,["spawnerror"]]]],[[["futureobj",3]],[["spawnerror",3],["result",4,["spawnerror"]]]],[[]],[[]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["usize",15]],["take",3]],[[["usize",15]],["take",3]],[[],["option",4]],[[],["option",4]],[[],["takeuntil",3]],[[],["takeuntil",3]],[[],["takewhile",3]],[[],["takewhile",3]],[[],["then",3]],[[],["then",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[]],[[["usize",15]],["trybufferunordered",3]],[[["usize",15]],["trybufferunordered",3]],[[["usize",15]],["trybuffered",3]],[[["usize",15]],["trybuffered",3]],[[["usize",15]],["trychunks",3]],[[["usize",15]],["trychunks",3]],[[],[["extend",8],["default",8],["trycollect",3]]],[[],[["extend",8],["default",8],["trycollect",3]]],[[],["tryconcat",3]],[[],["tryconcat",3]],[[],["tryfilter",3]],[[],["tryfilter",3]],[[],["tryfiltermap",3]],[[],["tryfiltermap",3]],[[],["tryflatten",3]],[[],["tryflatten",3]],[[],["tryfold",3]],[[],["tryfold",3]],[[],["tryforeach",3]],[[],["tryforeach",3]],[[],["tryforeachconcurrent",3]],[[],["tryforeachconcurrent",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["trynext",3]],[[],["trynext",3]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["tryskipwhile",3]],[[],["tryskipwhile",3]],[[],["trytakewhile",3]],[[],["trytakewhile",3]],[[],["tryunfold",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["unfold",3]],[[],["unzip",3]],[[],["unzip",3]],[[],["zip",3]],[[],["zip",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[["pin",3]],["iterpinmut",3]],[[["pin",3]],["iterpinref",3]],[[],["usize",15]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["usize",15]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["selectall",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["atomicwaker",3]],[[],["waker",3]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["global",3],["box",3,["global"]]],["localfutureobj",3]],[[["pin",3,["box"]],["box",3,["future","global"]]],["localfutureobj",3]],[[["global",3],["future",8],["box",3,["future","global"]]],["localfutureobj",3]],[[["pin",3,["box"]],["box",3,["global"]]],["localfutureobj",3]],[[["futureobj",3]],["localfutureobj",3]],[[]],[[["global",3],["box",3,["global"]]],["futureobj",3]],[[["pin",3,["box"]],["box",3,["global"]]],["futureobj",3]],[[["box",3,["future","global"]],["future",8],["global",3]],["futureobj",3]],[[["box",3,["future","global"]],["pin",3,["box"]]],["futureobj",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["futureobj",3]],[[]],[[],["bool",15]],[[],["atomicwaker",3]],[[],["localfutureobj",3]],[[],["futureobj",3]],[[["waker",3]],["wakerref",3]],[[["manuallydrop",3,["waker"]],["waker",3]],["wakerref",3]],[[],["waker",3]],[[],["waker",3]],[[["pin",3,["localfutureobj"]],["localfutureobj",3],["context",3]],["poll",4]],[[["pin",3,["futureobj"]],["futureobj",3],["context",3]],["poll",4]],[[["waker",3]]],[[],["spawnerror",3]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[["localfutureobj",3]],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["remotehandle","spawnerror"]],["remotehandle",3]]],[[],[["spawnerror",3],["result",4,["remotehandle","spawnerror"]],["remotehandle",3]]],[[["futureobj",3]],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["remotehandle","spawnerror"]],["remotehandle",3]]],[[],[["spawnerror",3],["result",4,["remotehandle","spawnerror"]],["remotehandle",3]]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["spawnerror",3],["result",4,["spawnerror"]]]],[[],[["option",4,["waker"]],["waker",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["arc",3]]],[[["arc",3]]],[[["arc",3]],["waker",3]],[[["arc",3]],["wakerref",3]]],"p":[[4,"MaybeDone"],[4,"TryMaybeDone"],[8,"TryFuture"],[4,"Either"],[3,"AbortHandle"],[8,"TryFutureExt"],[3,"Shared"],[3,"WeakShared"],[3,"PollFn"],[3,"JoinAll"],[3,"TryJoinAll"],[3,"Fuse"],[3,"Flatten"],[3,"FlattenStream"],[3,"Map"],[3,"IntoStream"],[3,"MapInto"],[3,"Then"],[3,"Inspect"],[3,"NeverError"],[3,"UnitError"],[3,"CatchUnwind"],[3,"RemoteHandle"],[3,"Remote"],[3,"IntoFuture"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"FlattenSink"],[3,"AndThen"],[3,"OrElse"],[3,"ErrInto"],[3,"OkInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"MapOkOrElse"],[3,"UnwrapOrElse"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollImmediate"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TrySelect"],[3,"SelectOk"],[3,"Abortable"],[3,"AbortRegistration"],[3,"Aborted"],[8,"FutureExt"],[8,"UnsafeFutureObj"],[8,"FusedFuture"],[13,"Left"],[13,"Right"],[13,"Future"],[13,"Done"],[13,"Future"],[13,"Done"],[3,"ReuniteError"],[3,"Window"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"AllowStdIo"],[3,"BufReader"],[3,"SeeKRelative"],[3,"BufWriter"],[3,"LineWriter"],[3,"Chain"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Cursor"],[3,"FillBuf"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadVectored"],[3,"ReadExact"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"Seek"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Take"],[3,"Write"],[3,"WriteVectored"],[3,"WriteAll"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncBufRead"],[8,"AsyncBufReadExt"],[8,"AsyncWrite"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncSeekExt"],[3,"Mutex"],[3,"MutexLockFuture"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[8,"Sink"],[3,"SendAll"],[3,"Close"],[3,"Drain"],[3,"Fanout"],[3,"Feed"],[3,"Flush"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Send"],[3,"Unfold"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[8,"SinkExt"],[3,"ReuniteError"],[3,"TryChunksError"],[8,"TryStream"],[8,"Stream"],[4,"PollNext"],[8,"StreamExt"],[8,"TryStreamExt"],[3,"PollFn"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"Chain"],[3,"Collect"],[3,"Unzip"],[3,"Concat"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"Forward"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"FlatMap"],[3,"Next"],[3,"SelectNextSome"],[3,"Peekable"],[3,"Peek"],[3,"PeekMut"],[3,"NextIf"],[3,"NextIfEq"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"TakeUntil"],[3,"Then"],[3,"Zip"],[3,"Chunks"],[3,"ReadyChunks"],[3,"Scan"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitStream"],[3,"SplitSink"],[3,"CatchUnwind"],[3,"AndThen"],[3,"ErrInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"IntoStream"],[3,"MapOk"],[3,"MapErr"],[3,"OrElse"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryChunks"],[3,"TryFold"],[3,"TryUnfold"],[3,"TrySkipWhile"],[3,"TryTakeWhile"],[3,"TryBufferUnordered"],[3,"TryBuffered"],[3,"TryForEachConcurrent"],[3,"IntoAsyncRead"],[3,"Iter"],[3,"Repeat"],[3,"RepeatWith"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollImmediate"],[3,"Select"],[3,"SelectWithStrategy"],[3,"Unfold"],[3,"SelectAll"],[8,"FusedStream"],[3,"IterPinMut"],[3,"IterMut"],[3,"IterPinRef"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"AtomicWaker"],[3,"SpawnError"],[3,"LocalFutureObj"],[3,"FutureObj"],[3,"WakerRef"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"LocalSpawn"],[8,"Spawn"],[8,"ArcWake"]]},\
"gdbstub":{"doc":"An ergonomic and easy-to-integrate implementation of the …","t":[13,8,13,13,13,4,16,3,3,4,4,13,13,13,13,13,13,13,13,13,13,13,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,10,11,10,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12,12,12,8,8,16,16,8,16,8,16,16,10,10,10,10,10,11,6,6,16,13,16,13,13,13,8,4,6,10,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,0,0,0,0,0,4,13,13,13,13,3,3,13,4,4,8,6,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,12,13,13,13,13,8,8,6,8,6,8,6,13,13,13,13,4,13,11,11,10,11,11,11,11,11,11,11,11,10,11,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,10,10,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,8,8,6,8,6,8,6,4,13,13,13,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,11,11,11,11,11,11,11,11,10,10,12,12,12,12,12,12,8,6,8,6,8,6,13,13,8,6,4,13,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,3,13,4,8,6,8,6,8,6,8,6,8,6,13,13,4,13,10,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,3,8,6,11,11,11,11,11,10,11,11,11,11,11,11,4,8,6,13,13,11,11,11,10,11,11,11,11,12,12,12,12,12,8,6,10],"n":["ClientSentNack","Connection","ConnectionRead","ConnectionWrite","Disconnect","DisconnectReason","Error","GdbStub","GdbStubBuilder","GdbStubBuilderError","GdbStubError","Kill","MissingPacketBuffer","NoActiveThreads","PacketBufSizeMismatch","PacketBufferOverflow","PacketParse","PacketUnexpected","TargetError","TargetExited","TargetMismatch","TargetTerminated","UnsupportedStopReason","arch","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","common","eq","flush","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","ne","new","new","on_session_start","on_session_start","on_session_start","output","outputln","packet_buffer_size","peek","peek","read","read","read_exact","read_exact","read_exact","run","target","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_packet_buffer","write","write","write_all","write_all","write_all","0","0","0","0","0","0","Arch","BreakpointKind","BreakpointKind","ProgramCounter","RegId","RegId","Registers","Registers","Usize","from_raw_id","from_usize","gdb_deserialize","gdb_serialize","pc","target_description_xml","Pid","Tid","Arch","Errno","Error","Fatal","Io","NonFatal","Target","TargetError","TargetResult","base_ops","base_ops","borrow","borrow_mut","breakpoints","breakpoints","ext","extended_mode","extended_mode","from","from","from","into","monitor_cmd","monitor_cmd","section_offsets","section_offsets","target_description_xml_override","target_description_xml_override","try_from","try_into","type_id","0","0","0","base","breakpoints","extended_mode","monitor_cmd","section_offsets","target_description_xml_override","BaseOps","Begin","Continue","ContinueWithSignal","End","GdbInterrupt","GdbInterruptNoAsync","MultiThread","ReplayLogPosition","ResumeAction","SingleRegisterAccess","SingleRegisterAccessOps","SingleThread","Step","StepWithSignal","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","from","from","from","into","into","into","into","into","multithread","ne","no_async","pending","read_register","singlethread","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_register","0","0","0","0","DoneStep","Exited","GdbInterrupt","HwBreak","MultiThreadOps","MultiThreadRangeStepping","MultiThreadRangeSteppingOps","MultiThreadReverseCont","MultiThreadReverseContOps","MultiThreadReverseStep","MultiThreadReverseStepOps","ReplayLog","Signal","SwBreak","Terminated","ThreadStopReason","Watch","borrow","borrow_mut","clear_resume_actions","clone","clone_into","eq","fmt","from","from","into","is_thread_alive","list_active_threads","ne","read_addrs","read_registers","resume","reverse_cont","reverse_step","set_resume_action","set_resume_action_range_step","single_register_access","support_range_step","support_reverse_cont","support_reverse_step","to_owned","try_from","try_into","type_id","write_addrs","write_registers","0","0","0","0","0","0","addr","kind","tid","DoneStep","Exited","GdbInterrupt","HwBreak","ReplayLog","Signal","SingleThreadOps","SingleThreadRangeStepping","SingleThreadRangeSteppingOps","SingleThreadReverseCont","SingleThreadReverseContOps","SingleThreadReverseStep","SingleThreadReverseStepOps","StopReason","SwBreak","Terminated","Watch","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","ne","read_addrs","read_registers","resume","resume_range_step","reverse_cont","reverse_step","single_register_access","support_resume_range_step","support_reverse_cont","support_reverse_step","to_owned","try_from","try_into","type_id","write_addrs","write_registers","0","0","0","0","addr","kind","Breakpoints","BreakpointsOps","HwBreakpoint","HwBreakpointOps","HwWatchpoint","HwWatchpointOps","Read","ReadWrite","SwBreakpoint","SwBreakpointOps","WatchKind","Write","add_hw_breakpoint","add_hw_watchpoint","add_sw_breakpoint","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hw_breakpoint","hw_watchpoint","into","remove_hw_breakpoint","remove_hw_watchpoint","remove_sw_breakpoint","sw_breakpoint","to_owned","try_from","try_into","type_id","Args","Attach","AttachKind","ConfigureAslr","ConfigureAslrOps","ConfigureEnv","ConfigureEnvOps","ConfigureStartupShell","ConfigureStartupShellOps","ConfigureWorkingDir","ConfigureWorkingDirOps","ExtendedMode","ExtendedModeOps","No","Run","ShouldTerminate","Yes","attach","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg_aslr","cfg_startup_with_shell","cfg_working_dir","configure_aslr","configure_env","configure_startup_shell","configure_working_dir","fmt","from","from","from","into","into","into","into_bool","into_iter","kill","next","on_start","query_if_attached","remove_env","reset_env","restart","run","set_env","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ConsoleOutput","MonitorCmd","MonitorCmdOps","borrow","borrow_mut","drop","flush","from","handle_monitor_cmd","into","try_from","try_into","type_id","write_raw","write_str","Offsets","SectionOffsets","SectionOffsetsOps","Sections","Segments","borrow","borrow_mut","from","get_section_offsets","into","try_from","try_into","type_id","bss","data","data_seg","text","text_seg","TargetDescriptionXmlOverride","TargetDescriptionXmlOverrideOps","target_description_xml"],"q":["gdbstub","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub::DisconnectReason","","gdbstub::GdbStubError","","","","gdbstub::arch","","","","","","","","","","","","","","","gdbstub::common","","gdbstub::target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub::target::TargetError","","","gdbstub::target::ext","","","","","","gdbstub::target::ext::base","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub::target::ext::base::BaseOps","","gdbstub::target::ext::base::ResumeAction","","gdbstub::target::ext::base::multithread","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub::target::ext::base::multithread::ThreadStopReason","","","","","","","","","gdbstub::target::ext::base::singlethread","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub::target::ext::base::singlethread::StopReason","","","","","","gdbstub::target::ext::breakpoints","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub::target::ext::extended_mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub::target::ext::monitor_cmd","","","","","","","","","","","","","","","gdbstub::target::ext::section_offsets","","","","","","","","","","","","","gdbstub::target::ext::section_offsets::Offsets","","","","","gdbstub::target::ext::target_description_xml_override","",""],"d":["Client nack’d the last packet, but <code>gdbstub</code> doesn’t …","A trait to perform in-order, serial, byte-wise I/O.","Connection Error while reading request.","Connection Error while writing response.","GDB issued a disconnect command","Describes why the GDB session ended.","Transport-specific error type.","Debug a <code>Target</code> using the GDB Remote Serial Protocol over a …","Helper to construct and customize <code>GdbStub</code>.","An error which may occur when building a <code>GdbStub</code>.","An error which may occur during a GDB debugging session.","GDB issued a kill command","Must provide buffer using <code>with_packet_buffer</code> in <code>#![no_std]</code> …","Target didn’t report any active threads when there …","Custom packet buffer size is larger than the provided …","Packet cannot fit in the provided packet buffer.","Could not parse the packet into a valid command.","GDB client sent an unexpected packet. This should never …","Target encountered a fatal error.","Target exited with given status code","GDB client sent a packet with too much data for the given …","Target terminated with given signal","Target responded with an unsupported stop reason.","Traits to encode architecture-specific target information.","","","","","","","","","","","Build the GdbStub, returning an error if something went …","Create a <code>GdbStubBuilder</code> using the provided Connection.","","","Common types and definitions.","","Flush this Connection, ensuring that all intermediately …","","","","","","","","","","","","","","","","","","Create a new <code>GdbStubBuilder</code> using the provided Connection.","Create a new <code>GdbStub</code> using the provided connection.","","Called at the start of a debugging session <em>before</em> any GDB …","Called at the start of a debugging session <em>before</em> any GDB …","Send formatted data to the GDB client console.","Send formatted data to the GDB client console, with a …","Specify a custom size for the packet buffer. Defaults to …","Peek a single byte. This MUST be a <strong>non-blocking</strong> operation, …","","Read a single byte.","","Read the exact number of bytes required to fill the buffer.","Read the exact number of bytes required to fill the buffer.","","Starts a GDB remote debugging session.","The core <code>Target</code> trait, and all its various protocol …","","","","","","","","","","","","","","","","","","","Use a pre-allocated packet buffer (instead of …","Write a single byte.","","","Write the entire buffer, blocking until complete.","Write the entire buffer, blocking until complete.","","","","","","","Encodes architecture-specific information, such as pointer …","Breakpoint kind for specific architectures.","The architecture’s breakpoint “kind”, used to …","The type of the architecture’s program counter / …","Register identifier for target registers.","Register identifier enum/struct.","Methods to read/write architecture-specific registers.","The architecture’s register file. See <code>Registers</code> for more …","The architecture’s pointer size (e.g: <code>u32</code> on a 32-bit …","Map raw GDB register number corresponding <code>RegId</code> and …","Parse <code>Self</code> from a raw usize.","Deserialize a GDB register bytestream into <code>self</code>.","Serialize <code>self</code> into a GDB register bytestream.","Return the value of the program counter / instruction …","(optional) Return the arch’s description XML file (…","Process ID","Thread ID","The target’s architecture.","An operation-specific non-fatal error code.","A target-specific <strong>fatal</strong> error.","A target-specific fatal error.","I/O Error. Only available when the <code>std</code> feature is enabled.","A non-specific, non-fatal error has occurred.","Describes the architecture and capabilities of a target …","The error type for various methods on <code>Target</code> and its …","A specialized <code>Result</code> type for <code>Target</code> operations.","Base operations such as reading/writing from …","","","","Set/Remove software breakpoints.","","Extensions to <code>Target</code> which add support for various subsets …","","Support for Extended Mode operations.","","","","","","Handle custom GDB <code>monitor</code> commands.","","Handle requests to get the target’s current section (or …","","Override the target description XML specified by …","","","","","","","Base operations required to debug any target (read/write …","Add/Remove various kinds of breakpoints.","Enables Extended Mode functionality when connecting using …","Create custom target-specific debugging commands …","Get section/segment relocation offsets from the target.","Override the target description XML specified by …","Base operations for single/multi threaded targets.","Reached the beginning of the replay log.","Continue execution, stopping once a <code>StopReason</code> occurs.","Continue with signal.","Reached the end of the replay log.","A handle to check for incoming GDB interrupts.","A simplified interface to <code>GdbInterrupt</code> for projects without","Multi-threaded target","Describes the point reached in a replay log for the …","Describes how the target should be resumed.","Target Extension - Support for single-register access.","See <code>SingleRegisterAccess</code>","Single-threaded target","Step execution.","Step with signal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Base debugging operations for multi threaded targets.","","Returns a <code>GdbInterruptNoAsync</code> struct which can be polled …","Checks if there is a pending GDB interrupt.","Read to a single register on the target.","Base debugging operations for single threaded targets.","","","","","","","","","","","","","","","","","","Write from a single register on the target.","","","","","Completed the single-step request.","The process exited with the specified exit status.","<code>check_gdb_interrupt</code> returned <code>true</code>.","A thread hit a hardware breakpoint.","Base debugging operations for multi threaded targets.","Target Extension - Optimized range stepping for multi …","See <code>MultiThreadRangeStepping</code>.","Target Extension - Reverse continue for multi threaded …","See <code>MultiThreadReverseCont</code>.","Target Extension - Reverse stepping for multi threaded …","See <code>MultiThreadReverseStep</code>.","The program has reached the end of the logged replay …","The program received a signal.","A thread hit a software breakpoint (e.g. due to a trap …","The process terminated with the specified signal number.","Describes why a thread stopped.","A thread hit a watchpoint.","","","Clear all previously set resume actions.","","","","","","","","Check if the specified thread is alive.","List all currently active threads.","","Read bytes from the specified address range.","Read the target’s registers.","Resume execution on the target.","Reverse-continue the target.","Reverse-step the specified <code>Tid</code>.","Specify what action each thread should take when <code>resume</code> is …","See <code>MultiThreadOps::set_resume_action</code>.","Support for single-register access. See …","Support for the optimized range stepping resume action.","Support for reverse continuing a target.","Support for reverse stepping a target.","","","","","Write bytes to the specified address range.","Write the target’s registers.","","","","","","","Address of watched memory","Kind of watchpoint that was hit","Which thread hit the watchpoint","Completed the single-step request.","The process exited with the specified exit status.","<code>check_gdb_interrupt</code> returned <code>true</code>.","Hit a hardware breakpoint.","The program has reached the end of the logged replay …","The program received a signal.","Base debugging operations for single threaded targets.","Target Extension - Optimized range stepping for single …","See <code>SingleThreadRangeStepping</code>.","Target Extension - Reverse continue for single threaded …","See <code>SingleThreadReverseCont</code>.","Target Extension - Reverse stepping for single threaded …","See <code>SingleThreadReverseStep</code>.","Describes why the target stopped.","Hit a software breakpoint (e.g. due to a trap instruction).","The process terminated with the specified signal number.","Hit a watchpoint.","","","","","","","","","","Read bytes from the specified address range.","Read the target’s registers.","Resume execution on the target.","See <code>SingleThreadOps::resume</code>.","Reverse-continue the target.","Reverse-step the target.","Support for single-register access. See …","Support for the optimized range stepping resume action.","Support for reverse continuing a target.","Support for reverse stepping a target.","","","","","Write bytes to the specified address range.","Write the target’s registers.","","","","","Address of watched memory","Kind of watchpoint that was hit","Target Extension - Set/Remove Breakpoints.","See <code>Breakpoints</code>.","Nested Target Extension - Set/Remove Hardware Breakpoints.","See <code>HwBreakpoint</code>.","Nested Target Extension - Set/Remove Hardware Watchpoints.","See <code>HwWatchpoint</code>.","Fire when the memory location is read from.","Fire when the memory location is written to and/or read …","Nested Target Extension - Set/Remove Software Breakpoints.","See <code>SwBreakpoint</code>.","The kind of watchpoint that should be set/removed.","Fire when the memory location is written to.","Add a new hardware breakpoint. Return <code>Ok(false)</code> if the …","Add a new hardware watchpoint. Return <code>Ok(false)</code> if the …","Add a new software breakpoint. Return <code>Ok(false)</code> if the …","","","","","","","","Set/Remote hardware breakpoints.","Set/Remote hardware watchpoints.","","Remove an existing hardware breakpoint. Return <code>Ok(false)</code> …","Remove an existing hardware watchpoint. Return <code>Ok(false)</code> …","Remove an existing software breakpoint. Return <code>Ok(false)</code> …","Set/Remote software breakpoints.","","","","","Iterator of <code>args</code> passed to a spawned process (used in …","It attached to an existing process.","Describes how the target attached to a process.","Nested Target Extension - Enable/Disable ASLR for spawned …","See <code>ConfigureAslr</code>.","Nested Target Extension - Set/Remove/Reset the Environment …","See <code>ConfigureEnv</code>.","Nested Target Extension - Configure if spawned processes …","See <code>ConfigureStartupShell</code>.","Nested Target Extension - Configure the working directory …","See <code>ConfigureWorkingDir</code>.","Target Extension - Support Extended Mode functionality.","See <code>ExtendedMode</code>.","Don’t Terminate GdbStub","It spawned a new process.","Returned from <code>ExtendedMode::kill</code>","Terminate GdbStub","Attach to a new process with the specified PID.","","","","","","","Enable/Disable ASLR for spawned processes.","Configure if spawned processes should be spawned using a …","Set the working directory for spawned processes.","Enable/Disable ASLR for spawned processes.","Set/Remove/Reset Environment variables for spawned …","Configure if spawned processes should be spawned using a …","Configure the working directory for spawned processes.","","","","","","","","Convert <code>ShouldTerminate::Yes</code> into <code>true</code>, and …","","Called when the GDB client sends a Kill request.","","(optional) Invoked when GDB client switches to extended …","Query if specified PID was spawned by the target (via <code>run</code>…","Remove an environment variable.","Reset all environment variables to their initial state …","Restart the program being debugged.","Spawn and attach to the program <code>filename</code>, passing it the …","Set an environment variable.","","","","","","","","","","Helper struct to send console output to GDB.","Target Extension - Handle custom GDB <code>monitor</code> commands.","See <code>MonitorCmd</code>.","","","","Flush the internal output buffer.","","Handle custom commands sent using the <code>monitor</code> command.","","","","","Write raw (non UTF-8) data to the GDB console.","","Describes the offset the target loaded the image sections …","Target Extension - Get section/segment relocation offsets …","See <code>SectionOffsets</code>.","Section offsets relative to their base addresses.","Absolute addresses of the first two segments.","","","","Return the target’s current section (or segment) offsets.","","","","","The offset of the <code>.bss</code> section.","The offset of the <code>.data</code> section.","The absolute address of the second segment which …","The offset of the <code>.text</code> section.","The absolute address of the first segment which …","Target Extension - Override the target description XML …","See <code>TargetDescriptionXmlOverride</code>.","Return the target’s description XML file (<code>target.xml</code>)."],"i":[1,0,1,1,2,0,3,0,0,0,0,2,4,1,4,1,1,1,1,2,1,2,1,0,5,6,4,1,2,5,6,4,1,2,5,6,2,2,0,2,3,3,4,4,1,1,2,5,6,4,1,2,5,6,4,1,2,2,5,6,3,3,3,0,0,5,3,3,3,3,3,3,3,6,0,2,4,1,5,6,4,1,2,5,6,4,1,2,5,6,4,1,2,5,3,3,3,3,3,7,8,9,10,11,12,0,0,13,14,0,13,0,13,13,15,16,14,14,14,13,0,0,17,18,17,18,18,18,0,0,0,17,17,18,18,17,17,0,17,17,18,18,18,18,17,17,17,17,17,17,18,18,18,19,20,21,0,0,0,0,0,0,0,22,23,23,22,0,0,24,0,0,0,0,24,23,23,24,25,26,23,22,24,25,26,23,22,23,22,23,22,23,22,23,22,24,25,26,23,22,24,25,26,23,22,0,23,25,26,27,0,23,22,24,25,26,23,22,24,25,26,23,22,24,25,26,23,22,27,28,29,30,31,32,32,32,32,0,0,0,0,0,0,0,32,32,32,32,0,32,32,32,33,32,32,32,32,32,32,32,33,33,32,33,33,33,34,35,33,36,33,33,33,33,32,32,32,32,33,33,37,38,39,40,41,42,43,43,43,44,44,44,44,44,44,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,46,47,48,45,45,45,45,44,44,44,44,45,45,49,50,51,52,53,53,0,0,0,0,0,0,54,54,0,0,0,54,55,56,57,54,54,54,54,54,54,54,58,58,54,55,56,57,58,54,54,54,54,0,59,0,0,0,0,0,0,0,0,0,0,0,60,59,0,60,61,60,59,62,60,59,62,63,64,65,61,61,61,61,62,60,59,62,60,59,62,60,62,61,62,61,61,66,66,61,61,66,60,59,62,60,59,62,60,59,62,0,0,0,67,67,67,67,67,68,67,67,67,67,67,67,0,0,0,69,69,69,69,69,70,69,69,69,69,71,71,72,71,72,0,0,73],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["gdbstub","gdbstubbuildererror"]],["gdbstub",3],["gdbstubbuildererror",4]]],[[],["gdbstubbuilder",3]],[[],["disconnectreason",4]],[[]],null,[[["disconnectreason",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["disconnectreason",4]],["bool",15]],[[],["gdbstubbuilder",3]],[[],["gdbstub",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["usize",15]]],[[],[["result",4,["option"]],["option",4,["u8"]]]],[[],[["result",4,["option"]],["option",4,["u8"]]]],[[],[["result",4,["u8"]],["u8",15]]],[[],[["result",4,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",4],["result",4,["disconnectreason","error"]],["disconnectreason",4]]],null,[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["u8",15]],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[],["result",4]],[[]],[[]],[[],[["str",15],["option",4,["str"]]]],null,null,null,null,null,null,null,null,null,null,null,[[],["baseops",4]],[[],["baseops",4]],[[]],[[]],[[],[["option",4,["breakpointsops"]],["breakpointsops",6]]],[[],[["option",4,["breakpointsops"]],["breakpointsops",6]]],null,[[],[["extendedmodeops",6],["option",4,["extendedmodeops"]]]],[[],[["extendedmodeops",6],["option",4,["extendedmodeops"]]]],[[],["targeterror",4]],[[]],[[["error",3]],["targeterror",4]],[[]],[[],[["option",4,["monitorcmdops"]],["monitorcmdops",6]]],[[],[["option",4,["monitorcmdops"]],["monitorcmdops",6]]],[[],[["option",4,["sectionoffsetsops"]],["sectionoffsetsops",6]]],[[],[["option",4,["sectionoffsetsops"]],["sectionoffsetsops",6]]],[[],[["option",4,["targetdescriptionxmloverrideops"]],["targetdescriptionxmloverrideops",6]]],[[],[["option",4,["targetdescriptionxmloverrideops"]],["targetdescriptionxmloverrideops",6]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["resumeaction",4]],[[],["replaylogposition",4]],[[]],[[]],[[["resumeaction",4]],["bool",15]],[[["replaylogposition",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["resumeaction",4]],["bool",15]],[[],["gdbinterruptnoasync",3]],[[],["bool",15]],[[],["targetresult",6]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["targetresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["threadstopreason",4]],[[]],[[["threadstopreason",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["stopreason",4]],["threadstopreason",4]],[[]],[[]],[[["tid",6]],[["result",4,["bool"]],["bool",15]]],[[["fnmut",8]],["result",4]],[[["threadstopreason",4]],["bool",15]],[[["tid",6]],["targetresult",6]],[[["tid",6]],["targetresult",6]],[[["resumeaction",4],["gdbinterrupt",3]],[["result",4,["threadstopreason"]],["threadstopreason",4]]],[[["gdbinterrupt",3]],[["threadstopreason",4],["result",4,["threadstopreason"]]]],[[["tid",6],["gdbinterrupt",3]],[["threadstopreason",4],["result",4,["threadstopreason"]]]],[[["resumeaction",4],["tid",6]],["result",4]],[[["tid",6]],["result",4]],[[],[["singleregisteraccessops",6,["tid"]],["option",4,["singleregisteraccessops"]]]],[[],[["option",4,["multithreadrangesteppingops"]],["multithreadrangesteppingops",6]]],[[],[["multithreadreversecontops",6],["option",4,["multithreadreversecontops"]]]],[[],[["option",4,["multithreadreversestepops"]],["multithreadreversestepops",6]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["tid",6]],["targetresult",6]],[[["tid",6]],["targetresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["stopreason",4]],[[]],[[["stopreason",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["stopreason",4]],["bool",15]],[[],["targetresult",6]],[[],["targetresult",6]],[[["resumeaction",4],["gdbinterrupt",3]],[["result",4,["stopreason"]],["stopreason",4]]],[[["gdbinterrupt",3]],[["stopreason",4],["result",4,["stopreason"]]]],[[["gdbinterrupt",3]],[["stopreason",4],["result",4,["stopreason"]]]],[[["gdbinterrupt",3]],[["result",4,["stopreason"]],["stopreason",4]]],[[],[["singleregisteraccessops",6],["option",4,["singleregisteraccessops"]]]],[[],[["option",4,["singlethreadrangesteppingops"]],["singlethreadrangesteppingops",6]]],[[],[["option",4,["singlethreadreversecontops"]],["singlethreadreversecontops",6]]],[[],[["singlethreadreversestepops",6],["option",4,["singlethreadreversestepops"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["targetresult",6]],[[],["targetresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["bool",15],["targetresult",6,["bool"]]]],[[["watchkind",4]],[["bool",15],["targetresult",6,["bool"]]]],[[],[["bool",15],["targetresult",6,["bool"]]]],[[]],[[]],[[],["watchkind",4]],[[]],[[["watchkind",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],[["option",4,["hwbreakpointops"]],["hwbreakpointops",6]]],[[],[["option",4,["hwwatchpointops"]],["hwwatchpointops",6]]],[[]],[[],[["bool",15],["targetresult",6,["bool"]]]],[[["watchkind",4]],[["bool",15],["targetresult",6,["bool"]]]],[[],[["bool",15],["targetresult",6,["bool"]]]],[[],[["option",4,["swbreakpointops"]],["swbreakpointops",6]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pid",6]],["targetresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]],["targetresult",6]],[[["bool",15]],["targetresult",6]],[[["option",4]],["targetresult",6]],[[],[["configureaslrops",6],["option",4,["configureaslrops"]]]],[[],[["option",4,["configureenvops"]],["configureenvops",6]]],[[],[["configurestartupshellops",6],["option",4,["configurestartupshellops"]]]],[[],[["configureworkingdirops",6],["option",4,["configureworkingdirops"]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["option",4,["pid"]],["pid",6]],[["targetresult",6,["shouldterminate"]],["shouldterminate",4]]],[[],["option",4]],[[],["result",4]],[[["pid",6]],[["targetresult",6,["attachkind"]],["attachkind",4]]],[[],["targetresult",6]],[[],["targetresult",6]],[[],["result",4]],[[["option",4],["args",3]],[["targetresult",6,["pid"]],["pid",6]]],[[["option",4]],["targetresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[["consoleoutput",3]],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["str",15]],["result",6]],null,null,null,null,null,[[]],[[]],[[]],[[],[["offsets",4],["result",4,["offsets"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["str",15]]],"p":[[4,"GdbStubError"],[4,"DisconnectReason"],[8,"Connection"],[4,"GdbStubBuilderError"],[3,"GdbStubBuilder"],[3,"GdbStub"],[13,"TargetExited"],[13,"TargetTerminated"],[13,"ConnectionRead"],[13,"ConnectionWrite"],[13,"PacketParse"],[13,"TargetError"],[8,"Arch"],[8,"Registers"],[8,"RegId"],[8,"BreakpointKind"],[8,"Target"],[4,"TargetError"],[13,"Io"],[13,"Errno"],[13,"Fatal"],[4,"ReplayLogPosition"],[4,"ResumeAction"],[4,"BaseOps"],[3,"GdbInterrupt"],[3,"GdbInterruptNoAsync"],[8,"SingleRegisterAccess"],[13,"SingleThread"],[13,"MultiThread"],[13,"ContinueWithSignal"],[13,"StepWithSignal"],[4,"ThreadStopReason"],[8,"MultiThreadOps"],[8,"MultiThreadReverseCont"],[8,"MultiThreadReverseStep"],[8,"MultiThreadRangeStepping"],[13,"Exited"],[13,"Terminated"],[13,"Signal"],[13,"SwBreak"],[13,"HwBreak"],[13,"ReplayLog"],[13,"Watch"],[4,"StopReason"],[8,"SingleThreadOps"],[8,"SingleThreadRangeStepping"],[8,"SingleThreadReverseCont"],[8,"SingleThreadReverseStep"],[13,"Exited"],[13,"Terminated"],[13,"Signal"],[13,"ReplayLog"],[13,"Watch"],[4,"WatchKind"],[8,"HwBreakpoint"],[8,"HwWatchpoint"],[8,"SwBreakpoint"],[8,"Breakpoints"],[4,"AttachKind"],[4,"ShouldTerminate"],[8,"ExtendedMode"],[3,"Args"],[8,"ConfigureAslr"],[8,"ConfigureStartupShell"],[8,"ConfigureWorkingDir"],[8,"ConfigureEnv"],[3,"ConsoleOutput"],[8,"MonitorCmd"],[4,"Offsets"],[8,"SectionOffsets"],[13,"Sections"],[13,"Segments"],[8,"TargetDescriptionXmlOverride"]]},\
"gdbstub_arch":{"doc":"Community-created implementations of <code>gdbstub::arch::Arch</code> …","tn":["arm","mips","msp430","ppc","riscv","x86","Arm32","ArmBreakpointKind","Armv4t","Thumb16","Thumb32","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","from_usize","into","into","reg","target_description_xml","try_from","try_from","try_into","try_into","type_id","type_id","ArmCoreRegs","borrow","borrow_mut","clone","clone_into","cpsr","default","eq","fmt","from","gdb_deserialize","gdb_serialize","id","into","lr","ne","pc","pc","r","sp","to_owned","try_from","try_into","type_id","ArmCoreRegId","Cpsr","Fpr","Fps","Gpr","Lr","Pc","Sp","borrow","borrow_mut","clone","clone_into","fmt","from","from_raw_id","into","to_owned","try_from","try_into","type_id","0","0","MicroMips16","MicroMips32","Mips","Mips16","Mips32","Mips64","Mips64WithDsp","MipsBreakpointKind","MipsWithDsp","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","from","from","from","from","from","from_usize","into","into","into","into","into","reg","target_description_xml","target_description_xml","target_description_xml","target_description_xml","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","MipsCoreRegs","MipsCoreRegsWithDsp","MipsCp0Regs","MipsFpuRegs","badvaddr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","core","cp0","default","default","default","default","dsp","eq","eq","eq","eq","fcsr","fir","fmt","fmt","fmt","fmt","fpu","from","from","from","from","gdb_deserialize","gdb_deserialize","gdb_serialize","gdb_serialize","hi","id","into","into","into","into","lo","ne","ne","ne","ne","pc","pc","pc","r","r","status","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Badvaddr","Cause","Dspctl","Fcsr","Fir","Fpr","Gpr","Hi","Hi1","Hi2","Hi3","Lo","Lo1","Lo2","Lo3","MipsRegId","Pc","Restart","Status","borrow","borrow_mut","clone","clone_into","fmt","from","from_raw_id","from_raw_id","into","to_owned","try_from","try_into","type_id","0","0","Msp430","borrow","borrow_mut","from","into","reg","target_description_xml","try_from","try_into","type_id","Msp430Regs","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","gdb_deserialize","gdb_serialize","id","into","ne","pc","pc","r","sp","sr","to_owned","try_from","try_into","type_id","Cg","Gpr","Msp430RegId","Pc","Sp","Sr","borrow","borrow_mut","clone","clone_into","fmt","from","from_raw_id","into","to_owned","try_from","try_into","type_id","0","PowerPcAltivec32","borrow","borrow_mut","from","into","reg","target_description_xml","try_from","try_into","type_id","PowerPcCommonRegs","borrow","borrow_mut","clone","clone_into","cr","ctr","default","eq","f","fmt","fpscr","from","gdb_deserialize","gdb_serialize","id","into","lr","msr","ne","pc","pc","r","to_owned","try_from","try_into","type_id","vr","vrsave","vscr","xer","Riscv32","Riscv64","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","reg","target_description_xml","target_description_xml","try_from","try_from","try_into","try_into","type_id","type_id","RiscvCoreRegs","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","gdb_deserialize","gdb_serialize","id","into","ne","pc","pc","to_owned","try_from","try_into","type_id","x","Csr","Fpr","Gpr","Pc","Priv","RiscvRegId","borrow","borrow_mut","clone","clone_into","fmt","from","from_raw_id","from_raw_id","into","to_owned","try_from","try_into","type_id","0","0","0","X86_64_SSE","X86_SSE","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","reg","target_description_xml","target_description_xml","try_from","try_from","try_into","try_into","type_id","type_id","F80","X86CoreRegs","X86SegmentRegs","X86_64CoreRegs","X87FpuInternalRegs","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cs","default","default","default","default","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eflags","eip","eq","eq","eq","eq","es","esi","esp","fctrl","fioff","fiseg","fmt","fmt","fmt","fmt","fooff","fop","foseg","fpu","fpu","from","from","from","from","fs","fstat","ftag","gdb_deserialize","gdb_deserialize","gdb_deserialize","gdb_deserialize","gdb_serialize","gdb_serialize","gdb_serialize","gdb_serialize","gs","id","into","into","into","into","mxcsr","mxcsr","ne","ne","ne","ne","pc","pc","pc","pc","regs","rip","segments","segments","ss","st","st","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","xmm","xmm","CS","DS","ES","Eax","Ebp","Ebx","Ecx","Edi","Edx","Eflags","Eflags","Eip","Esi","Esp","FS","Fctrl","Fioff","Fiseg","Fooff","Fop","Foseg","Fpu","Fpu","Fstat","Ftag","GS","Gpr","Mxcsr","Mxcsr","Rip","SS","Segment","Segment","St","St","X86CoreRegId","X86SegmentRegId","X86_64CoreRegId","X87FpuInternalRegId","Xmm","Xmm","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","from","from_raw_id","from_raw_id","into","into","into","into","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0"],"q":["gdbstub_arch","","","","","","gdbstub_arch::arm","","","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::arm::reg","","","","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::arm::reg::id","","","","","","","","","","","","","","","","","","","","gdbstub_arch::arm::reg::id::ArmCoreRegId","","gdbstub_arch::mips","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::mips::reg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::mips::reg::id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::mips::reg::id::MipsRegId","","gdbstub_arch::msp430","","","","","","","","","","gdbstub_arch::msp430::reg","","","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::msp430::reg::id","","","","","","","","","","","","","","","","","","gdbstub_arch::msp430::reg::id::Msp430RegId","gdbstub_arch::ppc","","","","","","","","","","gdbstub_arch::ppc::reg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::riscv","","","","","","","","","","","","","","","","","","","gdbstub_arch::riscv::reg","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::riscv::reg::id","","","","","","","","","","","","","","","","","","","gdbstub_arch::riscv::reg::id::RiscvRegId","","","gdbstub_arch::x86","","","","","","","","","","","","","","","","","","","gdbstub_arch::x86::reg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::x86::reg::id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gdbstub_arch::x86::reg::id::X86CoreRegId","","","","gdbstub_arch::x86::reg::id::X86_64CoreRegId","","","",""],"d":["Implementations for various ARM architectures.","Implementations for the MIPS architecture.","Implementations for the TI-MSP430 family of MCUs.","Implementations for various PowerPC architectures.","Implementations for the RISC-V architecture.","Implementations for various x86 architectures.","32-bit ARM mode breakpoint.","ARM-specific breakpoint kinds.","Implements <code>Arch</code> for ARMv4T","16-bit Thumb mode breakpoint.","32-bit Thumb mode (Thumb-2) breakpoint.","","","","","","","","","","","<code>Register</code> structs for various ARM architectures.","","","","","","","","32-bit ARM core registers.","","","","","Current Program Status Register (cpsr)","","","","","","","<code>RegId</code> definitions for ARM architectures.","","Link Register (R14)","","","Program Counter (R15)","General purpose registers (R0-R12)","Stack Pointer (R13)","","","","","32-bit ARM core register identifier.","Current Program Status Register (cpsr)","Floating point registers (F0-F7)","Floating point status","General purpose registers (R0-R12)","Link Register (R14)","Program Counter (R15)","Stack Pointer (R13)","","","","","","","","","","","","","","","16-bit microMIPS mode breakpoint.","32-bit microMIPS mode breakpoint.","Implements <code>Arch</code> for 32-bit MIPS.","16-bit MIPS16 mode breakpoint.","32-bit standard MIPS mode breakpoint.","Implements <code>Arch</code> for 64-bit MIPS.","Implements <code>Arch</code> for 64-bit MIPS with the DSP feature …","MIPS-specific breakpoint kinds.","Implements <code>Arch</code> for 32-bit MIPS with the DSP feature …","","","","","","","","","","","","","","","","","","","","","","","<code>Register</code> structs for MIPS architectures.","","","","","","","","","","","","","","","","","","","","MIPS registers.","MIPS core and DSP registers.","MIPS CP0 (coprocessor 0) registers.","MIPS FPU registers.","Bad Virtual Address register (regnum 35)","","","","","","","","","Exception Cause register (regnum 36)","","","","","","","","","Core registers","CP0 registers","","","","","DSP registers","","","","","Floating-point Control Status register","Floating-point Implementation Register","","","","","FPU registers","","","","","","","","","High register (regnum 34)","<code>RegId</code> definitions for MIPS architectures.","","","","","Low register (regnum 33)","","","","","","","Program Counter (regnum 37)","General purpose registers (R0-R31)","FP registers (F0-F31) starting at regnum 38","Status register (regnum 32)","","","","","","","","","","","","","","","","","Bad Virtual Address register","Exception Cause register","DSP Control register","Floating-point Control Status register","Floating-point Implementation Register","Floating point registers (F0-F31)","General purpose registers (R0-R31)","High register","High 1 register","High 2 register","High 3 register","Low register","Low 1 register","Low 2 register","Low 3 register","MIPS register identifier.","Program Counter","Restart register","Status register","","","","","","","","","","","","","","","","Implements <code>Arch</code> for standard 16-bit TI-MSP430 MCUs.","","","","","<code>Register</code> structs for various TI-MSP430 CPUs.","","","","","16-bit TI-MSP430 registers.","","","","","","","","","","","<code>RegId</code> definitions for various TI-MSP430 CPUs.","","","","Program Counter (R0)","General Purpose Registers (R4-R15)","Stack Pointer (R1)","Status Register (R2)","","","","","Constant Generator (R3)","General Purpose Registers (R4-R15)","TI-MSP430 register identifier.","Program Counter (R0)","Stack Pointer (R1)","Status Register (R2)","","","","","","","","","","","","","","Implements <code>Arch</code> for 32-bit PowerPC + AltiVec SIMD.","","","","","<code>Register</code> structs for PowerPC architectures","","","","","32-bit PowerPC core registers, FPU registers, and AltiVec …","","","","","Condition register","Count register","","","Floating Point registers","","Floating-point status and control register","","","","<code>RegId</code> definitions for PowerPC architectures.","","Link register","Machine state","","","Program counter","General purpose registers","","","","","Vector registers","Vector context save register","Vector status and control register","Integer exception register","Implements <code>Arch</code> for 32-bit RISC-V.","Implements <code>Arch</code> for 64-bit RISC-V.","","","","","","","","","<code>Register</code> structs for RISC-V architectures.","","","","","","","","","RISC-V Integer registers.","","","","","","","","","","","<code>RegId</code> definitions for RISC-V architectures.","","","","Program counter","","","","","General purpose registers (x0-x31)","Control and Status Register.","Floating Point Register (f0-f31).","General Purpose Register (x0-x31).","Program Counter.","Privilege level.","RISC-V Register identifier.","","","","","","","","","","","","","","","","","Implements <code>Arch</code> for 64-bit x86 + SSE Extensions.","Implements <code>Arch</code> for 32-bit x86 + SSE Extensions.","","","","","","","","","<code>Register</code> structs for x86 architectures.","","","","","","","","","80-bit floating point value","32-bit x86 core registers (+ SSE extensions).","x86 segment registers.","64-bit x86 core registers (+ SSE extensions).","FPU registers","","","","","","","","","","","","","","","","","Code Segment","","","","","Data Segment","Accumulator","Base pointer","Base register","Count register","Destination index","Data register","Status register","Status register","Instruction pointer","","","","","Extra Segment","Source index","Stack pointer","Floating-point control register","FPU instruction pointer offset","FPU instruction pointer segment","","","","","FPU operand offset","Floating-point opcode","FPU operand segment","FPU internal registers","FPU internal registers","","","","","General Purpose Segment","Floating-point status register","Tag word","","","","","","","","","General Purpose Segment","<code>RegId</code> definitions for x86 architectures.","","","","","SSE Status/Control Register","SSE Status/Control Register","","","","","","","","","RAX, RBX, RCX, RDX, RSI, RDI, RBP, RSP, r8-r15","Instruction pointer","Segment registers: CS, SS, DS, ES, FS, GS","Segment registers: CS, SS, DS, ES, FS, GS","Stack Segment","FPU registers: ST0 through ST7","FPU registers: ST0 through ST7","","","","","","","","","","","","","","","","","SIMD Registers: XMM0 through XMM7","SIMD Registers: XMM0 through XMM15","Code Segment","Data Segment","Extra Segment","Accumulator","Base pointer","Base register","Count register","Destination index","Data register","Status register","Status register","Instruction pointer","Source index","Stack pointer","General Purpose Segment","Floating-point control register","FPU instruction pointer offset","FPU instruction pointer segment","FPU operand offset","Floating-point opcode","FPU operand segment","FPU internal registers","FPU internal registers","Floating-point status register","Tag word","General Purpose Segment","General purpose registers: RAX, RBX, RCX, RDX, RSI, RDI, …","SSE Status/Control Register","SSE Status/Control Register","Instruction pointer","Stack Segment","Segment registers","Segment registers","FPU registers: ST0 through ST7","FPU registers: ST0 through ST7","32-bit x86 core + SSE register identifier.","Segment register identifier.","64-bit x86 core + SSE register identifier.","FPU register identifier.","SIMD Registers: XMM0 through XMM7","SIMD Registers: XMM0 through XMM15","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,0,1,1,2,1,2,1,1,2,1,1,2,1,0,2,2,1,2,1,2,1,0,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,6,7,7,0,7,7,0,0,0,0,8,9,10,11,7,8,9,10,11,7,7,8,9,10,11,7,7,8,9,10,11,7,0,8,9,10,11,8,9,10,11,7,8,9,10,11,7,8,9,10,11,7,0,0,0,0,12,13,12,14,15,13,12,14,15,12,13,12,14,15,13,12,14,15,15,13,13,12,14,15,15,13,12,14,15,14,14,13,12,14,15,13,13,12,14,15,13,15,13,15,13,0,13,12,14,15,13,13,12,14,15,13,15,13,13,14,12,13,12,14,15,13,12,14,15,13,12,14,15,13,12,14,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,18,0,19,19,19,19,0,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,0,20,20,20,20,20,20,20,20,20,20,20,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,0,23,23,23,23,0,23,23,23,23,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,25,26,25,26,25,26,25,26,0,25,26,25,26,25,26,25,26,0,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,27,27,28,28,28,28,28,0,28,28,28,28,28,28,28,28,28,28,28,28,28,29,30,31,0,0,32,33,32,33,32,33,32,33,0,32,33,32,33,32,33,32,33,0,0,0,0,0,34,35,36,37,34,35,36,37,34,35,36,37,34,35,36,37,37,34,35,36,37,37,34,34,34,34,34,34,34,35,34,34,35,36,37,37,34,34,36,36,36,34,35,36,37,36,36,36,34,35,34,35,36,37,37,36,36,34,35,36,37,34,35,36,37,37,0,34,35,36,37,34,35,34,35,36,37,34,35,36,37,35,35,34,35,37,34,35,34,35,36,37,34,35,36,37,34,35,36,37,34,35,36,37,34,35,38,38,38,39,39,39,39,39,39,39,40,39,39,39,38,41,41,41,41,41,41,39,40,41,41,38,40,39,40,40,38,39,40,39,40,0,0,0,0,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,42,43,44,45,46,47,48,49,50],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["usize",15]],["option",4]],[[]],[[]],null,[[],[["option",4,["str"]],["str",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[],["armcoreregs",3]],[[]],null,[[],["armcoreregs",3]],[[["armcoreregs",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],["result",4]],[[]],null,[[]],null,[[["armcoreregs",3]],["bool",15]],[[]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[],["armcoreregid",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[["usize",15]],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],null,[[],[["option",4,["str"]],["str",15]]],[[],[["option",4,["str"]],["str",15]]],[[],[["option",4,["str"]],["str",15]]],[[],[["option",4,["str"]],["str",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["mipscoreregs",3]],[[],["mipscp0regs",3]],[[],["mipsfpuregs",3]],[[],["mipscoreregswithdsp",3]],[[]],[[]],[[]],[[]],null,null,[[],["mipscoreregs",3]],[[],["mipscp0regs",3]],[[],["mipsfpuregs",3]],[[],["mipscoreregswithdsp",3]],null,[[["mipscoreregs",3]],["bool",15]],[[["mipscp0regs",3]],["bool",15]],[[["mipsfpuregs",3]],["bool",15]],[[["mipscoreregswithdsp",3]],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,[[["mipscoreregs",3]],["bool",15]],[[["mipscp0regs",3]],["bool",15]],[[["mipsfpuregs",3]],["bool",15]],[[["mipscoreregswithdsp",3]],["bool",15]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["mipsregid",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],null,[[],[["option",4,["str"]],["str",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["msp430regs",3]],[[]],[[],["msp430regs",3]],[[["msp430regs",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],["result",4]],[[]],null,[[]],[[["msp430regs",3]],["bool",15]],[[]],null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[],["msp430regid",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[["usize",15]],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],null,[[],[["option",4,["str"]],["str",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["powerpccommonregs",3]],[[]],null,null,[[],["powerpccommonregs",3]],[[["powerpccommonregs",3]],["bool",15]],null,[[["formatter",3]],["result",6]],null,[[]],[[],["result",4]],[[]],null,[[]],null,null,[[["powerpccommonregs",3]],["bool",15]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["option",4,["str"]],["str",15]]],[[],[["option",4,["str"]],["str",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[],["riscvcoreregs",3]],[[]],[[],["riscvcoreregs",3]],[[["riscvcoreregs",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],["result",4]],[[]],null,[[]],[[["riscvcoreregs",3]],["bool",15]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["riscvregid",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["option",4,["str"]],["str",15]]],[[],[["option",4,["str"]],["str",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["x86coreregs",3]],[[],["x86_64coreregs",3]],[[],["x87fpuinternalregs",3]],[[],["x86segmentregs",3]],[[]],[[]],[[]],[[]],null,[[],["x86coreregs",3]],[[],["x86_64coreregs",3]],[[],["x87fpuinternalregs",3]],[[],["x86segmentregs",3]],null,null,null,null,null,null,null,null,null,null,[[["x86coreregs",3]],["bool",15]],[[["x86_64coreregs",3]],["bool",15]],[[["x87fpuinternalregs",3]],["bool",15]],[[["x86segmentregs",3]],["bool",15]],null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,[[["x86coreregs",3]],["bool",15]],[[["x86_64coreregs",3]],["bool",15]],[[["x87fpuinternalregs",3]],["bool",15]],[[["x86segmentregs",3]],["bool",15]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["x87fpuinternalregid",4]],[[],["x86segmentregid",4]],[[],["x86coreregid",4]],[[],["x86_64coreregid",4]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null],"p":[[4,"ArmBreakpointKind"],[4,"Armv4t"],[3,"ArmCoreRegs"],[4,"ArmCoreRegId"],[13,"Gpr"],[13,"Fpr"],[4,"MipsBreakpointKind"],[4,"Mips"],[4,"Mips64"],[4,"MipsWithDsp"],[4,"Mips64WithDsp"],[3,"MipsCp0Regs"],[3,"MipsCoreRegs"],[3,"MipsFpuRegs"],[3,"MipsCoreRegsWithDsp"],[4,"MipsRegId"],[13,"Gpr"],[13,"Fpr"],[4,"Msp430"],[3,"Msp430Regs"],[4,"Msp430RegId"],[13,"Gpr"],[4,"PowerPcAltivec32"],[3,"PowerPcCommonRegs"],[4,"Riscv32"],[4,"Riscv64"],[3,"RiscvCoreRegs"],[4,"RiscvRegId"],[13,"Gpr"],[13,"Fpr"],[13,"Csr"],[4,"X86_64_SSE"],[4,"X86_SSE"],[3,"X86CoreRegs"],[3,"X86_64CoreRegs"],[3,"X87FpuInternalRegs"],[3,"X86SegmentRegs"],[4,"X86SegmentRegId"],[4,"X86CoreRegId"],[4,"X86_64CoreRegId"],[4,"X87FpuInternalRegId"],[13,"Segment"],[13,"St"],[13,"Fpu"],[13,"Xmm"],[13,"Gpr"],[13,"Segment"],[13,"St"],[13,"Fpu"],[13,"Xmm"]]},\
"getrandom":{"doc":"Interface to the operating system’s random number …","t":[18,18,3,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["CUSTOM_START","ERRNO_NOT_POSITIVE","Error","FAILED_RDRAND","INTERNAL_START","IOS_SEC_RANDOM","NODE_CRYPTO","NODE_RANDOM_FILL_SYNC","NO_RDRAND","UNSUPPORTED","VXWORKS_RAND_SECURE","WEB_CRYPTO","WEB_GET_RANDOM_VALUES","WINDOWS_RTL_GEN_RANDOM","borrow","borrow_mut","clone","code","eq","fmt","fmt","from","from","getrandom","into","ne","raw_os_error","try_from","try_into","type_id"],"q":["getrandom","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Codes at or above this point can be used by users to …","The platform-specific <code>errno</code> returned a non-positive value.","A small and <code>no_std</code> compatible error type","RDRAND instruction failed due to a hardware issue.","Codes below this point represent OS Errors (i.e. positive …","Call to iOS <code>SecRandomCopyBytes</code> failed.","NodeJS does not have support for the <code>crypto</code> module.","NodeJS does not have support for <code>crypto.randomFillSync</code>.","RDRAND instruction unsupported on this target.","This target/platform is not supported by <code>getrandom</code>.","On VxWorks, call to <code>randSecure</code> failed (random number …","The browser does not have support for <code>self.crypto</code>.","The browser does not have support for …","Call to Windows <code>RtlGenRandom</code> failed.","","","","Extract the bare error code.","","","","","","Fill <code>dest</code> with random bytes from the system’s preferred …","","","Extract the raw OS error code (if this error came from the …","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["error",3]],[[],["nonzerou32",3]],[[["error",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["nonzerou32",3]]],[[]],[[],[["result",4,["error"]],["error",3]]],[[]],[[["error",3]],["bool",15]],[[],[["i32",15],["option",4,["i32"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Error"]]},\
"gpu_display":{"doc":"Crate for displaying simple surfaces and GPU buffers over …","t":[13,13,13,13,13,13,13,4,3,13,4,13,3,4,3,6,13,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Allocate","BaseError","Connect","CreateEvent","CreateSurface","Cursor","Display","DisplayPollToken","EventDevice","EventDevice","EventDeviceKind","FailedImport","GpuDisplay","GpuDisplayError","GpuDisplayFramebuffer","GpuDisplayResult","InvalidImportId","InvalidPath","InvalidSurfaceId","IoError","Keyboard","Mouse","RequiredFeature","Scanout","SurfaceType","Touchscreen","Unsupported","as_raw_descriptor","as_raw_descriptor","as_raw_descriptors","as_raw_descriptors","as_raw_token","as_volatile_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","close_requested","commit","create_surface","dispatch_events","eq","eq","flip","flip_to","flush_buffered_events","fmt","fmt","fmt","fmt","framebuffer","framebuffer_region","from","from","from","from","from","from","from","from","from","from_raw_token","import_event_device","import_memory","into","into","into","into","into","into","into","is_buffered_events_empty","is_x","keyboard","kind","mouse","new","next_buffer_in_use","open_stub","open_wayland","open_x","recv_event_encoded","release_event_device","release_import","release_surface","send_event_encoded","send_report","set_position","set_scanout_id","stride","to_owned","to_owned","to_owned","to_string","touchscreen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","event_device_id","0","0","0"],"q":["gpu_display","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gpu_display::DisplayPollToken","gpu_display::GpuDisplayError","",""],"d":["An internal allocation failed.","A base error occurred.","Connecting to the compositor failed.","Creating event file descriptor failed.","Failed to create a surface on the compositor.","Mouse cursor surface","","Poll token for display instances","Encapsulates a virtual event device, such as a mouse or …","","","Failed to import a buffer to the compositor.","A connection to the compositor and associated collection …","An error generated by <code>GpuDisplay</code>.","","","The import ID is invalid.","The path is invalid.","The surface ID is invalid.","An input/output error occured.","Produces key events while the display window has focus.","Produces relative mouse motions, wheel, and button clicks …","A required feature was missing.","Scanout surface","A surface type","Produces absolute motion and touch events from the display …","The method is unsupported by the implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the identified top level surface has been …","Commits any pending state for the identified surface.","Creates a surface on the the compositor as either a top …","Dispatches internal events that were received from the …","","","Changes the visible contents of the identified surface to …","Changes the visible contents of the identified surface to …","Flushes the buffered events that did not fit into the …","","","","","Gets a reference to an unused framebuffer for the …","Gets a reference to an unused framebuffer for the …","","","","","","","","","","","Imports the given <code>event_device</code> into the display, returning …","Imports memory to the compositor for use as a surface …","","","","","","","","","Return whether this display is an X display","","","","","Returns true if the next buffer in the buffer queue for …","","Opens a fresh connection to the compositor.","Opens a connection to X server","","Release an event device from the display, given an …","Releases a previously imported memory identified by the …","Releases a previously created surface identified by the …","Sends the given <code>event</code>, returning <code>Ok(true)</code> if, after this …","","Sets the position of the identified subsurface relative to …","Associates the scanout id with the given surface.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,2,3,0,0,3,0,1,0,0,0,0,1,1,1,1,4,4,1,2,0,4,1,5,6,5,6,3,7,5,6,4,1,2,3,7,5,6,4,1,2,3,7,4,2,7,4,2,7,6,6,6,6,4,2,6,6,5,4,1,1,2,6,6,5,6,4,1,1,1,2,3,7,3,6,6,5,6,4,1,2,3,7,5,6,5,5,5,5,6,6,6,6,5,6,6,6,5,5,6,6,7,4,2,7,1,5,5,6,4,1,2,3,7,5,6,4,1,2,3,7,5,6,4,1,2,3,7,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],[["i32",15],["global",3],["vec",3,["i32","global"]]]],[[],[["i32",15],["global",3],["vec",3,["i32","global"]]]],[[],["u64",15]],[[],["volatileslice",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventdevicekind",4]],[[],["surfacetype",4]],[[],["gpudisplayframebuffer",3]],[[]],[[]],[[]],[[["u32",15]],["bool",15]],[[["u32",15]],["gpudisplayresult",6]],[[["option",4,["u32"]],["u32",15],["surfacetype",4]],[["u32",15],["gpudisplayresult",6,["u32"]]]],[[],["gpudisplayresult",6]],[[["eventdevicekind",4]],["bool",15]],[[["surfacetype",4]],["bool",15]],[[["u32",15]]],[[["u32",15]],["gpudisplayresult",6]],[[],[["result",6,["bool"]],["bool",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u32",15]],[["option",4,["gpudisplayframebuffer"]],["gpudisplayframebuffer",3]]],[[["u32",15]],[["option",4,["gpudisplayframebuffer"]],["gpudisplayframebuffer",3]]],[[]],[[]],[[]],[[["ioerror",3]],["gpudisplayerror",4]],[[["baseerror",3]],["gpudisplayerror",4]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[["eventdevice",3]],[["u32",15],["gpudisplayresult",6,["u32"]]]],[[["u64",15],["asrawdescriptor",8],["u32",15]],[["u32",15],["gpudisplayresult",6,["u32"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["unixstream",3]],["eventdevice",3]],[[],["eventdevicekind",4]],[[["unixstream",3]],["eventdevice",3]],[[["eventdevicekind",4],["unixstream",3]],["eventdevice",3]],[[["u32",15]],["bool",15]],[[],[["gpudisplayresult",6,["gpudisplay"]],["gpudisplay",3]]],[[["asref",8,["path"]],["path",3],["option",4]],[["gpudisplayresult",6,["gpudisplay"]],["gpudisplay",3]]],[[["asref",8,["str"]],["str",15],["option",4]],[["gpudisplayresult",6,["gpudisplay"]],["gpudisplay",3]]],[[],[["virtio_input_event",3],["result",6,["virtio_input_event"]]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["virtio_input_event",3]],[["result",6,["bool"]],["bool",15]]],[[["intoiterator",8]],[["result",6,["bool"]],["bool",15]]],[[["u32",15]],["gpudisplayresult",6]],[[["u32",15]],["gpudisplayresult",6]],[[],["u32",15]],[[]],[[]],[[]],[[],["string",3]],[[["unixstream",3]],["eventdevice",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null],"p":[[4,"GpuDisplayError"],[4,"SurfaceType"],[4,"DisplayPollToken"],[4,"EventDeviceKind"],[3,"EventDevice"],[3,"GpuDisplay"],[3,"GpuDisplayFramebuffer"],[13,"EventDevice"],[13,"BaseError"],[13,"IoError"],[13,"RequiredFeature"]]},\
"heck":{"doc":"<strong>heck</strong> is a case conversion library.","t":[8,8,8,8,8,8,8,8,10,8,10,10,10,10,10,10,10,10],"n":["CamelCase","KebabCase","MixedCase","ShoutyKebabCase","ShoutySnakeCase","ShoutySnekCase","SnakeCase","SnekCase","TO_SHOUTY_SNEK_CASE","TitleCase","to_camel_case","to_kebab_case","to_mixed_case","to_shouty_kebab_case","to_shouty_snake_case","to_snake_case","to_snek_case","to_title_case"],"q":["heck","","","","","","","","","","","","","","","","",""],"d":["This trait defines a camel case conversion.","This trait defines a kebab case conversion.","This trait defines a mixed case conversion.","This trait defines a shouty kebab case conversion.","This trait defines a shouty snake case conversion.","Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase. …","This trait defines a snake case conversion.","Oh heck, SnekCase is an alias for SnakeCase. See SnakeCase …","CONVERT THIS TYPE TO SNEK CASE.","This trait defines a title case conversion.","Convert this type to camel case.","Convert this type to kebab case.","Convert this type to mixed case.","Convert this type to shouty kebab case.","Convert this type to shouty snake case.","Convert this type to snake case.","Convert this type to snek case.","Convert this type to title case."],"i":[0,0,0,0,0,0,0,0,1,0,2,3,4,5,6,7,8,9],"f":[null,null,null,null,null,null,null,null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"ShoutySnekCase"],[8,"CamelCase"],[8,"KebabCase"],[8,"MixedCase"],[8,"ShoutyKebabCase"],[8,"ShoutySnakeCase"],[8,"SnakeCase"],[8,"SnekCase"],[8,"TitleCase"]]},\
"hypervisor":{"doc":"A crate for abstracting the underlying kernel hypervisor …","t":[13,3,4,13,13,4,13,13,13,13,13,13,13,13,13,8,13,13,13,4,13,13,13,13,3,4,4,13,13,4,6,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,4,3,3,13,8,13,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,10,10,10,10,10,11,10,10,10,10,10,10,12,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,13,13,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,3,13,3,4,4,3,4,13,13,13,3,8,13,13,13,13,13,13,3,3,13,6,3,13,4,13,13,13,17,13,13,3,3,13,17,13,13,13,13,4,4,3,3,4,4,3,13,3,3,13,13,13,3,3,13,4,8,8,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,10,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,10,10,10,11,11,10,10,11,11,10,11,11,11,11,11,11,10,10,11,11,11,11,10,12,12,12,12,12,12,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,10,10,10,11,10,11,10,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["AnyLength","ClockState","Datamatch","Dcr","Debug","DeviceKind","Epr","Exception","FailEntry","Gic","Halted","Hlt","Hypercall","HypervHcall","HypervSynic","Hypervisor","InitReceived","InternalError","Intr","IoEventAddress","IoIn","IoOut","Ioapic","IoapicEoi","IrqRoute","IrqSource","IrqSourceChip","IrqWindowOpen","Irqchip","MPState","MemSlot","Mmio","MmioRead","MmioWrite","Msi","Nmi","Osi","PaprHcall","PicPrimary","PicSecondary","Pio","Protected","ProtectedWithoutFirmware","ProtectionType","Runnable","S390Reset","S390Sieic","S390Tsch","S390Ucontrol","SetTpr","Shutdown","SipiReceived","Stopped","SystemEvent","TprAccess","U16","U32","U64","U8","Uninitialized","Unknown","Unprotected","Vcpu","VcpuExit","VcpuRunHandle","VcpuRunHandleFingerprint","Vfio","Vm","Watchdog","add_fd_mapping","add_memory_region","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_u64","as_vcpu","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caps","check_capability","check_capability","clock","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_device","default","deserialize","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","drop","enable_raw_capability","eq","eq","eq","eq","eq","eq","eq","eq","eq","fingerprint","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_dirty_log","get_guest_phys_addr_bits","get_memory","get_pvclock","gsi","handle_io_events","hash","id","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ioapic_irq_route","is","kvm","msync_memory_region","ne","ne","ne","ne","ne","new","pic_irq_route","pvclock_ctrl","register_ioevent","remove_mapping","remove_memory_region","run","serialize","set_data","set_immediate_exit","set_local_immediate_exit","set_local_immediate_exit_fn","set_pvclock","set_signal_mask","source","take_run_handle","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_clone","try_clone","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unregister_ioevent","x86_64","0","0","0","0","0","0","address","chip","data","pin","0","1","address","address","control","data","data","evt_page","hardware_entry_failure_reason","input","msg_page","msr","params","port","port","size","size","size","size","vector","ArmPmuV3","DirtyLog","HypervisorCap","ImmediateExit","Protected","PvClock","PvClockSuspend","S390UserSigp","TscDeadlineTimer","UserMemory","VmCap","Xcrs","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Kvm","KvmVcpu","KvmVm","add_fd_mapping","add_memory_region","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_vcpu","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_capability","check_capability","check_capability_arch","create_device","create_irq_chip","create_pit","create_vcpu","dirty_log_bitmap_size","enable_raw_capability","enable_split_irqchip","from","from","from","get_cpuid","get_debugregs","get_device_params_arch","get_dirty_log","get_emulated_cpuid","get_fpu","get_guest_phys_addr_bits","get_guest_phys_addr_bits","get_hyperv_cpuid","get_hypervisor","get_ioapic_num_pins","get_ioapic_state","get_lapic","get_memory","get_mp_state","get_msr_index_list","get_msrs","get_pic_state","get_pit_state","get_pvclock","get_pvclock_arch","get_regs","get_sregs","get_supported_cpuid","get_vcpu_mmap_size","get_vm_type","get_xcrs","handle_io_events","id","inject_nmi","interrupt","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","msync_memory_region","new","new","new_with_path","pvclock_ctrl","pvclock_ctrl_arch","ready_for_interrupt","register_ioevent","register_irqfd","remove_mapping","remove_memory_region","run","set_cpuid","set_data","set_debugregs","set_fpu","set_gsi_routing","set_guest_debug","set_identity_map_addr","set_immediate_exit","set_interrupt_window_requested","set_ioapic_state","set_irq_line","set_lapic","set_local_immediate_exit","set_local_immediate_exit_fn","set_mp_state","set_msrs","set_pic_state","set_pit_state","set_pvclock","set_pvclock_arch","set_regs","set_signal_mask","set_sregs","set_tss_addr","set_xcrs","take_run_handle","try_clone","try_clone","try_clone","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unregister_ioevent","unregister_irqfd","Assert","Both","CpuId","CpuIdEntry","Deassert","DebugRegs","DeliveryMode","DeliveryStatus","DescriptorTable","DestinationMode","Edge","External","Fixed","Fpu","HypervisorX86_64","Icw1","Icw2","Icw3","Icw4","Idle","Init","IoapicRedirectionTableEntry","IoapicState","LSB","LapicRegister","LapicState","Least","Level","Level","Logical","Lowest","MAX_IOAPIC_PINS","MSB","Most","MsiAddressMessage","MsiDataMessage","NMI","NUM_IOAPIC_PINS","None","None","Pending","Physical","PicInitState","PicSelect","PicState","PitChannelState","PitRWMode","PitRWState","PitState","Primary","Register","Regs","RemoteRead","SMI","Secondary","Segment","Sregs","Startup","TriggerMode","VcpuX86_64","VmX86_64","Word0","Word1","apic_base","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","auto_eoi","avl","base","base","base_address","bcd","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channels","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count_latched","count_load_time","cpu_id_entries","cr0","cr2","cr3","cr4","cr8","create_vcpu","cs","current_interrupt_level_bitmap","db","db","default","default","default","default","default","default","default","default","default","default","default","default","deserialize","downcast","downcast_mut","downcast_rc","downcast_ref","dpl","dr6","dr7","ds","eax","ebx","ecx","edx","efer","elcr","elcr_mask","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","es","fcw","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fpr","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fsw","ftwx","function","g","gate","gdt","get","get","get","get_always_0xfee","get_bit","get_bit","get_bit","get_debugregs","get_delivery_mode","get_delivery_mode","get_delivery_status","get_dest_id","get_dest_mode","get_destination_id","get_destination_mode","get_emulated_cpuid","get_fpu","get_hyperv_cpuid","get_hypervisor","get_interrupt_mask","get_level","get_msr_index_list","get_msrs","get_polarity","get_redirection_hint","get_regs","get_remote_irr","get_reserved","get_reserved","get_reserved","get_reserved2","get_reserved_2","get_sregs","get_supported_cpuid","get_trigger","get_trigger_mode","get_vector","get_vector","get_xcrs","gs","id","idt","imr","index","init_state","inject_nmi","interrupt","interrupt_bitmap","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ioapicid","ioregsel","irq_base","irr","is","isr","l","last_dp","last_ip","last_irr","last_opcode","latched_count","ldt","limit","limit","mode","mxcsr","n","n","n","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","poll","present","priority_add","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","read_reg_select","read_state","ready_for_interrupt","redirect_table","regs","reload_value","rflags","rip","rotate_on_auto_eoi","rsi","rsp","rw_mode","s","selector","serialize","set","set","set","set_always_0xfee","set_bit","set_bit","set_bit","set_cpuid","set_debugregs","set_delivery_mode","set_delivery_mode","set_delivery_status","set_dest_id","set_dest_mode","set_destination_id","set_destination_mode","set_fpu","set_guest_debug","set_identity_map_addr","set_interrupt_mask","set_interrupt_window_requested","set_level","set_msrs","set_polarity","set_redirection_hint","set_regs","set_remote_irr","set_reserved","set_reserved","set_reserved","set_reserved2","set_reserved_2","set_sregs","set_trigger","set_trigger_mode","set_tss_addr","set_vector","set_vector","set_xcrs","special_fully_nested_mode","special_mask","ss","status","status_latched","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tr","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_4_byte_icw","value","write_state","xmm"],"q":["hypervisorhypervisor::Datamatch","","","","hypervisor::IoEventAddress","","hypervisor::IrqSource","","","","hypervisor::VcpuExit","","","","","","","","","","","","","","","","","","","","hypervisor::caps","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hypervisor::kvm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hypervisor::xd":["","The state of the paravirtual clock.","Used in <code>Vm::register_ioevent</code> to indicate a size and …","","","A device type to create with <code>Vm.create_device</code>.","","","","","the vcpu has executed a HLT instruction and is waiting for …","","","","","A trait for checking hypervisor capabilities.","the vcpu has received an INIT signal, and is now ready for …","","","An address either in programmable I/O space or in memory …","An in port instruction was run on the given port.","An out port instruction was run on the given port with the …","","","A single route for an IRQ.","A source of IRQs in an <code>IrqRoute</code>.","The source chip of an <code>IrqSource</code>","","","The MPState represents the state of a processor.","An index in the list of guest-mapped memory regions.","","A read instruction was run against the given MMIO address.","A write instruction was run against the given MMIO address …","","","","","","","","The VM should be run in protected mode, so the host cannot …","The VM should be run in protected mode, but booted …","Whether the VM should be run in protected mode or not.","the vcpu is currently running (x86/x86_64,arm/arm64)","","","","","","","the vcpu has just received a SIPI (vector accessible via …","the vcpu is stopped (arm/arm64)","The cpu triggered a system level event which is specified …","","","","","","the vcpu is an application processor (AP) which has not …","","The VM should be run in the unprotected mode, where the …","A virtual CPU holding a virtualized hardware thread’s …","A reason why a VCPU exited. One of these returns every …","A handle returned by a <code>Vcpu</code> to be used with <code>Vcpu::run</code> to …","A unique fingerprint for a particular <code>VcpuRunHandle</code>, used …","VFIO device for direct access to devices from userspace","A wrapper for using a VM and getting/setting its state.","","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …","Inserts the given <code>MappedRegion</code> into the VM’s address …","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this architecture specific trait object to the base …","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if a particular <code>HypervisorCap</code> is available.","Checks if a particular <code>VmCap</code> is available.","Current pv clock timestamp, as seen by the guest","","","","","","","","","","","","","","","","","","","Creates an emulated device.","","","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","Enables a hypervisor-specific extension on this Vcpu.  <code>cap</code> …","","","","","","","","","","Gets the unique fingerprint which may be copied and …","Hypervisor-specific feature flags for the pv clock","","","","","","","","","","","","","","","","","","","","","","","","Gets the bitmap of dirty pages since the last call to …","Get the guest physical address size in bits.","Gets the guest-mapped memory for the Vm.","Retrieves the current timestamp of the paravirtual clock …","","Trigger any matching registered io events based on an MMIO …","","Returns the vcpu id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","Does a synchronous msync of the memory mapped at <code>slot</code>, …","","","","","","Used by <code>Vcpu</code> impls to create a unique run handle, that …","","Signals to the hypervisor that this guest is being paused …","Registers an event to be signaled whenever a certain …","Remove <code>size</code>-byte mapping starting at <code>offset</code>.","Removes and drops the <code>UserMemoryRegion</code> that was previously …","Runs the VCPU until it exits, returning the reason for the …","","Sets the data received by a mmio read, ioport in, or …","Sets the bit that requests an immediate exit.","Sets/clears the bit for immediate exit for the vcpu on the …","Returns a function pointer that invokes …","Sets the current timestamp of the paravirtual clock as …","Specifies set of signals that are blocked during execution …","","Returns a unique <code>VcpuRunHandle</code>. A <code>VcpuRunHandle</code> is …","","","","","","","","","","Makes a shallow clone of this <code>Hypervisor</code>.","Makes a shallow clone of this <code>Vm</code>.","Makes a shallow clone of this <code>Vcpu</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unregisters an event previously registered with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Track dirty pages","An enumeration of different hypervisor capabilities.","","VM can be run in protected mode, where the host does not …","Paravirtualized clock device","PV clock can be notified when guest is being paused","","","","A capability the <code>Vm</code> can possibly expose.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around using a KVM Vcpu.","A wrapper around creating and using a KVM VM.","","","","","","","","","","","","","","","","","","","","","","","","Checks if a particular <code>VmCap</code> is available, or returns None …","","Creates an in kernel interrupt controller.","Creates a PIT as per the KVM_CREATE_PIT2 ioctl.","","Helper function to determine the size in bytes of a dirty …","","Enable support for split-irqchip.","","","","","","Returns the params to pass to KVM_CREATE_DEVICE for a <code>kind</code> …","","","","Get the size of guest physical addresses in bits.","","","","Retrieves the KVM_IOAPIC_NUM_PINS value for emulated …","Retrieves the state of IOAPIC by issuing KVM_GET_IRQCHIP …","X86 specific call to get the state of the “Local …","","Gets the vcpu’s current “multiprocessing state”.","","","Retrieves the state of given interrupt controller by …","Retrieves the state of PIT by issuing KVM_GET_PIT2 ioctl.","","Arch-specific implementation of <code>Vm::get_pvclock</code>.","","","","Gets the size of the mmap required to use vcpu’s <code>kvm_run</code> …","","","","","","Use the KVM_INTERRUPT ioctl to inject the specified …","","","","","","","","","","","","","","Opens <code>/dev/kvm/</code> and returns a Kvm object on success.","Constructs a new <code>KvmVm</code> using the given <code>Kvm</code> instance.","","","Arch-specific implementation of <code>Vcpu::pvclock_ctrl</code>.","","","Registers an event that will, when signalled, trigger the …","","","","","","","","Sets the GSI routing table, replacing any table set with …","","Sets the address of a one-page region in the VM’s …","","","Sets the state of IOAPIC by issuing KVM_SET_IRQCHIP ioctl.","Sets the level on the given irq to 1 if <code>active</code> is true, …","X86 specific call to set the state of the “Local …","","","Sets the vcpu’s current “multiprocessing state”.","","Sets the state of given interrupt controller by issuing …","Sets the state of PIT by issuing KVM_SET_PIT2 ioctl.","","Arch-specific implementation of <code>Vm::set_pvclock</code>.","","","","Sets the address of the three-page region in the VM’s …","","","","","","","","","","","","","","","","Unregisters an event that was previously registered with …","","Both mode means first the least significant byte will be …","A container for the list of cpu id entries for the …","A CpuId Entry contains supported feature information for …","","State of a VCPU’s debug registers.","","","State of a global descriptor table or interrupt descriptor …","","","","","State of a VCPU’s floating point unit.","A trait for managing cpuids for an x86_64 hypervisor and …","","","","","","","Represents a IOAPIC redirection table entry.","Represents the state of the IOAPIC.","LSB means that the channel is in PitRWMode::Least access …","","The LapicState represents the state of an x86 CPU’s …","Least mode means all reads/writes will read/write the …","The level of a level-triggered interrupt: asserted or …","","","","Maximum number of pins on the IOAPIC.","MSB means that the channel is in PitRWMode::Most access …","Most mode means all reads/writes will read/write the most …","","","","Number of pins on the standard KVM/IOAPIC.","None mode means that no access mode has been set.","None mode means that no access mode has been set.","","","","","Represents the state of the PIC.","The PitChannelState represents the state of one of the PIT…","The PitRWMode enum represents the access mode of a PIT …","The PitRWState enum represents the state of reading to or …","The PitState represents the state of the PIT (aka the …","","State of one VCPU register.  Currently used for MSRs and …","State of a VCPU’s general purpose registers.","","","","State of a memory segment.","State of a VCPU’s special registers.","","","A wrapper around creating and using a VCPU on x86_64.","A wrapper for using a VM on x86_64 and getting/setting its …","Word0 means that the channel is in PitRWMode::Both mode, …","Word1 means that the channel is in PitRWMode::Both mode …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base_address is the memory base address for this IOAPIC. …","Whether or not we are in bcd mode. Not supported by KVM or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The starting value for the counter.","Indicates the PitRWState state of reading the latch value.","Nanosecond timestamp of when the count value was loaded.","","","","","","","Create a Vcpu with the specified Vcpu ID.","","current_interrupt_level_bitmap represents a bitmap of the …","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","“Edge/Level Control Registers”, for edge trigger …","","","","","","","","","","","","","","","","","","","","","","","Hypervisor-specific flags for setting the pit state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of the gate input pin. This only applies to channel …","","","","","","","","","Gets the VCPU debug registers.","","","","","","","","Get the system emulated CPUID values.","Gets the VCPU FPU registers.","Gets the system emulated hyper-v CPUID values.","Gets the <code>HypervisorX86_64</code> that created this VM.","","","Gets the list of supported MSRs.","Gets the model-specific registers.  <code>msrs</code> specifies the MSR …","","","Gets the VCPU general purpose registers.","","","","","","","Gets the VCPU special registers.","Get the system supported CPUID values.","","","","","Gets the VCPU extended control registers.","","","","Interrupt Mask Register.","","","Injects a non-maskable interrupt into the VCPU.","Injects interrupt vector <code>irq</code> into the VCPU.","A bitmap of pending external interrupts.  At most one bit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ioapicid register. Bits 24 - 27 contain the APIC ID for …","ioregsel register. Used for selecting which entry of the …","","Interrupt Request Register.","Returns true if the trait object wraps an object of type …","Interrupt Service Register.","","","","Edge detection.","","Stores the channel count from the last time the count was …","","","","The operation mode of this channel.","","","","","","","","","","","","","Constructs a new CpuId, with space allocated for …","","","","","","Highest priority, for priority rotation.","","","","","","","","","","","","","","","","Indicates the PitRWState state of reading the counter.","Checks if we can inject an interrupt into the VCPU.","redirect_table contains the irq settings for each irq line","","Stores the value with which the counter was initialized. …","","","","","","The command access mode of this channel.","","","","","","","","","","","Sets up the data returned by the CPUID instruction.","Sets the VCPU debug registers.","","","","","","","","Sets the VCPU FPU registers.","Sets up debug registers and configure vcpu for handling …","Sets the address of a one-page region in the VM’s …","","Sets or clears the flag that requests the VCPU to exit …","","Sets the model-specific registers.","","","Sets the VCPU general purpose registers.","","","","","","","Sets the VCPU special registers.","","","Sets the address of the three-page region in the VM’s …","","","Sets the VCPU extended control registers.","","","","Stores the channel status from the last time the status …","Indicates whether ReadBack status has been latched.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PIC takes either 3 or 4 bytes of initialization command …","","Indicates the PitRWState state of writing the counter.",""],"i":[1,0,0,2,2,0,2,2,2,3,4,2,2,2,2,0,4,2,2,0,2,2,3,2,0,0,0,2,5,0,0,6,2,2,5,2,2,2,3,3,6,7,7,0,4,2,2,2,2,2,2,4,4,2,2,1,1,1,1,4,2,7,0,0,0,0,8,0,2,9,9,10,11,6,1,2,8,3,5,12,13,4,7,10,11,6,1,2,8,3,5,12,13,4,7,11,14,10,11,6,1,2,8,3,5,12,13,4,7,10,11,6,1,2,8,3,5,12,13,4,7,0,15,9,13,11,6,8,3,5,12,13,4,7,11,6,8,3,5,12,13,4,7,9,13,6,14,14,14,14,14,10,14,11,6,1,8,3,5,12,4,7,10,13,6,2,8,3,5,12,13,4,7,10,11,6,1,2,8,3,5,12,13,13,4,4,7,9,9,9,9,12,9,6,14,10,11,6,1,2,8,3,5,12,13,4,7,10,11,6,1,2,8,3,5,12,13,4,7,10,11,6,1,2,8,3,5,12,13,4,7,10,11,6,1,2,8,3,5,12,13,4,7,12,14,0,9,11,6,1,5,12,10,12,14,9,9,9,14,6,14,14,14,14,9,14,12,14,11,6,8,3,5,12,13,4,7,15,9,14,10,11,6,1,2,8,3,5,12,13,4,7,10,11,6,1,2,8,3,5,12,13,4,7,10,11,6,1,2,8,3,5,12,13,4,7,9,0,16,17,18,19,20,21,22,23,22,23,24,24,25,26,27,28,26,27,29,30,27,27,30,28,31,28,31,25,26,32,33,34,0,33,34,34,34,33,33,33,0,33,33,34,33,34,33,34,33,34,34,34,34,34,33,34,33,34,33,34,33,34,33,34,34,33,34,33,34,33,34,0,0,0,35,35,36,35,37,36,35,37,36,35,37,36,35,37,37,36,35,37,36,35,37,36,35,35,35,35,35,35,0,37,35,36,35,37,36,37,35,35,36,37,36,35,37,35,35,35,37,35,37,36,37,35,35,35,35,37,37,36,36,36,37,35,37,37,37,36,35,37,36,35,37,36,35,37,36,35,37,35,36,35,36,37,37,37,35,35,35,35,37,37,37,37,37,35,37,35,37,37,35,35,37,37,37,37,37,35,35,35,35,37,37,37,35,37,37,36,35,37,36,35,37,36,35,37,36,35,37,35,35,38,39,0,0,38,0,0,0,0,0,40,41,41,0,0,42,42,42,42,43,41,0,0,44,0,0,39,0,40,45,41,0,44,39,0,0,41,0,39,44,43,45,0,0,0,0,0,0,0,46,0,0,41,41,46,0,0,41,0,0,0,44,44,47,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,54,59,59,60,53,57,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,56,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,57,57,57,48,47,47,47,47,47,64,47,53,59,62,49,52,53,42,54,58,59,60,47,61,62,63,63,65,65,65,65,59,62,62,47,49,49,49,49,47,54,54,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,47,61,49,56,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,61,48,48,49,45,40,41,50,51,43,38,52,52,53,53,46,42,42,54,54,55,55,56,56,39,39,44,44,57,57,58,58,59,59,60,60,47,47,61,61,62,62,63,47,61,61,49,59,57,47,50,51,52,50,50,51,52,65,51,52,52,52,52,50,50,66,65,65,64,52,51,66,65,52,50,65,52,50,51,52,51,50,65,66,51,52,51,52,65,47,63,47,54,49,54,65,65,47,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,53,53,54,54,65,54,59,61,61,54,61,57,47,59,60,57,61,42,39,44,49,50,51,52,53,54,56,57,48,50,51,52,54,59,54,58,58,58,58,58,58,58,58,58,58,58,58,58,58,54,57,65,53,55,57,58,58,54,58,58,57,59,59,63,50,51,52,50,50,51,52,65,65,51,52,52,52,52,50,50,65,65,64,52,65,51,65,52,50,65,52,50,51,52,51,50,65,51,52,64,51,52,65,54,54,47,57,57,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,47,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,59,48,49,45,40,41,50,51,43,38,52,53,46,42,54,55,56,39,44,57,58,59,60,47,61,62,63,54,63,57,61],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["u64",15],["u32",15],["protection",3],["asrawfd",8]],["result",6]],[[["box",3,["mappedregion"]],["guestaddress",3],["bool",15],["mappedregion",8]],[["result",6,["memslot"]],["memslot",6]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["u64",15]],[[],["vcpu",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["hypervisorcap",4]],["bool",15]],[[["vmcap",4]],["bool",15]],null,[[],["vcpurunhandlefingerprint",3]],[[],["ioeventaddress",4]],[[],["devicekind",4]],[[],["irqsourcechip",4]],[[],["irqsource",4]],[[],["irqroute",3]],[[],["clockstate",3]],[[],["mpstate",4]],[[],["protectiontype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["devicekind",4]],[["result",6,["safedescriptor"]],["safedescriptor",3]]],[[],["clockstate",3]],[[],["result",4]],[[["box",3]],[["result",4,["box","box"]],["box",3],["box",3]]],[[["arc",3]],[["result",4,["arc","arc"]],["arc",3],["arc",3]]],[[],["option",4]],[[["rc",3]],[["rc",3],["result",4,["rc","rc"]],["rc",3]]],[[],["option",4]],[[]],[[["u32",15]],["result",6]],[[["vcpurunhandlefingerprint",3]],["bool",15]],[[["ioeventaddress",4]],["bool",15]],[[["datamatch",4]],["bool",15]],[[["devicekind",4]],["bool",15]],[[["irqsourcechip",4]],["bool",15]],[[["irqsource",4]],["bool",15]],[[["irqroute",3]],["bool",15]],[[["mpstate",4]],["bool",15]],[[["protectiontype",4]],["bool",15]],[[],["vcpurunhandlefingerprint",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["kvm_clock_data",3]]],[[]],[[["kvm_mp_state",3]]],[[]],[[]],[[["memslot",6]],["result",6]],[[],["u8",15]],[[],["guestmemory",3]],[[],[["result",6,["clockstate"]],["clockstate",3]]],null,[[["ioeventaddress",4]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["u32",15]],["irqroute",3]],[[],["bool",15]],null,[[["usize",15],["memslot",6]],["result",6]],[[["vcpurunhandlefingerprint",3]],["bool",15]],[[["ioeventaddress",4]],["bool",15]],[[["datamatch",4]],["bool",15]],[[["irqsource",4]],["bool",15]],[[["irqroute",3]],["bool",15]],[[]],[[["u32",15],["irqsourcechip",4]],["irqroute",3]],[[],["result",6]],[[["datamatch",4],["event",3],["ioeventaddress",4]],["result",6]],[[["usize",15],["u32",15]],["result",6]],[[["memslot",6]],[["result",6,["box"]],["box",3,["mappedregion"]]]],[[["vcpurunhandle",3]],[["result",6,["vcpuexit"]],["vcpuexit",4]]],[[],["result",4]],[[],["result",6]],[[["bool",15]]],[[["bool",15]]],[[]],[[["clockstate",3]],["result",6]],[[],["result",6]],null,[[["option",4,["c_int"]],["c_int",6]],[["vcpurunhandle",3],["result",6,["vcpurunhandle"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["datamatch",4],["event",3],["ioeventaddress",4]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["vmcap",4]],[[]],[[["vmcap",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[["usize",15],["u64",15],["u32",15],["protection",3],["asrawfd",8]],["result",6]],[[["box",3,["mappedregion"]],["guestaddress",3],["bool",15],["mappedregion",8]],[["result",6,["memslot"]],["memslot",6]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],["vcpu",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hypervisorcap",4]],["bool",15]],[[["vmcap",4]],["bool",15]],[[["vmcap",4]],[["bool",15],["option",4,["bool"]]]],[[["devicekind",4]],[["result",6,["safedescriptor"]],["safedescriptor",3]]],[[],["result",6]],[[],["result",6]],[[["usize",15]],[["box",3,["vcpux86_64"]],["result",6,["box"]]]],[[["usize",15]],["usize",15]],[[["u32",15]],["result",6]],[[["usize",15]],["result",6]],[[]],[[]],[[]],[[["ioctlnr",6]],[["cpuid",3],["result",6,["cpuid"]]]],[[],[["result",6,["debugregs"]],["debugregs",3]]],[[["devicekind",4]],[["option",4,["kvm_create_device"]],["kvm_create_device",3]]],[[["memslot",6]],["result",6]],[[],[["cpuid",3],["result",6,["cpuid"]]]],[[],[["fpu",3],["result",6,["fpu"]]]],[[],["u8",15]],[[],["u8",15]],[[],[["cpuid",3],["result",6,["cpuid"]]]],[[],["hypervisorx86_64",8]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["result",6,["kvm_ioapic_state"]],["kvm_ioapic_state",3]]],[[],[["kvm_lapic_state",3],["result",6,["kvm_lapic_state"]]]],[[],["guestmemory",3]],[[],[["kvm_mp_state",3],["result",6,["kvm_mp_state"]]]],[[],[["result",6,["vec"]],["vec",3,["u32"]]]],[[["vec",3]],["result",6]],[[["picselect",4]],[["result",6,["kvm_pic_state"]],["kvm_pic_state",3]]],[[],[["kvm_pit_state2",3],["result",6,["kvm_pit_state2"]]]],[[],[["result",6,["clockstate"]],["clockstate",3]]],[[],[["result",6,["clockstate"]],["clockstate",3]]],[[],[["result",6,["regs"]],["regs",3]]],[[],[["result",6,["sregs"]],["sregs",3]]],[[],[["cpuid",3],["result",6,["cpuid"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["protectiontype",4]],[["result",6,["u32"]],["u32",15]]],[[],[["result",6,["vec"]],["vec",3,["register"]]]],[[["ioeventaddress",4]],["result",6]],[[],["usize",15]],[[],["result",6]],[[["u32",15]],["result",6]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["usize",15],["memslot",6]],["result",6]],[[],[["result",6,["kvm"]],["kvm",3]]],[[["kvm",3],["guestmemory",3],["protectiontype",4]],[["result",6,["kvmvm"]],["kvmvm",3]]],[[["path",3]],[["result",6,["kvm"]],["kvm",3]]],[[],["result",6]],[[],["result",6]],[[],["bool",15]],[[["datamatch",4],["event",3],["ioeventaddress",4]],["result",6]],[[["event",3],["u32",15],["option",4,["event"]]],["result",6]],[[["usize",15],["u32",15]],["result",6]],[[["memslot",6]],[["result",6,["box"]],["box",3,["mappedregion"]]]],[[["vcpurunhandle",3]],[["result",6,["vcpuexit"]],["vcpuexit",4]]],[[["cpuid",3]],["result",6]],[[],["result",6]],[[["debugregs",3]],["result",6]],[[["fpu",3]],["result",6]],[[],["result",6]],[[["bool",15]],["result",6]],[[["guestaddress",3]],["result",6]],[[["bool",15]]],[[["bool",15]]],[[["kvm_ioapic_state",3]],["result",6]],[[["u32",15],["bool",15]],["result",6]],[[["kvm_lapic_state",3]],["result",6]],[[["bool",15]]],[[]],[[["kvm_mp_state",3]],["result",6]],[[],["result",6]],[[["picselect",4],["kvm_pic_state",3]],["result",6]],[[["kvm_pit_state2",3]],["result",6]],[[["clockstate",3]],["result",6]],[[["clockstate",3]],["result",6]],[[["regs",3]],["result",6]],[[],["result",6]],[[["sregs",3]],["result",6]],[[["guestaddress",3]],["result",6]],[[],["result",6]],[[["option",4,["c_int"]],["c_int",6]],[["vcpurunhandle",3],["result",6,["vcpurunhandle"]]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["datamatch",4],["event",3],["ioeventaddress",4]],["result",6]],[[["event",3],["u32",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["cpuidentry",3]],[[],["destinationmode",4]],[[],["triggermode",4]],[[],["deliverymode",4]],[[],["msiaddressmessage",3]],[[],["msidatamessage",3]],[[],["deliverystatus",4]],[[],["level",4]],[[],["ioapicredirectiontableentry",3]],[[],["ioapicstate",3]],[[],["picselect",4]],[[],["picinitstate",4]],[[],["picstate",3]],[[],["lapicstate",3]],[[],["pitstate",3]],[[],["pitrwmode",4]],[[],["pitrwstate",4]],[[],["pitchannelstate",3]],[[],["regs",3]],[[],["segment",3]],[[],["descriptortable",3]],[[],["sregs",3]],[[],["fpu",3]],[[],["debugregs",3]],[[],["register",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["usize",15]],[["box",3,["vcpux86_64"]],["result",6,["box"]]]],null,null,null,null,[[],["cpuidentry",3]],[[],["ioapicredirectiontableentry",3]],[[],["ioapicstate",3]],[[]],[[],["picstate",3]],[[],["regs",3]],[[],["segment",3]],[[],["descriptortable",3]],[[],["sregs",3]],[[],["fpu",3]],[[],["debugregs",3]],[[],["register",3]],[[],["result",4]],[[["box",3]],[["result",4,["box","box"]],["box",3],["box",3]]],[[],["option",4]],[[["rc",3]],[["rc",3],["result",4,["rc","rc"]],["rc",3]]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,[[["cpuidentry",3]],["bool",15]],[[["destinationmode",4]],["bool",15]],[[["triggermode",4]],["bool",15]],[[["deliverymode",4]],["bool",15]],[[["msiaddressmessage",3]],["bool",15]],[[["msidatamessage",3]],["bool",15]],[[["deliverystatus",4]],["bool",15]],[[["level",4]],["bool",15]],[[["ioapicredirectiontableentry",3]],["bool",15]],[[["ioapicstate",3]],["bool",15]],[[["picselect",4]],["bool",15]],[[["picinitstate",4]],["bool",15]],[[["picstate",3]],["bool",15]],[[["lapicstate",3]],["bool",15]],[[["pitstate",3]],["bool",15]],[[["pitrwmode",4]],["bool",15]],[[["pitrwstate",4]],["bool",15]],[[["pitchannelstate",3]],["bool",15]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[["cpuid",6]],["cpuid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["kvm_ioapic_state__bindgen_ty_1",19]]],[[]],[[["kvm_ioapic_state",3]]],[[]],[[]],[[]],[[["u8",15]]],[[["kvm_pic_state",3]]],[[]],[[]],[[["kvm_lapic_state",3]]],[[["kvm_pit_state2",3]]],[[]],[[]],[[["u8",15]]],[[["u8",15]]],[[]],[[["kvm_pit_channel_state",3]]],[[]],[[["kvm_regs",3]]],[[]],[[["kvm_segment",3]]],[[]],[[["kvm_dtable",3]]],[[]],[[]],[[["kvm_sregs",3]]],[[["kvm_fpu",3]]],[[]],[[]],[[["kvm_debugregs",3]]],[[]],null,null,null,null,null,null,null,[[["usize",15],["u8",15]],["u64",15]],[[["usize",15],["u8",15]],["u64",15]],[[["usize",15],["u8",15]],["u64",15]],[[]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[],[["result",6,["debugregs"]],["debugregs",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["cpuid",3],["result",6,["cpuid"]]]],[[],[["fpu",3],["result",6,["fpu"]]]],[[],[["cpuid",3],["result",6,["cpuid"]]]],[[],["hypervisorx86_64",8]],[[]],[[]],[[],[["result",6,["vec"]],["vec",3,["u32"]]]],[[["vec",3]],["result",6]],[[]],[[]],[[],[["result",6,["regs"]],["regs",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6,["sregs"]],["sregs",3]]],[[],[["cpuid",3],["result",6,["cpuid"]]]],[[]],[[]],[[]],[[]],[[],[["result",6,["vec"]],["vec",3,["register"]]]],null,null,null,null,null,null,[[],["result",6]],[[["u32",15]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[["into",8,["i64"]],["i64",15]],["option",4]],[[["into",8,["i64"]],["i64",15]],["option",4]],[[["into",8,["i64"]],["i64",15]],["option",4]],[[["cpuidentry",3]],["bool",15]],[[["msiaddressmessage",3]],["bool",15]],[[["msidatamessage",3]],["bool",15]],[[["ioapicredirectiontableentry",3]],["bool",15]],[[["ioapicstate",3]],["bool",15]],[[["picstate",3]],["bool",15]],[[["pitstate",3]],["bool",15]],[[["pitchannelstate",3]],["bool",15]],[[["usize",15]]],[[],["msiaddressmessage",3]],[[],["msidatamessage",3]],[[],["ioapicredirectiontableentry",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[["usize",15],["u8",15],["u64",15]]],[[["usize",15],["u8",15],["u64",15]]],[[["usize",15],["u8",15],["u64",15]]],[[]],[[["usize",15],["bool",15]]],[[["usize",15],["bool",15]]],[[["usize",15],["bool",15]]],[[["cpuid",3]],["result",6]],[[["debugregs",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fpu",3]],["result",6]],[[["bool",15]],["result",6]],[[["guestaddress",3]],["result",6]],[[]],[[["bool",15]]],[[]],[[],["result",6]],[[]],[[]],[[["regs",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sregs",3]],["result",6]],[[]],[[]],[[["guestaddress",3]],["result",6]],[[]],[[]],[[],["result",6]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null],"p":[[4,"Datamatch"],[4,"VcpuExit"],[4,"IrqSourceChip"],[4,"MPState"],[4,"IrqSource"],[4,"IoEventAddress"],[4,"ProtectionType"],[4,"DeviceKind"],[8,"Vm"],[3,"VcpuRunHandle"],[3,"VcpuRunHandleFingerprint"],[3,"IrqRoute"],[3,"ClockState"],[8,"Vcpu"],[8,"Hypervisor"],[13,"U8"],[13,"U16"],[13,"U32"],[13,"U64"],[13,"Pio"],[13,"Mmio"],[13,"Msi"],[13,"Irqchip"],[13,"SystemEvent"],[13,"MmioRead"],[13,"MmioWrite"],[13,"HypervSynic"],[13,"IoOut"],[13,"FailEntry"],[13,"HypervHcall"],[13,"IoIn"],[13,"IoapicEoi"],[4,"HypervisorCap"],[4,"VmCap"],[3,"KvmVm"],[3,"Kvm"],[3,"KvmVcpu"],[4,"Level"],[4,"PitRWMode"],[4,"TriggerMode"],[4,"DeliveryMode"],[4,"PicInitState"],[4,"DeliveryStatus"],[4,"PitRWState"],[4,"DestinationMode"],[4,"PicSelect"],[3,"Sregs"],[3,"CpuId"],[3,"CpuIdEntry"],[3,"MsiAddressMessage"],[3,"MsiDataMessage"],[3,"IoapicRedirectionTableEntry"],[3,"IoapicState"],[3,"PicState"],[3,"LapicState"],[3,"PitState"],[3,"PitChannelState"],[3,"Regs"],[3,"Segment"],[3,"DescriptorTable"],[3,"Fpu"],[3,"DebugRegs"],[3,"Register"],[8,"VmX86_64"],[8,"VcpuX86_64"],[8,"HypervisorX86_64"]]},\
"intrusive_collections":{"doc":"Intrusive collections for Rust.","t":[8,4,8,3,13,13,16,8,8,16,16,18,18,16,16,8,16,13,3,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,14,10,10,0,11,11,14,10,0,10,0,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,3,3,3,3,3,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,4,3,3,4,3,3,3,3,3,13,3,8,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Adapter","Bound","DefaultLinkOps","DefaultPointerOps","Excluded","Included","Key","KeyAdapter","LinkOps","LinkOps","LinkPtr","NEW","NEW","Ops","Pointer","PointerOps","PointerOps","Unbounded","UnsafeRef","Value","acquire_link","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","container_of","default","deref","eq","fmt","fmt","from","from","from","from_box","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","get_key","get_link","get_value","hash","into","into","into","into_box","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","intrusive_adapter","link_ops","link_ops_mut","linked_list","ne","new","offset_of","pointer_ops","rbtree","release_link","singly_linked_list","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","xor_linked_list","0","0","AtomicLink","AtomicLinkOps","Cursor","CursorMut","IntoIter","Iter","Link","LinkOps","LinkedList","LinkedListOps","acquire_link","acquire_link","as_cursor","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_pointer","cursor","cursor_from_ptr","cursor_mut","cursor_mut_from_ptr","default","default","default","default","default","drop","fast_clear","fmt","fmt","fmt","force_unlink","force_unlink","from","from","from","from","from","from","from","from","from","front","front_mut","get","get","insert_after","insert_before","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_linked","is_linked","is_null","is_null","iter","move_next","move_next","move_prev","move_prev","new","new","new","next","next","next","next","next","next","next","next","next","next_back","next_back","peek_next","peek_next","peek_prev","peek_prev","pop_back","pop_front","prev","prev","prev","prev","prev","push_back","push_front","release_link","release_link","remove","replace_next_or_prev","replace_next_or_prev","replace_with","set","set","set_next","set_next","set_next","set_next","set_next","set_prev","set_prev","set_prev","splice_after","splice_before","split_after","split_before","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AtomicLink","AtomicLinkOps","Black","Color","Cursor","CursorMut","Entry","InsertCursor","IntoIter","Iter","Link","LinkOps","Occupied","RBTree","RBTreeOps","Red","Vacant","acquire_link","acquire_link","as_cursor","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_pointer","color","color","color","cursor","cursor_from_ptr","cursor_mut","cursor_mut_from_ptr","default","default","default","default","default","drop","entry","eq","fast_clear","find","find_mut","fmt","fmt","fmt","fmt","force_unlink","force_unlink","from","from","from","from","from","from","from","from","from","from","from","from","front","front_mut","get","get","insert","insert","insert","insert_after","insert_before","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_linked","is_linked","is_null","is_null","iter","left","left","left","lower_bound","lower_bound_mut","move_next","move_next","move_prev","move_prev","new","new","new","next","next","next","next","next","next","next","next","next_back","next_back","or_insert","or_insert_with","parent","parent","parent","peek_next","peek_next","peek_prev","peek_prev","prev","prev","prev","prev","range","release_link","release_link","remove","replace_next_or_prev","replace_next_or_prev","replace_with","right","right","right","set","set","set_color","set_color","set_color","set_left","set_left","set_left","set_next","set_next","set_next","set_next","set_parent","set_parent","set_parent","set_prev","set_prev","set_right","set_right","set_right","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper_bound","upper_bound_mut","0","0","AtomicLink","AtomicLinkOps","Cursor","CursorMut","IntoIter","Iter","Link","LinkOps","SinglyLinkedList","SinglyLinkedListOps","acquire_link","acquire_link","as_cursor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_pointer","cursor","cursor_from_ptr","cursor_mut","cursor_mut_from_ptr","default","default","default","default","default","drop","fast_clear","fmt","fmt","fmt","force_unlink","force_unlink","from","from","from","from","from","from","from","from","from","front","front_mut","get","get","insert_after","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_linked","is_linked","is_null","is_null","iter","move_next","move_next","new","new","new","next","next","next","next","next","next","next","peek_next","peek_next","pop_front","prev","prev","push_front","release_link","release_link","remove_next","replace_next_or_prev","replace_next_or_prev","replace_next_with","set","set","set_next","set_next","set_next","splice_after","split_after","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AtomicLink","AtomicLinkOps","Cursor","CursorMut","IntoIter","Iter","Link","LinkOps","XorLinkedList","XorLinkedListOps","acquire_link","acquire_link","as_cursor","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_pointer","cursor","cursor_from_ptr_and_next","cursor_from_ptr_and_prev","cursor_mut","cursor_mut_from_ptr_and_next","cursor_mut_from_ptr_and_prev","default","default","default","default","default","drop","fast_clear","fmt","fmt","fmt","force_unlink","force_unlink","from","from","from","from","from","from","from","from","from","front","front_mut","get","get","insert_after","insert_before","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_linked","is_linked","is_null","is_null","iter","move_next","move_next","move_prev","move_prev","new","new","new","next","next","next","next","next","next","next","next_back","next_back","peek_next","peek_next","peek_prev","peek_prev","pop_back","pop_front","prev","prev","prev","push_back","push_front","release_link","release_link","remove","replace_next_or_prev","replace_next_or_prev","replace_next_or_prev","replace_with","reverse","set","set","set","set_next","set_next","splice_after","splice_before","split_after","split_before","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["intrusive_collections","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","intrusive_collections::Bound","","intrusive_collections::linked_listintrusive_collections::rbtreeintrusive_collections::rbtree::Entry","","intrusive_collections::singly_linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","intrusive_collections::xor_linked_listd":["Trait for a adapter which allows a type to be inserted …","An endpoint of a range of keys.","The default implementation of <code>LinkOps</code> associated with a …","The <code>PointerOps</code> type used by an <code>Adapter</code> generated by …","An exclusive bound.","An inclusive bound.","Type of the key returned by <code>get_key</code>.","Extension of the <code>Adapter</code> trait to provide a way of …","Base trait for link operations.","Collection-specific link operations which allow an object …","The link pointer type.","The associated constant that represents <code>Ops::default()</code>.","The associated constant that represents <code>Ops::default()</code>.","The default link operations.","Pointer type which owns an instance of a value.","Trait for pointer conversion operations.","Collection-specific pointer conversions which allow an …","An infinite endpoint. Indicates that there is no bound in …","Unchecked shared pointer","Object type which is inserted into an intrusive collection.","Attempts to acquire ownership of a link so that it can be …","","","","","","","","","","","","","","","Unsafe macro to get a raw pointer to an outer object from …","","","","","","","","","Creates an <code>UnsafeRef</code> from a <code>Box</code>","Constructs an owned pointer from a raw pointer.","Creates an <code>UnsafeRef</code> from a raw pointer","","","","","","","","","","","Gets the key for the given object.","Gets a reference to the link for the given object.","Gets a reference to an object from a reference to a link …","","","","","Converts an <code>UnsafeRef</code> into a <code>Box</code>","Consumes the owned pointer and returns a raw pointer to …","Converts an <code>UnsafeRef</code> into a raw pointer","","","","","","","","","","","Macro to generate an implementation of <code>Adapter</code> for a given …","Returns a reference to the link operations.","Returns a reference to the mutable link operations.","Intrusive doubly-linked list.","","Constructs an instance of <code>DefaultPointerOps</code>.","Calculates the offset of the specified field from the …","Returns a reference to the pointer converter.","Intrusive red-black tree.","Releases ownership of a link that was previously acquired …","Intrusive singly-linked list.","","","","","","","","","","","","","Intrusive xor doubly-linked list which uses less memory …","","","Intrusive atomic link that allows an object to be inserted …","Default <code>AtomicLinkOps</code> implementation for <code>LinkedList</code>.","A cursor which provides read-only access to a <code>LinkedList</code>.","A cursor which provides mutable access to a <code>LinkedList</code>.","An iterator which consumes a <code>LinkedList</code>.","An iterator over references to the items of a <code>LinkedList</code>.","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>LinkedList</code>.","An intrusive doubly-linked list.","Link operations for <code>LinkedList</code>.","","","Returns a read-only cursor pointing to the current element.","Returns a <code>Cursor</code> pointing to the last element of the list. …","Returns a <code>CursorMut</code> pointing to the last element of the …","","","","","","","","","","","","","","","","","","","Removes all elements from the <code>LinkedList</code>.","","","","","","","","","","","","","Clones and returns the pointer that points to the element …","Returns a null <code>Cursor</code> for this list.","Creates a <code>Cursor</code> from a pointer to an element.","Returns a null <code>CursorMut</code> for this list.","Creates a <code>CursorMut</code> from a pointer to an element.","","","","","","","Empties the <code>LinkedList</code> without unlinking or freeing …","","","","Forcibly unlinks an object from a <code>LinkedList</code>.","Forcibly unlinks an object from a <code>LinkedList</code>.","","","","","","","","","","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>LinkedList</code> after the …","Inserts a new element into the <code>LinkedList</code> before the …","","","","","","","","","","","","","Returns <code>true</code> if the <code>LinkedList</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>LinkedList</code>.","Checks whether the <code>AtomicLink</code> is linked into a <code>LinkedList</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>LinkedList</code>.","Moves the cursor to the next element of the <code>LinkedList</code>.","Moves the cursor to the next element of the <code>LinkedList</code>.","Moves the cursor to the previous element of the <code>LinkedList</code>.","Moves the cursor to the previous element of the <code>LinkedList</code>.","Creates a new <code>Link</code>.","Creates a new <code>AtomicLink</code>.","Creates an empty <code>LinkedList</code>.","Returns the “next” link pointer of <code>ptr</code>.","","","","","","","","","","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the previous element of the …","Returns a cursor pointing to the previous element of the …","Removes the last element of the <code>LinkedList</code>.","Removes the first element of the <code>LinkedList</code>.","Returns the “prev” link pointer of <code>ptr</code>.","","","","","Inserts a new element at the end of the <code>LinkedList</code>.","Inserts a new element at the start of the <code>LinkedList</code>.","","","Removes the current element from the <code>LinkedList</code>.","","","Removes the current element from the <code>LinkedList</code> and …","","","Sets the “next” link pointer of <code>ptr</code>.","","","","","Sets the “prev” link pointer of <code>ptr</code>.","","","Inserts the elements from the given <code>LinkedList</code> after the …","Moves all element from the given <code>LinkedList</code> before the …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","Takes all the elements out of the <code>LinkedList</code>, leaving it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>RBTree</code>.","","The color of a red-black tree node.","A cursor which provides read-only access to a <code>RBTree</code>.","A cursor which provides mutable access to a <code>RBTree</code>.","An entry in a <code>RBTree</code>.","A cursor pointing to a slot in which an element can be …","An iterator which consumes a <code>RBTree</code>.","An iterator over references to the items of a <code>RBTree</code>.","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>RBTree</code>.","An occupied entry.","An intrusive red-black tree.","Link operations for <code>RBTree</code>.","","A vacant entry.","","","Returns a read-only cursor pointing to the current element.","Returns a <code>Cursor</code> pointing to the last element of the tree. …","Returns a <code>CursorMut</code> pointing to the last element of the …","","","","","","","","","","","","","","","","","","","","","","","","","Removes all elements from the <code>RBTree</code>.","","","","","","","","","","","","","","","Clones and returns the pointer that points to the element …","Returns the color of <code>ptr</code>.","","","Returns a null <code>Cursor</code> for this tree.","Creates a <code>Cursor</code> from a pointer to an element.","Returns a null <code>CursorMut</code> for this tree.","Creates a <code>CursorMut</code> from a pointer to an element.","","","","","","","Returns an <code>Entry</code> for the given key which contains a …","","Empties the <code>RBTree</code> without unlinking or freeing objects in …","Returns a <code>Cursor</code> pointing to an element with the given …","Returns a <code>CursorMut</code> pointing to an element with the given …","","","","","Forcibly unlinks an object from a <code>RBTree</code>.","Forcibly unlinks an object from a <code>RBTree</code>.","","","","","","","","","","","","","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>RBTree</code>.","Inserts a new element into the <code>RBTree</code>.","Inserts a new element into the <code>RBTree</code> at the location …","Inserts a new element into the <code>RBTree</code> after the current …","Inserts a new element into the <code>RBTree</code> before the current …","","","","","","","","","","","","","","","","Returns <code>true</code> if the <code>RBTree</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>RBTree</code>.","Checks whether the <code>AtomicLink</code> is linked into a <code>RBTree</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>RBTree</code>.","Returns the left child of <code>ptr</code>.","","","Returns a <code>Cursor</code> pointing to the lowest element whose key …","Returns a <code>CursorMut</code> pointing to the first element whose …","Moves the cursor to the next element of the <code>RBTree</code>.","Moves the cursor to the next element of the <code>RBTree</code>.","Moves the cursor to the previous element of the <code>RBTree</code>.","Moves the cursor to the previous element of the <code>RBTree</code>.","Creates a new <code>Link</code>.","Creates a new <code>AtomicLink</code>.","Creates an empty <code>RBTree</code>.","","","","","","","","","","","Inserts an element into the <code>RBTree</code> if the entry is vacant, …","Calls the given function and inserts the result into the …","Returns the parent of <code>ptr</code>.","","","Returns a cursor pointing to the next element of the <code>RBTree</code>…","Returns a cursor pointing to the next element of the <code>RBTree</code>…","Returns a cursor pointing to the previous element of the …","Returns a cursor pointing to the previous element of the …","","","","","Constructs a double-ended iterator over a sub-range of …","","","Removes the current element from the <code>RBTree</code>.","","","Removes the current element from the <code>RBTree</code> and inserts …","Returns the right child of <code>ptr</code>.","","","","","Sets the color of <code>ptr</code>.","","","Sets the left child of <code>ptr</code>.","","","","","","","Sets the parent of <code>ptr</code>.","","","","","Sets the right child of <code>ptr</code>.","","","Takes all the elements out of the <code>RBTree</code>, leaving it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Cursor</code> pointing to the last element whose key is …","Returns a <code>CursorMut</code> pointing to the last element whose key …","","","Intrusive link that allows an object to be inserted into a …","Default <code>AtomicLinkOps</code> implementation for <code>LinkedList</code>.","A cursor which provides read-only access to a …","A cursor which provides mutable access to a …","An iterator which consumes a <code>SinglyLinkedList</code>.","An iterator over references to the items of a …","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>SinglyLinkedList</code>.","An intrusive singly-linked list.","Link operations for <code>SinglyLinkedList</code>.","","","Returns a read-only cursor pointing to the current element.","","","","","","","","","","","","","","","","","","","Removes all elements from the <code>SinglyLinkedList</code>.","","","","","","","","","","","","","Clones and returns the pointer that points to the element …","Returns a null <code>Cursor</code> for this list.","Creates a <code>Cursor</code> from a pointer to an element.","Returns a null <code>CursorMut</code> for this list.","Creates a <code>CursorMut</code> from a pointer to an element.","","","","","","","Empties the <code>SinglyLinkedList</code> without unlinking or freeing …","","","","Forcibly unlinks an object from a <code>SinglyLinkedList</code>.","Forcibly unlinks an object from a <code>SinglyLinkedList</code>.","","","","","","","","","","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>SinglyLinkedList</code> after the …","","","","","","","","","","","","","Returns <code>true</code> if the <code>SinglyLinkedList</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>SinglyLinkedList</code>.","Checks whether the <code>AtomicLink</code> is linked into a …","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>SinglyLinkedList</code>.","Moves the cursor to the next element of the …","Moves the cursor to the next element of the …","Creates a new <code>Link</code>.","Creates a new <code>AtomicLink</code>.","Creates an empty <code>SinglyLinkedList</code>.","Returns the “next” link pointer of <code>ptr</code>.","","","","","","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Removes the first element of the <code>SinglyLinkedList</code>.","","","Inserts a new element at the start of the <code>SinglyLinkedList</code>.","","","Removes the next element from the <code>SinglyLinkedList</code>.","","","Removes the next element from the <code>SinglyLinkedList</code> and …","","","Sets the “next” link pointer of <code>ptr</code>.","","","Inserts the elements from the given <code>SinglyLinkedList</code> after …","Splits the list into two after the current element. This …","Takes all the elements out of the <code>SinglyLinkedList</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intrusive link that allows an object to be inserted into a …","Default <code>AtomicLinkOps</code> implementation for <code>LinkedList</code>.","A cursor which provides read-only access to a <code>XorLinkedList</code>…","A cursor which provides mutable access to a <code>XorLinkedList</code>.","An iterator which consumes a <code>XorLinkedList</code>.","An iterator over references to the items of a <code>XorLinkedList</code>…","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>XorLinkedList</code>.","Intrusive xor doubly-linked list which uses less memory …","Link operations for <code>XorLinkedList</code>.","","","Returns a read-only cursor pointing to the current element.","Returns a <code>Cursor</code> pointing to the last element of the list. …","Returns a <code>CursorMut</code> pointing to the last element of the …","","","","","","","","","","","","","","","","","","","Removes all elements from the <code>XorLinkedList</code>.","","","","","","","","","","","","","Clones and returns the pointer that points to the element …","Returns a null <code>Cursor</code> for this list.","Creates a <code>Cursor</code> from a pointer to an element and a …","Creates a <code>Cursor</code> from a pointer to an element and a …","Returns a null <code>CursorMut</code> for this list.","Creates a <code>CursorMut</code> from a pointer to an element and a …","Creates a <code>CursorMut</code> from a pointer to an element and a …","","","","","","","Empties the <code>XorLinkedList</code> without unlinking or freeing …","","","","Forcibly unlinks an object from a <code>XorLinkedList</code>.","Forcibly unlinks an object from a <code>XorLinkedList</code>.","","","","","","","","","","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>XorLinkedList</code> after the …","Inserts a new element into the <code>XorLinkedList</code> before the …","","","","","","","","","","","","","Returns <code>true</code> if the <code>XorLinkedList</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>XorLinkedList</code>.","Checks whether the <code>Link</code> is linked into a <code>XorLinkedList</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>XorLinkedList</code>.","Moves the cursor to the next element of the <code>XorLinkedList</code>.","Moves the cursor to the next element of the <code>XorLinkedList</code>.","Moves the cursor to the previous element of the …","Moves the cursor to the previous element of the …","Creates a new <code>Link</code>.","Creates a new <code>Link</code>.","Creates an empty <code>XorLinkedList</code>.","Returns the “next” link pointer of <code>ptr</code>.","","","","","","","","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the previous element of the …","Returns a cursor pointing to the previous element of the …","Removes the last element of the <code>XorLinkedList</code>.","Removes the first element of the <code>XorLinkedList</code>.","Returns the “prev” link pointer of <code>ptr</code>.","","","Inserts a new element at the end of the <code>XorLinkedList</code>.","Inserts a new element at the start of the <code>XorLinkedList</code>.","","","Removes the current element from the <code>XorLinkedList</code>.","Replaces the “next” or “prev” link pointer of <code>ptr</code>.","","","Removes the current element from the <code>XorLinkedList</code> and …","Reverses the list in-place.","Assigns the “prev” and “next” link pointers of <code>ptr</code>.","","","","","Inserts the elements from the given <code>XorLinkedList</code> after …","Moves all element from the given <code>XorLinkedList</code> before the …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","Takes all the elements out of the <code>XorLinkedList</code>, leaving …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,2,0,0,3,4,5,5,5,6,0,3,1,0,6,4,7,7,7,8,1,7,8,1,7,8,1,7,8,1,0,8,7,1,7,1,7,8,1,7,6,7,8,8,8,8,8,8,8,8,8,8,2,3,3,1,7,8,1,7,6,7,8,8,8,8,8,8,8,8,8,8,0,3,3,0,1,8,0,3,0,4,0,7,8,1,7,8,1,7,8,1,7,8,1,0,9,10,0,0,0,0,0,0,0,0,0,0,11,12,13,14,14,15,16,17,13,14,18,19,11,12,15,16,17,13,14,18,19,11,12,14,15,16,17,18,11,12,15,16,17,18,11,12,17,14,14,14,14,15,16,14,11,12,14,14,15,16,14,15,16,15,16,17,13,14,18,19,11,12,14,14,17,13,13,13,15,16,17,13,14,18,19,11,12,14,18,19,14,15,16,17,13,14,17,13,17,13,15,16,14,20,18,19,11,11,11,12,12,12,18,19,17,13,17,13,14,14,20,11,11,12,12,14,14,11,12,13,11,12,13,11,12,20,11,11,12,12,20,11,12,13,13,13,13,14,15,16,17,18,11,12,15,16,17,13,14,18,19,11,12,15,16,17,13,14,18,19,11,12,15,16,17,13,14,18,19,11,12,0,0,21,0,0,0,0,0,0,0,0,0,22,0,0,21,22,23,24,25,26,26,27,28,29,25,26,30,22,31,32,21,23,24,27,28,29,25,26,30,22,31,32,21,23,24,26,27,28,29,31,21,23,24,27,28,29,31,21,23,24,29,33,23,24,26,26,26,26,27,28,26,23,24,26,26,21,26,26,26,27,28,26,21,27,28,27,28,29,25,26,30,22,31,32,21,23,24,26,26,29,25,25,26,30,25,25,27,28,29,25,26,30,22,31,32,21,23,24,26,31,32,26,27,28,29,25,26,33,23,24,26,26,29,25,29,25,27,28,26,31,32,23,23,23,24,24,24,31,32,22,22,33,23,24,29,25,29,25,23,23,24,24,26,23,24,25,23,24,25,33,23,24,23,24,33,23,24,33,23,24,23,23,24,24,33,23,24,23,24,33,23,24,26,27,28,29,31,21,23,24,27,28,29,25,26,30,22,31,32,21,23,24,27,28,29,25,26,30,22,31,32,21,23,24,27,28,29,25,26,30,22,31,32,21,23,24,26,26,34,35,0,0,0,0,0,0,0,0,0,0,36,37,38,39,40,41,38,42,43,44,36,37,39,40,41,38,42,43,44,36,37,42,39,40,41,43,36,37,39,40,41,43,36,37,41,42,42,42,42,39,40,42,36,37,42,42,39,40,42,39,40,39,40,41,38,42,43,44,36,37,42,42,41,38,38,39,40,41,38,42,43,44,36,37,42,43,44,42,39,40,41,38,42,41,38,39,40,42,45,43,44,36,36,37,37,41,38,42,36,37,42,36,37,38,36,37,38,36,37,45,36,37,38,38,42,39,40,41,43,36,37,39,40,41,38,42,43,44,36,37,39,40,41,38,42,43,44,36,37,39,40,41,38,42,43,44,36,37,0,0,0,0,0,0,0,0,0,0,46,47,48,49,49,50,51,52,48,49,53,54,46,47,50,51,52,48,49,53,54,46,47,49,50,51,52,53,46,47,50,51,52,53,46,47,52,49,49,49,49,49,49,50,51,49,46,47,49,49,50,51,49,50,51,50,51,52,48,49,53,54,46,47,49,49,52,48,48,48,50,51,52,48,49,53,54,46,47,49,53,54,49,50,51,52,48,49,52,48,52,48,50,51,49,55,53,54,46,46,47,47,53,54,52,48,52,48,49,49,55,46,47,49,49,46,47,48,55,46,47,48,49,55,46,47,46,47,48,48,48,48,49,50,51,52,53,46,47,50,51,52,48,49,53,54,46,47,50,51,52,48,49,53,54,46,47,50,51,52,48,49,53,54,46,47],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["unsaferef",3]],[[]],[[],["bound",4]],[[]],[[]],[[]],null,[[]],[[]],[[["bound",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["box",3]],["unsaferef",3]],[[]],[[],["unsaferef",3]],[[],[["rc",3],["pin",3,["rc"]]]],[[]],[[],["pin",3]],[[],["unsaferef",3]],[[],[["pin",3,["unsaferef"]],["unsaferef",3]]],[[],["box",3]],[[],[["box",3],["pin",3,["box"]]]],[[],["rc",3]],[[],["arc",3]],[[],[["pin",3,["arc"]],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["box",3]],[[]],[[]],[[["pin",3]]],[[]],[[["box",3]]],[[["unsaferef",3]]],[[["box",3],["pin",3,["box"]]]],[[["arc",3]]],[[["pin",3,["arc"]],["arc",3]]],[[["pin",3,["unsaferef"]],["unsaferef",3]]],[[["rc",3]]],[[["pin",3,["rc"]],["rc",3]]],null,[[]],[[]],null,[[["bound",4]],["bool",15]],[[],["defaultpointerops",3]],null,[[]],null,[[]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["atomiclink",3]],[[],["cursor",3]],[[],["iter",3]],[[],["linkops",3]],[[],["atomiclinkops",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["link",3]],[[],["atomiclink",3]],[[],["linkedlist",3]],[[],["linkops",3]],[[],["atomiclinkops",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["atomiclink",3]],[[],["linkedlist",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["option",4]],[[["option",4]]],[[["option",4]]],[[],["result",4]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["linkedlist",3]]],[[["linkedlist",3]]],[[],["linkedlist",3]],[[],["linkedlist",3]],[[],["linkedlist",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["atomiclink",3]],[[],["cursor",3]],[[],["iter",3]],[[],["color",4]],[[],["linkops",3]],[[],["atomiclinkops",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["color",4]],[[],["color",4]],[[],["color",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["link",3]],[[],["atomiclink",3]],[[],["rbtree",3]],[[],["linkops",3]],[[],["atomiclinkops",3]],[[]],[[],["entry",4]],[[["color",4]],["bool",15]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[]],[[],["cursormut",3]],[[],["cursormut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["bound",4]],["cursor",3]],[[["bound",4]],["cursormut",3]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["atomiclink",3]],[[],["rbtree",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[["bound",4],["bound",4]],["iter",3]],[[]],[[]],[[],["option",4]],[[["option",4]]],[[["option",4]]],[[],["result",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]]],[[["option",4]]],[[["color",4]]],[[["color",4]]],[[["color",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[],["rbtree",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["bound",4]],["cursor",3]],[[["bound",4]],["cursormut",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["cursor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["atomiclink",3]],[[],["cursor",3]],[[],["iter",3]],[[],["linkops",3]],[[],["atomiclinkops",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["link",3]],[[],["atomiclink",3]],[[],["singlylinkedlist",3]],[[],["linkops",3]],[[],["atomiclinkops",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[]],[[]],[[],["link",3]],[[],["atomiclink",3]],[[],["singlylinkedlist",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[]],[[]],[[]],[[],["option",4]],[[["option",4]]],[[["option",4]]],[[],["result",4]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["singlylinkedlist",3]]],[[],["singlylinkedlist",3]],[[],["singlylinkedlist",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["atomiclink",3]],[[],["cursor",3]],[[],["iter",3]],[[],["linkops",3]],[[],["atomiclinkops",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["link",3]],[[],["atomiclink",3]],[[],["xorlinkedlist",3]],[[],["linkops",3]],[[],["atomiclinkops",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["atomiclink",3]],[[],["xorlinkedlist",3]],[[["option",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[]],[[]],[[]],[[]],[[],["option",4]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[],["result",4]],[[]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["xorlinkedlist",3]]],[[["xorlinkedlist",3]]],[[],["xorlinkedlist",3]],[[],["xorlinkedlist",3]],[[],["xorlinkedlist",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Bound"],[8,"KeyAdapter"],[8,"Adapter"],[8,"LinkOps"],[8,"DefaultLinkOps"],[8,"PointerOps"],[3,"UnsafeRef"],[3,"DefaultPointerOps"],[13,"Included"],[13,"Excluded"],[3,"LinkOps"],[3,"AtomicLinkOps"],[3,"CursorMut"],[3,"LinkedList"],[3,"Link"],[3,"AtomicLink"],[3,"Cursor"],[3,"Iter"],[3,"IntoIter"],[8,"LinkedListOps"],[4,"Color"],[4,"Entry"],[3,"LinkOps"],[3,"AtomicLinkOps"],[3,"CursorMut"],[3,"RBTree"],[3,"Link"],[3,"AtomicLink"],[3,"Cursor"],[3,"InsertCursor"],[3,"Iter"],[3,"IntoIter"],[8,"RBTreeOps"],[13,"Occupied"],[13,"Vacant"],[3,"LinkOps"],[3,"AtomicLinkOps"],[3,"CursorMut"],[3,"Link"],[3,"AtomicLink"],[3,"Cursor"],[3,"SinglyLinkedList"],[3,"Iter"],[3,"IntoIter"],[8,"SinglyLinkedListOps"],[3,"LinkOps"],[3,"AtomicLinkOps"],[3,"CursorMut"],[3,"XorLinkedList"],[3,"Link"],[3,"AtomicLink"],[3,"Cursor"],[3,"Iter"],[3,"IntoIter"],[8,"XorLinkedListOps"]]},\
"io_uring":{"doc":"","t":[4,13,13,13,13,6,13,13,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["Error","MappingCompleteRing","MappingSubmitEntries","MappingSubmitRing","NoSpace","Result","RingEnter","Setup","URingContext","URingStats","UserData","add_fallocate","add_fsync","add_nop","add_poll_fd","add_read","add_readv","add_readv_iter","add_write","add_writev","add_writev_iter","as_raw_fd","as_raw_fds","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","fmt","fmt","from","from","from","into","into","into","new","remove_poll_fd","submit","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait","0","0","0","0","0"],"q":["io_uring","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","io_uring::Error","","","",""],"d":["","Failed to map the completion ring.","Failed to map submit entries.","Failed to map the submit ring.","Too many ops are already queued.","","The call to <code>io_uring_enter</code> failed with the given errno.","The call to <code>io_uring_setup</code> failed with the given errno.","Unsafe wrapper for the kernel’s io_uring interface. …","Basic statistics about the operations that have been …","Holds per-operation, user specified data. The usage is up …","See the usage of <code>fallocate</code>, this asynchronously performs …","Syncs all completed operations, the ordering with …","Add a no-op operation that doesn’t perform any IO. …","Adds an FD to be polled based on the given flags. The user …","Asynchronously reads from <code>fd</code> to the address given in <code>ptr</code>.","Asynchronously reads from <code>fd</code> to the addresses given in …","Safety","Asynchronously writes to <code>fd</code> from the address given in <code>ptr</code>.","Asynchronously writes to <code>fd</code> from the addresses given in …","Safety","","","","","","","","","","","","","","","","","","Creates a <code>URingContext</code> where the underlying uring has a …","Removes an FD that was previously added with <code>add_poll_fd</code>.","Sends operations added with the <code>add_*</code> functions to the …","","","","","","","","","","","Sends operations added with the <code>add_*</code> functions to the …","","","","",""],"i":[0,1,1,1,1,0,1,1,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,2,1,3,3,1,1,2,1,3,2,1,3,2,2,2,1,2,1,3,2,1,3,2,1,3,2,4,5,6,7,8],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["u64",15],["u32",15],["rawfd",6],["userdata",6]],["result",6]],[[["rawfd",6],["userdata",6]],["result",6]],[[["userdata",6]],["result",6]],[[["rawfd",6],["watchingevents",3],["userdata",6]],["result",6]],[[["usize",15],["u64",15],["rawfd",6],["userdata",6]],["result",6]],[[["u64",15],["pin",3,["box"]],["box",3],["rawfd",6],["userdata",6]],["result",6]],[[["u64",15],["rawfd",6],["userdata",6]],["result",6]],[[["usize",15],["u64",15],["rawfd",6],["userdata",6]],["result",6]],[[["u64",15],["pin",3,["box"]],["box",3],["rawfd",6],["userdata",6]],["result",6]],[[["u64",15],["rawfd",6],["userdata",6]],["result",6]],[[],["rawfd",6]],[[],[["i32",15],["global",3],["vec",3,["i32","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["uringstats",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["result",6,["uringcontext"]],["uringcontext",3]]],[[["rawfd",6],["watchingevents",3],["userdata",6]],["result",6]],[[],["result",6]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],null,null,null,null,null],"p":[[4,"Error"],[3,"URingContext"],[3,"URingStats"],[13,"MappingCompleteRing"],[13,"MappingSubmitEntries"],[13,"MappingSubmitRing"],[13,"RingEnter"],[13,"Setup"]]},\
"itoa":{"doc":"github crates-io docs-rs","t":[3,8,11,11,11,11,11,11,11,11,11,11,11],"n":["Buffer","Integer","borrow","borrow_mut","clone","default","format","from","into","new","try_from","try_into","type_id"],"q":["itoa","","","","","","","","","","","",""],"d":["A correctly sized stack allocation for the formatted …","An integer that can be written into an <code>itoa::Buffer</code>.","","","","","Print an integer into this buffer and return a reference …","","","This is a cheap operation; you don’t need to worry about …","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[]],[[]],[[]],[[],["buffer",3]],[[["integer",8]],["str",15]],[[]],[[]],[[],["buffer",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Buffer"]]},\
"kernel_cmdline":{"doc":"Helper for creating valid kernel command line strings.","t":[3,4,13,13,13,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Cmdline","Error","HasEquals","HasSpace","InvalidAscii","Result","TooLarge","as_str","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","fmt","from","from","insert","insert_str","into","into","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["kernel_cmdline","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A builder for a kernel command line string that validates …","The error type for command line building operations.","Key/Value Operation would have had an equals sign in it.","Key/Value Operation would have had a space in it.","Operation would have resulted in a non-printable ASCII …","Specialized Result type for command line operations.","Operation would have made the command line too large.","Returns the cmdline in progress without nul termination","","","","","","","","","","Validates and inserts a key value pair into this command …","Validates and inserts a string to the end of the current …","","","Constructs an empty Cmdline with the given capacity, which …","","","","","","",""],"i":[0,0,1,1,1,0,1,2,2,1,2,1,1,1,1,2,1,2,2,2,1,2,1,2,1,2,1,2,1],"f":[null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["asref",8,["str"]],["str",15]],["result",6]],[[["asref",8,["str"]],["str",15]],["result",6]],[[]],[[]],[[["usize",15]],["cmdline",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Error"],[3,"Cmdline"]]},\
"kernel_loader":{"doc":"","t":[13,13,13,4,13,13,13,13,13,13,13,13,6,13,13,13,11,11,11,11,11,11,11,5,5,11,11,11,11],"n":["BigEndianElfOnLittle","CommandLineCopy","CommandLineOverflow","Error","InvalidElfMagicNumber","InvalidProgramHeaderAddress","InvalidProgramHeaderMemSize","InvalidProgramHeaderOffset","InvalidProgramHeaderSize","ReadElfHeader","ReadKernelImage","ReadProgramHeader","Result","SeekElfStart","SeekKernelStart","SeekProgramHeader","borrow","borrow_mut","eq","fmt","fmt","from","into","load_cmdline","load_kernel","to_string","try_from","try_into","type_id"],"q":["kernel_loader","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","Writes the command line string to the given memory slice.","Loads a kernel from a vmlinux elf image to a slice","","","",""],"i":[1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["guestaddress",3],["cstr",3],["guestmemory",3]],["result",6]],[[["guestaddress",3],["guestmemory",3]],[["u64",15],["result",6,["u64"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"Error"]]},\
"kvm":{"doc":"A safe wrapper around the kernel’s KVM interface.","t":[13,13,13,13,13,13,13,13,13,13,4,13,13,13,6,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,3,13,4,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,4,3,3,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AdjustClock","AnyLength","ArmEl132bit","ArmPmuV3","ArmProtectedVm","ArmPsci","ArmPsci02","ArmSetDeviceAddr","AssignDevIrq","AsyncPf","Cap","CheckExtensionVm","Clocksource","CoalescedMmio","CpuId","Datamatch","Dcr","Debug","Debugregs","DestroyMemoryRegionWorks","DeviceCtrl","EnableCap","EnableCapVm","Epr","Exception","ExtCpuid","ExtEmulCpuid","FailEntry","GetTscKhz","Hlt","Hlt","Hypercall","Hyperv","HypervHcall","HypervSpin","HypervSynic","HypervTime","HypervVapic","ImmediateExit","InternalError","InternalErrorData","Intr","IntrShadow","IoIn","IoOut","IoapicEoi","IoapicNumPins","IoapicPolarityIgnored","IoeventAddress","Ioeventfd","IoeventfdNoLength","Iommu","IrqInjectStatus","IrqMpic","IrqRoute","IrqRouting","IrqSource","IrqWindowOpen","IrqXics","Irqchip","Irqchip","Irqfd","IrqfdResample","JoinMemoryRegionsWorks","Kvm","KvmclockCtrl","MaxVcpus","Mce","Mmio","MmioRead","MmioWrite","MmuShadowCacheControl","MpState","Msi","NUM_IOAPIC_PINS","Nmi","NopIoDelay","NrMemslots","NrVcpus","OneReg","Osi","PaprHcall","Pci23","PciSegment","PicId","Pio","Pit","Pit2","PitState2","PpcAllocHtab","PpcBookeSregs","PpcBookeWatchdog","PpcEnableHcall","PpcEpr","PpcFixupHcall","PpcGetPvinfo","PpcGetSmmuInfo","PpcHior","PpcHtabFd","PpcIrqLevel","PpcOsi","PpcPairedSingles","PpcPapr","PpcRma","PpcRtas","PpcSegstate","PpcSmt","PpcUnsetIrq","Primary","PvMmu","ReadonlyMem","ReinjectControl","RunnableVcpu","S390Cow","S390CssSupport","S390Gmap","S390Irqchip","S390Psw","S390Reset","S390Sieic","S390Tsch","S390Ucontrol","S390Ucontrol","S390UserSigp","Secondary","SetBootCpuId","SetGuestDebug","SetIdentityMapAddr","SetTpr","SetTssAddr","Shutdown","SignalMsi","SpaprMultitce","SpaprTce","SwTlb","SyncMmu","SyncRegs","SystemEvent","TprAccess","TscControl","TscDeadlineTimer","U16","U32","U64","U8","Unknown","UserMemory","UserNmi","Vapic","Vcpu","VcpuEvents","VcpuExit","VcpuThread","Vm","VmAttributes","Watchdog","X86RobustSinglestep","Xcrs","XenHvm","Xsave","add_memory_region","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","as_raw_descriptors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_extension","check_extension","clone","clone","clone_into","clone_into","create_irq_chip","create_pit","deref","deref_mut","dirty_log_bitmap_size","drop","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_clock","get_debugregs","get_dirty_log","get_emulated_cpuid","get_fpu","get_hyperv_cpuid","get_ioapic_state","get_lapic","get_memory","get_mp_state","get_msr_index_list","get_msrs","get_pic_state","get_pit_state","get_regs","get_sregs","get_supported_cpuid","get_vcpu_events","get_vcpu_mmap_size","get_vm_type","get_xcrs","gsi","into","into","into","into","into","into","into","into","into","into","into","into","kvm_enable_cap","kvm_enable_cap","new","new","new","new_with_path","register_ioevent","register_irqfd_resample","remove_memory_region","run","set_clock","set_cpuid2","set_data","set_debugregs","set_fpu","set_gsi_routing","set_identity_map_addr","set_immediate_exit","set_ioapic_state","set_irq_line","set_lapic","set_local_immediate_exit","set_mp_state","set_msrs","set_pic_state","set_pit_state","set_regs","set_signal_mask","set_sregs","set_vcpu_events","set_xcrs","source","to_owned","to_owned","to_runnable","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unregister_ioevent","unregister_irqfd","0","0","0","0","0","0","address","chip","data","pin","0","1","address","address","control","data","data","evt_page","hardware_entry_failure_reason","input","msg_page","msr","params","port","port","size","size","size","size","vector"],"q":["kvmkvm::Datamatch","","","","kvm::IoeventAddress","","kvm::IrqSource","","","","kvm::VcpuExit","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","A capability the kernel’s KVM interface can possibly …","","","","Wrapper for kvm_cpuid2 which has a zero length array at …","Used in <code>Vm::register_ioevent</code> to indicate a size and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","An in port instruction was run on the given port.","An out port instruction was run on the given port with the …","","","","An address either in programmable I/O space or in memory …","","","","","","A single route for an IRQ.","","A source of IRQs in an <code>IrqRoute</code>.","","","","","","","","A wrapper around opening and using <code>/dev/kvm</code>.","","","","","A read instruction was run against the given MMIO address.","A write instruction was run against the given MMIO address …","","","","Number of pins on the IOAPIC.","","","","","","","","","","Interrupt controller IDs","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Vcpu that has a thread and can be run. Created by …","","","","","","","","","","","","","","","","","","","","","","","","","The cpu triggered a system level event which is specified …","","","","","","","","","","","","A wrapper around creating and using a VCPU. <code>Vcpu</code> provides …","","A reason why a VCPU exited. One of these returns every …","","A wrapper around creating and using a VM.","","","","","","","Inserts the given <code>mem</code> into the VM’s address space at …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if a particular <code>Cap</code> is available.","Checks if a particular <code>Cap</code> is available.","","","","","Crates an in kernel interrupt controller.","Creates a PIT as per the KVM_CREATE_PIT2 ioctl.","","","Helper function to determine the size in bytes of a dirty …","","","","","","","","","","","","","","","","","","Retrieves the current timestamp of kvmclock as seen by the …","Gets the VCPU debug registers.","Gets the bitmap of dirty pages since the last call to …","X86 specific call to get the system emulated CPUID values","Gets the VCPU FPU registers.","X86 specific call to get the system emulated hyper-v CPUID …","Retrieves the state of IOAPIC by issuing KVM_GET_IRQCHIP …","X86 specific call to get the state of the “Local …","Gets a reference to the guest memory owned by this VM.","Gets the vcpu’s current “multiprocessing state”.","X86 specific call to get list of supported MSRS","X86 specific call to get the MSRS","Retrieves the state of given interrupt controller by …","Retrieves the state of PIT by issuing KVM_GET_PIT2 ioctl.","Gets the VCPU registers.","Gets the VCPU special registers.","X86 specific call to get the system supported CPUID values","Gets the vcpu’s currently pending exceptions, …","Gets the size of the mmap required to use vcpu’s <code>kvm_run</code> …","","Gets the VCPU extended control registers","","","","","","","","","","","","","","Enable the specified capability. See documentation for …","Enable the specified capability. See documentation for …","Opens <code>/dev/kvm/</code> and returns a Kvm object on success.","Constructs a new <code>Vm</code> using the given <code>Kvm</code> instance.","Constructs a new VCPU for <code>vm</code>.","Opens a KVM device at <code>device_path</code> and returns a Kvm object …","Registers an event to be signaled whenever a certain …","Registers an event that will, when signalled, trigger the …","Removes memory that was previously added at the given slot.","Runs the VCPU until it exits, returning the reason for the …","Sets the current timestamp of kvmclock to the specified …","X86 specific call to setup the CPUID registers","Sets the data received by a mmio read, ioport in, or …","Sets the VCPU debug registers","X86 specific call to setup the FPU","Sets the GSI routing table, replacing any table set with …","Sets the address of a one-page region in the VM’s …","Sets the bit that requests an immediate exit.","Sets the state of IOAPIC by issuing KVM_SET_IRQCHIP ioctl.","Sets the level on the given irq to 1 if <code>active</code> is true, …","X86 specific call to set the state of the “Local …","Sets/clears the bit for immediate exit for the vcpu on the …","Sets the vcpu’s current “multiprocessing state”.","X86 specific call to setup the MSRS","Sets the state of given interrupt controller by issuing …","Sets the state of PIT by issuing KVM_SET_PIT2 ioctl.","Sets the VCPU registers.","Specifies set of signals that are blocked during execution …","Sets the VCPU special registers.","Sets the vcpu’s currently pending exceptions, …","Sets the VCPU extended control registers","","","","Consumes <code>self</code> and returns a <code>RunnableVcpu</code>. A <code>RunnableVcpu</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unregisters an event previously registered with …","Unregisters an event that was previously registered with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,1,1,1,1,1,1,1,1,0,1,1,1,0,0,3,3,1,1,1,1,1,3,3,1,1,3,1,1,3,3,1,3,1,3,1,1,1,3,1,3,1,3,3,3,1,1,0,1,1,1,1,1,0,1,0,3,1,4,1,1,1,1,0,1,1,1,5,3,3,1,1,4,0,3,1,1,1,1,3,3,1,1,0,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,1,1,1,0,1,1,1,1,1,3,3,3,1,3,1,6,1,1,1,3,1,3,1,1,1,1,1,1,3,3,1,1,2,2,2,2,3,1,1,1,0,1,0,0,0,1,3,1,1,1,1,7,8,7,9,10,8,7,9,10,8,2,4,11,6,7,9,12,10,1,5,3,8,2,4,11,6,7,9,12,10,1,5,3,8,7,1,5,1,5,7,7,10,10,0,10,1,1,5,3,8,2,4,11,6,7,9,12,10,1,5,3,7,9,7,8,9,9,7,9,7,9,8,9,7,7,9,9,8,9,8,8,9,11,8,2,4,11,6,7,9,12,10,1,5,3,7,9,8,7,9,8,7,7,7,10,7,9,9,9,9,7,7,9,7,7,9,9,9,9,7,7,9,9,9,9,9,11,1,5,9,8,2,4,11,6,7,9,12,10,1,5,3,8,2,4,11,6,7,9,12,10,1,5,3,8,2,4,11,6,7,9,12,10,1,5,3,7,7,13,14,15,16,17,18,19,20,19,20,21,21,22,23,24,25,23,24,26,27,24,24,27,25,28,25,28,22,23,29],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["guestaddress",3],["box",3,["mappedregion"]],["bool",15],["mappedregion",8]],[["result",6,["u32"]],["u32",15]]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],[["i32",15],["global",3],["vec",3,["i32","global"]]]],[[],[["i32",15],["global",3],["vec",3,["i32","global"]]]],[[],[["i32",15],["global",3],["vec",3,["i32","global"]]]],[[],[["i32",15],["global",3],["vec",3,["i32","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cap",4]],["bool",15]],[[["cap",4]],["bool",15]],[[],["cap",4]],[[],["ioeventaddress",4]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[]],[[]],[[["usize",15]],["usize",15]],[[]],[[["cap",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6,["kvm_clock_data"]],["kvm_clock_data",3]]],[[],[["result",6,["kvm_debugregs"]],["kvm_debugregs",3]]],[[["u32",15]],["result",6]],[[],[["result",6,["cpuid"]],["cpuid",6]]],[[],[["kvm_fpu",3],["result",6,["kvm_fpu"]]]],[[],[["result",6,["cpuid"]],["cpuid",6]]],[[],[["kvm_ioapic_state",3],["result",6,["kvm_ioapic_state"]]]],[[],[["result",6,["kvm_lapic_state"]],["kvm_lapic_state",3]]],[[],["guestmemory",3]],[[],[["result",6,["kvm_mp_state"]],["kvm_mp_state",3]]],[[],[["result",6,["vec"]],["vec",3,["u32"]]]],[[["vec",3]],["result",6]],[[["picid",4]],[["result",6,["kvm_pic_state"]],["kvm_pic_state",3]]],[[],[["kvm_pit_state2",3],["result",6,["kvm_pit_state2"]]]],[[],[["result",6,["kvm_regs"]],["kvm_regs",3]]],[[],[["result",6,["kvm_sregs"]],["kvm_sregs",3]]],[[],[["result",6,["cpuid"]],["cpuid",6]]],[[],[["kvm_vcpu_events",3],["result",6,["kvm_vcpu_events"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],["c_ulong",6]],[[],[["result",6,["kvm_xcrs"]],["kvm_xcrs",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["kvm_enable_cap",3]],["result",6]],[[["kvm_enable_cap",3]],["result",6]],[[],[["result",6,["kvm"]],["kvm",3]]],[[["kvm",3],["guestmemory",3]],[["result",6,["vm"]],["vm",3]]],[[["c_ulong",6],["kvm",3],["vm",3]],[["vcpu",3],["result",6,["vcpu"]]]],[[["path",3]],[["result",6,["kvm"]],["kvm",3]]],[[["event",3],["datamatch",4],["ioeventaddress",4]],["result",6]],[[["event",3],["u32",15]],["result",6]],[[["u32",15]],[["box",3,["mappedregion"]],["result",6,["box"]]]],[[],[["result",6,["vcpuexit"]],["vcpuexit",4]]],[[["kvm_clock_data",3]],["result",6]],[[["cpuid",6]],["result",6]],[[],["result",6]],[[["kvm_debugregs",3]],["result",6]],[[["kvm_fpu",3]],["result",6]],[[],["result",6]],[[["guestaddress",3]],["result",6]],[[["bool",15]]],[[["kvm_ioapic_state",3]],["result",6]],[[["u32",15],["bool",15]],["result",6]],[[["kvm_lapic_state",3]],["result",6]],[[["bool",15]]],[[["kvm_mp_state",3]],["result",6]],[[["kvm_msrs",3]],["result",6]],[[["kvm_pic_state",3],["picid",4]],["result",6]],[[["kvm_pit_state2",3]],["result",6]],[[["kvm_regs",3]],["result",6]],[[],["result",6]],[[["kvm_sregs",3]],["result",6]],[[["kvm_vcpu_events",3]],["result",6]],[[["kvm_xcrs",3]],["result",6]],null,[[]],[[]],[[["option",4,["c_int"]],["c_int",6]],[["result",6,["runnablevcpu"]],["runnablevcpu",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["event",3],["datamatch",4],["ioeventaddress",4]],["result",6]],[[["event",3],["u32",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Cap"],[4,"Datamatch"],[4,"VcpuExit"],[4,"IrqSource"],[4,"IoeventAddress"],[4,"PicId"],[3,"Vm"],[3,"Kvm"],[3,"Vcpu"],[3,"RunnableVcpu"],[3,"IrqRoute"],[3,"VcpuThread"],[13,"U8"],[13,"U16"],[13,"U32"],[13,"U64"],[13,"Pio"],[13,"Mmio"],[13,"Msi"],[13,"Irqchip"],[13,"SystemEvent"],[13,"MmioRead"],[13,"MmioWrite"],[13,"HypervSynic"],[13,"IoOut"],[13,"FailEntry"],[13,"HypervHcall"],[13,"IoIn"],[13,"IoapicEoi"]]},\
"kvm_sys":{"doc":"","tn":["KVM_ASSIGN_DEV_IRQ","KVM_ASSIGN_PCI_DEVICE","KVM_ASSIGN_SET_INTX_MASK","KVM_ASSIGN_SET_MSIX_ENTRY","KVM_ASSIGN_SET_MSIX_NR","KVM_CHECK_EXTENSION","KVM_CREATE_DEVICE","KVM_CREATE_IRQCHIP","KVM_CREATE_PIT","KVM_CREATE_PIT2","KVM_CREATE_VCPU","KVM_CREATE_VM","KVM_DEASSIGN_DEV_IRQ","KVM_DEASSIGN_PCI_DEVICE","KVM_DIRTY_TLB","KVM_ENABLE_CAP","KVM_GET_API_VERSION","KVM_GET_CLOCK","KVM_GET_DEVICE_ATTR","KVM_GET_DIRTY_LOG","KVM_GET_FPU","KVM_GET_IRQCHIP","KVM_GET_MP_STATE","KVM_GET_NR_MMU_PAGES","KVM_GET_ONE_REG","KVM_GET_REGS","KVM_GET_REG_LIST","KVM_GET_SREGS","KVM_GET_TSC_KHZ","KVM_GET_VCPU_MMAP_SIZE","KVM_HAS_DEVICE_ATTR","KVM_INTERRUPT","KVM_IOEVENTFD","KVM_IRQFD","KVM_IRQ_LINE","KVM_IRQ_LINE_STATUS","KVM_KVMCLOCK_CTRL","KVM_NMI","KVM_REGISTER_COALESCED_MMIO","KVM_REINJECT_CONTROL","KVM_RUN","KVM_SET_BOOT_CPU_ID","KVM_SET_CLOCK","KVM_SET_DEVICE_ATTR","KVM_SET_FPU","KVM_SET_GSI_ROUTING","KVM_SET_GUEST_DEBUG","KVM_SET_IDENTITY_MAP_ADDR","KVM_SET_IRQCHIP","KVM_SET_MEMORY_REGION","KVM_SET_MP_STATE","KVM_SET_NR_MMU_PAGES","KVM_SET_ONE_REG","KVM_SET_REGS","KVM_SET_SIGNAL_MASK","KVM_SET_SREGS","KVM_SET_TSC_KHZ","KVM_SET_TSS_ADDR","KVM_SET_USER_MEMORY_REGION","KVM_SET_VAPIC_ADDR","KVM_SIGNAL_MSI","KVM_SMI","KVM_TPR_ACCESS_REPORTING","KVM_TRANSLATE","KVM_UNREGISTER_COALESCED_MMIO","x86","KVM_GET_CPUID2","KVM_GET_DEBUGREGS","KVM_GET_EMULATED_CPUID","KVM_GET_LAPIC","KVM_GET_MSRS","KVM_GET_MSR_INDEX_LIST","KVM_GET_PIT2","KVM_GET_SUPPORTED_CPUID","KVM_GET_SUPPORTED_HV_CPUID","KVM_GET_VCPU_EVENTS","KVM_GET_XCRS","KVM_GET_XSAVE","KVM_SET_CPUID","KVM_SET_CPUID2","KVM_SET_DEBUGREGS","KVM_SET_LAPIC","KVM_SET_MEMORY_ALIAS","KVM_SET_MSRS","KVM_SET_PIT2","KVM_SET_VCPU_EVENTS","KVM_SET_XCRS","KVM_SET_XSAVE","KVM_X86_GET_MCE_CAP_SUPPORTED","KVM_X86_SETUP_MCE","KVM_X86_SET_MCE","KVM_XEN_HVM_CONFIG","bindings","AC_VECTOR","BP_VECTOR","BR_VECTOR","DB_VECTOR","DE_VECTOR","DF_VECTOR","GP_VECTOR","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","KVMIO","KVM_APIC_REG_SIZE","KVM_API_VERSION","KVM_ARM_DEV_EL1_PTIMER","KVM_ARM_DEV_EL1_VTIMER","KVM_ARM_DEV_PMU","KVM_CAP_ADJUST_CLOCK","KVM_CAP_ARM_EL1_32BIT","KVM_CAP_ARM_INJECT_SERROR_ESR","KVM_CAP_ARM_IRQ_LINE_LAYOUT_2","KVM_CAP_ARM_PMU_V3","KVM_CAP_ARM_PROTECTED_VM","KVM_CAP_ARM_PROTECTED_VM_FLAGS_INFO","KVM_CAP_ARM_PROTECTED_VM_FLAGS_SET_FW_IPA","KVM_CAP_ARM_PSCI","KVM_CAP_ARM_PSCI_0_2","KVM_CAP_ARM_PTRAUTH_ADDRESS","KVM_CAP_ARM_PTRAUTH_GENERIC","KVM_CAP_ARM_SET_DEVICE_ADDR","KVM_CAP_ARM_SVE","KVM_CAP_ARM_USER_IRQ","KVM_CAP_ARM_VM_IPA_SIZE","KVM_CAP_ASSIGN_DEV_IRQ","KVM_CAP_ASYNC_PF","KVM_CAP_CHECK_EXTENSION_VM","KVM_CAP_CLOCKSOURCE","KVM_CAP_COALESCED_MMIO","KVM_CAP_COALESCED_PIO","KVM_CAP_DEBUGREGS","KVM_CAP_DESTROY_MEMORY_REGION_WORKS","KVM_CAP_DEVICE_CTRL","KVM_CAP_DISABLE_QUIRKS","KVM_CAP_ENABLE_CAP","KVM_CAP_ENABLE_CAP_VM","KVM_CAP_EXCEPTION_PAYLOAD","KVM_CAP_EXT_CPUID","KVM_CAP_EXT_EMUL_CPUID","KVM_CAP_GET_MSR_FEATURES","KVM_CAP_GET_TSC_KHZ","KVM_CAP_GUEST_DEBUG_HW_BPS","KVM_CAP_GUEST_DEBUG_HW_WPS","KVM_CAP_HLT","KVM_CAP_HYPERV","KVM_CAP_HYPERV_CPUID","KVM_CAP_HYPERV_DIRECT_TLBFLUSH","KVM_CAP_HYPERV_ENLIGHTENED_VMCS","KVM_CAP_HYPERV_EVENTFD","KVM_CAP_HYPERV_SEND_IPI","KVM_CAP_HYPERV_SPIN","KVM_CAP_HYPERV_SYNIC","KVM_CAP_HYPERV_SYNIC2","KVM_CAP_HYPERV_TIME","KVM_CAP_HYPERV_TLBFLUSH","KVM_CAP_HYPERV_VAPIC","KVM_CAP_HYPERV_VP_INDEX","KVM_CAP_IMMEDIATE_EXIT","KVM_CAP_INTERNAL_ERROR_DATA","KVM_CAP_INTR_SHADOW","KVM_CAP_IOAPIC_NUM_PINS","KVM_CAP_IOAPIC_POLARITY_IGNORED","KVM_CAP_IOEVENTFD","KVM_CAP_IOEVENTFD_ANY_LENGTH","KVM_CAP_IOEVENTFD_NO_LENGTH","KVM_CAP_IOMMU","KVM_CAP_IRQCHIP","KVM_CAP_IRQFD","KVM_CAP_IRQFD_RESAMPLE","KVM_CAP_IRQ_INJECT_STATUS","KVM_CAP_IRQ_MPIC","KVM_CAP_IRQ_ROUTING","KVM_CAP_IRQ_XICS","KVM_CAP_JOIN_MEMORY_REGIONS_WORKS","KVM_CAP_KVMCLOCK_CTRL","KVM_CAP_MANUAL_DIRTY_LOG_PROTECT","KVM_CAP_MANUAL_DIRTY_LOG_PROTECT2","KVM_CAP_MAX_VCPUS","KVM_CAP_MAX_VCPU_ID","KVM_CAP_MCE","KVM_CAP_MIPS_64BIT","KVM_CAP_MIPS_FPU","KVM_CAP_MIPS_MSA","KVM_CAP_MIPS_TE","KVM_CAP_MIPS_VZ","KVM_CAP_MMU_SHADOW_CACHE_CONTROL","KVM_CAP_MP_STATE","KVM_CAP_MSI_DEVID","KVM_CAP_MSR_PLATFORM_INFO","KVM_CAP_MULTI_ADDRESS_SPACE","KVM_CAP_NESTED_STATE","KVM_CAP_NOP_IO_DELAY","KVM_CAP_NR_MEMSLOTS","KVM_CAP_NR_VCPUS","KVM_CAP_ONE_REG","KVM_CAP_PCI_2_3","KVM_CAP_PCI_SEGMENT","KVM_CAP_PIT","KVM_CAP_PIT2","KVM_CAP_PIT_STATE2","KVM_CAP_PMU_EVENT_FILTER","KVM_CAP_PPC_ALLOC_HTAB","KVM_CAP_PPC_BOOKE_SREGS","KVM_CAP_PPC_BOOKE_WATCHDOG","KVM_CAP_PPC_ENABLE_HCALL","KVM_CAP_PPC_EPR","KVM_CAP_PPC_FIXUP_HCALL","KVM_CAP_PPC_FWNMI","KVM_CAP_PPC_GET_CPU_CHAR","KVM_CAP_PPC_GET_PVINFO","KVM_CAP_PPC_GET_SMMU_INFO","KVM_CAP_PPC_HIOR","KVM_CAP_PPC_HTAB_FD","KVM_CAP_PPC_HTM","KVM_CAP_PPC_HWRNG","KVM_CAP_PPC_IRQ_LEVEL","KVM_CAP_PPC_IRQ_XIVE","KVM_CAP_PPC_MMU_HASH_V3","KVM_CAP_PPC_MMU_RADIX","KVM_CAP_PPC_NESTED_HV","KVM_CAP_PPC_OSI","KVM_CAP_PPC_PAIRED_SINGLES","KVM_CAP_PPC_PAPR","KVM_CAP_PPC_RMA","KVM_CAP_PPC_RTAS","KVM_CAP_PPC_SEGSTATE","KVM_CAP_PPC_SMT","KVM_CAP_PPC_SMT_POSSIBLE","KVM_CAP_PPC_UNSET_IRQ","KVM_CAP_PV_MMU","KVM_CAP_READONLY_MEM","KVM_CAP_REINJECT_CONTROL","KVM_CAP_S390_AIS","KVM_CAP_S390_AIS_MIGRATION","KVM_CAP_S390_BPB","KVM_CAP_S390_CMMA_MIGRATION","KVM_CAP_S390_COW","KVM_CAP_S390_CSS_SUPPORT","KVM_CAP_S390_GMAP","KVM_CAP_S390_GS","KVM_CAP_S390_HPAGE_1M","KVM_CAP_S390_INJECT_IRQ","KVM_CAP_S390_IRQCHIP","KVM_CAP_S390_IRQ_STATE","KVM_CAP_S390_MEM_OP","KVM_CAP_S390_PSW","KVM_CAP_S390_RI","KVM_CAP_S390_SKEYS","KVM_CAP_S390_UCONTROL","KVM_CAP_S390_USER_INSTR0","KVM_CAP_S390_USER_SIGP","KVM_CAP_S390_USER_STSI","KVM_CAP_S390_VECTOR_REGISTERS","KVM_CAP_SET_BOOT_CPU_ID","KVM_CAP_SET_GUEST_DEBUG","KVM_CAP_SET_IDENTITY_MAP_ADDR","KVM_CAP_SET_TSS_ADDR","KVM_CAP_SIGNAL_MSI","KVM_CAP_SPAPR_MULTITCE","KVM_CAP_SPAPR_RESIZE_HPT","KVM_CAP_SPAPR_TCE","KVM_CAP_SPAPR_TCE_64","KVM_CAP_SPAPR_TCE_VFIO","KVM_CAP_SPLIT_IRQCHIP","KVM_CAP_SW_TLB","KVM_CAP_SYNC_MMU","KVM_CAP_SYNC_REGS","KVM_CAP_TSC_CONTROL","KVM_CAP_TSC_DEADLINE_TIMER","KVM_CAP_USER_MEMORY","KVM_CAP_USER_NMI","KVM_CAP_VAPIC","KVM_CAP_VCPU_ATTRIBUTES","KVM_CAP_VCPU_EVENTS","KVM_CAP_VM_ATTRIBUTES","KVM_CAP_X2APIC_API","KVM_CAP_X86_DISABLE_EXITS","KVM_CAP_X86_ROBUST_SINGLESTEP","KVM_CAP_X86_SMM","KVM_CAP_XCRS","KVM_CAP_XEN_HVM","KVM_CAP_XSAVE","KVM_CLOCK_TSC_STABLE","KVM_COALESCED_MMIO_PAGE_OFFSET","KVM_CPUID_FLAG_SIGNIFCANT_INDEX","KVM_CPUID_FLAG_STATEFUL_FUNC","KVM_CPUID_FLAG_STATE_READ_NEXT","KVM_CREATE_DEVICE_TEST","KVM_DEV_ASSIGN_ENABLE_IOMMU","KVM_DEV_ASSIGN_MASK_INTX","KVM_DEV_ASSIGN_PCI_2_3","KVM_DEV_IRQ_GUEST_INTX","KVM_DEV_IRQ_GUEST_MASK","KVM_DEV_IRQ_GUEST_MSI","KVM_DEV_IRQ_GUEST_MSIX","KVM_DEV_IRQ_HOST_INTX","KVM_DEV_IRQ_HOST_MASK","KVM_DEV_IRQ_HOST_MSI","KVM_DEV_IRQ_HOST_MSIX","KVM_DEV_VFIO_GROUP","KVM_DEV_VFIO_GROUP_ADD","KVM_DEV_VFIO_GROUP_DEL","KVM_DEV_VFIO_GROUP_SET_SPAPR_TCE","KVM_EXIT_DCR","KVM_EXIT_DEBUG","KVM_EXIT_EPR","KVM_EXIT_EXCEPTION","KVM_EXIT_FAIL_ENTRY","KVM_EXIT_HLT","KVM_EXIT_HYPERCALL","KVM_EXIT_HYPERV","KVM_EXIT_HYPERV_HCALL","KVM_EXIT_HYPERV_SYNIC","KVM_EXIT_INTERNAL_ERROR","KVM_EXIT_INTR","KVM_EXIT_IO","KVM_EXIT_IOAPIC_EOI","KVM_EXIT_IO_IN","KVM_EXIT_IO_OUT","KVM_EXIT_IRQ_WINDOW_OPEN","KVM_EXIT_MMIO","KVM_EXIT_NMI","KVM_EXIT_OSI","KVM_EXIT_PAPR_HCALL","KVM_EXIT_S390_RESET","KVM_EXIT_S390_SIEIC","KVM_EXIT_S390_STSI","KVM_EXIT_S390_TSCH","KVM_EXIT_S390_UCONTROL","KVM_EXIT_SET_TPR","KVM_EXIT_SHUTDOWN","KVM_EXIT_SYSTEM_EVENT","KVM_EXIT_TPR_ACCESS","KVM_EXIT_UNKNOWN","KVM_EXIT_WATCHDOG","KVM_GUESTDBG_ENABLE","KVM_GUESTDBG_INJECT_BP","KVM_GUESTDBG_INJECT_DB","KVM_GUESTDBG_SINGLESTEP","KVM_GUESTDBG_USE_HW_BP","KVM_GUESTDBG_USE_SW_BP","KVM_HYPERV_CONN_ID_MASK","KVM_HYPERV_EVENTFD_DEASSIGN","KVM_INTERNAL_ERROR_DELIVERY_EV","KVM_INTERNAL_ERROR_EMULATION","KVM_INTERNAL_ERROR_SIMUL_EX","KVM_INTERNAL_ERROR_UNEXPECTED_EXIT_REASON","KVM_IOAPIC_NUM_PINS","KVM_IRQCHIP_IOAPIC","KVM_IRQCHIP_PIC_MASTER","KVM_IRQCHIP_PIC_SLAVE","KVM_IRQFD_FLAG_DEASSIGN","KVM_IRQFD_FLAG_RESAMPLE","KVM_IRQ_ROUTING_HV_SINT","KVM_IRQ_ROUTING_IRQCHIP","KVM_IRQ_ROUTING_MSI","KVM_IRQ_ROUTING_S390_ADAPTER","KVM_MAX_MSIX_PER_DEV","KVM_MAX_XCRS","KVM_MEM_LOG_DIRTY_PAGES","KVM_MEM_READONLY","KVM_MMU_FSL_BOOKE_HV","KVM_MMU_FSL_BOOKE_NOHV","KVM_MP_STATE_CHECK_STOP","KVM_MP_STATE_HALTED","KVM_MP_STATE_INIT_RECEIVED","KVM_MP_STATE_LOAD","KVM_MP_STATE_OPERATING","KVM_MP_STATE_RUNNABLE","KVM_MP_STATE_SIPI_RECEIVED","KVM_MP_STATE_STOPPED","KVM_MP_STATE_UNINITIALIZED","KVM_MSI_VALID_DEVID","KVM_NR_INTERRUPTS","KVM_NR_IRQCHIPS","KVM_PIO_PAGE_OFFSET","KVM_PIT_FLAGS_HPET_LEGACY","KVM_PIT_SPEAKER_DUMMY","KVM_PMU_EVENT_ALLOW","KVM_PMU_EVENT_DENY","KVM_PPC_1T_SEGMENTS","KVM_PPC_NO_HASH","KVM_PPC_PAGE_SIZES_MAX_SZ","KVM_PPC_PAGE_SIZES_REAL","KVM_PPC_PVINFO_FLAGS_EV_IDLE","KVM_REG_ARCH_MASK","KVM_REG_ARM","KVM_REG_ARM64","KVM_REG_GENERIC","KVM_REG_IA64","KVM_REG_MIPS","KVM_REG_PPC","KVM_REG_RISCV","KVM_REG_S390","KVM_REG_SIZE_MASK","KVM_REG_SIZE_SHIFT","KVM_REG_SIZE_U1024","KVM_REG_SIZE_U128","KVM_REG_SIZE_U16","KVM_REG_SIZE_U2048","KVM_REG_SIZE_U256","KVM_REG_SIZE_U32","KVM_REG_SIZE_U512","KVM_REG_SIZE_U64","KVM_REG_SIZE_U8","KVM_REG_X86","KVM_RUN_X86_SMM","KVM_S390_CMMA_PEEK","KVM_S390_GET_SKEYS_NONE","KVM_S390_INT_CLOCK_COMP","KVM_S390_INT_CPU_TIMER","KVM_S390_INT_EMERGENCY","KVM_S390_INT_EXTERNAL_CALL","KVM_S390_INT_IO_AI_MASK","KVM_S390_INT_IO_MAX","KVM_S390_INT_IO_MIN","KVM_S390_INT_PFAULT_DONE","KVM_S390_INT_PFAULT_INIT","KVM_S390_INT_SERVICE","KVM_S390_INT_VIRTIO","KVM_S390_MCHK","KVM_S390_MEMOP_F_CHECK_ONLY","KVM_S390_MEMOP_F_INJECT_EXCEPTION","KVM_S390_MEMOP_LOGICAL_READ","KVM_S390_MEMOP_LOGICAL_WRITE","KVM_S390_PGM_FLAGS_ILC_0","KVM_S390_PGM_FLAGS_ILC_1","KVM_S390_PGM_FLAGS_ILC_MASK","KVM_S390_PGM_FLAGS_ILC_VALID","KVM_S390_PGM_FLAGS_NO_REWIND","KVM_S390_PROGRAM_INT","KVM_S390_RESET_CLEAR","KVM_S390_RESET_CPU_INIT","KVM_S390_RESET_IPL","KVM_S390_RESET_POR","KVM_S390_RESET_SUBSYSTEM","KVM_S390_RESTART","KVM_S390_SIE_PAGE_OFFSET","KVM_S390_SIGP_SET_PREFIX","KVM_S390_SIGP_STOP","KVM_S390_SKEYS_MAX","KVM_S390_STOP_FLAG_STORE_STATUS","KVM_S390_STORE_STATUS_NOADDR","KVM_S390_STORE_STATUS_PREFIXED","KVM_STATE_NESTED_EVMCS","KVM_STATE_NESTED_FORMAT_SVM","KVM_STATE_NESTED_FORMAT_VMX","KVM_STATE_NESTED_GUEST_MODE","KVM_STATE_NESTED_RUN_PENDING","KVM_STATE_NESTED_SMM_GUEST_MODE","KVM_STATE_NESTED_SMM_VMXON","KVM_STATE_NESTED_VMX_VMCS_SIZE","KVM_SYNC_X86_EVENTS","KVM_SYNC_X86_REGS","KVM_SYNC_X86_SREGS","KVM_SYNC_X86_VALID_FIELDS","KVM_SYSTEM_EVENT_CRASH","KVM_SYSTEM_EVENT_RESET","KVM_SYSTEM_EVENT_SHUTDOWN","KVM_TRC_APIC_ACCESS","KVM_TRC_CLTS","KVM_TRC_CPUID","KVM_TRC_CR_READ","KVM_TRC_CR_WRITE","KVM_TRC_CYCLE_SIZE","KVM_TRC_DR_READ","KVM_TRC_DR_WRITE","KVM_TRC_ENTRYEXIT","KVM_TRC_EXTRA_MAX","KVM_TRC_GTLB_WRITE","KVM_TRC_HANDLER","KVM_TRC_HEAD_SIZE","KVM_TRC_HLT","KVM_TRC_INJ_VIRQ","KVM_TRC_INTR","KVM_TRC_IO_READ","KVM_TRC_IO_WRITE","KVM_TRC_LMSW","KVM_TRC_MSR_READ","KVM_TRC_MSR_WRITE","KVM_TRC_NMI","KVM_TRC_PAGE_FAULT","KVM_TRC_PEND_INTR","KVM_TRC_PPC_INSTR","KVM_TRC_REDELIVER_EVT","KVM_TRC_SHIFT","KVM_TRC_STLB_INVAL","KVM_TRC_STLB_WRITE","KVM_TRC_TDP_FAULT","KVM_TRC_VMENTRY","KVM_TRC_VMEXIT","KVM_TRC_VMMCALL","KVM_VCPUEVENT_VALID_NMI_PENDING","KVM_VCPUEVENT_VALID_PAYLOAD","KVM_VCPUEVENT_VALID_SHADOW","KVM_VCPUEVENT_VALID_SIPI_VECTOR","KVM_VCPUEVENT_VALID_SMM","KVM_VM_MIPS_AUTO","KVM_VM_MIPS_TE","KVM_VM_MIPS_VZ","KVM_VM_PPC_HV","KVM_VM_PPC_PR","KVM_VM_S390_UCONTROL","KVM_VM_TYPE_ARM_IPA_SIZE_MASK","KVM_VM_TYPE_ARM_PROTECTED","KVM_X2APIC_API_DISABLE_BROADCAST_QUIRK","KVM_X2APIC_API_USE_32BIT_IDS","KVM_X86_DISABLE_EXITS_CSTATE","KVM_X86_DISABLE_EXITS_HLT","KVM_X86_DISABLE_EXITS_MWAIT","KVM_X86_DISABLE_EXITS_PAUSE","KVM_X86_DISABLE_VALID_EXITS","KVM_X86_QUIRK_CD_NW_CLEARED","KVM_X86_QUIRK_LAPIC_MMIO_HOLE","KVM_X86_QUIRK_LINT0_REENABLED","KVM_X86_QUIRK_MISC_ENABLE_NO_MWAIT","KVM_X86_QUIRK_OUT_7E_INC_RIP","KVM_X86_SHADOW_INT_MOV_SS","KVM_X86_SHADOW_INT_STI","MC_VECTOR","MF_VECTOR","NM_VECTOR","NP_VECTOR","OF_VECTOR","PF_VECTOR","SS_VECTOR","SYNC_REGS_SIZE_BYTES","TS_VECTOR","UD_VECTOR","VE_VECTOR","XM_VECTOR","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","__BITS_PER_LONG","__BindgenBitfieldUnit","__BindgenUnionField","__FD_SETSIZE","__IncompleteArrayField","__be16","__be32","__be64","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sighandler_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__poll_t","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__wsum","_bindgen_ty_1","_bitfield_1","action","adapter","adapter_id","addr","addr","addr","addr","addr","addr","addr","addr","addr","address","address","address_hi","address_hi","address_lo","address_lo","apic_base","apic_base","ar","ar","arch","arch","args","args","args","array","array_len","as_mut","as_mut_ptr","as_mut_slice","as_ptr","as_ref","as_slice","assigned_dev_id","assigned_dev_id","assigned_dev_id","assigned_dev_id","attr","auto_eoi","avl","bank","base","base","base_address","bcd","bindgen_union_field","bitmap","bits","blob_addr_32","blob_addr_64","blob_size_32","blob_size_64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breakpoints","buf","buf","buf_nr","buf_size","busnr","cap","channels","channels","chip","chip_id","clock","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","coalesced_mmio","code","code","code","conn_id","control","control","count","count","count","count","count_latched","count_load_time","cr0","cr14","cr2","cr3","cr4","cr8","cr8","cs","data","data","data","data","data","data","data","data","data","data_exc_code","data_keys","data_offset","datamatch","db","db","dcr","dcrn","debug","debugreg","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delivery_mode","delivery_status","dequeued","dest_id","dest_mode","devfn","devid","devid","dh_len","dh_uaddr","direction","dirty_bitmap","dirty_bitmap","dpl","dr6","dr6","dr7","dr7","ds","dst_uaddr","dummy","eax","eax","ebx","ebx","ecx","ecx","edx","edx","efer","elcr","elcr_mask","emerg","enabled","enabled","enabled","enc","entries","entries","entries","entries","entry","entry_nr","eoi","epr","epr","eq","eq","error","error_code","error_code","es","events","events","evt_page","ex","exc_access_id","exception","exception","exception","exception_has_payload","exception_payload","exit_reason","ext","ext_damage_code","ext_params","ext_params2","extcall","fail_entry","failing_storage_address","fc","fcw","fd","fd","fd","fd","fds_bits","fields","first","first_page","fixed_counter_bitmap","fixed_logout","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","fpr","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fsw","ftwx","function","function","g","gaddr","gate","gdt","get","get_bit","get_len","get_mut_slice","get_slice","gprs","group","groupfd","gs","gsi","gsi","gsi","guest_irq","guest_len","guest_phys_addr","guest_phys_addr","guest_phys_addr","guest_uaddr","handle","handle","hardware_entry_failure_reason","hardware_exit_reason","has_error_code","hash","hash","hcall","hcall","hdr","hdr_len","hdr_uaddr","host_irq","hv_sint","hw","hypercall","hyperv","icptcode","id","id","id","id","idt","if_flag","immediate_exit","imr","ind_addr","ind_offset","index","index","indices","init4","init_state","injected","injected","injected","input","instr_keys","internal","interrupt","interrupt_bitmap","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","io","io","io_int_parm","io_int_parm","io_int_word","io_int_word","ioapic","ioregsel","ipa","ipb","ipb","irq","irq","irq_base","irqchip","irqchip","irr","irr","is_write","is_write","is_write","isr","kvm_arm_device_addr","kvm_assigned_irq","kvm_assigned_irq__bindgen_ty_1","kvm_assigned_msix_entry","kvm_assigned_msix_nr","kvm_assigned_pci_dev","kvm_assigned_pci_dev__bindgen_ty_1","kvm_breakpoint","kvm_clear_dirty_log","kvm_clear_dirty_log__bindgen_ty_1","kvm_clock_data","kvm_coalesced_mmio","kvm_coalesced_mmio__bindgen_ty_1","kvm_coalesced_mmio_ring","kvm_coalesced_mmio_zone","kvm_coalesced_mmio_zone__bindgen_ty_1","kvm_config_tlb","kvm_cpuid","kvm_cpuid2","kvm_cpuid_entry","kvm_cpuid_entry2","kvm_create_device","kvm_debug_exit_arch","kvm_debug_guest","kvm_debugregs","kvm_device_attr","kvm_device_type","kvm_device_type_KVM_DEV_TYPE_ARM_VGIC_ITS","kvm_device_type_KVM_DEV_TYPE_ARM_VGIC_V2","kvm_device_type_KVM_DEV_TYPE_ARM_VGIC_V3","kvm_device_type_KVM_DEV_TYPE_FLIC","kvm_device_type_KVM_DEV_TYPE_FSL_MPIC_20","kvm_device_type_KVM_DEV_TYPE_FSL_MPIC_42","kvm_device_type_KVM_DEV_TYPE_MAX","kvm_device_type_KVM_DEV_TYPE_VFIO","kvm_device_type_KVM_DEV_TYPE_XICS","kvm_device_type_KVM_DEV_TYPE_XIVE","kvm_dirty_log","kvm_dirty_log__bindgen_ty_1","kvm_dirty_regs","kvm_dirty_tlb","kvm_dtable","kvm_enable_cap","kvm_enc_region","kvm_fpu","kvm_guest_debug","kvm_guest_debug_arch","kvm_hyperv_eventfd","kvm_hyperv_exit","kvm_hyperv_exit__bindgen_ty_1","kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_1","kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_2","kvm_interrupt","kvm_ioapic_state","kvm_ioapic_state__bindgen_ty_1","kvm_ioapic_state__bindgen_ty_1__bindgen_ty_1","kvm_ioeventfd","kvm_ioeventfd_flag_nr_datamatch","kvm_ioeventfd_flag_nr_deassign","kvm_ioeventfd_flag_nr_fast_mmio","kvm_ioeventfd_flag_nr_max","kvm_ioeventfd_flag_nr_pio","kvm_ioeventfd_flag_nr_virtio_ccw_notify","kvm_irq_level","kvm_irq_level__bindgen_ty_1","kvm_irq_routing","kvm_irq_routing_entry","kvm_irq_routing_entry__bindgen_ty_1","kvm_irq_routing_hv_sint","kvm_irq_routing_irqchip","kvm_irq_routing_msi","kvm_irq_routing_msi__bindgen_ty_1","kvm_irq_routing_s390_adapter","kvm_irqchip","kvm_irqchip__bindgen_ty_1","kvm_irqfd","kvm_lapic_state","kvm_memory_alias","kvm_memory_region","kvm_mp_state","kvm_msi","kvm_msr_entry","kvm_msr_list","kvm_msrs","kvm_nested_state","kvm_nested_state__bindgen_ty_1","kvm_nested_state__bindgen_ty_2","kvm_one_reg","kvm_pic_state","kvm_pit_channel_state","kvm_pit_config","kvm_pit_state","kvm_pit_state2","kvm_pmu_event_filter","kvm_ppc_one_page_size","kvm_ppc_one_seg_page_size","kvm_ppc_pvinfo","kvm_ppc_resize_hpt","kvm_ppc_smmu_info","kvm_reg_list","kvm_regs","kvm_reinject_control","kvm_run","kvm_run__bindgen_ty_1","kvm_run__bindgen_ty_1__bindgen_ty_1","kvm_run__bindgen_ty_1__bindgen_ty_10","kvm_run__bindgen_ty_1__bindgen_ty_11","kvm_run__bindgen_ty_1__bindgen_ty_12","kvm_run__bindgen_ty_1__bindgen_ty_13","kvm_run__bindgen_ty_1__bindgen_ty_14","kvm_run__bindgen_ty_1__bindgen_ty_15","kvm_run__bindgen_ty_1__bindgen_ty_16","kvm_run__bindgen_ty_1__bindgen_ty_17","kvm_run__bindgen_ty_1__bindgen_ty_18","kvm_run__bindgen_ty_1__bindgen_ty_19","kvm_run__bindgen_ty_1__bindgen_ty_2","kvm_run__bindgen_ty_1__bindgen_ty_3","kvm_run__bindgen_ty_1__bindgen_ty_4","kvm_run__bindgen_ty_1__bindgen_ty_5","kvm_run__bindgen_ty_1__bindgen_ty_6","kvm_run__bindgen_ty_1__bindgen_ty_7","kvm_run__bindgen_ty_1__bindgen_ty_8","kvm_run__bindgen_ty_1__bindgen_ty_9","kvm_run__bindgen_ty_2","kvm_s390_cmma_log","kvm_s390_cmma_log__bindgen_ty_1","kvm_s390_emerg_info","kvm_s390_ext_info","kvm_s390_extcall_info","kvm_s390_interrupt","kvm_s390_io_info","kvm_s390_irq","kvm_s390_irq__bindgen_ty_1","kvm_s390_irq_state","kvm_s390_mchk_info","kvm_s390_mem_op","kvm_s390_pgm_info","kvm_s390_prefix_info","kvm_s390_psw","kvm_s390_skeys","kvm_s390_stop_info","kvm_s390_ucas_mapping","kvm_segment","kvm_sev_cmd","kvm_sev_dbg","kvm_sev_guest_status","kvm_sev_launch_measure","kvm_sev_launch_secret","kvm_sev_launch_start","kvm_sev_launch_update_data","kvm_signal_mask","kvm_sregs","kvm_sync_regs","kvm_tpr_access_ctl","kvm_translation","kvm_user_trace_setup","kvm_userspace_memory_region","kvm_valid_regs","kvm_vapic_addr","kvm_vcpu_events","kvm_vcpu_events__bindgen_ty_1","kvm_vcpu_events__bindgen_ty_2","kvm_vcpu_events__bindgen_ty_3","kvm_vcpu_events__bindgen_ty_4","kvm_vfio_spapr_tce","kvm_vmx_nested_state_data","kvm_vmx_nested_state_hdr","kvm_vmx_nested_state_hdr__bindgen_ty_1","kvm_x86_mce","kvm_xcr","kvm_xcrs","kvm_xen_hvm_config","kvm_xsave","l","last","last_dp","last_ip","last_irr","last_opcode","latched_count","latched_init","ldt","len","len","len","len","len","len","len","len","length","level","limit","limit","linear_address","longmode","mask","mask","mask","masked","mcg_status","mchk","mcic","memory_size","memory_size","memory_size","misc","mmio","mmu_type","mode","mon_class_nr","mon_code","mp_state","msg_page","msi","msr","msr","mxcsr","n","ndata","ne","nent","nent","nevents","new","new","new","new_bitfield_1","nmi","nmsrs","nmsrs","nr","nr","nr","nr","nr","nr_xcrs","num_dirty","num_pages","op","op_access_id","osi","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad","pad1","pad1","pad1","pad2","pad2","pad2","pad2","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding","padding1","padding1","padding2","padding2","page_shift","page_shift","papr_hcall","params","params","parm","parm64","partial_cmp","pc","pending","pending","pending","per_access_id","per_address","per_atmid","per_code","pgm","pgm_code","phys_addr","phys_addr","physical_address","pic","pin","pio","pio","pit_reinject","polarity","policy","policy","poll","port","prefix","present","priority_add","pte_enc","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","read_reg_select","read_state","ready_for_interrupt_injection","redirtbl","reg","region","regs","regs","regs","remaining","remote_irr","request_interrupt_window","resamplefd","reserve","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","result","ret","ret","rflags","rip","rip","rotate_on_auto_eoi","rsi","rsp","rw_mode","s","s","s390_reset_flags","s390_sieic","s390_stsi","s390_tsch","s390_ucontrol","segnr","sel1","sel2","selector","session_len","session_uaddr","set","set_bit","set_delivery_mode","set_delivery_status","set_dest_mode","set_len","set_mask","set_polarity","set_remote_irr","set_reserve","set_trig_mode","sev_cmd_id","sev_cmd_id_KVM_SEV_CERT_EXPORT","sev_cmd_id_KVM_SEV_DBG_DECRYPT","sev_cmd_id_KVM_SEV_DBG_ENCRYPT","sev_cmd_id_KVM_SEV_ES_INIT","sev_cmd_id_KVM_SEV_GUEST_STATUS","sev_cmd_id_KVM_SEV_INIT","sev_cmd_id_KVM_SEV_LAUNCH_FINISH","sev_cmd_id_KVM_SEV_LAUNCH_MEASURE","sev_cmd_id_KVM_SEV_LAUNCH_SECRET","sev_cmd_id_KVM_SEV_LAUNCH_START","sev_cmd_id_KVM_SEV_LAUNCH_UPDATE_DATA","sev_cmd_id_KVM_SEV_LAUNCH_UPDATE_VMSA","sev_cmd_id_KVM_SEV_NR_MAX","sev_cmd_id_KVM_SEV_RECEIVE_FINISH","sev_cmd_id_KVM_SEV_RECEIVE_START","sev_cmd_id_KVM_SEV_RECEIVE_UPDATE_DATA","sev_cmd_id_KVM_SEV_RECEIVE_UPDATE_VMSA","sev_cmd_id_KVM_SEV_SEND_FINISH","sev_cmd_id_KVM_SEV_SEND_START","sev_cmd_id_KVM_SEV_SEND_UPDATE_DATA","sev_cmd_id_KVM_SEV_SEND_UPDATE_VMSA","sev_fd","shadow","shadow_vmcs12","shift","sigset","singlestep","sint","sipi_vector","size","size","size","size","size","skeydata_addr","slb_enc","slb_size","slot","slot","slot","slot","slot","smi","smm","smm","smm_inside_nmi","soft","special_fully_nested_mode","special_mask","sps","src_uaddr","sregs","ss","start_gfn","start_gfn","state","status","status","status","status_latched","stop","subchannel_id","subchannel_id","subchannel_nr","subchannel_nr","suberror","summary_addr","summary_offset","synic","system_event","tablefd","target_phys_addr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tpr_access","tr","trans_exc_code","trans_exc_code","trans_len","trans_uaddr","trig_mode","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u","uaddr","uaddr","unusable","user_addr","usermode","userspace_addr","val","valid","value","values","vapic_addr","vcpu","vcpu_addr","vector","vector","vmcs12","vmcs12_pa","vmx","vmx","vmxon_pa","write_latch","write_state","writeable","xcr","xcrs","xmm"],"q":["kvm_sys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kvm_sys::x86","","","","","","","","","","","","","","","","","","","","","","","","","","","kvm_sys::x86::bindingsdkvm_s390_cmma_log - Used for CMMA migrationif":[[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["__bindgenbitfieldunit",3]],[[]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[],["kvm_memory_alias",3]],[[],["kvm_pic_state",3]],[[],["kvm_ioapic_state",3]],[[],["kvm_ioapic_state__bindgen_ty_1",19]],[[],["kvm_ioapic_state__bindgen_ty_1__bindgen_ty_1",3]],[[],["kvm_regs",3]],[[],["kvm_lapic_state",3]],[[],["kvm_segment",3]],[[],["kvm_dtable",3]],[[],["kvm_sregs",3]],[[],["kvm_fpu",3]],[[],["kvm_msr_entry",3]],[[],["kvm_cpuid_entry",3]],[[],["kvm_cpuid_entry2",3]],[[],["kvm_pit_channel_state",3]],[[],["kvm_debug_exit_arch",3]],[[],["kvm_guest_debug_arch",3]],[[],["kvm_pit_state",3]],[[],["kvm_pit_state2",3]],[[],["kvm_reinject_control",3]],[[],["kvm_vcpu_events",3]],[[],["kvm_vcpu_events__bindgen_ty_1",3]],[[],["kvm_vcpu_events__bindgen_ty_2",3]],[[],["kvm_vcpu_events__bindgen_ty_3",3]],[[],["kvm_vcpu_events__bindgen_ty_4",3]],[[],["kvm_debugregs",3]],[[],["kvm_xsave",3]],[[],["kvm_xcr",3]],[[],["kvm_xcrs",3]],[[],["kvm_sync_regs",3]],[[],["kvm_vmx_nested_state_data",3]],[[],["kvm_vmx_nested_state_hdr",3]],[[],["kvm_vmx_nested_state_hdr__bindgen_ty_1",3]],[[],["kvm_nested_state__bindgen_ty_1",19]],[[],["kvm_user_trace_setup",3]],[[],["kvm_breakpoint",3]],[[],["kvm_debug_guest",3]],[[],["kvm_memory_region",3]],[[],["kvm_userspace_memory_region",3]],[[],["kvm_irq_level",3]],[[],["kvm_irq_level__bindgen_ty_1",19]],[[],["kvm_irqchip",3]],[[],["kvm_irqchip__bindgen_ty_1",19]],[[],["kvm_pit_config",3]],[[],["kvm_s390_skeys",3]],[[],["kvm_s390_cmma_log",3]],[[],["kvm_s390_cmma_log__bindgen_ty_1",19]],[[],["kvm_hyperv_exit",3]],[[],["kvm_hyperv_exit__bindgen_ty_1",19]],[[],["kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_1",3]],[[],["kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_2",3]],[[],["kvm_run",3]],[[],["kvm_run__bindgen_ty_1",19]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_1",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_2",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_3",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_4",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_5",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_6",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_7",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_8",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_9",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_10",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_11",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_12",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_13",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_14",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_15",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_16",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_17",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_18",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_19",3]],[[],["kvm_run__bindgen_ty_2",19]],[[],["kvm_coalesced_mmio_zone",3]],[[],["kvm_coalesced_mmio_zone__bindgen_ty_1",19]],[[],["kvm_coalesced_mmio",3]],[[],["kvm_coalesced_mmio__bindgen_ty_1",19]],[[],["kvm_translation",3]],[[],["kvm_s390_mem_op",3]],[[],["kvm_interrupt",3]],[[],["kvm_dirty_log",3]],[[],["kvm_dirty_log__bindgen_ty_1",19]],[[],["kvm_clear_dirty_log",3]],[[],["kvm_clear_dirty_log__bindgen_ty_1",19]],[[],["kvm_tpr_access_ctl",3]],[[],["kvm_vapic_addr",3]],[[],["kvm_mp_state",3]],[[],["kvm_s390_psw",3]],[[],["kvm_s390_interrupt",3]],[[],["kvm_s390_io_info",3]],[[],["kvm_s390_ext_info",3]],[[],["kvm_s390_pgm_info",3]],[[],["kvm_s390_prefix_info",3]],[[],["kvm_s390_extcall_info",3]],[[],["kvm_s390_emerg_info",3]],[[],["kvm_s390_stop_info",3]],[[],["kvm_s390_mchk_info",3]],[[],["kvm_s390_irq",3]],[[],["kvm_s390_irq__bindgen_ty_1",19]],[[],["kvm_s390_irq_state",3]],[[],["kvm_guest_debug",3]],[[],["kvm_ioeventfd",3]],[[],["kvm_enable_cap",3]],[[],["kvm_ppc_pvinfo",3]],[[],["kvm_ppc_one_page_size",3]],[[],["kvm_ppc_one_seg_page_size",3]],[[],["kvm_ppc_smmu_info",3]],[[],["kvm_ppc_resize_hpt",3]],[[],["kvm_irq_routing_irqchip",3]],[[],["kvm_irq_routing_msi",3]],[[],["kvm_irq_routing_msi__bindgen_ty_1",19]],[[],["kvm_irq_routing_s390_adapter",3]],[[],["kvm_irq_routing_hv_sint",3]],[[],["kvm_irq_routing_entry",3]],[[],["kvm_irq_routing_entry__bindgen_ty_1",19]],[[],["kvm_x86_mce",3]],[[],["kvm_xen_hvm_config",3]],[[],["kvm_irqfd",3]],[[],["kvm_clock_data",3]],[[],["kvm_config_tlb",3]],[[],["kvm_dirty_tlb",3]],[[],["kvm_one_reg",3]],[[],["kvm_msi",3]],[[],["kvm_arm_device_addr",3]],[[],["kvm_create_device",3]],[[],["kvm_device_attr",3]],[[],["kvm_vfio_spapr_tce",3]],[[],["kvm_s390_ucas_mapping",3]],[[],["kvm_enc_region",3]],[[],["kvm_sev_cmd",3]],[[],["kvm_sev_launch_start",3]],[[],["kvm_sev_launch_update_data",3]],[[],["kvm_sev_launch_secret",3]],[[],["kvm_sev_launch_measure",3]],[[],["kvm_sev_guest_status",3]],[[],["kvm_sev_dbg",3]],[[],["kvm_assigned_pci_dev",3]],[[],["kvm_assigned_pci_dev__bindgen_ty_1",19]],[[],["kvm_assigned_irq",3]],[[],["kvm_assigned_irq__bindgen_ty_1",19]],[[],["kvm_assigned_msix_nr",3]],[[],["kvm_assigned_msix_entry",3]],[[],["kvm_hyperv_eventfdbindgenbitfieldunit",3]],["ordering",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["__bindgenbitfieldunit",3]],[[],["__incompletearrayfield",3]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[],["kvm_memory_alias",3]],[[],["kvm_pic_state",3]],[[]],[[]],[[],["kvm_ioapic_state__bindgen_ty_1__bindgen_ty_1",3]],[[],["kvm_regs",3]],[[]],[[],["kvm_segment",3]],[[],["kvm_dtable",3]],[[],["kvm_sregs",3]],[[],["kvm_fpu",3]],[[],["kvm_msr_entry",3]],[[],["kvm_msrs",3]],[[],["kvm_msr_list",3]],[[],["kvm_cpuid_entry",3]],[[],["kvm_cpuid",3]],[[],["kvm_cpuid_entry2",3]],[[],["kvm_cpuid2",3]],[[],["kvm_pit_channel_state",3]],[[],["kvm_debug_exit_arch",3]],[[],["kvm_guest_debug_arch",3]],[[],["kvm_pit_state",3]],[[],["kvm_pit_state2",3]],[[],["kvm_reinject_control",3]],[[],["kvm_vcpu_events",3]],[[],["kvm_vcpu_events__bindgen_ty_1",3]],[[],["kvm_vcpu_events__bindgen_ty_2",3]],[[],["kvm_vcpu_events__bindgen_ty_3",3]],[[],["kvm_vcpu_events__bindgen_ty_4",3]],[[],["kvm_debugregs",3]],[[]],[[],["kvm_xcr",3]],[[],["kvm_xcrs",3]],[[],["kvm_sync_regs",3]],[[]],[[],["kvm_vmx_nested_state_hdr",3]],[[],["kvm_vmx_nested_state_hdr__bindgen_ty_1",3]],[[]],[[],["kvm_pmu_event_filter",3]],[[],["kvm_user_trace_setup",3]],[[],["kvm_breakpoint",3]],[[],["kvm_debug_guest",3]],[[],["kvm_memory_region",3]],[[],["kvm_userspace_memory_region",3]],[[]],[[]],[[]],[[]],[[],["kvm_pit_config",3]],[[],["kvm_s390_skeys",3]],[[]],[[]],[[]],[[]],[[],["kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_1",3]],[[],["kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_2",3]],[[]],[[]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_1",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_2",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_3",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_4",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_5",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_6",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_7",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_8",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_9",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_10",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_11",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_12",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_13",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_14",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_15",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_16",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_17",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_18",3]],[[],["kvm_run__bindgen_ty_1__bindgen_ty_19",3]],[[]],[[]],[[]],[[]],[[]],[[],["kvm_translation",3]],[[],["kvm_s390_mem_op",3]],[[],["kvm_interrupt",3]],[[]],[[]],[[]],[[]],[[],["kvm_signal_mask",3]],[[],["kvm_tpr_access_ctl",3]],[[],["kvm_vapic_addr",3]],[[],["kvm_mp_state",3]],[[],["kvm_s390_psw",3]],[[],["kvm_s390_interrupt",3]],[[],["kvm_s390_io_info",3]],[[],["kvm_s390_ext_info",3]],[[],["kvm_s390_pgm_info",3]],[[],["kvm_s390_prefix_info",3]],[[],["kvm_s390_extcall_info",3]],[[],["kvm_s390_emerg_info",3]],[[],["kvm_s390_stop_info",3]],[[],["kvm_s390_mchk_info",3]],[[]],[[]],[[],["kvm_s390_irq_state",3]],[[],["kvm_guest_debug",3]],[[]],[[]],[[]],[[],["kvm_ppc_one_page_size",3]],[[],["kvm_ppc_one_seg_page_size",3]],[[],["kvm_ppc_smmu_info",3]],[[],["kvm_ppc_resize_hpt",3]],[[],["kvm_irq_routing_irqchip",3]],[[]],[[]],[[],["kvm_irq_routing_s390_adapter",3]],[[],["kvm_irq_routing_hv_sint",3]],[[]],[[]],[[],["kvm_x86_mce",3]],[[],["kvm_xen_hvm_config",3]],[[],["kvm_irqfd",3]],[[],["kvm_clock_data",3]],[[],["kvm_config_tlb",3]],[[],["kvm_dirty_tlb",3]],[[],["kvm_reg_list",3]],[[],["kvm_one_reg",3]],[[],["kvm_msi",3]],[[],["kvm_arm_device_addr",3]],[[],["kvm_create_device",3]],[[],["kvm_device_attr",3]],[[],["kvm_vfio_spapr_tce",3]],[[],["kvm_s390_ucas_mapping",3]],[[],["kvm_enc_region",3]],[[],["kvm_sev_cmd",3]],[[],["kvm_sev_launch_start",3]],[[],["kvm_sev_launch_update_data",3]],[[],["kvm_sev_launch_secret",3]],[[],["kvm_sev_launch_measure",3]],[[],["kvm_sev_guest_status",3]],[[],["kvm_sev_dbg",3]],[[]],[[]],[[]],[[]],[[],["kvm_assigned_msix_nr",3]],[[],["kvm_assigned_msix_entry",3]],[[],["kvm_hyperv_eventfd",3]],[[],["__u8",6]],[[],["__u8",6]],null,null,[[],["__u8",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["__bindgenunionfield",3]],["bool",15]],[[["__bindgenbitfieldunit",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,nullnull,null,null,null,null,null,null,null,null,[[["usize",15],["u8",15]],["u64",15]],[[["usize",15]],["bool",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["__u8",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["__bindgenbitfieldunit",3]],["bool",15]],null,null,null,[[]],[[]],[[]],[[["__u8",6]],[["u8",15],["__bindgenbitfieldunit",3,["u8"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["__bindgenbitfieldunit",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["__u8",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["__u8",6]],null,null,[[],["__u8",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["u8",15],["u64",15]]],[[["usize",15],["bool",15]]],[[["__u8",6]]],[[["__u8",6]]],[[["__u8",6]]],[[["usize",15]]],[[["__u8",6]]],[[["__u8",6]]],[[["__u8",6]]],[[["__u8",6]]],[[["__u8",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,[[],["__u8",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"kvm_irq_level"],[3,"kvm_s390_cmma_log"],[3,"kvm_run"],[3,"kvm_coalesced_mmio_zone"],[3,"kvm_coalesced_mmio"],[3,"kvm_dirty_log"],[3,"kvm_clear_dirty_log"],[3,"kvm_irq_routing_msi"],[3,"kvm_assigned_pci_dev"],[3,"kvm_assigned_irq"],[3,"kvm_ioapic_state__bindgen_ty_1__bindgen_ty_1"],[3,"kvm_pmu_event_filter"],[19,"kvm_irq_routing_entry__bindgen_ty_1"],[3,"kvm_irq_routing_s390_adapter"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_18"],[3,"kvm_s390_psw"],[3,"kvm_ioeventfd"],[3,"kvm_x86_mce"],[3,"kvm_one_reg"],[3,"kvm_arm_device_addr"],[3,"kvm_device_attr"],[3,"kvm_enc_region"],[3,"kvm_breakpoint"],[3,"kvm_s390_prefix_info"],[3,"kvm_msi"],[3,"kvm_sregs"],[3,"kvm_s390_mem_op"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_5"],[3,"kvm_guest_debug"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_7"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_14"],[3,"kvm_enable_cap"],[3,"kvm_config_tlb"],[3,"__BindgenUnionField"],[3,"__IncompleteArrayField"],[3,"kvm_assigned_msix_nr"],[3,"kvm_assigned_msix_entry"],[3,"kvm_pic_state"],[3,"kvm_segment"],[3,"kvm_dtable"],[3,"kvm_ioapic_state"],[3,"kvm_pit_channel_state"],[3,"kvm_nested_state__bindgen_ty_2"],[3,"kvm_dirty_tlb"],[19,"kvm_ioapic_state__bindgen_ty_1"],[3,"kvm_xen_hvm_config"],[3,"kvm_nested_state"],[3,"kvm_coalesced_mmio_ring"],[3,"kvm_irq_routing"],[3,"__BindgenBitfieldUnit"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"kvm_memory_alias"],[3,"kvm_regs"],[3,"kvm_lapic_state"],[3,"kvm_fpu"],[3,"kvm_msr_entry"],[3,"kvm_msrs"],[3,"kvm_msr_list"],[3,"kvm_cpuid_entry"],[3,"kvm_cpuid"],[3,"kvm_cpuid_entry2"],[3,"kvm_cpuid2"],[3,"kvm_debug_exit_arch"],[3,"kvm_guest_debug_arch"],[3,"kvm_pit_state"],[3,"kvm_pit_state2"],[3,"kvm_reinject_control"],[3,"kvm_vcpu_events"],[3,"kvm_vcpu_events__bindgen_ty_1"],[3,"kvm_vcpu_events__bindgen_ty_2"],[3,"kvm_vcpu_events__bindgen_ty_3"],[3,"kvm_vcpu_events__bindgen_ty_4"],[3,"kvm_debugregs"],[3,"kvm_xsave"],[3,"kvm_xcr"],[3,"kvm_xcrs"],[3,"kvm_sync_regs"],[3,"kvm_vmx_nested_state_data"],[3,"kvm_vmx_nested_state_hdr"],[3,"kvm_vmx_nested_state_hdr__bindgen_ty_1"],[19,"kvm_nested_state__bindgen_ty_1"],[3,"kvm_user_trace_setup"],[3,"kvm_debug_guest"],[3,"kvm_memory_region"],[3,"kvm_userspace_memory_region"],[19,"kvm_irq_level__bindgen_ty_1"],[3,"kvm_irqchip"],[19,"kvm_irqchip__bindgen_ty_1"],[3,"kvm_pit_config"],[3,"kvm_s390_skeys"],[19,"kvm_s390_cmma_log__bindgen_ty_1"],[3,"kvm_hyperv_exit"],[19,"kvm_hyperv_exit__bindgen_ty_1"],[3,"kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_1"],[3,"kvm_hyperv_exit__bindgen_ty_1__bindgen_ty_2"],[19,"kvm_run__bindgen_ty_1"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_1"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_2"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_3"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_4"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_6"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_8"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_9"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_10"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_11"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_12"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_13"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_15"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_16"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_17"],[3,"kvm_run__bindgen_ty_1__bindgen_ty_19"],[19,"kvm_run__bindgen_ty_2"],[19,"kvm_coalesced_mmio_zone__bindgen_ty_1"],[19,"kvm_coalesced_mmio__bindgen_ty_1"],[3,"kvm_translation"],[3,"kvm_interrupt"],[19,"kvm_dirty_log__bindgen_ty_1"],[19,"kvm_clear_dirty_log__bindgen_ty_1"],[3,"kvm_signal_mask"],[3,"kvm_tpr_access_ctl"],[3,"kvm_vapic_addr"],[3,"kvm_mp_state"],[3,"kvm_s390_interrupt"],[3,"kvm_s390_io_info"],[3,"kvm_s390_ext_info"],[3,"kvm_s390_pgm_info"],[3,"kvm_s390_extcall_info"],[3,"kvm_s390_emerg_info"],[3,"kvm_s390_stop_info"],[3,"kvm_s390_mchk_info"],[3,"kvm_s390_irq"],[19,"kvm_s390_irq__bindgen_ty_1"],[3,"kvm_s390_irq_state"],[3,"kvm_ppc_pvinfo"],[3,"kvm_ppc_one_page_size"],[3,"kvm_ppc_one_seg_page_size"],[3,"kvm_ppc_smmu_info"],[3,"kvm_ppc_resize_hpt"],[3,"kvm_irq_routing_irqchip"],[19,"kvm_irq_routing_msi__bindgen_ty_1"],[3,"kvm_irq_routing_hv_sint"],[3,"kvm_irq_routing_entry"],[3,"kvm_irqfd"],[3,"kvm_clock_data"],[3,"kvm_reg_list"],[3,"kvm_create_device"],[3,"kvm_vfio_spapr_tce"],[3,"kvm_s390_ucas_mapping"],[3,"kvm_sev_cmd"],[3,"kvm_sev_launch_start"],[3,"kvm_sev_launch_update_data"],[3,"kvm_sev_launch_secret"],[3,"kvm_sev_launch_measure"],[3,"kvm_sev_guest_status"],[3,"kvm_sev_dbg"],[19,"kvm_assigned_pci_dev__bindgen_ty_1"],[19,"kvm_assigned_irq__bindgen_ty_1"],[3,"kvm_hyperv_eventfd"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","tn":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABS_CNT","ABS_MAX","ACCOUNTING","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","ADFS_SUPER_MAGIC","ADJ_ESTERROR","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_MICRO","ADJ_NANO","ADJ_OFFSET","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","ADJ_SETOFFSET","ADJ_STATUS","ADJ_TAI","ADJ_TICK","ADJ_TIMECONST","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","AIO_ALLDONE","AIO_CANCELED","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_V4MAPPED","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_SET_IV","ALG_SET_KEY","ALG_SET_OP","ALT_DIGITS","AM_STR","ARPD_FLUSH","ARPD_LOOKUP","ARPD_UPDATE","ARPHRD_ADAPT","ARPHRD_APPLETLK","ARPHRD_ARCNET","ARPHRD_ASH","ARPHRD_ATM","ARPHRD_AX25","ARPHRD_BIF","ARPHRD_CAN","ARPHRD_CHAOS","ARPHRD_CISCO","ARPHRD_CSLIP","ARPHRD_CSLIP6","ARPHRD_DDCMP","ARPHRD_DLCI","ARPHRD_ECONET","ARPHRD_EETHER","ARPHRD_ETHER","ARPHRD_EUI64","ARPHRD_FCAL","ARPHRD_FCFABRIC","ARPHRD_FCPL","ARPHRD_FCPP","ARPHRD_FDDI","ARPHRD_FRAD","ARPHRD_HDLC","ARPHRD_HIPPI","ARPHRD_HWX25","ARPHRD_IEEE1394","ARPHRD_IEEE802","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_IEEE802_TR","ARPHRD_INFINIBAND","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_IRDA","ARPHRD_LAPB","ARPHRD_LOCALTLK","ARPHRD_LOOPBACK","ARPHRD_METRICOM","ARPHRD_NETROM","ARPHRD_NONE","ARPHRD_PIMREG","ARPHRD_PPP","ARPHRD_PRONET","ARPHRD_RAWHDLC","ARPHRD_ROSE","ARPHRD_RSRVD","ARPHRD_SIT","ARPHRD_SKIP","ARPHRD_SLIP","ARPHRD_SLIP6","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_VOID","ARPHRD_X25","ARPOP_InREPLY","ARPOP_InREQUEST","ARPOP_NAK","ARPOP_REPLY","ARPOP_REQUEST","ARPOP_RREPLY","ARPOP_RREQUEST","ATF_COM","ATF_DONTPUB","ATF_MAGIC","ATF_NETMASK","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_REMOVEDIR","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_UID","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BINDERFS_SUPER_MAGIC","BLKPBSZGET","BLKSSZGET","BOOT_TIME","BOTHER","BPF_FS_MAGIC","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BUFSIZ","CANFD_BRS","CANFD_ESI","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_MTU","CAN_BCM","CAN_EFF_FLAG","CAN_EFF_ID_BITS","CAN_EFF_MASK","CAN_ERR_FLAG","CAN_ERR_MASK","CAN_INV_FILTER","CAN_ISOTP","CAN_J1939","CAN_MAX_DLC","CAN_MAX_DLEN","CAN_MCNET","CAN_MTU","CAN_NPROTO","CAN_RAW","CAN_RAW_ERR_FILTER","CAN_RAW_FD_FRAMES","CAN_RAW_FILTER","CAN_RAW_FILTER_MAX","CAN_RAW_JOIN_FILTERS","CAN_RAW_LOOPBACK","CAN_RAW_RECV_OWN_MSGS","CAN_RTR_FLAG","CAN_SFF_ID_BITS","CAN_SFF_MASK","CAN_TP16","CAN_TP20","CBAUD","CBAUDEX","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CLOSE_RANGE_CLOEXEC","CLOSE_RANGE_UNSHARE","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CMSPAR","CODA_SUPER_MAGIC","CODESET","CPU_ALLOC_SIZE","CPU_CLR","CPU_COUNT","CPU_COUNT_S","CPU_EQUAL","CPU_ISSET","CPU_SET","CPU_SETSIZE","CPU_ZERO","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_MCAST_GRP_ID","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_OPS","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_UNSPEC","CTRL_ATTR_VERSION","CTRL_CMD_DELFAMILY","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_DELOPS","CTRL_CMD_GETFAMILY","CTRL_CMD_GETMCAST_GRP","CTRL_CMD_GETOPS","CTRL_CMD_NEWFAMILY","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_NEWOPS","CTRL_CMD_UNSPEC","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DCCP_SERVICE_LIST_MAX_LEN","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_TX_CCID","DEAD_PROCESS","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","DIR","DS","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","ECRYPTFS_SUPER_MAGIC","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFLAGS","EFS_SUPER_MAGIC","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOATTR","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ES","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MACSEC","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_ZLEN","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EV_CNT","EV_MAX","EWOULDBLOCK","EXDEV","EXFULL","EXIT_FAILURE","EXIT_SUCCESS","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","Elf32_Addr","Elf32_Chdr","Elf32_Ehdr","Elf32_Half","Elf32_Off","Elf32_Phdr","Elf32_Section","Elf32_Shdr","Elf32_Sym","Elf32_Word","Elf64_Addr","Elf64_Chdr","Elf64_Ehdr","Elf64_Half","Elf64_Off","Elf64_Phdr","Elf64_Section","Elf64_Shdr","Elf64_Sxword","Elf64_Sym","Elf64_Word","Elf64_Xword","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FANOTIFY_METADATA_VERSION","FAN_ACCESS","FAN_ACCESS_PERM","FAN_ALLOW","FAN_CLASS_CONTENT","FAN_CLASS_NOTIF","FAN_CLASS_PRE_CONTENT","FAN_CLOEXEC","FAN_CLOSE","FAN_CLOSE_NOWRITE","FAN_CLOSE_WRITE","FAN_DENY","FAN_EVENT_ON_CHILD","FAN_MARK_ADD","FAN_MARK_DONT_FOLLOW","FAN_MARK_FILESYSTEM","FAN_MARK_FLUSH","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_ONLYDIR","FAN_MARK_REMOVE","FAN_MODIFY","FAN_NOFD","FAN_NONBLOCK","FAN_ONDIR","FAN_OPEN","FAN_OPEN_PERM","FAN_Q_OVERFLOW","FAN_UNLIMITED_MARKS","FAN_UNLIMITED_QUEUE","FDPIC_FUNCPTRS","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FF_CNT","FF_MAX","FILE","FILENAME_MAX","FIOCLEX","FIONBIO","FIONCLEX","FIONREAD","FLUSHO","FOPEN_MAX","FS","FS_BASE","FUTEXFS_SUPER_MAGIC","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_TRYLOCK_PI","FUTEX_UNLOCK_PI","FUTEX_WAIT","FUTEX_WAIT_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_OP","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETPIPE_SZ","F_GET_SEALS","F_LOCK","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_RDLCK","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETPIPE_SZ","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","GENL_ID_PMCRAID","GENL_ID_VFS_DQUOT","GENL_MAX_ID","GENL_MIN_ID","GENL_NAMSIZ","GENL_UNS_ADMIN_PERM","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRND_NONBLOCK","GRND_RANDOM","GRPQUOTA","GS","GS_BASE","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","IBSHIFT","ICANON","ICRNL","IEXTEN","IFA_ADDRESS","IFA_ANYCAST","IFA_BROADCAST","IFA_CACHEINFO","IFA_FLAGS","IFA_F_DADFAILED","IFA_F_DEPRECATED","IFA_F_HOMEADDRESS","IFA_F_MANAGETEMPADDR","IFA_F_MCAUTOJOIN","IFA_F_NODAD","IFA_F_NOPREFIXROUTE","IFA_F_OPTIMISTIC","IFA_F_PERMANENT","IFA_F_SECONDARY","IFA_F_STABLE_PRIVACY","IFA_F_TEMPORARY","IFA_F_TENTATIVE","IFA_LABEL","IFA_LOCAL","IFA_MULTICAST","IFA_UNSPEC","IFF_ALLMULTI","IFF_ATTACH_QUEUE","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DETACH_QUEUE","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_MULTI_QUEUE","IFF_NOARP","IFF_NOFILTER","IFF_NOTRAILERS","IFF_NO_PI","IFF_ONE_QUEUE","IFF_PERSIST","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_TUN_EXCL","IFF_UP","IFF_VNET_HDR","IFLA_ADDRESS","IFLA_AF_SPEC","IFLA_ALT_IFNAME","IFLA_BROADCAST","IFLA_CARRIER","IFLA_CARRIER_CHANGES","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_COST","IFLA_EVENT","IFLA_EXT_MASK","IFLA_GROUP","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_IFALIAS","IFLA_IFNAME","IFLA_IF_NETNSID","IFLA_INFO_DATA","IFLA_INFO_KIND","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_KIND","IFLA_INFO_UNSPEC","IFLA_INFO_XSTATS","IFLA_LINK","IFLA_LINKINFO","IFLA_LINKMODE","IFLA_LINK_NETNSID","IFLA_MAP","IFLA_MASTER","IFLA_MAX_MTU","IFLA_MIN_MTU","IFLA_MTU","IFLA_NET_NS_FD","IFLA_NET_NS_PID","IFLA_NEW_IFINDEX","IFLA_NEW_NETNSID","IFLA_NUM_RX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_VF","IFLA_OPERSTATE","IFLA_PAD","IFLA_PERM_ADDRESS","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_NAME","IFLA_PHYS_SWITCH_ID","IFLA_PORT_SELF","IFLA_PRIORITY","IFLA_PROMISCUITY","IFLA_PROP_LIST","IFLA_PROTINFO","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN_REASON","IFLA_QDISC","IFLA_STATS","IFLA_STATS64","IFLA_TARGET_NETNSID","IFLA_TXQLEN","IFLA_UNSPEC","IFLA_VFINFO_LIST","IFLA_VF_PORTS","IFLA_WEIGHT","IFLA_WIRELESS","IFLA_XDP","IFNAMSIZ","IF_NAMESIZE","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INPUT_PROP_CNT","INPUT_PROP_MAX","INT_MAX","INT_MIN","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_IGNORED","IN_ISDIR","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IP6T_SO_ORIGINAL_DST","IPC_CREAT","IPC_EXCL","IPC_INFO","IPC_NOWAIT","IPC_PRIVATE","IPC_RMID","IPC_SET","IPC_STAT","IPDEFTTL","IPOPT_CLASS","IPOPT_CLASS_MASK","IPOPT_CONTROL","IPOPT_COPIED","IPOPT_COPY","IPOPT_END","IPOPT_EOL","IPOPT_LSRR","IPOPT_MEASUREMENT","IPOPT_MINOFF","IPOPT_NOOP","IPOPT_NOP","IPOPT_NUMBER","IPOPT_NUMBER_MASK","IPOPT_OFFSET","IPOPT_OLEN","IPOPT_OPTVAL","IPOPT_RA","IPOPT_RESERVED1","IPOPT_RESERVED2","IPOPT_RR","IPOPT_SEC","IPOPT_SID","IPOPT_SSRR","IPOPT_TIMESTAMP","IPOPT_TS","IPOPT_TS_PRESPEC","IPOPT_TS_TSANDADDR","IPOPT_TS_TSONLY","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPTOS_ECN","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOT_ECT","IPTOS_LOWDELAY","IPTOS_MINCOST","IPTOS_PREC","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASH","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_MASK","IPTOS_PREC_NETCONTROL","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_RELIABILITY","IPTOS_THROUGHPUT","IPTOS_TOS","IPTOS_TOS_MASK","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADDR_PREFERENCES","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_AUTOFLOWLABEL","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_FLOWINFO","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_FLOWINFO_SEND","IPV6_FLOWLABEL_MGR","IPV6_FREEBIND","IPV6_HDRINCL","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_MINHOPCOUNT","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_ALL","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_ORIGDSTADDR","IPV6_PATHMTU","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_NONCGA","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_TMP","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVFRAGSIZE","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVORIGDSTADDR","IPV6_RECVPATHMTU","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_ROUTER_ALERT_ISOLATE","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_TCLASS","IPV6_TRANSPARENT","IPV6_UNICAST_HOPS","IPV6_UNICAST_IF","IPV6_V6ONLY","IPV6_XFRM_POLICY","IPVERSION","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","JFFS2_SUPER_MAGIC","KEYCTL_ASSUME_AUTHORITY","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","KEYCTL_CHOWN","KEYCTL_CLEAR","KEYCTL_DESCRIBE","KEYCTL_DH_COMPUTE","KEYCTL_GET_KEYRING_ID","KEYCTL_GET_PERSISTENT","KEYCTL_GET_SECURITY","KEYCTL_INSTANTIATE","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_LINK","KEYCTL_MOVE","KEYCTL_NEGATE","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_READ","KEYCTL_REJECT","KEYCTL_RESTRICT_KEYRING","KEYCTL_REVOKE","KEYCTL_SEARCH","KEYCTL_SESSION_TO_PARENT","KEYCTL_SETPERM","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_UNLINK","KEYCTL_UPDATE","KEY_CNT","KEY_MAX","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","LC_ADDRESS","LC_ADDRESS_MASK","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_IDENTIFICATION","LC_IDENTIFICATION_MASK","LC_MEASUREMENT","LC_MEASUREMENT_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NAME","LC_NAME_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_PAPER","LC_PAPER_MASK","LC_TELEPHONE","LC_TELEPHONE_MASK","LC_TIME","LC_TIME_MASK","LED_CNT","LED_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LM_ID_BASE","LM_ID_NEWLM","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_KERN","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","Lmid_t","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAXTC","MAXTTL","MAX_ADDR_LEN","MAX_IPOPTLEN","MAX_LINKS","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","MCL_CURRENT","MCL_FUTURE","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_HUGETLB","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_ONFAULT","MMAP_PAGE_ZERO","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSC_CNT","MSC_MAX","MSDOS_SUPER_MAGIC","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_COPY","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_EXCEPT","MSG_FASTOPEN","MSG_FIN","MSG_INFO","MSG_MORE","MSG_NOERROR","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_RST","MSG_STAT","MSG_SYN","MSG_TRUNC","MSG_TRYHARD","MSG_WAITALL","MSG_WAITFORONE","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","M_ARENA_MAX","M_ARENA_TEST","M_CHECK_ACTION","M_GRAIN","M_KEEP","M_MMAP_MAX","M_MMAP_THRESHOLD","M_MXFAST","M_NLBLKS","M_PERTURB","M_TOP_PAD","M_TRIM_THRESHOLD","NCCS","NCP_SUPER_MAGIC","NDA_CACHEINFO","NDA_DST","NDA_IFINDEX","NDA_LINK_NETNSID","NDA_LLADDR","NDA_MASTER","NDA_PORT","NDA_PROBES","NDA_SRC_VNI","NDA_UNSPEC","NDA_VLAN","NDA_VNI","NETLINK_ADD_MEMBERSHIP","NETLINK_AUDIT","NETLINK_BROADCAST_ERROR","NETLINK_CAP_ACK","NETLINK_CONNECTOR","NETLINK_CRYPTO","NETLINK_DNRTMSG","NETLINK_DROP_MEMBERSHIP","NETLINK_ECRYPTFS","NETLINK_EXT_ACK","NETLINK_FIB_LOOKUP","NETLINK_FIREWALL","NETLINK_GENERIC","NETLINK_GET_STRICT_CHK","NETLINK_INET_DIAG","NETLINK_IP6_FW","NETLINK_ISCSI","NETLINK_KOBJECT_UEVENT","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_NETFILTER","NETLINK_NFLOG","NETLINK_NO_ENOBUFS","NETLINK_PKTINFO","NETLINK_RDMA","NETLINK_ROUTE","NETLINK_RX_RING","NETLINK_SCSITRANSPORT","NETLINK_SELINUX","NETLINK_SOCK_DIAG","NETLINK_TX_RING","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_XFRM","NEW_TIME","NFNETLINK_V0","NFNLGRP_ACCT_QUOTA","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_NFTABLES","NFNLGRP_NONE","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_COUNT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_NONE","NFNL_SUBSYS_OSF","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_DECNET","NFPROTO_INET","NFPROTO_IPV4","NFPROTO_IPV6","NFPROTO_NETDEV","NFPROTO_NUMPROTO","NFPROTO_UNSPEC","NFQA_CAP_LEN","NFQA_CFG_CMD","NFQA_CFG_FLAGS","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_GSO","NFQA_CFG_F_MAX","NFQA_CFG_F_SECCTX","NFQA_CFG_F_UID_GID","NFQA_CFG_MASK","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_UNSPEC","NFQA_CT","NFQA_CT_INFO","NFQA_EXP","NFQA_GID","NFQA_HWADDR","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_MARK","NFQA_PACKET_HDR","NFQA_PAYLOAD","NFQA_SECCTX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_CSUM_NOTVERIFIED","NFQA_SKB_GSO","NFQA_SKB_INFO","NFQA_TIMESTAMP","NFQA_UID","NFQA_UNSPEC","NFQA_VERDICT_HDR","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_CFG_CMD_UNBIND","NFQNL_COPY_META","NFQNL_COPY_NONE","NFQNL_COPY_PACKET","NFQNL_MSG_CONFIG","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_VERDICT_BATCH","NFS_SUPER_MAGIC","NFT_BREAK","NFT_BYTEORDER_HTON","NFT_BYTEORDER_NTOH","NFT_CHAIN_MAXNAMELEN","NFT_CMP_EQ","NFT_CMP_GT","NFT_CMP_GTE","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_NEQ","NFT_CONTINUE","NFT_CT_BYTES","NFT_CT_DIRECTION","NFT_CT_DST","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_LABELS","NFT_CT_MARK","NFT_CT_PKTS","NFT_CT_PROTOCOL","NFT_CT_PROTO_DST","NFT_CT_PROTO_SRC","NFT_CT_SECMARK","NFT_CT_SRC","NFT_CT_STATE","NFT_CT_STATUS","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE","NFT_DATA_VALUE_MAXLEN","NFT_DATA_VERDICT","NFT_DYNSET_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_GOTO","NFT_JUMP","NFT_LIMIT_F_INV","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LOOKUP_F_INV","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_CGROUP","NFT_META_CPU","NFT_META_IIF","NFT_META_IIFGROUP","NFT_META_IIFNAME","NFT_META_IIFTYPE","NFT_META_L4PROTO","NFT_META_LEN","NFT_META_MARK","NFT_META_NFPROTO","NFT_META_NFTRACE","NFT_META_OIF","NFT_META_OIFGROUP","NFT_META_OIFNAME","NFT_META_OIFTYPE","NFT_META_PKTTYPE","NFT_META_PRANDOM","NFT_META_PRIORITY","NFT_META_PROTOCOL","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_SKGID","NFT_META_SKUID","NFT_MSG_DELCHAIN","NFT_MSG_DELOBJ","NFT_MSG_DELRULE","NFT_MSG_DELSET","NFT_MSG_DELSETELEM","NFT_MSG_DELTABLE","NFT_MSG_GETCHAIN","NFT_MSG_GETGEN","NFT_MSG_GETOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_GETRULE","NFT_MSG_GETSET","NFT_MSG_GETSETELEM","NFT_MSG_GETTABLE","NFT_MSG_MAX","NFT_MSG_NEWCHAIN","NFT_MSG_NEWGEN","NFT_MSG_NEWOBJ","NFT_MSG_NEWRULE","NFT_MSG_NEWSET","NFT_MSG_NEWSETELEM","NFT_MSG_NEWTABLE","NFT_MSG_TRACE","NFT_NAT_DNAT","NFT_NAT_SNAT","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","NFT_OBJ_MAXNAMELEN","NFT_PAYLOAD_CSUM_INET","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG32_SIZE","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","NFT_REG_SIZE","NFT_REG_VERDICT","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_RETURN","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_ELEM_INTERVAL_END","NFT_SET_EVAL","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_MAXNAMELEN","NFT_SET_POL_MEMORY","NFT_SET_POL_PERFORMANCE","NFT_SET_TIMEOUT","NFT_TABLE_MAXNAMELEN","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_TRACETYPE_UNSPEC","NFT_USERDATA_MAXLEN","NFULA_CFG_CMD","NFULA_CFG_FLAGS","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_QTHRESH","NFULA_CFG_TIMEOUT","NFULA_CFG_UNSPEC","NFULA_CT","NFULA_CT_INFO","NFULA_GID","NFULA_HWADDR","NFULA_HWHEADER","NFULA_HWLEN","NFULA_HWTYPE","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_MARK","NFULA_PACKET_HDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_TIMESTAMP","NFULA_UID","NFULA_UNSPEC","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_F_CONNTRACK","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_COPY_META","NFULNL_COPY_NONE","NFULNL_COPY_PACKET","NFULNL_MSG_CONFIG","NFULNL_MSG_PACKET","NF_ACCEPT","NF_DROP","NF_INET_FORWARD","NF_INET_LOCAL_IN","NF_INET_LOCAL_OUT","NF_INET_NUMHOOKS","NF_INET_POST_ROUTING","NF_INET_PRE_ROUTING","NF_IP6_FORWARD","NF_IP6_LOCAL_IN","NF_IP6_LOCAL_OUT","NF_IP6_NUMHOOKS","NF_IP6_POST_ROUTING","NF_IP6_PRE_ROUTING","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_FILTER","NF_IP6_PRI_FIRST","NF_IP6_PRI_LAST","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_RAW","NF_IP6_PRI_SECURITY","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_SELINUX_LAST","NF_IP_FORWARD","NF_IP_LOCAL_IN","NF_IP_LOCAL_OUT","NF_IP_NUMHOOKS","NF_IP_POST_ROUTING","NF_IP_PRE_ROUTING","NF_IP_PRI_CONNTRACK","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_FILTER","NF_IP_PRI_FIRST","NF_IP_PRI_LAST","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_NAT_SRC","NF_IP_PRI_RAW","NF_IP_PRI_SECURITY","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_SELINUX_LAST","NF_MAX_VERDICT","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NF_QUEUE","NF_REPEAT","NF_STOLEN","NF_STOP","NF_VERDICT_BITS","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_MASK","NF_VERDICT_QBITS","NF_VERDICT_QMASK","NILFS_SUPER_MAGIC","NI_DGRAM","NI_MAXHOST","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSERV","NL0","NL1","NLA_ALIGN","NLA_ALIGNTO","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","NLDLY","NLMSG_DONE","NLMSG_ERROR","NLMSG_MIN_TYPE","NLMSG_NOOP","NLMSG_OVERRUN","NLM_F_ACK","NLM_F_APPEND","NLM_F_ATOMIC","NLM_F_CREATE","NLM_F_DUMP","NLM_F_DUMP_FILTERED","NLM_F_DUMP_INTR","NLM_F_ECHO","NLM_F_EXCL","NLM_F_MATCH","NLM_F_MULTI","NLM_F_REPLACE","NLM_F_REQUEST","NLM_F_ROOT","NOEXPR","NOFLSH","NOSTR","NTF_EXT_LEARNED","NTF_MASTER","NTF_OFFLOADED","NTF_PROXY","NTF_ROUTER","NTF_SELF","NTF_USE","NTP_API","NT_ASRS","NT_AUXV","NT_FPREGSET","NT_GWINDOWS","NT_LWPSINFO","NT_LWPSTATUS","NT_PLATFORM","NT_PRCRED","NT_PRFPREG","NT_PRFPXREG","NT_PRPSINFO","NT_PRSTATUS","NT_PRXREG","NT_PSINFO","NT_PSTATUS","NT_TASKSTRUCT","NT_UTSNAME","NUD_DELAY","NUD_FAILED","NUD_INCOMPLETE","NUD_NOARP","NUD_NONE","NUD_PERMANENT","NUD_PROBE","NUD_REACHABLE","NUD_STALE","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","OLD_TIME","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPOST","ORIG_RAX","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_UNICAST","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_ALG","PF_APPLETALK","PF_ASH","PF_ATMPVC","PF_ATMSVC","PF_AX25","PF_BLUETOOTH","PF_BRIDGE","PF_CAIF","PF_CAN","PF_DECnet","PF_ECONET","PF_IB","PF_IEEE802154","PF_INET","PF_INET6","PF_IPX","PF_IRDA","PF_ISDN","PF_IUCV","PF_KEY","PF_LLC","PF_LOCAL","PF_MPLS","PF_NETBEUI","PF_NETLINK","PF_NETROM","PF_NFC","PF_PACKET","PF_PHONET","PF_PPPOX","PF_RDS","PF_ROSE","PF_ROUTE","PF_RXRPC","PF_SECURITY","PF_SNA","PF_TIPC","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_WANPIPE","PF_X25","PF_XDP","PIDFD_NONBLOCK","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_USEVFORK","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","PR_CAPBSET_DROP","PR_CAPBSET_READ","PR_CAP_AMBIENT","PR_CAP_AMBIENT_CLEAR_ALL","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_RAISE","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_FP_EXC_ASYNC","PR_FP_EXC_DISABLED","PR_FP_EXC_DIV","PR_FP_EXC_INV","PR_FP_EXC_NONRECOV","PR_FP_EXC_OVF","PR_FP_EXC_PRECISE","PR_FP_EXC_RES","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_UND","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_GET_CHILD_SUBREAPER","PR_GET_DUMPABLE","PR_GET_ENDIAN","PR_GET_FPEMU","PR_GET_FPEXC","PR_GET_FP_MODE","PR_GET_KEEPCAPS","PR_GET_NAME","PR_GET_NO_NEW_PRIVS","PR_GET_PDEATHSIG","PR_GET_SECCOMP","PR_GET_SECUREBITS","PR_GET_THP_DISABLE","PR_GET_TID_ADDRESS","PR_GET_TIMERSLACK","PR_GET_TIMING","PR_GET_TSC","PR_GET_UNALIGN","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_EARLY","PR_MCE_KILL_GET","PR_MCE_KILL_LATE","PR_MCE_KILL_SET","PR_MPX_DISABLE_MANAGEMENT","PR_MPX_ENABLE_MANAGEMENT","PR_SET_CHILD_SUBREAPER","PR_SET_DUMPABLE","PR_SET_ENDIAN","PR_SET_FPEMU","PR_SET_FPEXC","PR_SET_FP_MODE","PR_SET_KEEPCAPS","PR_SET_MM","PR_SET_MM_ARG_END","PR_SET_MM_ARG_START","PR_SET_MM_AUXV","PR_SET_MM_BRK","PR_SET_MM_END_CODE","PR_SET_MM_END_DATA","PR_SET_MM_ENV_END","PR_SET_MM_ENV_START","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_MM_START_BRK","PR_SET_MM_START_CODE","PR_SET_MM_START_DATA","PR_SET_MM_START_STACK","PR_SET_NAME","PR_SET_NO_NEW_PRIVS","PR_SET_PDEATHSIG","PR_SET_PTRACER","PR_SET_SECCOMP","PR_SET_SECUREBITS","PR_SET_THP_DISABLE","PR_SET_TIMERSLACK","PR_SET_TIMING","PR_SET_TSC","PR_SET_UNALIGN","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_MUTEX_ADAPTIVE_NP","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ROBUST","PTHREAD_MUTEX_STALLED","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_MASK","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKSIGINFO_SHARED","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_RELRO","PT_GNU_STACK","PT_HIOS","PT_HIPROC","PT_INTERP","PT_LOAD","PT_LOOS","PT_LOPROC","PT_NOTE","PT_NULL","PT_NUM","PT_PHDR","PT_SHLIB","PT_TLS","P_ALL","P_PGID","P_PID","P_PIDFD","QCMD","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","Q_GETFMT","Q_GETINFO","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETINFO","Q_SETQUOTA","Q_SYNC","R10","R11","R12","R13","R14","R15","R8","R9","RADIXCHAR","RAND_MAX","RAX","RBP","RBX","RB_AUTOBOOT","RB_DISABLE_CAD","RB_ENABLE_CAD","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RCX","RDI","RDTGROUP_SUPER_MAGIC","RDX","READ_IMPLIES_EXEC","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_CR2","REG_CSGSFS","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EEND","REG_EESCAPE","REG_EFL","REG_ENOSYS","REG_EPAREN","REG_ERANGE","REG_ERPAREN","REG_ERR","REG_ESIZE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOMATCH","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_OLDMASK","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_R8","REG_R9","REG_RAX","REG_RBP","REG_RBX","REG_RCX","REG_RDI","REG_RDX","REG_RIP","REG_RSI","REG_RSP","REG_STARTEND","REG_TRAPNO","REISERFS_SUPER_MAGIC","REL_CNT","REL_MAX","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","REP_CNT","REP_MAX","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RIP","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RLIM_SAVED_CUR","RLIM_SAVED_MAX","RSI","RSP","RTA_CACHEINFO","RTA_DST","RTA_ENCAP","RTA_ENCAP_TYPE","RTA_EXPIRES","RTA_FLOW","RTA_GATEWAY","RTA_IIF","RTA_MARK","RTA_METRICS","RTA_MFC_STATS","RTA_MP_ALGO","RTA_MULTIPATH","RTA_NEWDST","RTA_OIF","RTA_PAD","RTA_PREF","RTA_PREFSRC","RTA_PRIORITY","RTA_PROTOINFO","RTA_SESSION","RTA_SRC","RTA_TABLE","RTA_TTL_PROPAGATE","RTA_UID","RTA_UNSPEC","RTA_VIA","RTCF_DIRECTSRC","RTCF_DOREDIRECT","RTCF_LOG","RTCF_MASQ","RTCF_NAT","RTCF_VALVE","RTF_ADDRCLASSMASK","RTF_ADDRCONF","RTF_ALLONLINK","RTF_BROADCAST","RTF_CACHE","RTF_DEFAULT","RTF_DYNAMIC","RTF_FLOW","RTF_GATEWAY","RTF_HOST","RTF_INTERFACE","RTF_IRTT","RTF_LINKRT","RTF_LOCAL","RTF_MODIFIED","RTF_MSS","RTF_MTU","RTF_MULTICAST","RTF_NAT","RTF_NOFORWARD","RTF_NONEXTHOP","RTF_NOPMTUDISC","RTF_POLICY","RTF_REINSTATE","RTF_REJECT","RTF_STATIC","RTF_THROW","RTF_UP","RTF_WINDOW","RTF_XRESOLVE","RTLD_DEEPBIND","RTLD_DEFAULT","RTLD_DI_CONFIGADDR","RTLD_DI_LINKMAP","RTLD_DI_LMID","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_TLS_DATA","RTLD_DI_TLS_MODID","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTMSG_AR_FAILED","RTMSG_CONTROL","RTMSG_DELDEVICE","RTMSG_DELROUTE","RTMSG_DELRULE","RTMSG_NEWDEVICE","RTMSG_NEWROUTE","RTMSG_NEWRULE","RTMSG_OVERRUN","RTM_DELACTION","RTM_DELADDR","RTM_DELADDRLABEL","RTM_DELLINK","RTM_DELMDB","RTM_DELNEIGH","RTM_DELNETCONF","RTM_DELNSID","RTM_DELQDISC","RTM_DELROUTE","RTM_DELRULE","RTM_DELTCLASS","RTM_DELTFILTER","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_FIB_MATCH","RTM_F_LOOKUP_TABLE","RTM_F_NOTIFY","RTM_F_PREFIX","RTM_GETACTION","RTM_GETADDR","RTM_GETADDRLABEL","RTM_GETANYCAST","RTM_GETDCB","RTM_GETLINK","RTM_GETMDB","RTM_GETMULTICAST","RTM_GETNEIGH","RTM_GETNEIGHTBL","RTM_GETNETCONF","RTM_GETNSID","RTM_GETQDISC","RTM_GETROUTE","RTM_GETRULE","RTM_GETSTATS","RTM_GETTCLASS","RTM_GETTFILTER","RTM_NEWACTION","RTM_NEWADDR","RTM_NEWADDRLABEL","RTM_NEWCACHEREPORT","RTM_NEWLINK","RTM_NEWMDB","RTM_NEWNDUSEROPT","RTM_NEWNEIGH","RTM_NEWNEIGHTBL","RTM_NEWNETCONF","RTM_NEWNSID","RTM_NEWPREFIX","RTM_NEWQDISC","RTM_NEWROUTE","RTM_NEWRULE","RTM_NEWSTATS","RTM_NEWTCLASS","RTM_NEWTFILTER","RTM_SETDCB","RTM_SETLINK","RTM_SETNEIGHTBL","RTN_ANYCAST","RTN_BLACKHOLE","RTN_BROADCAST","RTN_LOCAL","RTN_MULTICAST","RTN_NAT","RTN_PROHIBIT","RTN_THROW","RTN_UNICAST","RTN_UNREACHABLE","RTN_UNSPEC","RTN_XRESOLVE","RTPROT_BOOT","RTPROT_KERNEL","RTPROT_REDIRECT","RTPROT_STATIC","RTPROT_UNSPEC","RT_ADDRCLASS","RT_CLASS_DEFAULT","RT_CLASS_LOCAL","RT_CLASS_MAIN","RT_CLASS_MAX","RT_CLASS_UNSPEC","RT_LOCALADDR","RT_SCOPE_HOST","RT_SCOPE_LINK","RT_SCOPE_NOWHERE","RT_SCOPE_SITE","RT_SCOPE_UNIVERSE","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_LOCAL","RT_TABLE_MAIN","RT_TABLE_UNSPEC","RT_TOS","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","R_OK","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCHED_BATCH","SCHED_FIFO","SCHED_IDLE","SCHED_OTHER","SCHED_RESET_ON_FORK","SCHED_RR","SCM_CREDENTIALS","SCM_RIGHTS","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_TXTIME","SCM_WIFI_STATUS","SECCOMP_FILTER_FLAG_LOG","SECCOMP_FILTER_FLAG_SPEC_ALLOW","SECCOMP_FILTER_FLAG_TSYNC","SECCOMP_MODE_DISABLED","SECCOMP_MODE_FILTER","SECCOMP_MODE_STRICT","SECCOMP_RET_ACTION","SECCOMP_RET_ACTION_FULL","SECCOMP_RET_ALLOW","SECCOMP_RET_DATA","SECCOMP_RET_ERRNO","SECCOMP_RET_KILL","SECCOMP_RET_KILL_PROCESS","SECCOMP_RET_KILL_THREAD","SECCOMP_RET_LOG","SECCOMP_RET_TRACE","SECCOMP_RET_TRAP","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SELINUX_MAGIC","SEM_FAILED","SFD_CLOEXEC","SFD_NONBLOCK","SHM_EXEC","SHM_HUGETLB","SHM_LOCK","SHM_NORESERVE","SHM_R","SHM_RDONLY","SHM_REMAP","SHM_RND","SHM_UNLOCK","SHM_W","SHORT_INODE","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMAX","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCADDMULTI","SIOCADDRT","SIOCDARP","SIOCDELMULTI","SIOCDELRT","SIOCDRARP","SIOCGARP","SIOCGIFADDR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFSLAVE","SIOCGRARP","SIOCSARP","SIOCSIFADDR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNETMASK","SIOCSIFSLAVE","SIOCSRARP","SI_LOAD_SHIFT","SMACK_MAGIC","SMB_SUPER_MAGIC","SND_CNT","SND_MAX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TXTIME_DEADLINE_MODE","SOF_TXTIME_REPORT_ERRORS","SOL_AAL","SOL_ALG","SOL_ATM","SOL_BLUETOOTH","SOL_CAIF","SOL_CAN_BASE","SOL_CAN_RAW","SOL_DCCP","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_IUCV","SOL_LLC","SOL_NETBEUI","SOL_NETLINK","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_RXRPC","SOL_SOCKET","SOL_TCP","SOL_TIPC","SOL_UDP","SOL_X25","SOL_XDP","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BINDTOIFINDEX","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUSY_POLL","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DETACH_REUSEPORT_BPF","SO_DOMAIN","SO_DONTROUTE","SO_EE_OFFENDER","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_TIMESTAMPING","SO_EE_ORIGIN_TXSTATUS","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_ORIGINAL_DST","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_RCVTIMEO_NEW","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_SNDTIMEO_NEW","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPING_NEW","SO_TIMESTAMPNS","SO_TIMESTAMPNS_NEW","SO_TIMESTAMP_NEW","SO_TXTIME","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SS","SS_DISABLE","SS_ONSTACK","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_NODUMP","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","STICKY_TIMEOUTS","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","SW_CNT","SW_MAX","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYN_CNT","SYN_MAX","SYSFS_MAGIC","SYS__sysctl","SYS_accept","SYS_accept4","SYS_access","SYS_acct","SYS_add_key","SYS_adjtimex","SYS_afs_syscall","SYS_alarm","SYS_arch_prctl","SYS_bind","SYS_bpf","SYS_brk","SYS_capget","SYS_capset","SYS_chdir","SYS_chmod","SYS_chown","SYS_chroot","SYS_clock_adjtime","SYS_clock_getres","SYS_clock_gettime","SYS_clock_nanosleep","SYS_clock_settime","SYS_clone","SYS_clone3","SYS_close","SYS_close_range","SYS_connect","SYS_copy_file_range","SYS_creat","SYS_create_module","SYS_delete_module","SYS_dup","SYS_dup2","SYS_dup3","SYS_epoll_create","SYS_epoll_create1","SYS_epoll_ctl","SYS_epoll_ctl_old","SYS_epoll_pwait","SYS_epoll_pwait2","SYS_epoll_wait","SYS_epoll_wait_old","SYS_eventfd","SYS_eventfd2","SYS_execve","SYS_execveat","SYS_exit","SYS_exit_group","SYS_faccessat","SYS_faccessat2","SYS_fadvise64","SYS_fallocate","SYS_fanotify_init","SYS_fanotify_mark","SYS_fchdir","SYS_fchmod","SYS_fchmodat","SYS_fchown","SYS_fchownat","SYS_fcntl","SYS_fdatasync","SYS_fgetxattr","SYS_finit_module","SYS_flistxattr","SYS_flock","SYS_fork","SYS_fremovexattr","SYS_fsconfig","SYS_fsetxattr","SYS_fsmount","SYS_fsopen","SYS_fspick","SYS_fstat","SYS_fstatfs","SYS_fsync","SYS_ftruncate","SYS_futex","SYS_futimesat","SYS_get_kernel_syms","SYS_get_mempolicy","SYS_get_robust_list","SYS_get_thread_area","SYS_getcpu","SYS_getcwd","SYS_getdents","SYS_getdents64","SYS_getegid","SYS_geteuid","SYS_getgid","SYS_getgroups","SYS_getitimer","SYS_getpeername","SYS_getpgid","SYS_getpgrp","SYS_getpid","SYS_getpmsg","SYS_getppid","SYS_getpriority","SYS_getrandom","SYS_getresgid","SYS_getresuid","SYS_getrlimit","SYS_getrusage","SYS_getsid","SYS_getsockname","SYS_getsockopt","SYS_gettid","SYS_gettimeofday","SYS_getuid","SYS_getxattr","SYS_init_module","SYS_inotify_add_watch","SYS_inotify_init","SYS_inotify_init1","SYS_inotify_rm_watch","SYS_io_cancel","SYS_io_destroy","SYS_io_getevents","SYS_io_setup","SYS_io_submit","SYS_io_uring_enter","SYS_io_uring_register","SYS_io_uring_setup","SYS_ioctl","SYS_ioperm","SYS_iopl","SYS_ioprio_get","SYS_ioprio_set","SYS_kcmp","SYS_kexec_file_load","SYS_kexec_load","SYS_keyctl","SYS_kill","SYS_lchown","SYS_lgetxattr","SYS_link","SYS_linkat","SYS_listen","SYS_listxattr","SYS_llistxattr","SYS_lookup_dcookie","SYS_lremovexattr","SYS_lseek","SYS_lsetxattr","SYS_lstat","SYS_madvise","SYS_mbind","SYS_membarrier","SYS_memfd_create","SYS_migrate_pages","SYS_mincore","SYS_mkdir","SYS_mkdirat","SYS_mknod","SYS_mknodat","SYS_mlock","SYS_mlock2","SYS_mlockall","SYS_mmap","SYS_modify_ldt","SYS_mount","SYS_mount_setattr","SYS_move_mount","SYS_move_pages","SYS_mprotect","SYS_mq_getsetattr","SYS_mq_notify","SYS_mq_open","SYS_mq_timedreceive","SYS_mq_timedsend","SYS_mq_unlink","SYS_mremap","SYS_msgctl","SYS_msgget","SYS_msgrcv","SYS_msgsnd","SYS_msync","SYS_munlock","SYS_munlockall","SYS_munmap","SYS_name_to_handle_at","SYS_nanosleep","SYS_newfstatat","SYS_nfsservctl","SYS_open","SYS_open_by_handle_at","SYS_open_tree","SYS_openat","SYS_openat2","SYS_pause","SYS_perf_event_open","SYS_personality","SYS_pidfd_getfd","SYS_pidfd_open","SYS_pidfd_send_signal","SYS_pipe","SYS_pipe2","SYS_pivot_root","SYS_pkey_alloc","SYS_pkey_free","SYS_pkey_mprotect","SYS_poll","SYS_ppoll","SYS_prctl","SYS_pread64","SYS_preadv","SYS_preadv2","SYS_prlimit64","SYS_process_madvise","SYS_process_vm_readv","SYS_process_vm_writev","SYS_pselect6","SYS_ptrace","SYS_putpmsg","SYS_pwrite64","SYS_pwritev","SYS_pwritev2","SYS_query_module","SYS_quotactl","SYS_read","SYS_readahead","SYS_readlink","SYS_readlinkat","SYS_readv","SYS_reboot","SYS_recvfrom","SYS_recvmmsg","SYS_recvmsg","SYS_remap_file_pages","SYS_removexattr","SYS_rename","SYS_renameat","SYS_renameat2","SYS_request_key","SYS_restart_syscall","SYS_rmdir","SYS_rt_sigaction","SYS_rt_sigpending","SYS_rt_sigprocmask","SYS_rt_sigqueueinfo","SYS_rt_sigreturn","SYS_rt_sigsuspend","SYS_rt_sigtimedwait","SYS_rt_tgsigqueueinfo","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_getaffinity","SYS_sched_getattr","SYS_sched_getparam","SYS_sched_getscheduler","SYS_sched_rr_get_interval","SYS_sched_setaffinity","SYS_sched_setattr","SYS_sched_setparam","SYS_sched_setscheduler","SYS_sched_yield","SYS_seccomp","SYS_security","SYS_select","SYS_semctl","SYS_semget","SYS_semop","SYS_semtimedop","SYS_sendfile","SYS_sendmmsg","SYS_sendmsg","SYS_sendto","SYS_set_mempolicy","SYS_set_robust_list","SYS_set_thread_area","SYS_set_tid_address","SYS_setdomainname","SYS_setfsgid","SYS_setfsuid","SYS_setgid","SYS_setgroups","SYS_sethostname","SYS_setitimer","SYS_setns","SYS_setpgid","SYS_setpriority","SYS_setregid","SYS_setresgid","SYS_setresuid","SYS_setreuid","SYS_setrlimit","SYS_setsid","SYS_setsockopt","SYS_settimeofday","SYS_setuid","SYS_setxattr","SYS_shmat","SYS_shmctl","SYS_shmdt","SYS_shmget","SYS_shutdown","SYS_sigaltstack","SYS_signalfd","SYS_signalfd4","SYS_socket","SYS_socketpair","SYS_splice","SYS_stat","SYS_statfs","SYS_statx","SYS_swapoff","SYS_swapon","SYS_symlink","SYS_symlinkat","SYS_sync","SYS_sync_file_range","SYS_syncfs","SYS_sysfs","SYS_sysinfo","SYS_syslog","SYS_tee","SYS_tgkill","SYS_time","SYS_timer_create","SYS_timer_delete","SYS_timer_getoverrun","SYS_timer_gettime","SYS_timer_settime","SYS_timerfd_create","SYS_timerfd_gettime","SYS_timerfd_settime","SYS_times","SYS_tkill","SYS_truncate","SYS_tuxcall","SYS_umask","SYS_umount2","SYS_uname","SYS_unlink","SYS_unlinkat","SYS_unshare","SYS_uselib","SYS_userfaultfd","SYS_ustat","SYS_utime","SYS_utimensat","SYS_utimes","SYS_vfork","SYS_vhangup","SYS_vmsplice","SYS_vserver","SYS_wait4","SYS_waitid","SYS_write","SYS_writev","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCA_CHAIN","TCA_DUMP_INVISIBLE","TCA_FCNT","TCA_HW_OFFLOAD","TCA_KIND","TCA_OPTIONS","TCA_PAD","TCA_RATE","TCA_STAB","TCA_STATS","TCA_STATS2","TCA_UNSPEC","TCA_XSTATS","TCFLSH","TCGETA","TCGETS","TCGETS2","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_CC_INFO","TCP_CM_INQ","TCP_CONGESTION","TCP_COOKIE_TRANSACTIONS","TCP_CORK","TCP_DEFER_ACCEPT","TCP_FASTOPEN","TCP_FASTOPEN_CONNECT","TCP_FASTOPEN_KEY","TCP_FASTOPEN_NO_COOKIE","TCP_INFO","TCP_INQ","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MD5SIG","TCP_MD5SIG_EXT","TCP_NODELAY","TCP_NOTSENT_LOWAT","TCP_QUEUE_SEQ","TCP_QUICKACK","TCP_REPAIR","TCP_REPAIR_OPTIONS","TCP_REPAIR_QUEUE","TCP_REPAIR_WINDOW","TCP_SAVED_SYN","TCP_SAVE_SYN","TCP_SYNCNT","TCP_THIN_DUPACK","TCP_THIN_LINEAR_TIMEOUTS","TCP_TIMESTAMP","TCP_ULP","TCP_USER_TIMEOUT","TCP_WINDOW_CLAMP","TCP_ZEROCOPY_RECEIVE","TCSADRAIN","TCSAFLUSH","TCSANOW","TCSBRK","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCXONC","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","THOUSEP","TIMER_ABSTIME","TIME_BAD","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGPGRP","TIOCGRS485","TIOCGSERIAL","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNXCL","TIOCOUTQ","TIOCSBRK","TIOCSCTTY","TIOCSPGRP","TIOCSRS485","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TMPFS_MAGIC","TMP_MAX","TOSTOP","TRACEFS_MAGIC","TUN_READQ_SIZE","TUN_TAP_DEV","TUN_TUN_DEV","TUN_TYPE_MASK","T_FMT","T_FMT_AMPM","UDF_SUPER_MAGIC","UDP_CORK","UDP_ENCAP","UDP_GRO","UDP_NO_CHECK6_RX","UDP_NO_CHECK6_TX","UDP_SEGMENT","UINPUT_MAX_NAME_SIZE","UINPUT_VERSION","UIO_MAXIOV","UNAME26","USBDEVICE_SUPER_MAGIC","USER_PROCESS","USRQUOTA","UTIME_NOW","UTIME_OMIT","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_LOCAL","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WHOLE_SECONDS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_EXITCODE","W_OK","W_STOPCODE","XATTR_CREATE","XATTR_REPLACE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","YESEXPR","YESSTR","_IOFBF","_IOLBF","_IONBF","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_POSIX_VDISABLE","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__NFT_REG_MAX","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__UT_HOSTSIZE","__UT_LINESIZE","__UT_NAMESIZE","__WALL","__WCLONE","__WNOTHREAD","__c_anonymous_sockaddr_can_can_addr","__c_anonymous_sockaddr_can_j1939","__c_anonymous_sockaddr_can_tp","__errno_location","__exit_status","__fsword_t","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","__key","__priority_which_t","__rlimit_resource_t","__s16","__s32","__seq","__statx_timestamp_pad1","__syscall_ulong_t","__timeval","__u16","__u32","__u64","__u8","__unused1","__unused10","__unused11","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","_exit","_f","_libc_fpstate","_libc_fpxreg","_libc_xmmreg","_st","_xmm","abort","abs","absflat","absfuzz","absinfo","absmax","absmin","accept","accept4","access","acct","actime","addmntent","addr","addrinfo","adjtimex","af_alg_iv","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arch","arena","arena","args","arp_dev","arp_flags","arp_flags","arp_ha","arp_ha","arp_netmask","arp_netmask","arp_pa","arp_pa","arpd_request","arphdr","arpreq","arpreq_old","atexit","atof","atoi","attack_length","attack_level","backtrace","bind","blkcnt64_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","bufferram","bustype","button","c_cc","c_cc","c_cflag","c_cflag","c_char","c_double","c_float","c_iflag","c_iflag","c_int","c_ispeed","c_ispeed","c_lflag","c_lflag","c_line","c_line","c_long","c_longlong","c_oflag","c_oflag","c_ospeed","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","can_addr","can_dlc","can_err_mask_t","can_family","can_filter","can_frame","can_id","can_id","can_id","can_ifindex","can_mask","canfd_frame","canid_t","cc_t","center","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_type","ch_type","chdir","chmod","chown","chroot","clearenv","clearerr","clock_adjtime","clock_getcpuclockid","clock_getres","clock_gettime","clock_nanosleep","clock_settime","clock_t","clockid","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","close","closedir","closelog","cmd","cmsg_len","cmsg_level","cmsg_type","cmsghdr","code","code","code","codes_ptr","codes_size","connect","constant","cookie","copy_file_range","cpu_set_t","creat","creat64","cs","ctermid","cuid","currency_symbol","custom_data","custom_len","cwd","cwd","d_ino","d_ino","d_name","d_name","d_off","d_off","d_reclen","d_reclen","d_type","d_type","daemon","data","data","deadband","decimal_point","delay","dev","dev_t","difftime","direction","dirent","dirent64","dirfd","dl_iterate_phdr","dl_phdr_info","dladdr","dladdr1","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlinfo","dlmopen","dlopen","dlpi_addr","dlpi_adds","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_subs","dlpi_tls_data","dlpi_tls_modid","dlsym","domainname","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curinodes","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_valid","dqblk","ds","dup","dup2","dup3","duplocale","e_ehsize","e_ehsize","e_entry","e_entry","e_exit","e_flags","e_flags","e_ident","e_ident","e_machine","e_machine","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_termination","e_type","e_type","e_version","e_version","ee_code","ee_data","ee_errno","ee_info","ee_origin","ee_pad","ee_type","effect","effect_id","eflags","element","end_level","endgrent","endmntent","endpwent","endservent","endspent","endutxent","envelope","envelope","envelope","epoll_create","epoll_create1","epoll_ctl","epoll_event","epoll_pwait","epoll_wait","errcnt","error","es","esterror","esterror","event_len","eventfd","events","events","execl","execle","execlp","execv","execve","execvp","execvpe","exit","explicit_bzero","exponent","f_bavail","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_bsize","f_favail","f_favail","f_ffree","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_files","f_flag","f_flag","f_flags","f_frsize","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namemax","f_namemax","f_spare","f_type","f_type","faccessat","fade_length","fade_level","fallocate","fallocate64","fanotify_event_metadata","fanotify_init","fanotify_mark","fanotify_response","fchdir","fchmod","fchmodat","fchown","fchownat","fclose","fcntl","fd","fd","fd","fd_set","fdatasync","fdopen","fdopendir","feof","ferror","fexecve","ff_condition_effect","ff_constant_effect","ff_effect","ff_effects_max","ff_effects_max","ff_envelope","ff_periodic_effect","ff_ramp_effect","ff_replay","ff_rumble_effect","ff_trigger","fflush","fgetc","fgetpos","fgetpos64","fgets","fgetspent_r","fgetxattr","fileno","filter","flags","flags","flags","flags","flat","flistxattr","flock","flock","flock64","fmemopen","fmt","fop","fop","fopen","fopen64","fordblks","fordblks","fork","forkpty","fpathconf","fpos64_t","fpos_t","fpregs","fprintf","fputc","fputs","frac_digits","fread","fread_unlocked","free","freeaddrinfo","freehigh","freeifaddrs","freelocale","freeram","freeswap","fremovexattr","freopen","freopen64","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fs_base","fsblkcnt_t","fscanf","fseek","fseeko","fseeko64","fsetpos","fsetpos64","fsetxattr","fsfilcnt_t","fsid_t","fsmblks","fsmblks","fstat","fstat64","fstatat","fstatat64","fstatfs","fstatfs64","fstatvfs","fstatvfs64","fsync","ftell","ftello","ftello64","ftok","ftruncate","ftruncate64","ftw","ftw","futimens","futimes","fuzz","fwrite","gai_strerror","genlmsghdr","getaddrinfo","getauxval","getchar","getchar_unlocked","getcontext","getcwd","getdomainname","getdtablesize","getegid","getenv","geteuid","getgid","getgrent","getgrent_r","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","getifaddrs","getline","getloadavg","getlogin","getmntent","getnameinfo","getopt","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprotobyname","getprotobynumber","getpt","getpwent","getpwent_r","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrandom","getresgid","getresuid","getrlimit","getrlimit64","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","getspent","getspent_r","getspnam","getspnam_r","gettid","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid","gid_t","gl_flags","gl_flags","gl_offs","gl_offs","gl_pathc","gl_pathc","gl_pathv","gl_pathv","glob","glob64","glob64_t","glob_t","globfree","globfree64","gmtime","gmtime_r","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","greg_t","gregs","group","group","grouping","gs","gs_base","h_addr_list","h_addrtype","h_aliases","h_length","h_name","ha","hasmntopt","hblkhd","hblkhd","hblks","hblks","hostent","hstrerror","i387","iconv","iconv_close","iconv_open","iconv_t","id","id","id","id_t","idtype_t","if_freenameindex","if_index","if_indextoname","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_flags","ifa_ifu","ifa_name","ifa_netmask","ifa_next","ifaddrs","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_pktinfo","in6_rtmsg","in_addr","in_addr_t","in_pktinfo","in_port_t","index","initgroups","ino64_t","ino_t","inotify_add_watch","inotify_event","inotify_init","inotify_init1","inotify_rm_watch","input_absinfo","input_event","input_id","input_keymap_entry","input_mask","instruction_pointer","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","interval","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","ioperm","iopl","iov_base","iov_len","iovec","ip","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_interval","it_value","it_value","itimerspec","itimerval","iv","ivlen","j1939","jf","jitcnt","jitter","jt","k","keepcost","keepcost","key_t","keycode","kill","killpg","l_len","l_len","l_linger","l_onoff","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","labs","lchown","lconv","left_coeff","left_saturation","len","len","len","len","length","level","lgetxattr","linger","link","linkat","lio_listio","listen","listxattr","llistxattr","loads","locale_t","localeconv","localtime","localtime_r","lockf","loff_t","login_tty","lremovexattr","lseek","lseek64","lsetxattr","lstat","lstat64","lutimes","machine","madvise","magic","magnitude","major","makecontext","makedev","mallinfo","mallinfo","mallinfo2","mallinfo2","malloc","malloc_info","malloc_usable_size","mallopt","mask","mask","max_align_t","maxerror","maxerror","maximum","mcontext_t","mem_unit","memalign","memchr","memcmp","memcpy","memfd_create","memmem","memmove","memrchr","memset","metadata_len","mincore","minimum","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkostemp","mkostemps","mkstemp","mkstemps","mktime","mlock","mlock2","mlockall","mmap","mmap64","mmsghdr","mnt_dir","mnt_freq","mnt_fsname","mnt_opts","mnt_passno","mnt_type","mntent","mode","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mq_attr","mq_close","mq_curmsgs","mq_flags","mq_getattr","mq_maxmsg","mq_msgsize","mq_open","mq_receive","mq_send","mq_setattr","mq_timedreceive","mq_timedsend","mq_unlink","mqd_t","mr_address","mr_alen","mr_ifindex","mr_type","mremap","msg","msg_control","msg_controllen","msg_ctime","msg_flags","msg_hdr","msg_iov","msg_iovlen","msg_len","msg_lrpid","msg_lspid","msg_name","msg_namelen","msg_perm","msg_qbytes","msg_qnum","msg_rtime","msg_stime","msgctl","msgget","msghdr","msginfo","msglen_t","msgmap","msgmax","msgmnb","msgmni","msgpool","msgqnum_t","msgrcv","msgseg","msgsnd","msgssz","msgtql","msqid_ds","msync","munlock","munlockall","munmap","mxcr_mask","mxcr_mask","mxcsr","mxcsr","n_cs_precedes","n_sep_by_space","n_sign_posn","name","name","name","nanosleep","negative_sign","newlocale","nfds_t","nice","nl_family","nl_groups","nl_item","nl_langinfo","nl_langinfo_l","nl_mmap_hdr","nl_mmap_req","nl_pid","nl_pktinfo","nla_len","nla_type","nlattr","nlink_t","nlmsg_flags","nlmsg_len","nlmsg_pid","nlmsg_seq","nlmsg_type","nlmsgerr","nlmsghdr","nm_block_nr","nm_block_size","nm_frame_nr","nm_frame_size","nm_gid","nm_group","nm_len","nm_pid","nm_status","nm_uid","nodename","nr","ntp_adjtime","ntp_gettime","ntptimeval","off64_t","off_t","offset","offset","old","open","open64","open_how","open_memstream","open_wmemstream","openat","openat64","opendir","openlog","openpty","ordblks","ordblks","orig_rax","p_aliases","p_align","p_align","p_cs_precedes","p_filesz","p_filesz","p_flags","p_flags","p_memsz","p_memsz","p_name","p_offset","p_offset","p_paddr","p_paddr","p_proto","p_sep_by_space","p_sign_posn","p_type","p_type","p_vaddr","p_vaddr","packet_mreq","pad","passwd","pathconf","pause","pclose","period","perror","personality","pgn","phase","pid","pid","pid_t","pipe","pipe2","poll","pollfd","popen","positive_sign","posix_fadvise","posix_fadvise64","posix_fallocate","posix_fallocate64","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addopen","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getschedparam","posix_spawnattr_getschedpolicy","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setschedparam","posix_spawnattr_setschedpolicy","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppoll","ppsfreq","prctl","pread","pread64","preadv","preadv2","preadv64","preadv64v2","precision","printf","prlimit","prlimit64","process_vm_readv","process_vm_writev","procs","product","protoent","pselect","pthread_atfork","pthread_attr_destroy","pthread_attr_getaffinity_np","pthread_attr_getguardsize","pthread_attr_getstack","pthread_attr_init","pthread_attr_setaffinity_np","pthread_attr_setdetachstate","pthread_attr_setstacksize","pthread_attr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getclock","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_condattr_t","pthread_create","pthread_detach","pthread_exit","pthread_getaffinity_np","pthread_getattr_np","pthread_getcpuclockid","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mutex_consistent","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_timedlock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getpshared","pthread_mutexattr_getrobust","pthread_mutexattr_init","pthread_mutexattr_setpshared","pthread_mutexattr_setrobust","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getkind_np","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setkind_np","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_setaffinity_np","pthread_setname_np","pthread_setschedparam","pthread_setschedprio","pthread_setspecific","pthread_sigmask","pthread_spin_destroy","pthread_spin_init","pthread_spin_lock","pthread_spin_trylock","pthread_spin_unlock","pthread_spinlock_t","pthread_t","ptrace","ptrdiff_t","ptsname","ptsname_r","putchar","putchar_unlocked","putenv","puts","pututxline","pw_dir","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwrite64","pwritev","pwritev2","pwritev64","pwritev64v2","qsort","qsort_r","quotactl","r10","r11","r12","r13","r14","r15","r8","r9","raise","rand","rax","rbp","rbx","rcx","rdi","rdp","rdp","rdx","read","readahead","readdir","readdir64","readdir64_r","readdir_r","readlink","readlinkat","readv","realloc","reallocarray","realpath","reboot","recv","recvfrom","recvmmsg","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","regs","release","remap_file_pages","remove","removexattr","rename","renameat","renameat2","replay","req","request_id","request_id","res_init","reserved","reserved","resolution","resolve","response","retval","retval","revents","rewind","rewinddir","right_coeff","right_saturation","rip","rip","rip","rlim64_t","rlim_cur","rlim_cur","rlim_max","rlim_max","rlim_t","rlimit","rlimit64","rm_eo","rm_so","rmdir","rsi","rsp","rt_class","rt_dev","rt_dst","rt_flags","rt_gateway","rt_genmask","rt_irtt","rt_metric","rt_mtu","rt_pad1","rt_pad2","rt_pad3","rt_pad4","rt_tos","rt_window","rtentry","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","rx_id","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_family","sa_family_t","sa_flags","sa_mask","sa_restorer","sa_sigaction","salg_family","salg_feat","salg_mask","salg_name","salg_type","sbrk","scancode","scanf","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getcpu","sched_getparam","sched_getscheduler","sched_param","sched_priority","sched_rr_get_interval","sched_setaffinity","sched_setparam","sched_setscheduler","sched_yield","seccomp_data","seekdir","select","sem_close","sem_ctime","sem_destroy","sem_flg","sem_getvalue","sem_init","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_perm","sem_post","sem_t","sem_timedwait","sem_trywait","sem_unlink","sem_wait","semaem","sembuf","semctl","semget","semid_ds","seminfo","semmap","semmni","semmns","semmnu","semmsl","semop","semopm","semume","semusz","semvmx","send","sendfile","sendfile64","sendmmsg","sendmsg","sendto","servent","setbuf","setcontext","setdomainname","setegid","setenv","seteuid","setfsgid","setfsuid","setgid","setgrent","setgroups","sethostid","sethostname","setlocale","setlogmask","setmntent","setns","setpgid","setpriority","setpwent","setregid","setresgid","setresuid","setreuid","setrlimit","setrlimit64","setservent","setsid","setsockopt","setspent","settimeofday","setuid","setutxent","setvbuf","setxattr","sgetspent_r","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_info","sh_info","sh_link","sh_link","sh_name","sh_name","sh_offset","sh_offset","sh_size","sh_size","sh_type","sh_type","sharedram","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_code","si_errno","si_pid","si_signo","si_status","si_stime","si_uid","si_utime","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_thread_id","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","signal","signalfd","signalfd_siginfo","significand","sigpending","sigprocmask","sigset_t","sigsuspend","sigtimedwait","sigval","sigwait","sigwaitinfo","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","sival_ptr","size_t","sleep","sll_addr","sll_family","sll_halen","sll_hatype","sll_ifindex","sll_pkttype","sll_protocol","smblks","smblks","snprintf","sock_extended_err","sock_filter","sock_fprog","sock_txtime","sockaddr","sockaddr_alg","sockaddr_can","sockaddr_in","sockaddr_in6","sockaddr_ll","sockaddr_nl","sockaddr_storage","sockaddr_un","sockaddr_vm","socket","socketpair","socklen_t","sp_expire","sp_flag","sp_inact","sp_lstchg","sp_max","sp_min","sp_namp","sp_pwdp","sp_warn","speed_t","splice","sprintf","spwd","srand","ss","ss_family","ss_flags","ss_size","ss_sp","sscanf","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","ssize_t","st_atime","st_atime","st_atime_nsec","st_atime_nsec","st_blksize","st_blksize","st_blocks","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_info","st_info","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_mtime_nsec","st_name","st_name","st_nlink","st_nlink","st_other","st_other","st_rdev","st_rdev","st_shndx","st_shndx","st_size","st_size","st_size","st_size","st_space","st_uid","st_uid","st_value","st_value","stabil","stack_t","stamp","start_code","start_level","start_stack","stat","stat","stat64","stat64","statfs","statfs","statfs64","statfs64","status","statvfs","statvfs","statvfs64","statvfs64","statx","statx","statx_timestamp","stbcnt","strcasecmp","strcasestr","strcat","strchr","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strong_magnitude","strpbrk","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtol","strtoul","strxfrm","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sun_family","sun_path","suseconds_t","svm_cid","svm_family","svm_port","svm_reserved1","svm_zero","swapcontext","swapoff","swapon","swd","swd","symlink","symlinkat","sync","sync_file_range","syncfs","syscall","sysconf","sysctl","sysinfo","sysinfo","syslog","sysname","system","tai","tai","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","tee","telldir","termios","termios2","thousands_sep","tick","time","time","time","time","time_t","timegm","timer_create","timer_delete","timer_getoverrun","timer_gettime","timer_settime","timer_t","timerfd_create","timerfd_gettime","timerfd_settime","times","timespec","timeval","timex","timezone","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpfile64","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","totalhigh","totalram","totalswap","toupper","tp","trigger","truncate","truncate64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tx_id","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u64","u_ar0","u_comm","u_debugreg","u_dsize","u_fpstate","u_fpvalid","u_ssize","u_tsize","uc_flags","uc_link","uc_mcontext","uc_sigmask","uc_stack","ucontext_t","ucred","uid","uid","uid_t","uinput_abs_setup","uinput_ff_erase","uinput_ff_upload","uinput_setup","uinput_user_dev","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","umount","umount2","uname","ungetc","unlink","unlinkat","unlockpt","unsetenv","unshare","uordblks","uordblks","updated","uptime","useconds_t","uselocale","user","user_fpregs_struct","user_regs_struct","usleep","usmblks","usmblks","ut_addr_v6","ut_exit","ut_host","ut_id","ut_line","ut_pid","ut_session","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpname","utmpx","utmpxname","utsname","value","value","vendor","vers","version","version","version","vfork","vhangup","vmsplice","wait","wait4","waitid","waitpid","waveform","wchar_t","wcslen","wcstombs","wd","weak_magnitude","winsize","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xmm_space"],"q":["libcdmaximum number of services provided on the same listening …uth Header","","IP Payload Comp. Protocol","DCCP","IP6 destination option","exterior gateway protocol","encapsulation header","IP6 Encap Sec. Payload","IP6 fragmentation header","General Routing Encap.","Hop-by-hop option header","","","xns idp","group mgmt protocol","","for compatibility","","","","","Multipath TCP","","IP6 no next header","Protocol indep. multicast","pup","raw IP packet","IP6 routing header","resource reservation","SCTP","","tp-4 w/ class negotiationhe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of thisquivalent to C’s <code>void</code> type when used as a pointerhe 64-bit libc on Solaris and illumos only has readdir_r. …i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,0,0,0,0,2,3,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,0,5,0,0,0,6,6,0,0,7,7,8,7,7,0,0,0,0,9,0,10,0,0,0,11,11,11,11,11,11,11,11,12,0,0,12,0,12,12,12,0,12,0,12,0,0,0,0,13,13,13,13,13,14,15,16,14,17,17,18,17,18,17,18,17,18,0,0,0,0,0,0,0,19,19,0,0,0,0,0,20,21,22,23,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,11,46,47,48,49,50,51,52,53,54,17,18,13,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,19,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,10,112,113,114,14,115,116,117,118,119,120,121,122,7,123,124,125,126,127,128,3,12,129,130,131,132,133,134,15,16,135,136,137,138,4,1,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,20,21,22,23,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,11,46,47,48,49,50,51,52,53,54,17,18,13,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,19,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,10,112,113,114,14,115,116,117,118,119,120,121,122,7,123,124,125,126,127,128,3,12,129,130,131,132,133,134,15,16,135,136,137,138,4,1,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,0,0,5,76,81,134,170,134,170,0,0,0,134,170,0,134,170,134,170,134,170,0,0,134,170,134,170,0,0,0,0,0,0,0,0,4,0,127,178,0,127,0,0,112,178,179,127,112,0,0,0,84,0,0,0,0,0,0,2,140,141,140,140,141,140,141,0,0,0,0,0,0,0,0,0,0,0,0,0,125,0,0,20,21,22,23,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,11,46,47,48,49,50,51,52,53,54,17,18,13,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,19,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,10,112,113,114,14,115,116,117,118,119,120,121,122,7,123,124,125,126,127,128,3,12,129,130,131,132,133,134,15,16,135,136,137,138,4,1,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,0,0,0,103,133,133,133,0,75,8,113,79,79,0,4,106,0,0,0,0,160,0,2,51,85,85,6,165,119,120,119,120,119,120,119,120,119,120,0,178,179,84,51,80,105,0,0,87,0,0,0,0,0,0,0,0,0,50,50,50,50,0,0,0,90,90,90,90,90,90,90,90,0,59,66,66,66,66,66,66,66,66,66,0,160,0,0,0,0,91,92,91,92,129,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,129,91,92,91,92,110,110,110,110,110,110,110,88,89,160,159,83,0,0,0,0,0,0,82,83,85,0,0,0,0,0,0,4,116,160,4,1,174,0,31,56,0,0,0,0,0,0,0,0,0,158,148,155,156,167,148,155,156,167,148,155,156,167,148,155,156,167,156,167,148,155,156,167,148,155,156,167,156,167,155,148,155,156,167,148,155,156,167,148,155,156,167,155,148,155,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,31,107,174,0,0,0,0,0,0,0,0,0,0,122,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,78,125,179,180,77,0,0,0,0,0,182,6,165,0,0,15,16,0,0,0,0,0,162,0,0,0,51,0,0,0,0,5,0,0,5,5,0,0,0,4,20,21,22,23,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,11,46,47,48,49,50,51,52,53,54,17,18,13,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,19,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,10,112,113,114,14,115,116,117,118,119,120,121,122,7,123,124,125,126,127,128,3,12,129,130,131,132,133,134,15,16,135,136,137,138,4,1,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,160,160,0,0,0,0,0,0,0,0,0,0,15,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,165,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,2,0,63,131,63,131,63,131,63,131,0,0,0,0,0,0,0,0,23,23,23,23,0,0,162,0,135,51,160,160,29,29,29,29,29,105,0,15,16,15,16,0,0,161,0,0,0,0,87,122,7,0,0,0,72,0,72,0,0,0,53,53,53,53,53,53,53,0,164,164,41,42,41,42,164,42,0,0,0,0,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,51,51,51,51,51,51,51,51,81,0,20,21,22,23,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,11,46,47,48,49,50,51,52,53,54,17,18,13,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,19,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,10,112,113,114,14,115,116,117,118,119,120,121,122,7,123,124,125,126,127,128,3,12,129,130,131,132,133,134,15,16,135,136,137,138,4,1,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,0,0,0,0,30,30,0,105,0,0,0,0,104,104,52,52,52,0,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,35,68,35,68,0,0,123,123,126,113,4,4,113,113,15,16,0,78,0,0,149,150,33,33,149,150,149,150,149,150,149,150,0,0,0,84,84,78,106,114,179,80,82,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,161,85,0,0,0,0,0,0,0,0,0,0,0,106,174,0,4,1,77,0,5,0,0,0,0,0,0,0,0,0,174,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,100,100,100,100,100,0,2,180,0,4,9,51,51,51,0,0,0,0,124,124,0,124,124,0,0,0,0,0,0,0,0,70,70,70,70,0,116,132,132,145,132,55,132,132,55,145,145,132,132,145,145,145,145,145,0,0,0,0,0,73,73,73,73,73,0,0,73,0,73,73,0,0,0,0,0,6,165,6,165,51,51,51,10,122,7,0,51,0,0,0,118,118,0,0,0,0,0,118,0,117,117,0,0,115,115,115,115,115,0,0,136,136,136,136,137,137,137,137,137,137,59,14,0,0,0,0,0,85,4,88,0,0,0,0,0,0,0,0,0,0,15,16,160,38,95,96,51,95,96,95,96,95,96,38,95,96,95,96,38,51,51,95,96,95,96,0,5,0,0,0,0,85,0,0,10,85,99,174,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,5,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,160,160,160,160,160,160,160,160,0,0,160,160,160,160,160,6,165,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,161,59,0,0,0,0,0,0,87,105,88,89,0,103,174,77,180,107,88,89,31,0,0,84,84,6,160,165,0,26,62,26,62,0,0,0,109,109,0,160,160,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,111,181,40,37,37,37,37,43,43,0,147,147,147,147,121,121,121,121,121,0,78,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,146,0,74,0,0,146,74,74,0,146,146,0,0,0,0,0,0,142,0,0,0,0,0,142,142,142,142,142,0,142,142,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,98,97,98,97,98,97,98,97,98,97,98,97,98,97,98,97,98,97,98,5,4,163,163,163,163,163,163,0,163,163,0,0,0,0,0,0,0,0,151,151,151,151,151,151,151,151,151,151,0,0,0,0,0,0,60,60,60,60,0,0,0,0,0,0,161,0,0,158,0,0,0,0,0,0,0,0,45,45,45,45,45,44,44,44,44,34,0,0,46,46,46,46,46,46,46,15,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,65,65,65,65,65,0,0,0,0,0,160,58,152,152,152,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,153,154,153,154,153,154,153,154,153,154,153,154,153,154,153,154,93,94,153,154,153,154,153,154,153,154,93,94,153,154,93,94,153,154,93,94,93,94,153,154,165,153,154,93,94,4,0,105,161,83,161,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,57,57,0,108,108,108,108,108,0,0,0,6,165,0,0,0,0,0,0,0,0,0,0,0,59,0,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,4,0,75,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,36,36,36,36,4,0,5,5,5,0,126,87,0,0,20,21,22,23,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,11,46,47,48,49,50,51,52,53,54,17,18,13,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,19,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,10,112,113,114,14,115,116,117,118,119,120,121,122,7,123,124,125,126,127,128,3,12,129,130,131,132,133,134,15,16,135,136,137,138,4,1,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,20,21,22,23,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,11,46,47,48,49,50,51,52,53,54,17,18,13,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,19,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,10,112,113,114,14,115,116,117,118,119,120,121,122,7,123,124,125,126,127,128,3,12,129,130,131,132,133,134,15,16,135,136,137,138,4,1,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,0,0,25,3,24,25,3,130,24,130,111,75,79,87,20,21,22,23,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,11,46,47,48,49,50,51,52,53,54,17,18,13,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,19,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,10,112,113,114,14,115,116,117,118,119,120,121,122,7,123,124,125,126,127,128,3,12,129,130,131,132,133,134,15,16,135,136,137,138,4,1,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,87,56,161,161,161,161,161,161,161,161,166,166,166,166,166,0,0,99,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,16,105,5,0,0,0,0,0,0,15,16,143,143,143,143,143,143,143,143,143,143,0,0,0,0,0,0,0,0,75,77,76,174,59,76,103,0,0,0,0,0,0,0,85,0,0,0,106,86,0,0,0,0,32,32,32,32,165],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["c_uint",6]],["c_uint",6]],[[]],[[["c_uint",6]],["c_uint",6]],null,null,null,[[["c_int",6]],["size_t",6]],[[["usize",15],["cpu_set_t",3]]],[[["cpu_set_t",3]],["c_int",6]],[[["usize",15],["cpu_set_t",3]],["c_int",6]],[[["cpu_set_t",3]],["bool",15]],[[["usize",15],["cpu_set_t",3]],["bool",15]],[[["usize",15],["cpu_set_t",3]]],null,[[["cpu_set_t",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]]],[[["c_int",6]],["bool",15]],[[["c_int",6]]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]],["u8",15]],null,null,[[["u8",15]],["u8",15]],null,null,null,null,null,null,null,null,[[["u8",15]],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]],["u8",15]],null,null,null,null,null,null,null,[[["u8",15]],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["u32",15]],null,null,null,null,null,[[["u32",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[["u8",15]],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["bool",15]],null,[[["c_int",6]],["c_int",6]],null,[[["c_int",6]],["bool",15]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["bool",15]],null,null,null,[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],null,[[["c_int",6]],["c_int",6]],null,[[["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["dir",4]],[[],["file",4]],[[],["fpos_t",4]],[[],["group",3]],[[],["utimbuf",3]],[[],["timeval",3]],[[],["timespec",3]],[[],["rlimit",3]],[[],["rusage",3]],[[],["ipv6_mreq",3]],[[],["hostent",3]],[[],["iovec",3]],[[],["pollfd",3]],[[],["winsize",3]],[[],["linger",3]],[[],["sigval",3]],[[],["itimerval",3]],[[],["tms",3]],[[],["servent",3]],[[],["protoent",3]],[[],["timezone",4]],[[],["in_addr",3]],[[],["ip_mreq",3]],[[],["ip_mreq_source",3]],[[],["sockaddr",3]],[[],["sockaddr_in",3]],[[],["sockaddr_in6",3]],[[],["addrinfo",3]],[[],["sockaddr_ll",3]],[[],["fd_set",3]],[[],["tm",3]],[[],["sched_param",3]],[[],["dl_info",3]],[[],["lconv",3]],[[],["in_pktinfo",3]],[[],["ifaddrs",3]],[[],["in6_rtmsg",3]],[[],["arpreq",3]],[[],["arpreq_old",3]],[[],["arphdr",3]],[[],["mmsghdr",3]],[[],["epoll_event",3]],[[],["sockaddr_un",3]],[[],["sockaddr_storage",3]],[[],["utsname",3]],[[],["sigevent",3]],[[],["fpos64_t",4]],[[],["rlimit64",3]],[[],["glob_t",3]],[[],["passwd",3]],[[],["spwd",3]],[[],["dqblk",3]],[[],["signalfd_siginfo",3]],[[],["itimerspec",3]],[[],["fsid_t",3]],[[],["packet_mreq",3]],[[],["cpu_set_t",3]],[[],["if_nameindex",3]],[[],["msginfo",3]],[[],["sembuf",3]],[[],["input_event",3]],[[],["input_id",3]],[[],["input_absinfo",3]],[[],["input_keymap_entry",3]],[[],["input_mask",3]],[[],["ff_replay",3]],[[],["ff_trigger",3]],[[],["ff_envelope",3]],[[],["ff_constant_effect",3]],[[],["ff_ramp_effect",3]],[[],["ff_condition_effect",3]],[[],["ff_periodic_effect",3]],[[],["ff_rumble_effect",3]],[[],["ff_effect",3]],[[],["uinput_ff_upload",3]],[[],["uinput_ff_erase",3]],[[],["uinput_abs_setup",3]],[[],["dl_phdr_info",3]],[[],["elf32_ehdr",3]],[[],["elf64_ehdr",3]],[[],["elf32_sym",3]],[[],["elf64_sym",3]],[[],["elf32_phdr",3]],[[],["elf64_phdr",3]],[[],["elf32_shdr",3]],[[],["elf64_shdr",3]],[[],["ucred",3]],[[],["mntent",3]],[[],["posix_spawn_file_actions_t",3]],[[],["posix_spawnattr_t",3]],[[],["genlmsghdr",3]],[[],["in6_pktinfo",3]],[[],["arpd_request",3]],[[],["inotify_event",3]],[[],["fanotify_response",3]],[[],["sockaddr_vm",3]],[[],["regmatch_t",3]],[[],["sock_extended_err",3]],[[],["__c_anonymous_sockaddr_can_tp",3]],[[],["__c_anonymous_sockaddr_can_j1939",3]],[[],["can_filter",3]],[[],["sock_filter",3]],[[],["sock_fprog",3]],[[],["seccomp_data",3]],[[],["nlmsghdr",3]],[[],["nlmsgerr",3]],[[],["nlattr",3]],[[],["sockaddr_nl",3]],[[],["dirent",3]],[[],["dirent64",3]],[[],["sockaddr_alg",3]],[[],["uinput_setup",3]],[[],["uinput_user_dev",3]],[[],["af_alg_iv",3]],[[],["mq_attr",3]],[[],["sock_txtime",3]],[[],["__c_anonymous_sockaddr_can_can_addr",19]],[[],["sockaddr_can",3]],[[],["statx",3]],[[],["statx_timestamp",3]],[[],["aiocb",3]],[[],["__exit_status",3]],[[],["__timeval",3]],[[],["glob64_t",3]],[[],["msghdr",3]],[[],["cmsghdr",3]],[[],["termios",3]],[[],["mallinfo",3]],[[],["mallinfo2",3]],[[],["nl_pktinfo",3]],[[],["nl_mmap_req",3]],[[],["nl_mmap_hdr",3]],[[],["rtentry",3]],[[],["timex",3]],[[],["ntptimeval",3]],[[],["regex_t",3]],[[],["elf64_chdr",3]],[[],["elf32_chdr",3]],[[],["seminfo",3]],[[],["utmpx",3]],[[],["sigset_t",3]],[[],["sysinfo",3]],[[],["msqid_ds",3]],[[],["semid_ds",3]],[[],["sigaction",3]],[[],["statfs",3]],[[],["flock",3]],[[],["flock64",3]],[[],["siginfo_t",3]],[[],["stack_t",3]],[[],["stat",3]],[[],["stat64",3]],[[],["statfs64",3]],[[],["statvfs64",3]],[[],["pthread_attr_t",3]],[[],["_libc_fpxreg",3]],[[],["_libc_xmmreg",3]],[[],["_libc_fpstate",3]],[[],["user_regs_struct",3]],[[],["user",3]],[[],["mcontext_t",3]],[[],["ipc_perm",3]],[[],["shmid_ds",3]],[[],["ip_mreqn",3]],[[],["user_fpregs_struct",3]],[[],["ucontext_t",3]],[[],["statvfs",3]],[[],["max_align_t",3]],[[],["sem_t",3]],[[],["termios2",3]],[[],["pthread_mutexattr_t",3]],[[],["pthread_rwlockattr_t",3]],[[],["pthread_condattr_t",3]],[[],["fanotify_event_metadata",3]],[[],["pthread_cond_t",3]],[[],["pthread_mutex_t",3]],[[],["pthread_rwlock_t",3]],[[],["can_frame",3]],[[],["canfd_frame",3]],[[],["open_how",3]],[[],["in6_addr",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],[["error",3],["result",4,["error"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dev_t",6]],["c_uint",6]],null,[[["c_uint",6]],["dev_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dev_t",6]],["c_uint",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,[[],["pid_t",6]],null,[[],["c_int",6]],[[],["c_long",6]],[[],["uid_t",6]],[[],["c_long",6]],[[],["sigval",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"ntptimeval"],[3,"ipc_perm"],[3,"statx_timestamp"],[3,"timex"],[3,"sysinfo"],[3,"_libc_fpstate"],[3,"uinput_user_dev"],[3,"uinput_abs_setup"],[3,"utimbuf"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"addrinfo"],[3,"aiocb"],[3,"arphdr"],[3,"seccomp_data"],[3,"mallinfo"],[3,"mallinfo2"],[3,"arpreq"],[3,"arpreq_old"],[3,"ff_envelope"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[3,"group"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[4,"timezone"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"in6_rtmsg"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[4,"fpos64_t"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"fsid_t"],[3,"packet_mreq"],[3,"cpu_set_t"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"can_filter"],[3,"sock_filter"],[3,"sock_fprog"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nlattr"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"sock_txtime"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"rtentry"],[3,"regex_t"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"seminfo"],[3,"utmpx"],[3,"sigset_t"],[3,"msqid_ds"],[3,"semid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"shmid_ds"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"max_align_t"],[3,"sem_t"],[3,"termios2"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"fanotify_event_metadata"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"can_frame"],[3,"canfd_frame"],[3,"open_how"],[3,"in6_addr"],[4,"c_void"]]},\
"libcras":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"linux_input_sys":{"doc":"","t":[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,8,17,17,18,17,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,12,12,3],"n":["ABS_MT_BLOB_ID","ABS_MT_DISTANCE","ABS_MT_ORIENTATION","ABS_MT_POSITION_X","ABS_MT_POSITION_Y","ABS_MT_PRESSURE","ABS_MT_SLOT","ABS_MT_TOOL_TYPE","ABS_MT_TOOL_X","ABS_MT_TOOL_Y","ABS_MT_TOUCH_MAJOR","ABS_MT_TOUCH_MINOR","ABS_MT_TRACKING_ID","ABS_MT_WIDTH_MAJOR","ABS_MT_WIDTH_MINOR","ABS_PRESSURE","ABS_TILT_X","ABS_TILT_Y","ABS_TOOL_WIDTH","ABS_X","ABS_Y","BTN_TOOL_FINGER","BTN_TOUCH","EV_ABS","EV_KEY","EV_REL","EV_SYN","InputEventDecoder","REL_X","REL_Y","SIZE","SYN_REPORT","absolute","absolute_x","absolute_y","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","code","decode","decode","decode","default","default","eq","eq","finger_tool","fmt","fmt","from","from","from_virtio_input_event","input_event","into","into","is_valid_mt_event","is_valid_st_event","key","multitouch_absolute_x","multitouch_absolute_y","multitouch_slot","multitouch_tracking_id","ne","ne","relative","relative_x","relative_y","syn","timestamp_fields","to_owned","to_owned","touch","try_from","try_from","try_into","try_into","type_","type_","type_id","type_id","value","value","virtio_input_event"],"q":["linux_input_sys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","Allows a raw input event of the implementor’s type to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,2,2,3,2,3,2,3,2,3,2,3,2,1,3,2,3,2,3,2,2,3,2,3,2,3,0,3,2,2,2,2,2,2,2,2,3,2,2,2,2,2,3,3,2,2,3,2,3,2,3,2,3,2,3,2,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15],["i32",15]],["virtio_input_event",3]],[[["i32",15]],["virtio_input_event",3]],[[["i32",15]],["virtio_input_event",3]],[[]],[[]],[[]],[[]],[[],["input_event",3]],[[],["virtio_input_event",3]],[[]],[[]],null,null,[[],["virtio_input_event",3]],[[],["virtio_input_event",3]],[[],["virtio_input_event",3]],[[],["input_event",3]],[[],["virtio_input_event",3]],[[["input_event",3]],["bool",15]],[[["virtio_input_event",3]],["bool",15]],[[["bool",15]],["virtio_input_event",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["virtio_input_event",3]],["input_event",3]],null,[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["u16",15],["bool",15]],["virtio_input_event",3]],[[["i32",15]],["virtio_input_event",3]],[[["i32",15]],["virtio_input_event",3]],[[["i32",15]],["virtio_input_event",3]],[[["i32",15]],["virtio_input_event",3]],[[["input_event",3]],["bool",15]],[[["virtio_input_event",3]],["bool",15]],[[["u16",15],["i32",15]],["virtio_input_event",3]],[[["i32",15]],["virtio_input_event",3]],[[["i32",15]],["virtio_input_event",3]],[[],["virtio_input_event",3]],null,[[]],[[]],[[["bool",15]],["virtio_input_event",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],null,null,null],"p":[[8,"InputEventDecoder"],[3,"virtio_input_event"],[3,"input_event"]]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["logd":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the info level.","","","","","","","","","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","","","","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[1,2,1,2,1,2,0,0,0,0,0,2,0,0,0,0,0,1,2,1,2,3,4,1,2,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,6,3,5,1,2,3,5,1,2,5,6,0,9,1,1,2,2,5,6,8,0,3,4,3,4,9,1,1,2,2,3,4,5,6,7,7,8,8,1,2,3,4,5,6,7,8,1,2,1,1,2,2,1,1,2,2,1,2,5,6,0,1,2,3,4,5,6,7,8,1,1,2,2,3,4,5,6,3,4,9,0,0,0,1,1,2,2,1,2,0,3,4,3,4,3,4,5,6,8,4,6,1,1,2,2,5,6,0,0,0,3,4,5,6,2,1,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["arguments",3]],[[["arguments",3]],["recordbuilder",3]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["record",3]],[[],["metadata",3]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[],["level",4]],[[],["levelfilter",4]],[[],["record",3]],[[],["metadata",3]],[[["level",4]],["ordering",4]],[[["levelfilter",4]],["ordering",4]],[[["metadata",3]],["ordering",4]],[[["metadatabuilder",3]],["ordering",4]],null,[[["metadata",3]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],null,[[],[["str",15],["option",4,["str"]]]],[[["str",15],["option",4,["str"]]],["recordbuilder",3]],[[],[["option",4,["str"]],["str",15]]],[[["option",4,["str"]],["str",15]],["recordbuilder",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4,["level"]],["level",4]]],[[["str",15]],[["result",4,["levelfilter"]],["levelfilter",4]]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[],["level",4]],[[["level",4]],["recordbuilder",3]],[[],["level",4]],[[["level",4]],["metadatabuilder",3]],[[],[["u32",15],["option",4,["u32"]]]],[[["u32",15],["option",4,["u32"]]],["recordbuilder",3]],[[["record",3]]],null,null,[[],["log",8]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[],["level",4]],[[],["levelfilter",4]],[[],["levelfilter",4]],[[],["metadata",3]],[[["metadata",3]],["recordbuilder",3]],[[],[["str",15],["option",4,["str"]]]],[[["str",15],["option",4,["str"]]],["recordbuilder",3]],[[],[["option",4,["str"]],["str",15]]],[[["option",4,["str"]],["str",15]],["recordbuilder",3]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["level",4]],[["option",4,["ordering"]],["ordering",4]]],[[["levelfilter",4]],[["option",4,["ordering"]],["ordering",4]]],[[["levelfilter",4]],[["option",4,["ordering"]],["ordering",4]]],[[["level",4]],[["option",4,["ordering"]],["ordering",4]]],[[["metadata",3]],[["option",4,["ordering"]],["ordering",4]]],[[["metadatabuilder",3]],[["option",4,["ordering"]],["ordering",4]]],[[["log",8]],[["result",4,["setloggererror"]],["setloggererror",3]]],[[["log",8]],[["result",4,["setloggererror"]],["setloggererror",3]]],[[["levelfilter",4]]],[[],["str",15]],[[["str",15]],["recordbuilder",3]],[[],["str",15]],[[["str",15]],["metadatabuilder",3]],[[],[["level",4],["option",4,["level"]]]],[[],["levelfilter",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"],[8,"Log"]]},\
"managed":{"doc":"A library that provides a way to logically own objects, …","t":[13,13,4,4,13,13,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Borrowed","Borrowed","Managed","ManagedSlice","Owned","Owned","SlotIndex","SlotKey","SlotMap","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_mut","hash","hash","insert","into","into","into","into","into","ne","ne","new","remove","reserve","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","0","0"],"q":["managed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","managed::Managed","","managed::ManagedSlice",""],"d":["Borrowed variant.","Borrowed variant.","A managed object.","A managed slice.","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Provides links between slots and elements.","An index into a slotmap.","Provides a slotmap based on external memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve a value by index.","Retrieve a mutable value by index.","","","Try to insert a value into the map.","","","","","","","","Create a slot map.","Remove an element.","Reserve a new entry.","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,0,0,1,2,0,0,0,1,2,3,4,5,1,2,3,4,5,4,5,4,5,4,5,1,2,1,2,4,5,1,2,4,5,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,4,5,3,3,4,5,3,1,2,3,4,5,4,5,3,3,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,6,7,8,9],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["slot",3]],[[],["key",3]],[[]],[[]],[[],["slot",3]],[[],["key",3]],[[]],[[]],[[]],[[]],[[["slot",3]],["bool",15]],[[["key",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["box",3]]],[[["vec",3]]],[[]],[[]],[[]],[[["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["key",3]],["option",4]],[[["key",3]],["option",4]],[[]],[[]],[[],[["option",4,["key"]],["key",3]]],[[]],[[]],[[]],[[]],[[]],[[["slot",3]],["bool",15]],[[["key",3]],["bool",15]],[[["slice",4,["slot"]],["slice",4],["slot",3]]],[[["key",3]],["option",4]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null],"p":[[4,"Managed"],[4,"ManagedSlice"],[3,"SlotMap"],[3,"SlotIndex"],[3,"SlotKey"],[13,"Borrowed"],[13,"Owned"],[13,"Borrowed"],[13,"Owned"]]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,0,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,3,3,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Memchr","Memchr2","Memchr3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_forward","build_reverse","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","find","find","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_owned","into_owned","needle","needle","new","new","new","next","next","prefilter","rfind","rfind","rfind_iter","rfind_iter","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["memchr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","memchr::memmem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator for <code>memchr</code>.","An iterator for <code>memchr2</code>.","An iterator for <code>memchr3</code>.","","","","","","","","","","","","","","","","Search for the first occurrence of a byte in a slice.","Like <code>memchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","This module provides forward and reverse substring search …","Search for the last occurrence of a byte in a slice.","Like <code>memrchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memrchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","Creates a new iterator that yields all positions of needle …","Creates a new iterator that yields all positions of needle …","Create a new <code>Memchr3</code> that’s initialized to zero with a …","","","","","","","","","","","","","","","","","","","Automatically detect whether a heuristic prefilter should …","An iterator over non-overlapping substring matches.","An iterator over non-overlapping substring matches in …","A single substring searcher fixed to a particular needle.","A builder for constructing non-default forward or reverse …","A single substring reverse searcher fixed to a particular …","Never used a prefilter in substring search.","Prefilter controls whether heuristics are used to …","Convert this finder into its borrowed variant.","Convert this finder into its borrowed variant.","","","","","","","","","","","","","Build a forward finder using the given needle from the …","Build a reverse finder using the given needle from the …","","","","","","","","","","","Returns the index of the first occurrence of the given …","Returns the index of the first occurrence of this needle …","Returns an iterator over all occurrences of a substring in …","Returns an iterator over all occurrences of a substring in …","","","","","","","","","","","","","","","","","","","","","Convert this finder into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Returns the needle that this finder searches for.","Returns the needle that this finder searches for.","Create a new finder for the given needle.","Create a new reverse finder for the given needle.","Create a new finder builder with default settings.","","","Configure the prefilter setting for the finder.","Returns the index of the last occurrence of the given …","Returns the index of the last occurrence of this needle in …","Returns a reverse iterator over all occurrences of a …","Returns a reverse iterator over all occurrences of a …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,0,0,0,0,0,4,0,5,6,4,7,8,5,6,9,4,7,8,5,6,9,9,9,4,5,6,9,4,5,6,9,4,9,0,5,0,5,4,7,8,5,6,9,4,7,8,5,6,9,4,7,8,5,6,9,7,8,5,6,5,6,5,6,9,7,8,9,0,6,0,6,4,5,6,9,4,7,8,5,6,9,4,7,8,5,6,9,4,7,8,5,6,9],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],[["usize",15],["option",4,["usize"]]]],[[["u8",15]],[["usize",15],["option",4,["usize"]]]],[[["u8",15]],["memchr2",3]],[[["u8",15]],[["usize",15],["option",4,["usize"]]]],[[["u8",15]],["memchr3",3]],[[["u8",15]],["memchr",3]],null,[[["u8",15]],[["usize",15],["option",4,["usize"]]]],[[["u8",15]],[["usize",15],["option",4,["usize"]]]],[[["u8",15]],[["memchr2",3],["rev",3,["memchr2"]]]],[[["u8",15]],[["usize",15],["option",4,["usize"]]]],[[["u8",15]],[["rev",3,["memchr3"]],["memchr3",3]]],[[["u8",15]],[["rev",3,["memchr"]],["memchr",3]]],[[["u8",15]],["memchr",3]],[[["u8",15]],["memchr2",3]],[[["u8",15]],["memchr3",3]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[],["finder",3]],[[],["finderrev",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["finder",3]],[[],["finderrev",3]],[[],["prefilter",4]],[[],["finder",3]],[[],["finderrev",3]],[[],["finderbuilder",3]],[[]],[[]],[[]],[[]],[[],["prefilter",4]],[[],["finderbuilder",3]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["finditer",3]],[[],["finditer",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["finder",3]],[[],["finderrev",3]],[[]],[[]],[[],["finder",3]],[[],["finderrev",3]],[[],["finderbuilder",3]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[["prefilter",4]],["finderbuilder",3]],[[],[["usize",15],["option",4,["usize"]]]],[[["asref",8]],[["usize",15],["option",4,["usize"]]]],[[],["findreviter",3]],[[],["findreviter",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"],[4,"Prefilter"],[3,"Finder"],[3,"FinderRev"],[3,"FindIter"],[3,"FindRevIter"],[3,"FinderBuilder"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":[14,14,14],"n":["offset_of","raw_field","span_of"],"q":["memoffset","",""],"d":["Calculates the offset of the specified field from the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0],"f":[null,null,null],"p":[]},\
"minijail":{"doc":"","t":[13,13,3,13,13,4,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["BindMount","CheckingMultiThreaded","Command","CreatingMinijail","DupDevNull","Error","ForkingMinijail","ForkingWhileMultiThreaded","Killed","Minijail","Mount","NoAccess","NoCommand","OpenDevNull","PathToCString","PreservingFd","ProcFd","ProgramTooLarge","ReadFdDir","ReadFdDirEntry","ReadProgram","Result","ReturnCode","SeccompPath","SeccompViolation","SetAltSyscallTable","SetRlimit","SettingChrootDirectory","SettingPivotRootDirectory","StrToCString","Wait","WrongProgramAlignment","WrongProgramSize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capbset_drop","change_gid","change_group","change_uid","change_user","drop","enter_chroot","enter_pivot_root","fmt","fmt","fork","fork_remap","from","from","from","gidmap","inherit_usergroups","into","into","into","keep_supplementary_gids","kill","log_seccomp_filter_failures","mount","mount_bind","mount_dev","mount_tmp","mount_tmp_size","mount_with_data","namespace_cgroups","namespace_ipc","namespace_net","namespace_pids","namespace_user","namespace_user_disable_setgroups","namespace_vfs","new","new_for_path","new_session_keyring","no_new_privs","parse_seccomp_filters","parse_seccomp_program","remount_proc_readonly","reset_signal_mask","run","run_as_init","run_command","run_fd","run_fd_remap","run_remap","set_ambient_caps","set_remount_mode","set_rlimit","set_seccomp_filter_tsync","set_supplementary_gids","skip_remount_private","to_string","try_clone","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uidmap","use_alt_syscall","use_caps","use_seccomp","use_seccomp_filter","wait","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","data","dest","dst","errno","errno","errno","errno","flags","fstype","kind","name","src","src"],"q":["minijail","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minijail::Error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Failure to count the number of threads in /proc/self/tasks.","Configuration of a command to be run in a jail.","minjail_new failed, this is an allocation failure.","Failed to call dup2 to set stdin, stdout, or stderr to …","","minijail_fork failed with the given error code.","Attempt to <code>fork</code> while already multithreaded.","Process was killed by a signal other than SIGSYS.","Configuration to jail a process based on wrapping …","","The command could not be run.","The command was not found.","Failed to set up /dev/null for FDs 0, 1, or 2.","The path passed in didn’t parse to a valid CString.","Minijail refused to preserve an FD in the inherit list of …","An entry in /proc/self/fd is not an integer","Program size is too large","/proc/self/fd failed to open.","There is an entry in /proc/self/fd that isn’t a valid …","Failed to read policy bpf from file.","","Process finished returning a non-zero code.","The seccomp policy path doesn’t exist.","Process was killed by SIGSYS indicating a seccomp …","Setting the specified alt-syscall table failed with errno. …","Setting the specified rlimit failed with errno.","chroot failed with the provided errno.","pivot_root failed with the provided errno.","The string passed in didn’t parse to a valid CString.","Failed to wait the process.","Alignment of file should be divisible by the alignment of …","File size should be non-zero and a multiple of sock_filter","","","","","","","","","","","","Frees the Minijail created in Minijail::new.","","","","","Forks a child and puts it in the previously configured …","Behaves the same as <code>fork()</code> except <code>inheritable_fds</code> is a …","","","","","","","","","","Send a SIGTERM to the child process and wait for its …","","","","","","","","","","","","","","","Creates a new jail configuration.","This exposes a subset of what Command can do, before we …","","","","","","","Forks and execs a child and puts it in the previously …","","A generic version of <code>run()</code> that is a super set of all …","Behaves the same as <code>run()</code> except cmd is a file descriptor …","Behaves the same as <code>run()</code> except cmd is a file descriptor …","Behaves the same as <code>run()</code> except <code>inheritable_fds</code> is a list …","","","","","","","","Clones self to a new <code>Minijail</code>. Useful because <code>fork</code> can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,2,3,1,2,3,1,3,3,3,3,3,3,3,3,1,1,3,3,2,3,1,3,3,2,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,1,2,3,1,2,3,1,3,3,3,3,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,12,13,22,22,23,23,22,24,25,22,22,25,24,23,22],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[["gid_t",6]]],[[["str",15]],["result",6]],[[["uid_t",6]]],[[["str",15]],["result",6]],[[]],[[["asref",8,["path"]],["path",3]],["result",6]],[[["asref",8,["path"]],["path",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["option",4]],[["result",6,["pid_t"]],["pid_t",6]]],[[],[["result",6,["pid_t"]],["pid_t",6]]],[[]],[[]],[[]],[[["str",15]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[]],[[["asref",8,["path"]],["usize",15],["str",15],["path",3]],["result",6]],[[["asref",8,["path"]],["path",3],["bool",15]],["result",6]],[[]],[[]],[[["usize",15]]],[[["asref",8,["path"]],["usize",15],["str",15],["path",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6,["minijail"]],["minijail",3]]],[[["asref",8,["path"]],["option",4],["path",3]],[["result",6,["command"]],["command",3]]],[[]],[[]],[[["asref",8,["path"]],["path",3]],["result",6]],[[["asref",8,["path"]],["path",3]],["result",6]],[[]],[[]],[[["asref",8,["path"]],["path",3]],[["result",6,["pid_t"]],["pid_t",6]]],[[]],[[["command",3]],[["result",6,["pid_t"]],["pid_t",6]]],[[],[["result",6,["pid_t"]],["pid_t",6]]],[[],[["result",6,["pid_t"]],["pid_t",6]]],[[["asref",8,["path"]],["path",3]],[["result",6,["pid_t"]],["pid_t",6]]],[[]],[[["c_ulong",6]]],[[["c_int",6],["rlim_t",6]],["result",6]],[[]],[[]],[[]],[[],["string",3]],[[],[["result",6,["minijail"]],["minijail",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["u64",15]]],[[]],[[]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Error"],[3,"Command"],[3,"Minijail"],[13,"CheckingMultiThreaded"],[13,"ForkingMinijail"],[13,"SeccompPath"],[13,"StrToCString"],[13,"PathToCString"],[13,"DupDevNull"],[13,"OpenDevNull"],[13,"ReadProgram"],[13,"SettingChrootDirectory"],[13,"SettingPivotRootDirectory"],[13,"ReadFdDirEntry"],[13,"ReadFdDir"],[13,"ProcFd"],[13,"PreservingFd"],[13,"SeccompViolation"],[13,"Killed"],[13,"ReturnCode"],[13,"Wait"],[13,"Mount"],[13,"BindMount"],[13,"SetAltSyscallTable"],[13,"SetRlimit"]]},\
"minijail_sys":{"doc":"","t":[13,17,13,17,13,17,13,17,13,17,13,17,13,17,13,13,13,13,6,6,6,6,6,6,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,6,11,11,11,11,11,11,11,12,12,12,12,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6],"n":["MINIJAIL_ERR_INIT","MINIJAIL_ERR_INIT","MINIJAIL_ERR_JAIL","MINIJAIL_ERR_JAIL","MINIJAIL_ERR_MOUNT","MINIJAIL_ERR_MOUNT","MINIJAIL_ERR_NO_ACCESS","MINIJAIL_ERR_NO_ACCESS","MINIJAIL_ERR_NO_COMMAND","MINIJAIL_ERR_NO_COMMAND","MINIJAIL_ERR_PRELOAD","MINIJAIL_ERR_PRELOAD","MINIJAIL_ERR_SIG_BASE","MINIJAIL_ERR_SIG_BASE","MINIJAIL_HOOK_EVENT_MAX","MINIJAIL_HOOK_EVENT_PRE_CHROOT","MINIJAIL_HOOK_EVENT_PRE_DROP_CAPS","MINIJAIL_HOOK_EVENT_PRE_EXECVE","__gid_t","__pid_t","__rlim64_t","__u16","__u32","__u8","__uid_t","_bindgen_ty_1","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","eq","eq","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","gid_t","hash","hash","into","into","into","into","into","jf","jt","k","len","minijail","minijail_add_hook","minijail_add_remount","minijail_add_to_cgroup","minijail_bind","minijail_capbset_drop","minijail_change_gid","minijail_change_group","minijail_change_uid","minijail_change_user","minijail_close_open_fds","minijail_copy_jail","minijail_create_session","minijail_destroy","minijail_enter","minijail_enter_chroot","minijail_enter_pivot_root","minijail_fork","minijail_forward_signals","minijail_get_original_path","minijail_gidmap","minijail_hook_event_t","minijail_hook_t","minijail_inherit_usergroups","minijail_keep_supplementary_gids","minijail_kill","minijail_log_seccomp_filter_failures","minijail_log_to_fd","minijail_mount","minijail_mount_dev","minijail_mount_tmp","minijail_mount_tmp_size","minijail_mount_with_data","minijail_namespace_cgroups","minijail_namespace_enter_net","minijail_namespace_enter_vfs","minijail_namespace_ipc","minijail_namespace_net","minijail_namespace_pids","minijail_namespace_pids_rw_proc","minijail_namespace_set_hostname","minijail_namespace_user","minijail_namespace_user_disable_setgroups","minijail_namespace_uts","minijail_namespace_vfs","minijail_new","minijail_new_session_keyring","minijail_no_new_privs","minijail_parse_seccomp_filters","minijail_parse_seccomp_filters_from_fd","minijail_preserve_fd","minijail_remount_mode","minijail_remount_proc_readonly","minijail_reset_signal_handlers","minijail_reset_signal_mask","minijail_rlimit","minijail_run","minijail_run_as_init","minijail_run_env_pid_pipes","minijail_run_env_pid_pipes_no_preload","minijail_run_fd_env_pid_pipes","minijail_run_no_preload","minijail_run_pid","minijail_run_pid_pipes","minijail_run_pid_pipes_no_preload","minijail_run_pipe","minijail_set_ambient_caps","minijail_set_preload_path","minijail_set_seccomp_filter_allow_speculation","minijail_set_seccomp_filter_tsync","minijail_set_seccomp_filters","minijail_set_supplementary_gids","minijail_skip_remount_private","minijail_skip_setting_securebits","minijail_uidmap","minijail_use_alt_syscall","minijail_use_caps","minijail_use_seccomp","minijail_use_seccomp_filter","minijail_wait","minijail_write_pid_file","pid_t","rlim_t","size_t","sock_filter","sock_fprog","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uid_t"],"q":["minijail_sys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"di":[1,0,1,0,1,0,1,0,1,0,1,0,1,0,2,2,2,2,0,0,0,0,0,0,0,0,3,4,1,5,2,3,4,1,5,2,4,1,5,2,4,1,5,2,3,1,2,4,4,1,5,2,3,4,1,5,2,0,1,2,3,4,1,5,2,3,3,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,5,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,2,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sock_fprog",3]],[[],["_bindgen_ty_1",4]],[[],["minijail",3]],[[],["minijail_hook_event_t",4]],[[]],[[]],[[]],[[]],null,[[["_bindgen_ty_1",4]],["bool",15]],[[["minijail_hook_event_t",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"_bindgen_ty_1"],[4,"minijail_hook_event_t"],[3,"sock_filter"],[3,"sock_fprog"],[3,"minijail"]]},\
"net_sys":{"doc":"","tn":["ARPHRD_ETHER","TUNATTACHFILTER","TUNDETACHFILTER","TUNGETFEATURES","TUNGETFILTER","TUNGETIFF","TUNGETSNDBUF","TUNGETVNETBE","TUNGETVNETHDRSZ","TUNGETVNETLE","TUNSETDEBUG","TUNSETGROUP","TUNSETIFF","TUNSETIFINDEX","TUNSETLINK","TUNSETNOCSUM","TUNSETOFFLOAD","TUNSETOWNER","TUNSETPERSIST","TUNSETQUEUE","TUNSETSNDBUF","TUNSETTXFILTER","TUNSETVNETBE","TUNSETVNETHDRSZ","TUNSETVNETLE","TUNTAP","if_tun","iff","inn","sockios","BPF_A","BPF_ABS","BPF_ADD","BPF_ALU","BPF_AND","BPF_B","BPF_DIV","BPF_H","BPF_IMM","BPF_IND","BPF_JA","BPF_JEQ","BPF_JGE","BPF_JGT","BPF_JMP","BPF_JSET","BPF_K","BPF_LD","BPF_LDX","BPF_LEN","BPF_LL_OFF","BPF_LSH","BPF_MAJOR_VERSION","BPF_MAXINSNS","BPF_MEM","BPF_MEMWORDS","BPF_MINOR_VERSION","BPF_MISC","BPF_MOD","BPF_MSH","BPF_MUL","BPF_NEG","BPF_NET_OFF","BPF_OR","BPF_RET","BPF_RSH","BPF_ST","BPF_STX","BPF_SUB","BPF_TAX","BPF_TXA","BPF_W","BPF_X","BPF_XOR","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CAN","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_TSN","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_P_XDSA","ETH_ZLEN","IFF_ATTACH_QUEUE","IFF_DETACH_QUEUE","IFF_MULTI_QUEUE","IFF_NOFILTER","IFF_NO_PI","IFF_ONE_QUEUE","IFF_PERSIST","IFF_TAP","IFF_TUN","IFF_TUN_EXCL","IFF_VNET_HDR","SKF_AD_ALU_XOR_X","SKF_AD_CPU","SKF_AD_HATYPE","SKF_AD_IFINDEX","SKF_AD_MARK","SKF_AD_MAX","SKF_AD_NLATTR","SKF_AD_NLATTR_NEST","SKF_AD_OFF","SKF_AD_PAY_OFFSET","SKF_AD_PKTTYPE","SKF_AD_PROTOCOL","SKF_AD_QUEUE","SKF_AD_RANDOM","SKF_AD_RXHASH","SKF_AD_VLAN_TAG","SKF_AD_VLAN_TAG_PRESENT","SKF_AD_VLAN_TPID","SKF_LL_OFF","SKF_NET_OFF","TUN_FLT_ALLMULTI","TUN_F_CSUM","TUN_F_TSO4","TUN_F_TSO6","TUN_F_TSO_ECN","TUN_F_UFO","TUN_PKT_STRIP","TUN_READQ_SIZE","TUN_TX_TIMESTAMP","TUN_TYPE_MASK","__BITS_PER_LONG","__FD_SETSIZE","__IncompleteArrayField","__be16","__be32","__be64","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sighandler_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__wsum","addr","as_mut_ptr","as_mut_slice","as_ptr","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","count","default","default","default","default","default","default","default","default","ethhdr","fds_bits","filter","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","h_dest","h_proto","h_source","into","into","into","into","into","into","into","into","jf","jt","k","len","new","proto","sock_filter","sock_fprog","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tun_filter","tun_pi","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","val","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_FILE","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KCM","AF_KEY","AF_LLC","AF_LOCAL","AF_MAX","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_QIPCRTR","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SMC","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","BIG_ENDIAN","BYTE_ORDER","CLOCK_DEFAULT","CLOCK_EXT","CLOCK_INT","CLOCK_TXFROMRX","CLOCK_TXINT","ENCODING_DEFAULT","ENCODING_FM_MARK","ENCODING_FM_SPACE","ENCODING_MANCHESTER","ENCODING_NRZ","ENCODING_NRZI","FD_SETSIZE","FIOGETOWN","FIOSETOWN","GENERIC_HDLC_VERSION","IFALIASZ","IFHWADDRLEN","IFNAMSIZ","IF_GET_IFACE","IF_GET_PROTO","IF_IFACE_E1","IF_IFACE_SYNC_SERIAL","IF_IFACE_T1","IF_IFACE_V24","IF_IFACE_V35","IF_IFACE_X21","IF_IFACE_X21D","IF_LINK_MODE_DEFAULT","IF_LINK_MODE_DORMANT","IF_OPER_DORMANT","IF_OPER_DOWN","IF_OPER_LOWERLAYERDOWN","IF_OPER_NOTPRESENT","IF_OPER_TESTING","IF_OPER_UNKNOWN","IF_OPER_UP","IF_PROTO_CISCO","IF_PROTO_FR","IF_PROTO_FR_ADD_ETH_PVC","IF_PROTO_FR_ADD_PVC","IF_PROTO_FR_DEL_ETH_PVC","IF_PROTO_FR_DEL_PVC","IF_PROTO_FR_ETH_PVC","IF_PROTO_FR_PVC","IF_PROTO_HDLC","IF_PROTO_HDLC_ETH","IF_PROTO_PPP","IF_PROTO_RAW","IF_PROTO_X25","LITTLE_ENDIAN","LMI_ANSI","LMI_CCITT","LMI_CISCO","LMI_DEFAULT","LMI_NONE","MSG_BATCH","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_FASTOPEN","MSG_FIN","MSG_MORE","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_PROXY","MSG_RST","MSG_SYN","MSG_TRUNC","MSG_WAITALL","MSG_WAITFORONE","MSG_ZEROCOPY","PARITY_CRC16_PR0","PARITY_CRC16_PR0_CCITT","PARITY_CRC16_PR1","PARITY_CRC16_PR1_CCITT","PARITY_CRC32_PR0_CCITT","PARITY_CRC32_PR1_CCITT","PARITY_DEFAULT","PARITY_NONE","PDP_ENDIAN","PF_ALG","PF_APPLETALK","PF_ASH","PF_ATMPVC","PF_ATMSVC","PF_AX25","PF_BLUETOOTH","PF_BRIDGE","PF_CAIF","PF_CAN","PF_DECnet","PF_ECONET","PF_FILE","PF_IB","PF_IEEE802154","PF_INET","PF_INET6","PF_IPX","PF_IRDA","PF_ISDN","PF_IUCV","PF_KCM","PF_KEY","PF_LLC","PF_LOCAL","PF_MAX","PF_MPLS","PF_NETBEUI","PF_NETLINK","PF_NETROM","PF_NFC","PF_PACKET","PF_PHONET","PF_PPPOX","PF_QIPCRTR","PF_RDS","PF_ROSE","PF_ROUTE","PF_RXRPC","PF_SECURITY","PF_SMC","PF_SNA","PF_TIPC","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_WANPIPE","PF_X25","SCM_RIGHTS","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_WIFI_STATUS","SHUT_RD","SHUT_RDWR","SHUT_WR","SIOCATMARK","SIOCGPGRP","SIOCGSTAMP","SIOCGSTAMPNS","SIOCSPGRP","SOL_AAL","SOL_ALG","SOL_ATM","SOL_BLUETOOTH","SOL_CAIF","SOL_DCCP","SOL_DECNET","SOL_IRDA","SOL_IUCV","SOL_KCM","SOL_LLC","SOL_NETBEUI","SOL_NETLINK","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_RXRPC","SOL_SOCKET","SOL_TIPC","SOL_TLS","SOL_X25","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUSY_POLL","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DOMAIN","SO_DONTROUTE","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPNS","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","_ATFILE_SOURCE","_BITS_BYTESWAP_H","_BITS_PTHREADTYPES_ARCH_H","_BITS_PTHREADTYPES_COMMON_H","_BITS_SOCKADDR_H","_BITS_STDINT_INTN_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_UINTN_IDENTITY_H","_DEFAULT_SOURCE","_ENDIAN_H","_FEATURES_H","_K_SS_MAXSIZE","_POSIX_C_SOURCE","_POSIX_SOURCE","_SS_SIZE","_STDC_PREDEF_H","_STRUCT_TIMESPEC","_SYS_CDEFS_H","_SYS_SELECT_H","_SYS_SOCKET_H","_SYS_TYPES_H","_THREAD_SHARED_TYPES_H","__BIG_ENDIAN","__BITS_PER_LONG","__BIT_TYPES_DEFINED__","__BYTE_ORDER","__FD_SETSIZE","__FD_ZERO_STOS","__FLOAT_WORD_ORDER","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC__","__GNU_LIBRARY__","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__IncompleteArrayField","__LITTLE_ENDIAN","__OFF_T_MATCHES_OFF64_T","__PDP_ENDIAN","__PTHREAD_MUTEX_HAVE_PREV","__PTHREAD_MUTEX_LOCK_ELISION","__PTHREAD_MUTEX_NUSERS_AFTER_KIND","__PTHREAD_MUTEX_USE_UNION","__PTHREAD_RWLOCK_INT_FLAGS_SHARED","__RLIM_T_MATCHES_RLIM64_T","__SIZEOF_PTHREAD_ATTR_T","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__STDC_NO_THREADS__","__SYSCALL_WORDSIZE","__UAPI_DEF_IF_IFCONF","__UAPI_DEF_IF_IFMAP","__UAPI_DEF_IF_IFNAMSIZ","__UAPI_DEF_IF_IFREQ","__UAPI_DEF_IF_NET_DEVICE_FLAGS","__UAPI_DEF_IF_NET_DEVICE_FLAGS_LOWER_UP_DORMANT_ECHO","__UAPI_DEF_IN6_ADDR","__UAPI_DEF_IN6_ADDR_ALT","__UAPI_DEF_IN6_PKTINFO","__UAPI_DEF_IN_ADDR","__UAPI_DEF_IN_CLASS","__UAPI_DEF_IN_IPPROTO","__UAPI_DEF_IN_PKTINFO","__UAPI_DEF_IP6_MTUINFO","__UAPI_DEF_IPPROTO_V6","__UAPI_DEF_IPV6_MREQ","__UAPI_DEF_IPV6_OPTIONS","__UAPI_DEF_IPX_CONFIG_DATA","__UAPI_DEF_IPX_INTERFACE_DEFINITION","__UAPI_DEF_IPX_ROUTE_DEF","__UAPI_DEF_IPX_ROUTE_DEFINITION","__UAPI_DEF_IP_MREQ","__UAPI_DEF_SOCKADDR_IN","__UAPI_DEF_SOCKADDR_IN6","__UAPI_DEF_SOCKADDR_IPX","__UAPI_DEF_XATTR","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__align","__align","__align","__align","__align","__align","__align","__align","__align","__be16","__be32","__be64","__bindgen_anon_1","__bindgen_anon_2","__blkcnt64_t","__blkcnt_t","__blksize_t","__caddr_t","__clock_t","__clock_t_defined","__clockid_t","__clockid_t_defined","__cmsg_data","__cmsg_nxthdr","__count","__cur_writer","__daddr_t","__data","__data","__data","__data","__dev_t","__elision","__fd_mask","__fds_bits","__flags","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__g1_orig_size","__g1_start","__g1_start32","__g_refs","__g_signals","__g_size","__gid_t","__glibc_c99_flexarr_available","__have_pthread_attr_t","__high","__high","__id_t","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__intmax_t","__intptr_t","__iovec_defined","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sa_family_t","__kernel_sighandler_t","__kernel_size_t","__kernel_sockaddr_storage","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__key_t","__kind","__le16","__le32","__le64","__list","__lock","__loff_t","__low","__low","__mode_t","__next","__nlink_t","__nusers","__off64_t","__off_t","__osockaddr_defined","__owner","__pad1","__pad2","__pad3","__pad4","__pid_t","__prev","__pthread_cond_s","__pthread_cond_s__bindgen_ty_1","__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","__pthread_cond_s__bindgen_ty_2","__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","__pthread_internal_list","__pthread_list_t","__pthread_mutex_s","__pthread_rwlock_arch_t","__quad_t","__readers","__rlim64_t","__rlim_t","__rwelision","__s16","__s32","__s64","__s8","__shared","__sig_atomic_t","__sigset_t","__sigset_t_defined","__size","__size","__size","__size","__size","__size","__size","__size","__size","__socket_type","__socket_type_SOCK_CLOEXEC","__socket_type_SOCK_DCCP","__socket_type_SOCK_DGRAM","__socket_type_SOCK_NONBLOCK","__socket_type_SOCK_PACKET","__socket_type_SOCK_RAW","__socket_type_SOCK_RDM","__socket_type_SOCK_SEQPACKET","__socket_type_SOCK_STREAM","__socklen_t","__spins","__ss_align","__ss_padding","__ssize_t","__sum16","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__time_t","__time_t_defined","__timer_t","__timer_t_defined","__timeval_defined","__u16","__u32","__u64","__u8","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uintmax_t","__useconds_t","__val","__val","__wrefs","__writers","__writers_futex","__wrphase_futex","__wseq","__wseq32","__wsum","_bindgen_ty_1","_bindgen_ty_2","_bindgen_ty_3","_bindgen_ty_4","_bindgen_ty_5","accept","as_mut_ptr","as_mut_slice","as_ptr","as_slice","base_addr","bind","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caddr_t","cisco","cisco_proto","clock_rate","clock_rate","clock_t","clock_type","clock_type","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmsg_len","cmsg_level","cmsg_type","cmsghdr","connect","daddr_t","dce","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dev_t","dlci","dlci","dma","encoding","fd_mask","fd_set","fds_bits","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fr","fr_proto","fr_proto_pvc","fr_proto_pvc_info","fr_pvc","fr_pvc_info","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fsfilcnt_t","fsid_t","getpeername","getsockname","getsockopt","gid_t","id_t","if_settings","if_settings__bindgen_ty_1","ifc_ifcu","ifc_len","ifconf","ifconf__bindgen_ty_1","ifcu_buf","ifcu_req","ifmap","ifr_ifrn","ifr_ifru","ifreq","ifreq__bindgen_ty_1","ifreq__bindgen_ty_2","ifrn_name","ifru_addr","ifru_broadaddr","ifru_data","ifru_dstaddr","ifru_flags","ifru_hwaddr","ifru_ivalue","ifru_map","ifru_mtu","ifru_netmask","ifru_newname","ifru_settings","ifru_slave","ifs_ifsu","ino_t","interval","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iov_base","iov_len","iovec","irq","isfdtype","key_t","l_linger","l_onoff","linger","listen","lmi","loff_t","loopback","loopback","master","mem_end","mem_start","mode_t","msg_control","msg_controllen","msg_flags","msg_iov","msg_iovlen","msg_name","msg_namelen","msghdr","n391","n392","n393","net_device_flags","net_device_flags_IFF_ALLMULTI","net_device_flags_IFF_AUTOMEDIA","net_device_flags_IFF_BROADCAST","net_device_flags_IFF_DEBUG","net_device_flags_IFF_DORMANT","net_device_flags_IFF_DYNAMIC","net_device_flags_IFF_ECHO","net_device_flags_IFF_LOOPBACK","net_device_flags_IFF_LOWER_UP","net_device_flags_IFF_MASTER","net_device_flags_IFF_MULTICAST","net_device_flags_IFF_NOARP","net_device_flags_IFF_NOTRAILERS","net_device_flags_IFF_POINTOPOINT","net_device_flags_IFF_PORTSEL","net_device_flags_IFF_PROMISC","net_device_flags_IFF_RUNNING","net_device_flags_IFF_SLAVE","net_device_flags_IFF_UP","new","nlink_t","off_t","osockaddr","parity","pid_t","port","pselect","pthread_attr_t","pthread_barrier_t","pthread_barrierattr_t","pthread_cond_t","pthread_condattr_t","pthread_key_t","pthread_mutex_t","pthread_mutexattr_t","pthread_once_t","pthread_rwlock_t","pthread_rwlockattr_t","pthread_spinlock_t","pthread_t","quad_t","raw_hdlc","raw_hdlc_proto","recv","recvfrom","recvmsg","register_t","sa_data","sa_data","sa_family","sa_family","sa_family_t","select","send","sendmsg","sendto","setsockopt","shutdown","sigset_t","size","slot_map","sockaddr","sockaddr_storage","sockatmark","socket","socketpair","socklen_t","ss_family","ss_family","suseconds_t","sync","sync_serial_settings","t391","t392","te1","te1_settings","time_t","timeout","timer_t","timespec","timeval","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_char","u_int","u_int16_t","u_int32_t","u_int64_t","u_int8_t","u_long","u_quad_t","u_short","uid_t","uint","ulong","ushort","val","INADDR_ALLHOSTS_GROUP","INADDR_ALLRTRS_GROUP","INADDR_LOOPBACK","INADDR_MAX_LOCAL_GROUP","INADDR_UNSPEC_GROUP","IN_CLASSA_HOST","IN_CLASSA_MAX","IN_CLASSA_NET","IN_CLASSA_NSHIFT","IN_CLASSB_HOST","IN_CLASSB_MAX","IN_CLASSB_NET","IN_CLASSB_NSHIFT","IN_CLASSC_HOST","IN_CLASSC_NET","IN_CLASSC_NSHIFT","IN_LOOPBACKNET","IN_MULTICAST_NET","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_GRE","IPPROTO_ICMP","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MPLS","IPPROTO_MTP","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVRETOPTS","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","_K_SS_MAXSIZE","__BITS_PER_LONG","__FD_SETSIZE","__LITTLE_ENDIAN","__SOCK_SIZE__","__UAPI_DEF_IN6_ADDR","__UAPI_DEF_IN6_ADDR_ALT","__UAPI_DEF_IN6_PKTINFO","__UAPI_DEF_IN_ADDR","__UAPI_DEF_IN_CLASS","__UAPI_DEF_IN_IPPROTO","__UAPI_DEF_IN_PKTINFO","__UAPI_DEF_IP6_MTUINFO","__UAPI_DEF_IPPROTO_V6","__UAPI_DEF_IPV6_MREQ","__UAPI_DEF_IPV6_OPTIONS","__UAPI_DEF_IP_MREQ","__UAPI_DEF_SOCKADDR_IN","__UAPI_DEF_SOCKADDR_IN6","__UAPI_DEF_XATTR","__be16","__be32","__be64","__bindgen_align","__data","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sa_family_t","__kernel_sighandler_t","__kernel_size_t","__kernel_sockaddr_storage","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__pad","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__wsum","_bindgen_ty_1","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","fds_bits","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","gf_fmode","gf_group","gf_interface","gf_numsrc","gf_slist","gr_group","gr_interface","group_filter","group_req","group_source_req","gsr_group","gsr_interface","gsr_source","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","imsf_fmode","imsf_interface","imsf_multiaddr","imsf_numsrc","imsf_slist","in_addr","in_pktinfo","into","into","into","into","into","into","into","into","into","into","into","into","into","ip_mreq","ip_mreq_source","ip_mreqn","ip_msfilter","ipi_addr","ipi_ifindex","ipi_spec_dst","s_addr","sin_addr","sin_family","sin_port","sockaddr_in","ss_family","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","val","FIOGETOWN","FIOSETOWN","SIOCADDDLCI","SIOCADDMULTI","SIOCADDRT","SIOCATMARK","SIOCBONDCHANGEACTIVE","SIOCBONDENSLAVE","SIOCBONDINFOQUERY","SIOCBONDRELEASE","SIOCBONDSETHWADDR","SIOCBONDSLAVEINFOQUERY","SIOCBRADDBR","SIOCBRADDIF","SIOCBRDELBR","SIOCBRDELIF","SIOCDARP","SIOCDELDLCI","SIOCDELMULTI","SIOCDELRT","SIOCDEVPRIVATE","SIOCDIFADDR","SIOCDRARP","SIOCETHTOOL","SIOCGARP","SIOCGHWTSTAMP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGIFVLAN","SIOCGMIIPHY","SIOCGMIIREG","SIOCGPGRP","SIOCGRARP","SIOCGSKNS","SIOCGSTAMP","SIOCGSTAMPNS","SIOCOUTQNSD","SIOCPROTOPRIVATE","SIOCRTMSG","SIOCSARP","SIOCSHWTSTAMP","SIOCSIFADDR","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNAME","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSIFVLAN","SIOCSMIIREG","SIOCSPGRP","SIOCSRARP","SIOCWANDEV","SIOGIFINDEX","SOCK_IOC_TYPE"],"q":["net_sys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","net_sys::if_tunnet_sys::iffnet_sys::innnet_sys::sockios","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"di":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,6,1,2,3,4,5,6,7,8,1,0,3,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,5,5,5,2,3,4,5,6,7,8,1,6,6,6,7,2,8,0,0,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,0,0,2,3,4,5,6,7,8,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,10,11,12,13,14,15,16,17,0,0,0,18,18,0,0,0,0,0,0,0,0,19,0,20,21,0,22,12,13,14,0,20,0,23,21,0,0,0,0,0,0,18,24,24,18,18,18,0,0,0,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,20,20,0,25,26,0,27,0,20,0,0,0,20,21,21,21,21,0,27,0,0,0,0,0,0,0,0,0,0,21,0,0,21,0,0,0,0,21,0,0,0,9,10,11,12,13,14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,20,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,30,18,21,21,21,31,31,0,0,0,0,0,0,0,32,32,32,32,33,0,0,0,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,19,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,19,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,0,51,0,43,44,0,43,44,0,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,19,19,19,0,0,0,46,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,19,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,0,47,48,33,45,0,0,34,32,34,35,36,29,30,37,38,23,21,27,20,25,26,39,40,19,41,42,43,44,45,46,47,48,49,33,51,0,0,0,51,51,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,19,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,0,0,0,0,0,0,0,0,0,0,55,55,0,0,56,56,0,52,52,0,0,0,53,54,54,54,54,54,54,54,54,54,54,54,54,54,50,0,49,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,19,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,36,36,0,33,0,0,41,41,0,0,46,0,43,44,48,33,33,0,40,40,40,40,40,40,40,0,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,45,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,0,0,39,42,39,42,0,0,0,0,0,0,0,0,50,44,0,0,0,0,0,0,22,28,0,51,0,46,46,51,0,0,49,0,0,0,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,19,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,19,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,38,37,38,37,50,32,34,35,22,36,29,30,37,38,23,21,27,20,18,31,25,24,26,9,10,11,12,13,14,15,16,17,39,28,40,19,41,42,43,44,45,46,47,48,49,33,50,51,52,53,54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,57,59,60,61,62,63,64,65,66,67,68,69,58,57,59,60,61,62,63,64,65,66,67,68,69,58,62,63,64,65,66,67,68,69,58,62,63,64,65,66,67,68,69,58,57,59,60,61,62,63,64,65,66,67,68,69,58,62,62,63,64,65,66,67,68,69,58,57,59,60,61,62,63,64,65,66,67,68,69,58,61,61,61,61,61,59,59,0,0,0,60,60,60,66,66,65,67,65,66,67,67,68,68,68,68,68,0,0,57,59,60,61,62,63,64,65,66,67,68,69,58,0,0,0,0,69,69,69,64,58,58,58,0,57,62,63,64,65,66,67,68,69,58,57,59,60,61,62,63,64,65,66,67,68,69,58,57,59,60,61,62,63,64,65,66,67,68,69,58,57,59,60,61,62,63,64,65,66,67,68,69,58,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["__incompletearrayfield",3]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[],["ethhdr",3]],[[],["sock_filter",3]],[[]],[[],["tun_pi",3]],[[],["tun_filter",3]],null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[]],[[["usize",15]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[],["__kernel_sockaddr_storage",3]],[[],["iovec",3]],[[],["__fsid_t",3]],[[],["__sigset_t",3]],[[],["timeval",3]],[[],["timespec",3]],[[],["fd_set",3]],[[],["__pthread_rwlock_arch_t",3]],[[],["__pthread_internal_list",3]],[[],["__pthread_mutex_s",3]],[[],["__pthread_cond_s",3]],[[],["__pthread_cond_s__bindgen_ty_1",19]],[[],["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3]],[[],["__pthread_cond_s__bindgen_ty_2",19]],[[],["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3]],[[],["pthread_mutexattr_t",19]],[[],["pthread_condattr_t",19]],[[],["pthread_attr_t",19]],[[],["pthread_mutex_t",19]],[[],["pthread_cond_t",19]],[[],["pthread_rwlock_t",19]],[[],["pthread_rwlockattr_t",19]],[[],["pthread_barrier_t",19]],[[],["pthread_barrierattr_t",19]],[[],["sockaddr",3]],[[],["sockaddr_storage",3]],[[],["msghdr",3]],[[],["linger",3]],[[],["osockaddr",3]],[[],["sync_serial_settings",3]],[[],["te1_settings",3]],[[],["raw_hdlc_proto",3]],[[],["fr_proto",3]],[[],["fr_proto_pvc",3]],[[],["fr_proto_pvc_info",3]],[[],["cisco_proto",3]],[[],["ifmap",3]],[[],["if_settings",3]],[[],["if_settings__bindgen_ty_1",19]],[[],["ifreq",3]],[[],["ifreq__bindgen_ty_1",19]],[[],["ifreq__bindgen_ty_2",19]],[[],["ifconf",3]],[[],["ifconf__bindgen_ty_1",19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["__incompletearrayfield",3]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[]],[[]],[[],["__fsid_t",3]],[[],["__sigset_t",3]],[[],["timeval",3]],[[],["timespec",3]],[[],["fd_set",3]],[[],["__pthread_rwlock_arch_t",3]],[[]],[[]],[[]],[[]],[[],["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1",3]],[[]],[[],["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sockaddr",3]],[[]],[[]],[[],["cmsghdr",3]],[[],["linger",3]],[[],["osockaddr",3]],[[],["sync_serial_settings",3]],[[],["te1_settings",3]],[[],["raw_hdlc_proto",3]],[[],["fr_proto",3]],[[],["fr_proto_pvc",3]],[[],["fr_proto_pvc_info",3]],[[],["cisco_proto",3]],[[],["ifmap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[],["in_addr",3]],[[],["ip_mreq",3]],[[],["ip_mreqn",3]],[[],["ip_mreq_source",3]],[[],["ip_msfilter",3]],[[],["in_pktinfo",3]],[[],["sockaddr_in",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"tun_filter"],[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"ethhdr"],[3,"sock_filter"],[3,"sock_fprog"],[3,"tun_pi"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[3,"__pthread_cond_s"],[3,"cmsghdr"],[3,"__pthread_mutex_s"],[3,"__pthread_rwlock_arch_t"],[3,"__kernel_sockaddr_storage"],[3,"fd_set"],[19,"__pthread_cond_s__bindgen_ty_2"],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"],[3,"__pthread_internal_list"],[3,"sockaddr_storage"],[3,"__fsid_t"],[3,"__sigset_t"],[19,"__pthread_cond_s__bindgen_ty_1"],[3,"__IncompleteArrayField"],[3,"ifmap"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"iovec"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[3,"msghdr"],[3,"linger"],[3,"osockaddr"],[3,"sync_serial_settings"],[3,"te1_settings"],[3,"raw_hdlc_proto"],[3,"fr_proto"],[3,"fr_proto_pvc"],[3,"fr_proto_pvc_info"],[3,"cisco_proto"],[3,"if_settings"],[19,"if_settings__bindgen_ty_1"],[3,"ifreq"],[19,"ifreq__bindgen_ty_1"],[19,"ifreq__bindgen_ty_2"],[3,"ifconf"],[19,"ifconf__bindgen_ty_1"],[3,"__kernel_sockaddr_storage"],[3,"sockaddr_in"],[3,"group_req"],[3,"group_source_req"],[3,"group_filter"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"ip_msfilter"],[3,"in_pktinfo"]]},\
"net_util":{"doc":"","t":[13,13,13,4,13,13,3,4,13,13,6,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,11,10,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CloneTap","CreateSocket","CreateTap","Error","InvalidNumOctets","IoctlError","MacAddress","MacAddressError","OpenTun","ParseOctet","Result","Tap","TapT","as_raw_descriptor","as_raw_descriptors","as_raw_fd","as_raw_fds","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_tap_with_ifreq","enable","enable","fakes","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_raw_descriptor","from_str","get_ifreq","get_ifreq","if_flags","if_flags","into","into","into","into","into_mq_taps","into_mq_taps","ip_addr","ip_addr","mac_address","mac_address","mtu","mtu","netmask","netmask","new","new_with_name","new_with_name","octets","read","read_vectored_volatile","read_volatile","set_ip_addr","set_ip_addr","set_mac_address","set_mac_address","set_mtu","set_mtu","set_netmask","set_netmask","set_offload","set_offload","set_vnet_hdr_size","set_vnet_hdr_size","sys_error","to_owned","to_string","to_string","to_string","try_clone","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write_vectored_volatile","write_volatile","0","0","0","0","0","0","0","FakeTap","as_raw_descriptor","as_raw_descriptors","as_raw_fd","as_raw_fds","borrow","borrow_mut","drop","enable","flush","from","get_ifreq","if_flags","into","into_mq_taps","ip_addr","mac_address","mtu","netmask","new_with_name","read","read_vectored_volatile","read_volatile","set_ip_addr","set_mac_address","set_mtu","set_netmask","set_offload","set_vnet_hdr_size","try_from","try_into","type_id","write","write_vectored_volatile","write_volatile"],"q":["net_util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","net_util::Error","","","","","net_util::MacAddressError","","net_util::fakes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Unable to clone tap interface.","Failed to create a socket.","Unable to create tap interface.","","Invalid number of octets.","ioctl failed.","An Ethernet mac address. This struct is compatible with …","","Couldn’t open /dev/net/tun.","Failed to parse octet.","","Handle for a network tap interface.","","","","","","","","","","","","","","","","","Enable the tap interface.","","","","","","","","","","","","","","","","","","Get the interface flags","","","","","","Change the origin tap into multiqueue taps, this means …","","Get the host-side IP address for the tap interface.","","Get the mac address for the tap interface.","","Get the MTU for the tap interface.","","Get the netmask for the tap interface’s subnet.","","Create a new tap interface.","Create a new tap interface named <code>name</code>, or open it if it …","","","","","","Set the host-side IP address for the tap interface.","","Set the mac address for the tap interface.","","Set the MTU for the tap interface.","","Set the netmask for the subnet that the tap interface will …","","Set the offload flags for the tap interface.","","Set the size of the vnet hdr.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,2,1,0,0,1,2,0,0,0,3,3,3,3,1,2,4,3,1,2,4,3,4,4,3,5,3,0,3,1,1,2,2,4,3,1,2,4,3,3,4,5,3,5,3,1,2,4,3,5,3,5,3,5,3,5,3,5,3,5,5,3,4,3,3,3,5,3,5,3,5,3,5,3,5,3,5,3,1,4,1,2,4,3,1,2,4,3,1,2,4,3,1,2,4,3,3,3,3,6,7,8,9,10,11,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["rawdescriptor",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],["rawfd",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["macaddress",3]],[[]],[[["ifreq",3]],[["result",6,["tap"]],["tap",3]]],[[],["result",6]],[[],["result",6]],null,[[],["ioresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["rawdescriptor",6]],[["result",6,["tap"]],["tap",3]]],[[["str",15]],["result",4]],[[],["ifreq",3]],[[],["ifreq",3]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[["u16",15]],[["vec",3],["result",6,["vec"]]]],[[["u16",15]],[["vec",3,["tap"]],["result",6,["vec"]]]],[[],[["result",6,["ipv4addr"]],["ipv4addr",3]]],[[],[["result",6,["ipv4addr"]],["ipv4addr",3]]],[[],[["macaddress",3],["result",6,["macaddress"]]]],[[],[["macaddress",3],["result",6,["macaddress"]]]],[[],[["u16",15],["result",6,["u16"]]]],[[],[["u16",15],["result",6,["u16"]]]],[[],[["result",6,["ipv4addr"]],["ipv4addr",3]]],[[],[["result",6,["ipv4addr"]],["ipv4addr",3]]],[[["bool",15]],["result",6]],[[["bool",15]],["result",6]],[[["bool",15]],[["result",6,["tap"]],["tap",3]]],[[]],[[],[["usize",15],["ioresult",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],[[["ipv4addr",3]],["result",6]],[[["ipv4addr",3]],["result",6]],[[["macaddress",3]],["result",6]],[[["macaddress",3]],["result",6]],[[["u16",15]],["result",6]],[[["u16",15]],["result",6]],[[["ipv4addr",3]],["result",6]],[[["ipv4addr",3]],["result",6]],[[["c_uint",6]],["result",6]],[[["c_uint",6]],["result",6]],[[["c_int",6]],["result",6]],[[["c_int",6]],["result",6]],[[],["syserror",3]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["result",6,["tap"]],["tap",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["ioresult",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,null,[[],["rawdescriptor",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],["rawfd",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],[[]],[[],["result",6]],[[],["ioresult",6]],[[]],[[],["ifreq",3]],[[],["u32",15]],[[]],[[["u16",15]],[["result",6,["vec"]],["vec",3,["faketap"]]]],[[],[["result",6,["ipv4addr"]],["ipv4addr",3]]],[[],[["macaddress",3],["result",6,["macaddress"]]]],[[],[["u16",15],["result",6,["u16"]]]],[[],[["result",6,["ipv4addr"]],["ipv4addr",3]]],[[["bool",15]],[["result",6,["faketap"]],["faketap",3]]],[[],[["usize",15],["ioresult",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],[[["ipv4addr",3]],["result",6]],[[["macaddress",3]],["result",6]],[[["u16",15]],["result",6]],[[["ipv4addr",3]],["result",6]],[[["c_uint",6]],["result",6]],[[["c_int",6]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["usize",15],["ioresult",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["volatileslice",3]],[["usize",15],["result",6,["usize"]]]]],"p":[[4,"Error"],[4,"MacAddressError"],[3,"Tap"],[3,"MacAddress"],[8,"TapT"],[13,"CloneTap"],[13,"CreateSocket"],[13,"CreateTap"],[13,"IoctlError"],[13,"OpenTun"],[13,"InvalidNumOctets"],[13,"ParseOctet"],[3,"FakeTap"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":[13,4,16,13,8,8,8,8,8,8,3,8,11,11,11,11,0,0,5,5,5,0,11,11,11,11,11,10,0,0,11,11,12,0,0,0,11,11,11,11,11,11,8,10,10,8,8,8,8,10,5,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,10,10,10,10,10,10,10,10,10,10,8,8,10,10,11,10,11,10,10,10,11,11,11,10,10,11,11,10,10,11,11,11,11,11,11,11,10,11,10,10,10,10,10,11,11,11,11,10,10,11,8,8,11,10,5,10,11,11,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,16,10,8,8,16,10,10,8,8,8,10,10,10,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,10,16,8,5,5,10,8,8,5,10,5,10,10,10,5,10],"n":["Empty","FloatErrorKind","FromStrRadixErr","Invalid","Num","NumAssign","NumAssignOps","NumAssignRef","NumOps","NumRef","ParseFloatError","RefNum","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","ops","pow","sign","try_from","try_from","try_into","try_into","type_id","type_id","Bounded","max_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","ceil","classify","epsilon","floor","fract","infinity","integer_decode","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","max","max_value","min","min_positive_value","min_value","nan","neg_infinity","neg_zero","powi","recip","round","signum","to_degrees","to_radians","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_zeros","pow","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_zeros","unsigned_shl","unsigned_shr","checked","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":["num_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::bounds","","","num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::identities","","","","","","","","","","num_traits::int","","","","","","","","","","","","","","","","","num_traits::ops","","","","","","num_traits::ops::checked","","","","","","","","","","","","","","","","num_traits::ops::inv","","","num_traits::ops::mul_add","","","","","num_traits::ops::overflowing","","","","","","num_traits::ops::saturating","","","","","","","","","num_traits::ops::wrapping","","","","","","","","","","","","num_traits::pow","","","","","num_traits::sign","","","","","","","","",""],"d":["","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","The trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","","The trait for references which implement numeric …","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","","","Convert from a string and radix (typically <code>2..=36</code>).","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","returns the largest finite number this type can represent","returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns epsilon, a small positive value.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns positive infinity.","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns NaN.","Returns negative infinity.","Returns <code>-0.0</code>.","Raise a number to an integer power.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[1,0,2,1,0,0,0,0,0,0,0,0,1,3,1,3,0,0,0,0,0,0,1,3,3,1,3,2,0,0,1,3,3,0,0,0,1,3,1,3,1,3,0,4,4,0,0,0,0,5,0,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,11,12,0,11,11,12,0,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,15,16,17,18,19,20,21,0,22,22,0,0,23,23,24,0,0,0,25,26,27,0,0,0,0,28,29,30,28,31,0,0,0,0,0,0,32,33,34,35,36,37,38,0,0,0,38,0,0,0,39,0,39,39,39,0,39],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15],["u32",15]],["result",4]],null,null,[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,[[]],[[["numcast",8]],[["option",4],["numcast",8]]],[[["toprimitive",8]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4]],[[["u128",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4]],[[],[["f32",15],["option",4,["f32"]]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["i128",15],["option",4,["i128"]]]],[[],[["i16",15],["option",4,["i16"]]]],[[],[["i32",15],["option",4,["i32"]]]],[[],[["option",4,["i64"]],["i64",15]]],[[],[["i8",15],["option",4,["i8"]]]],[[],[["option",4,["isize"]],["isize",15]]],[[],[["option",4,["u128"]],["u128",15]]],[[],[["u16",15],["option",4,["u16"]]]],[[],[["u32",15],["option",4,["u32"]]]],[[],[["option",4,["u64"]],["u64",15]]],[[],[["option",4,["u8"]],["u8",15]]],[[],[["usize",15],["option",4,["usize"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["one",8]],[[]],[[]],[[]],[[],["zero",8]],[[]],null,[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[],["option",4]],null,null,[[]],null,null,null,[[]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],null,null,[[["checkedmul",8],["usize",15],["one",8],["clone",8]],[["checkedmul",8],["option",4],["one",8],["clone",8]]],[[["usize",15],["mul",8],["one",8],["clone",8]],[["one",8],["mul",8],["clone",8]]],[[]],null,null,[[["signed",8]],["signed",8]],[[]],[[["signed",8]],["signed",8]],[[]],[[],["bool",15]],[[],["bool",15]],[[["signed",8]],["signed",8]],[[]]],"p":[[4,"FloatErrorKind"],[8,"Num"],[3,"ParseFloatError"],[8,"Bounded"],[8,"AsPrimitive"],[8,"NumCast"],[8,"FromPrimitive"],[8,"ToPrimitive"],[8,"FloatConst"],[8,"FloatCore"],[8,"One"],[8,"Zero"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"],[8,"Signed"]]},\
"once_cell":{"doc":"Overview","t":[0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","default","drop","fmt","fmt","fmt","from","from","from","get","get","get","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","new","new","new","set","set","set","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","force","from","from","from","from","get","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","force","from","from","from","from","get","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id"],"q":["once_cell","","","once_cell::race","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","once_cell::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","once_cell::unsync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","","","","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","","","","","Gets the reference to the underlying value.","Gets the mutable reference to the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","","","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","","","","","Gets a reference to the underlying value.","Gets a mutable reference to the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","","","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a referce to the final cell …","","","",""],"i":[0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,4,5,4,5,4,4,4,5,5,5,4,4,5,5,4,4,4,5,4,4,4,4,4,4,5,4,5,4,5,4,4,4,4,5,4,4,5,4,5,0,0,6,7,6,7,6,6,6,7,7,7,6,6,7,7,6,6,6,7,6,6,6,6,6,7,6,7,6,7,6,6,6,6,7,6,6,7,6,7],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["oncenonzerousize",3]],[[],["oncebool",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["option",4]],[[],[["option",4,["nonzerousize"]],["nonzerousize",3]]],[[],[["bool",15],["option",4,["bool"]]]],[[]],[[],["nonzerousize",3]],[[],["bool",15]],[[],["result",4]],[[],[["result",4,["nonzerousize"]],["nonzerousize",3]]],[[],[["result",4,["bool"]],["bool",15]]],[[]],[[]],[[]],[[],["oncebox",3]],[[],["oncenonzerousize",3]],[[],["oncebool",3]],[[["box",3]],[["box",3],["result",4,["box"]]]],[[["nonzerousize",3]],["result",4]],[[["bool",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[],["oncecell",3]],[[]],[[],["oncecell",3]],[[],["lazy",3]],[[]],[[]],[[["oncecell",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["lazy",3]]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["option",4]],[[["lazy",3]],["result",4]],[[],["oncecell",3]],[[],["lazy",3]],[[],["result",4]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[],["oncecell",3]],[[]],[[]],[[],["lazy",3]],[[]],[[]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["lazy",3]]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["result",4]],[[]],[[]],[[],["option",4]],[[["lazy",3]],["result",4]],[[],["oncecell",3]],[[],["lazy",3]],[[],["result",4]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"]]},\
"p9":{"doc":"","t":[3,3,6,6,6,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11],"n":["Config","Server","ServerGidMap","ServerIdMap","ServerUidMap","ascii_casefold","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","from","from","gid_map","handle_message","into","into","keep_fds","msize","new","root","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uid_map","with_config"],"q":["p9","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,2,1,2,1,1,1,1,2,1,1,2,2,1,2,1,2,1,1,2,1,2,1,2,1,1,2],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["config",3]],[[]],[[],["config",3]],[[]],[[]],null,[[],["result",6]],[[]],[[]],[[],[["rawfd",6],["vec",3,["rawfd"]]]],null,[[["servergidmap",6],["serveruidmap",6],["box",3,["path"]],["into",8,["box"]]],[["result",6,["server"]],["server",3]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["config",3]],[["result",6,["server"]],["server",3]]]],"p":[[3,"Config"],[3,"Server"]]},\
"paste":{"doc":"github crates-io docs-rs","t":[14],"n":["paste"],"q":["paste"],"d":[""],"i":[0],"f":[null],"p":[]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","t":[14],"n":["pin_project"],"q":["pin_project_lite"],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":[null],"p":[]},\
"pin_utils":{"doc":"Utilities for pinning","t":[14,14,14],"n":["pin_mut","unsafe_pinned","unsafe_unpinned"],"q":["pin_utils","",""],"d":["Pins a value on the stack.","A pinned projection of a struct field.","An unpinned projection of a struct field."],"i":[0,0,0],"f":[null,null,null],"p":[]},\
"poll_token_derive":{"doc":"","t":[24],"n":["PollToken"],"q":["poll_token_derive"],"d":["Implements the PollToken trait for a given <code>enum</code>."],"i":[0],"f":[null],"p":[]},\
"power_monitor":{"doc":"","t":[3,4,13,8,13,13,3,8,13,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,10,10,12,11,11,11,11,11,11,11,11,11,12],"n":["BatteryData","BatteryStatus","Charging","CreatePowerMonitorFn","Discharging","NotCharging","PowerData","PowerMonitor","Unknown","ac_online","battery","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","charge_counter","charge_full","current","from","from","from","into","into","into","percent","poll_fd","read_message","status","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","voltage"],"q":["power_monitor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","Battery charge counter in microampere hours.","Battery full charge counter in microampere hours.","Battery current in microamps.","","","","","","","","","","","","","","","","","","","","Battery voltage in microvolts."],"i":[0,0,1,0,1,1,0,0,1,2,2,2,3,1,2,3,1,3,3,3,2,3,1,2,3,1,3,4,4,3,2,3,1,2,3,1,2,3,1,3],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["rawfd",6]],[[],[["result",4,["option","box"]],["option",4,["powerdata"]],["box",3,["error"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"BatteryStatus"],[3,"PowerData"],[3,"BatteryData"],[8,"PowerMonitor"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":[13,13,13,4,3,13,3,13,13,3,3,13,13,13,3,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delimiter","eq","eq","eq","eq","extend","extend","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","0","0","0","0","IntoIter","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","to_owned","try_from","try_into","type_id"],"q":["proc_macroproc_macro2::TokenTree","","","","proc_macro2::token_stream","","","","","","","","","","","","",""],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns the delimiter of this <code>Group</code>","","","","","","","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","","","","","","","","","","","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","","","","","","",""],"i":[1,2,2,0,0,3,0,3,1,0,0,3,2,2,0,3,0,0,0,0,4,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,10,7,10,6,7,3,8,2,4,1,9,10,6,7,3,8,2,4,1,9,10,9,6,8,2,1,9,9,6,6,10,10,10,10,5,5,6,6,7,3,3,8,8,2,4,4,1,9,9,10,10,5,6,6,6,7,7,3,3,3,3,3,8,2,4,1,9,10,6,6,6,10,9,10,10,10,10,10,10,10,10,10,10,5,6,7,3,8,2,4,1,9,10,6,6,10,10,7,7,7,6,8,4,9,9,7,3,8,4,9,10,4,5,3,8,4,9,10,8,8,8,10,10,6,7,3,8,2,4,1,9,10,5,6,3,8,4,9,10,0,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,10,10,10,10,10,10,10,10,10,10,7,10,10,11,12,13,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["char",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["literal",3]],[[]],[[["char",15]],["literal",3]],[[],["tokenstream",3]],[[],["span",3]],[[],["tokentree",4]],[[],["group",3]],[[],["delimiter",4]],[[],["punct",3]],[[],["spacing",4]],[[],["ident",3]],[[],["literal",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ident",3]],["ordering",4]],[[]],[[],["delimiter",4]],[[["delimiter",4]],["bool",15]],[[["spacing",4]],["bool",15]],[[],["bool",15]],[[["ident",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["f32",15]],["literal",3]],[[["f32",15]],["literal",3]],[[["f64",15]],["literal",3]],[[["f64",15]],["literal",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["tokenstream",3]],["tokenstream",3]],[[["tokentree",4]]],[[["span",3]],["span",3]],[[]],[[["literal",3]],["tokentree",4]],[[]],[[["group",3]],["tokentree",4]],[[["ident",3]],["tokentree",4]],[[["punct",3]],["tokentree",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["str",15]],[["result",4,["tokenstream","lexerror"]],["tokenstream",3],["lexerror",3]]],[[["str",15]],[["result",4,["lexerror"]],["lexerror",3]]],[[]],[[["i128",15]],["literal",3]],[[["i128",15]],["literal",3]],[[["i16",15]],["literal",3]],[[["i16",15]],["literal",3]],[[["i32",15]],["literal",3]],[[["i32",15]],["literal",3]],[[["i64",15]],["literal",3]],[[["i64",15]],["literal",3]],[[["i8",15]],["literal",3]],[[["i8",15]],["literal",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[],["bool",15]],[[["isize",15]],["literal",3]],[[["isize",15]],["literal",3]],[[["span",3]],[["option",4,["span"]],["span",3]]],[[["span",3]],["span",3]],[[]],[[]],[[["delimiter",4],["tokenstream",3]]],[[["char",15],["spacing",4]]],[[["str",15],["span",3]]],[[["ident",3]],[["option",4,["ordering"]],["ordering",4]]],[[["span",3]],["span",3]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[],["spacing",4]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["tokenstream",3]],[[["str",15]],["literal",3]],[[["usize",15],["rangebounds",8,["usize"]]],[["option",4,["span"]],["span",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u128",15]],["literal",3]],[[["u128",15]],["literal",3]],[[["u16",15]],["literal",3]],[[["u16",15]],["literal",3]],[[["u32",15]],["literal",3]],[[["u32",15]],["literal",3]],[[["u64",15]],["literal",3]],[[["u64",15]],["literal",3]],[[["u8",15]],["literal",3]],[[["u8",15]],["literal",3]],[[],["span",3]],[[["usize",15]],["literal",3]],[[["usize",15]],["literal",3]],null,null,null,null,null,[[]],[[]],[[],["intoiter",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["option",4,["tokentree"]],["tokentree",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"Spacing"],[4,"Delimiter"],[4,"TokenTree"],[3,"Punct"],[3,"LexError"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Ident"],[3,"Literal"],[13,"Group"],[13,"Ident"],[13,"Punct"],[13,"Literal"],[3,"IntoIter"]]},\
"protobuf":{"doc":"Library to read and write protocol buffers data.","t":[3,8,3,3,13,13,13,13,13,13,8,8,3,3,3,3,3,4,4,3,3,17,17,13,13,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,12,11,11,10,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,5,5,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,3,3,3,3,3,3,3,3,3,3,4,4,3,4,4,3,3,3,4,3,3,13,13,13,13,13,13,13,13,13,3,3,3,4,13,3,3,13,13,13,3,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,4,6,13,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,3,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,18,3,17,11,11,11,11,11,11,11,11,3,3,4,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,13,13,13,3,3,13,13,3,13,13,13,13,3,13,8,4,4,13,13,13,13,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,3,8,8,11,11,5,5,5,5,5,11,11,11,10,10,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,13,13,13,13,3,3,3,3,3,3,3,4,4,3,3,3,3,3,3,13,4,3,13,13,3,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,12,12,13,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,17,17,17,3,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CachedSize","Clear","CodedInputStream","CodedOutputStream","Fixed32","Fixed32","Fixed64","Fixed64","LengthDelimited","LengthDelimited","Message","ProtobufEnum","RepeatedField","SingularField","SingularPtrField","UnknownFields","UnknownFieldsIter","UnknownValue","UnknownValueRef","UnknownValues","UnknownValuesIter","VERSION","VERSION_2_25_2","Varint","Varint","add_fixed32","add_fixed64","add_length_delimited","add_value","add_value","add_varint","as_any","as_any_mut","as_any_mut","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_ptr","as_ref","as_ref","as_ref","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes_until_limit","capacity","check_eof","check_eof","check_initialized","check_initialized","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compute_size","consume","contains","default","default","default","default","default","default","default_instance","deref","deref_mut","descriptor","descriptor","descriptor","descriptor","descriptor_static","descriptor_static","enum_descriptor","enum_descriptor","enum_descriptor_static","enum_descriptor_static","eof","eq","eq","eq","eq","eq","eq","eq","error","ext","extend","extend","fields","fill_buf","fixed32","fixed64","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_buffered_reader","from_bytes","from_i32","from_iter","from_option","from_option","from_ref","from_slice","from_vec","get","get","get_cached_size","get_mut_ref","get_ref","get_ref","get_unknown_fields","hash","hash","hash","hash","hash","index","index_mut","init","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_iter","into_iter","into_iter","into_iter","into_option","into_option","into_vec","is_initialized","is_none","is_none","is_some","is_some","iter","iter","iter","iter","iter","iter_mut","json","last","last_mut","lazy","len","length_delimited","map","map","merge_from","merge_from_bytes","merge_from_bytes","merge_message","mut_iter","mut_iter","mut_unknown_fields","ne","ne","new","new","new","new","new","next","next","none","none","parse_from","parse_from","parse_from_bytes","parse_from_bytes","parse_from_bytes","parse_from_reader","parse_from_reader","parse_from_reader","parse_length_delimited_from","parse_length_delimited_from_bytes","parse_length_delimited_from_reader","plugin","pop","pop_limit","pos","push","push_default","push_limit","read","read","read_bool","read_bytes","read_bytes_into","read_double","read_enum","read_fixed32","read_fixed64","read_float","read_int32","read_int64","read_message","read_raw_byte","read_raw_bytes","read_raw_bytes_into","read_raw_little_endian32","read_raw_little_endian64","read_raw_varint32","read_raw_varint64","read_repeated_packed_bool_into","read_repeated_packed_double_into","read_repeated_packed_enum_into","read_repeated_packed_fixed32_into","read_repeated_packed_fixed64_into","read_repeated_packed_float_into","read_repeated_packed_int32_into","read_repeated_packed_int64_into","read_repeated_packed_sfixed32_into","read_repeated_packed_sfixed64_into","read_repeated_packed_sint32_into","read_repeated_packed_sint64_into","read_repeated_packed_uint32_into","read_repeated_packed_uint64_into","read_sfixed32","read_sfixed64","read_sint32","read_sint64","read_string","read_string_into","read_tag","read_tag_unpack","read_uint32","read_uint64","read_unknown","reflect","remove","remove","retain","reverse","rt","rustproto","set","set_default","set_default","set_recursion_limit","sint32","sint64","skip_field","skip_raw_bytes","slice","slice_from","slice_from_mut","slice_mut","slice_to","slice_to_mut","some","some","sort_by","split_at","split_at_mut","tail","take","take","text_format","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_vec","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","unwrap","unwrap","unwrap_mut_ref","unwrap_or","unwrap_or","unwrap_or_default","unwrap_or_default","unwrap_or_else","unwrap_or_else","unwrap_ref","value","values","values","varint","vec","well_known_types","wire_format","wire_type","wire_type","write","write_bool","write_bool_no_tag","write_bytes","write_bytes_no_tag","write_double","write_double_no_tag","write_enum","write_enum_no_tag","write_enum_obj","write_enum_obj_no_tag","write_fixed32","write_fixed32_no_tag","write_fixed64","write_fixed64_no_tag","write_float","write_float_no_tag","write_int32","write_int32_no_tag","write_int64","write_int64_no_tag","write_length_delimited_to","write_length_delimited_to","write_length_delimited_to_bytes","write_length_delimited_to_bytes","write_length_delimited_to_vec","write_length_delimited_to_vec","write_length_delimited_to_writer","write_length_delimited_to_writer","write_message","write_message_no_tag","write_raw_byte","write_raw_bytes","write_raw_little_endian32","write_raw_little_endian64","write_raw_varint32","write_raw_varint64","write_sfixed32","write_sfixed32_no_tag","write_sfixed64","write_sfixed64_no_tag","write_sint32","write_sint32_no_tag","write_sint64","write_sint64_no_tag","write_string","write_string_no_tag","write_tag","write_to","write_to","write_to_bytes","write_to_bytes","write_to_vec","write_to_vec","write_to_with_cached_sizes","write_to_writer","write_to_writer","write_uint32","write_uint32_no_tag","write_uint64","write_uint64_no_tag","write_unknown","write_unknown_fields","write_unknown_no_tag","0","0","0","0","0","0","0","0","CODE_SIZE","CORD","DescriptorProto","DescriptorProto_ExtensionRange","DescriptorProto_ReservedRange","EnumDescriptorProto","EnumDescriptorProto_EnumReservedRange","EnumOptions","EnumValueDescriptorProto","EnumValueOptions","ExtensionRangeOptions","FieldDescriptorProto","FieldDescriptorProto_Label","FieldDescriptorProto_Type","FieldOptions","FieldOptions_CType","FieldOptions_JSType","FileDescriptorProto","FileDescriptorSet","FileOptions","FileOptions_OptimizeMode","GeneratedCodeInfo","GeneratedCodeInfo_Annotation","IDEMPOTENCY_UNKNOWN","IDEMPOTENT","JS_NORMAL","JS_NUMBER","JS_STRING","LABEL_OPTIONAL","LABEL_REPEATED","LABEL_REQUIRED","LITE_RUNTIME","MessageOptions","MethodDescriptorProto","MethodOptions","MethodOptions_IdempotencyLevel","NO_SIDE_EFFECTS","OneofDescriptorProto","OneofOptions","SPEED","STRING","STRING_PIECE","ServiceDescriptorProto","ServiceOptions","SourceCodeInfo","SourceCodeInfo_Location","TYPE_BOOL","TYPE_BYTES","TYPE_DOUBLE","TYPE_ENUM","TYPE_FIXED32","TYPE_FIXED64","TYPE_FLOAT","TYPE_GROUP","TYPE_INT32","TYPE_INT64","TYPE_MESSAGE","TYPE_SFIXED32","TYPE_SFIXED64","TYPE_SINT32","TYPE_SINT64","TYPE_STRING","TYPE_UINT32","TYPE_UINT64","UninterpretedOption","UninterpretedOption_NamePart","annotation","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear_aggregate_value","clear_allow_alias","clear_annotation","clear_begin","clear_cc_enable_arenas","clear_cc_generic_services","clear_client_streaming","clear_csharp_namespace","clear_ctype","clear_default_value","clear_dependency","clear_deprecated","clear_deprecated","clear_deprecated","clear_deprecated","clear_deprecated","clear_deprecated","clear_deprecated","clear_double_value","clear_end","clear_end","clear_end","clear_end","clear_enum_type","clear_enum_type","clear_extendee","clear_extension","clear_extension","clear_extension_range","clear_field","clear_field_type","clear_file","clear_go_package","clear_idempotency_level","clear_identifier_value","clear_input_type","clear_is_extension","clear_java_generate_equals_and_hash","clear_java_generic_services","clear_java_multiple_files","clear_java_outer_classname","clear_java_package","clear_java_string_check_utf8","clear_json_name","clear_jstype","clear_label","clear_lazy","clear_leading_comments","clear_leading_detached_comments","clear_location","clear_map_entry","clear_message_set_wire_format","clear_message_type","clear_method","clear_name","clear_name","clear_name","clear_name","clear_name","clear_name","clear_name","clear_name","clear_name","clear_name_part","clear_negative_int_value","clear_nested_type","clear_no_standard_descriptor_accessor","clear_number","clear_number","clear_objc_class_prefix","clear_oneof_decl","clear_oneof_index","clear_optimize_for","clear_options","clear_options","clear_options","clear_options","clear_options","clear_options","clear_options","clear_options","clear_options","clear_output_type","clear_package","clear_packed","clear_path","clear_path","clear_php_class_prefix","clear_php_generic_services","clear_php_metadata_namespace","clear_php_namespace","clear_positive_int_value","clear_proto3_optional","clear_public_dependency","clear_py_generic_services","clear_reserved_name","clear_reserved_name","clear_reserved_range","clear_reserved_range","clear_ruby_package","clear_server_streaming","clear_service","clear_source_code_info","clear_source_file","clear_span","clear_start","clear_start","clear_start","clear_string_value","clear_swift_prefix","clear_syntax","clear_trailing_comments","clear_type_name","clear_uninterpreted_option","clear_uninterpreted_option","clear_uninterpreted_option","clear_uninterpreted_option","clear_uninterpreted_option","clear_uninterpreted_option","clear_uninterpreted_option","clear_uninterpreted_option","clear_uninterpreted_option","clear_value","clear_weak","clear_weak_dependency","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","dependency","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","enum_descriptor_static","enum_descriptor_static","enum_descriptor_static","enum_descriptor_static","enum_descriptor_static","enum_descriptor_static","enum_type","enum_type","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extension","extension","extension_range","field","file","file_descriptor_proto","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_i32","from_i32","from_i32","get_aggregate_value","get_allow_alias","get_annotation","get_begin","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cc_enable_arenas","get_cc_generic_services","get_client_streaming","get_csharp_namespace","get_ctype","get_default_value","get_dependency","get_deprecated","get_deprecated","get_deprecated","get_deprecated","get_deprecated","get_deprecated","get_deprecated","get_double_value","get_end","get_end","get_end","get_end","get_enum_type","get_enum_type","get_extendee","get_extension","get_extension","get_extension_range","get_field","get_field_type","get_file","get_go_package","get_idempotency_level","get_identifier_value","get_input_type","get_is_extension","get_java_generate_equals_and_hash","get_java_generic_services","get_java_multiple_files","get_java_outer_classname","get_java_package","get_java_string_check_utf8","get_json_name","get_jstype","get_label","get_lazy","get_leading_comments","get_leading_detached_comments","get_location","get_map_entry","get_message_set_wire_format","get_message_type","get_method","get_name","get_name","get_name","get_name","get_name","get_name","get_name","get_name","get_name","get_name_part","get_negative_int_value","get_nested_type","get_no_standard_descriptor_accessor","get_number","get_number","get_objc_class_prefix","get_oneof_decl","get_oneof_index","get_optimize_for","get_options","get_options","get_options","get_options","get_options","get_options","get_options","get_options","get_options","get_output_type","get_package","get_packed","get_path","get_path","get_php_class_prefix","get_php_generic_services","get_php_metadata_namespace","get_php_namespace","get_positive_int_value","get_proto3_optional","get_public_dependency","get_py_generic_services","get_reserved_name","get_reserved_name","get_reserved_range","get_reserved_range","get_ruby_package","get_server_streaming","get_service","get_source_code_info","get_source_file","get_span","get_start","get_start","get_start","get_string_value","get_swift_prefix","get_syntax","get_trailing_comments","get_type_name","get_uninterpreted_option","get_uninterpreted_option","get_uninterpreted_option","get_uninterpreted_option","get_uninterpreted_option","get_uninterpreted_option","get_uninterpreted_option","get_uninterpreted_option","get_uninterpreted_option","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_value","get_weak","get_weak_dependency","has_aggregate_value","has_allow_alias","has_begin","has_cc_enable_arenas","has_cc_generic_services","has_client_streaming","has_csharp_namespace","has_ctype","has_default_value","has_deprecated","has_deprecated","has_deprecated","has_deprecated","has_deprecated","has_deprecated","has_deprecated","has_double_value","has_end","has_end","has_end","has_end","has_extendee","has_field_type","has_go_package","has_idempotency_level","has_identifier_value","has_input_type","has_is_extension","has_java_generate_equals_and_hash","has_java_generic_services","has_java_multiple_files","has_java_outer_classname","has_java_package","has_java_string_check_utf8","has_json_name","has_jstype","has_label","has_lazy","has_leading_comments","has_map_entry","has_message_set_wire_format","has_name","has_name","has_name","has_name","has_name","has_name","has_name","has_name","has_name_part","has_negative_int_value","has_no_standard_descriptor_accessor","has_number","has_number","has_objc_class_prefix","has_oneof_index","has_optimize_for","has_options","has_options","has_options","has_options","has_options","has_options","has_options","has_options","has_options","has_output_type","has_package","has_packed","has_php_class_prefix","has_php_generic_services","has_php_metadata_namespace","has_php_namespace","has_positive_int_value","has_proto3_optional","has_py_generic_services","has_ruby_package","has_server_streaming","has_source_code_info","has_source_file","has_start","has_start","has_start","has_string_value","has_swift_prefix","has_syntax","has_trailing_comments","has_type_name","has_weak","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","leading_detached_comments","location","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","message_type","method","mut_aggregate_value","mut_annotation","mut_csharp_namespace","mut_default_value","mut_dependency","mut_enum_type","mut_enum_type","mut_extendee","mut_extension","mut_extension","mut_extension_range","mut_field","mut_file","mut_go_package","mut_identifier_value","mut_input_type","mut_java_outer_classname","mut_java_package","mut_json_name","mut_leading_comments","mut_leading_detached_comments","mut_location","mut_message_type","mut_method","mut_name","mut_name","mut_name","mut_name","mut_name","mut_name","mut_name","mut_name","mut_name","mut_name_part","mut_nested_type","mut_objc_class_prefix","mut_oneof_decl","mut_options","mut_options","mut_options","mut_options","mut_options","mut_options","mut_options","mut_options","mut_options","mut_output_type","mut_package","mut_path","mut_path","mut_php_class_prefix","mut_php_metadata_namespace","mut_php_namespace","mut_public_dependency","mut_reserved_name","mut_reserved_name","mut_reserved_range","mut_reserved_range","mut_ruby_package","mut_service","mut_source_code_info","mut_source_file","mut_span","mut_string_value","mut_swift_prefix","mut_syntax","mut_trailing_comments","mut_type_name","mut_uninterpreted_option","mut_uninterpreted_option","mut_uninterpreted_option","mut_uninterpreted_option","mut_uninterpreted_option","mut_uninterpreted_option","mut_uninterpreted_option","mut_uninterpreted_option","mut_uninterpreted_option","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_value","mut_weak_dependency","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","nested_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","oneof_decl","options","options","options","options","options","options","options","options","options","path","path","public_dependency","reserved_name","reserved_name","reserved_range","reserved_range","service","set_aggregate_value","set_allow_alias","set_annotation","set_begin","set_cc_enable_arenas","set_cc_generic_services","set_client_streaming","set_csharp_namespace","set_ctype","set_default_value","set_dependency","set_deprecated","set_deprecated","set_deprecated","set_deprecated","set_deprecated","set_deprecated","set_deprecated","set_double_value","set_end","set_end","set_end","set_end","set_enum_type","set_enum_type","set_extendee","set_extension","set_extension","set_extension_range","set_field","set_field_type","set_file","set_go_package","set_idempotency_level","set_identifier_value","set_input_type","set_is_extension","set_java_generate_equals_and_hash","set_java_generic_services","set_java_multiple_files","set_java_outer_classname","set_java_package","set_java_string_check_utf8","set_json_name","set_jstype","set_label","set_lazy","set_leading_comments","set_leading_detached_comments","set_location","set_map_entry","set_message_set_wire_format","set_message_type","set_method","set_name","set_name","set_name","set_name","set_name","set_name","set_name","set_name","set_name","set_name_part","set_negative_int_value","set_nested_type","set_no_standard_descriptor_accessor","set_number","set_number","set_objc_class_prefix","set_oneof_decl","set_oneof_index","set_optimize_for","set_options","set_options","set_options","set_options","set_options","set_options","set_options","set_options","set_options","set_output_type","set_package","set_packed","set_path","set_path","set_php_class_prefix","set_php_generic_services","set_php_metadata_namespace","set_php_namespace","set_positive_int_value","set_proto3_optional","set_public_dependency","set_py_generic_services","set_reserved_name","set_reserved_name","set_reserved_range","set_reserved_range","set_ruby_package","set_server_streaming","set_service","set_source_code_info","set_source_file","set_span","set_start","set_start","set_start","set_string_value","set_swift_prefix","set_syntax","set_trailing_comments","set_type_name","set_uninterpreted_option","set_uninterpreted_option","set_uninterpreted_option","set_uninterpreted_option","set_uninterpreted_option","set_uninterpreted_option","set_uninterpreted_option","set_uninterpreted_option","set_uninterpreted_option","set_value","set_weak","set_weak_dependency","source_code_info","span","take_aggregate_value","take_annotation","take_csharp_namespace","take_default_value","take_dependency","take_enum_type","take_enum_type","take_extendee","take_extension","take_extension","take_extension_range","take_field","take_file","take_go_package","take_identifier_value","take_input_type","take_java_outer_classname","take_java_package","take_json_name","take_leading_comments","take_leading_detached_comments","take_location","take_message_type","take_method","take_name","take_name","take_name","take_name","take_name","take_name","take_name","take_name","take_name","take_name_part","take_nested_type","take_objc_class_prefix","take_oneof_decl","take_options","take_options","take_options","take_options","take_options","take_options","take_options","take_options","take_options","take_output_type","take_package","take_path","take_path","take_php_class_prefix","take_php_metadata_namespace","take_php_namespace","take_public_dependency","take_reserved_name","take_reserved_name","take_reserved_range","take_reserved_range","take_ruby_package","take_service","take_source_code_info","take_source_file","take_span","take_string_value","take_swift_prefix","take_syntax","take_trailing_comments","take_type_name","take_uninterpreted_option","take_uninterpreted_option","take_uninterpreted_option","take_uninterpreted_option","take_uninterpreted_option","take_uninterpreted_option","take_uninterpreted_option","take_uninterpreted_option","take_uninterpreted_option","take_value","take_weak_dependency","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","value","value","value","value","value","value","value","values","values","values","values","values","values","weak_dependency","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","IncompleteMap","IncorrectTag","IncorrectVarint","InvalidEnumValue","IoError","MessageNotInitialized","Other","OverRecursionLimit","ProtobufError","ProtobufResult","TruncatedMessage","UnexpectedEof","UnexpectedWireType","Utf8","Utf8Error","WireError","WireError","borrow","borrow","borrow_mut","borrow_mut","cause","description","fmt","fmt","fmt","fmt","from","from","from","from","into","into","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","message","0","0","0","ExtFieldOptional","ExtFieldRepeated","borrow","borrow","borrow_mut","borrow_mut","field_number","field_number","from","from","get","get","into","into","phantom","phantom","try_from","try_from","try_into","try_into","type_id","type_id","INIT","Lazy","ONCE_INIT","borrow","borrow_mut","from","get","into","try_from","try_into","type_id","CodeGeneratorRequest","CodeGeneratorResponse","CodeGeneratorResponse_Feature","CodeGeneratorResponse_File","FEATURE_NONE","FEATURE_PROTO3_OPTIONAL","Version","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_size","cached_size","cached_size","cached_size","clear","clear","clear","clear","clear_compiler_version","clear_content","clear_error","clear_file","clear_file_to_generate","clear_generated_code_info","clear_insertion_point","clear_major","clear_minor","clear_name","clear_parameter","clear_patch","clear_proto_file","clear_suffix","clear_supported_features","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compiler_version","compute_size","compute_size","compute_size","compute_size","default","default","default","default","default","default_instance","default_instance","default_instance","default_instance","descriptor","descriptor","descriptor","descriptor","descriptor_static","descriptor_static","descriptor_static","descriptor_static","enum_descriptor_static","eq","eq","eq","eq","eq","file","file_descriptor_proto","file_to_generate","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_i32","generated_code_info","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_compiler_version","get_content","get_error","get_file","get_file_to_generate","get_generated_code_info","get_insertion_point","get_major","get_minor","get_name","get_parameter","get_patch","get_proto_file","get_suffix","get_supported_features","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","has_compiler_version","has_content","has_error","has_generated_code_info","has_insertion_point","has_major","has_minor","has_name","has_parameter","has_patch","has_suffix","has_supported_features","hash","into","into","into","into","into","into_any","into_any","into_any","into_any","is_initialized","is_initialized","is_initialized","is_initialized","merge_from","merge_from","merge_from","merge_from","mut_compiler_version","mut_content","mut_error","mut_file","mut_file_to_generate","mut_generated_code_info","mut_insertion_point","mut_name","mut_parameter","mut_proto_file","mut_suffix","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","ne","ne","ne","ne","new","new","new","new","new","new","new","new","proto_file","set_compiler_version","set_content","set_error","set_file","set_file_to_generate","set_generated_code_info","set_insertion_point","set_major","set_minor","set_name","set_parameter","set_patch","set_proto_file","set_suffix","set_supported_features","take_compiler_version","take_content","take_error","take_file","take_file_to_generate","take_generated_code_info","take_insertion_point","take_name","take_parameter","take_proto_file","take_suffix","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unknown_fields","unknown_fields","unknown_fields","unknown_fields","value","values","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","Bool","Bytes","Enum","EnumDescriptor","EnumValueDescriptor","F32","F64","FieldDescriptor","I32","I64","Map","Message","MessageDescriptor","Optional","ProtobufValue","ReflectFieldRef","ReflectValueRef","Repeated","String","U32","U64","as_any","as_any","as_ref","as_ref_copy","as_ref_copy","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","field_by_name","field_by_number","fields","fmt","fmt","for_type","for_type","from","from","from","from","from","from","full_name","get_bool","get_bytes","get_enum","get_f32","get_f64","get_field_by_name","get_field_by_name_or_json_name","get_field_by_number","get_i32","get_i64","get_message","get_proto","get_reflect","get_str","get_u32","get_u64","has_field","into","into","into","into","into","into","is_non_zero","is_non_zero","is_repeated","json_name","len_field","name","name","name","name","new","new_instance","new_pb_name","proto","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","value_by_name","value_by_number","0","0","0","0","0","0","0","0","0","0","0","0","0","0","INIT","LazyV2","ProtobufVarint","ProtobufVarintZigzag","borrow","borrow_mut","bytes_size","compute_map_size","compute_raw_varint32_size","compute_raw_varint64_size","enum_size","from","get","into","len_varint","len_varint_zigzag","read_map_into","read_proto2_enum_with_unknown_fields_into","read_proto3_enum_with_unknown_fields_into","read_repeated_bool_into","read_repeated_bytes_into","read_repeated_double_into","read_repeated_enum_into","read_repeated_enum_with_unknown_fields_into","read_repeated_fixed32_into","read_repeated_fixed64_into","read_repeated_float_into","read_repeated_int32_into","read_repeated_int64_into","read_repeated_message_into","read_repeated_sfixed32_into","read_repeated_sfixed64_into","read_repeated_sint32_into","read_repeated_sint64_into","read_repeated_string_into","read_repeated_uint32_into","read_repeated_uint64_into","read_singular_bytes_into","read_singular_message_into","read_singular_proto3_bytes_into","read_singular_proto3_string_into","read_singular_string_into","read_unknown_or_skip_group","string_size","tag_size","try_from","try_into","type_id","unexpected_wire_type","unknown_fields_size","value_size","value_varint_zigzag_size","value_varint_zigzag_size_no_tag","vec_packed_enum_data_size","vec_packed_enum_size","vec_packed_varint_data_size","vec_packed_varint_size","vec_packed_varint_zigzag_data_size","vec_packed_varint_zigzag_size","write_map_with_cached_sizes","exts","file_descriptor_proto","carllerche_bytes_for_bytes","carllerche_bytes_for_bytes_all","carllerche_bytes_for_bytes_field","carllerche_bytes_for_string","carllerche_bytes_for_string_all","carllerche_bytes_for_string_field","expose_fields","expose_fields_all","expose_fields_field","expose_oneof","expose_oneof_all","generate_accessors","generate_accessors_all","generate_accessors_field","lite_runtime_all","serde_derive","serde_derive_all","serde_derive_cfg","serde_derive_cfg_all","fmt","print_to","print_to_string","ProtobufType","ProtobufTypeBool","ProtobufTypeBytes","ProtobufTypeChars","ProtobufTypeDouble","ProtobufTypeEnum","ProtobufTypeFixed32","ProtobufTypeFixed64","ProtobufTypeFloat","ProtobufTypeInt32","ProtobufTypeInt64","ProtobufTypeMessage","ProtobufTypeSfixed32","ProtobufTypeSfixed64","ProtobufTypeSint32","ProtobufTypeSint64","ProtobufTypeString","ProtobufTypeUint32","ProtobufTypeUint64","Value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size_with_length_delimiter","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_cached_size","get_cached_size","get_cached_size_with_length_delimiter","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","get_from_unknown","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","wire_type","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","write_with_cached_size","Any","Api","BoolValue","BytesValue","CARDINALITY_OPTIONAL","CARDINALITY_REPEATED","CARDINALITY_REQUIRED","CARDINALITY_UNKNOWN","DoubleValue","Duration","Empty","Enum","EnumValue","Field","FieldMask","Field_Cardinality","Field_Kind","FloatValue","Int32Value","Int64Value","ListValue","Method","Mixin","NULL_VALUE","NullValue","Option","SYNTAX_PROTO2","SYNTAX_PROTO3","SourceContext","StringValue","Struct","Syntax","TYPE_BOOL","TYPE_BYTES","TYPE_DOUBLE","TYPE_ENUM","TYPE_FIXED32","TYPE_FIXED64","TYPE_FLOAT","TYPE_GROUP","TYPE_INT32","TYPE_INT64","TYPE_MESSAGE","TYPE_SFIXED32","TYPE_SFIXED64","TYPE_SINT32","TYPE_SINT64","TYPE_STRING","TYPE_UINT32","TYPE_UINT64","TYPE_UNKNOWN","Timestamp","Type","UInt32Value","UInt64Value","Value","Value_oneof_kind","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","bool_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cardinality","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear_bool_value","clear_cardinality","clear_default_value","clear_enumvalue","clear_fields","clear_fields","clear_file_name","clear_json_name","clear_kind","clear_list_value","clear_methods","clear_mixins","clear_name","clear_name","clear_name","clear_name","clear_name","clear_name","clear_name","clear_name","clear_nanos","clear_nanos","clear_null_value","clear_number","clear_number","clear_number_value","clear_oneof_index","clear_oneofs","clear_options","clear_options","clear_options","clear_options","clear_options","clear_options","clear_packed","clear_paths","clear_request_streaming","clear_request_type_url","clear_response_streaming","clear_response_type_url","clear_root","clear_seconds","clear_seconds","clear_source_context","clear_source_context","clear_source_context","clear_string_value","clear_struct_value","clear_syntax","clear_syntax","clear_syntax","clear_syntax","clear_type_url","clear_type_url","clear_value","clear_value","clear_value","clear_value","clear_value","clear_value","clear_value","clear_value","clear_value","clear_value","clear_value","clear_values","clear_version","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_value","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","enum_descriptor_static","enum_descriptor_static","enum_descriptor_static","enum_descriptor_static","enumvalue","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fields","fields","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_i32","get_bool_value","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cardinality","get_default_value","get_enumvalue","get_fields","get_fields","get_file_name","get_json_name","get_kind","get_list_value","get_methods","get_mixins","get_name","get_name","get_name","get_name","get_name","get_name","get_name","get_name","get_nanos","get_nanos","get_null_value","get_number","get_number","get_number_value","get_oneof_index","get_oneofs","get_options","get_options","get_options","get_options","get_options","get_options","get_packed","get_paths","get_request_streaming","get_request_type_url","get_response_streaming","get_response_type_url","get_root","get_seconds","get_seconds","get_source_context","get_source_context","get_source_context","get_string_value","get_struct_value","get_syntax","get_syntax","get_syntax","get_syntax","get_type_url","get_type_url","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_value","get_value","get_value","get_value","get_value","get_value","get_value","get_value","get_value","get_value","get_value","get_values","get_version","has_bool_value","has_list_value","has_null_value","has_number_value","has_source_context","has_source_context","has_source_context","has_string_value","has_struct_value","has_value","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","is","is_dyn","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","json_name","kind","kind","list_value","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","methods","mixins","mut_default_value","mut_enumvalue","mut_fields","mut_fields","mut_file_name","mut_json_name","mut_list_value","mut_methods","mut_mixins","mut_name","mut_name","mut_name","mut_name","mut_name","mut_name","mut_name","mut_name","mut_oneofs","mut_options","mut_options","mut_options","mut_options","mut_options","mut_options","mut_paths","mut_request_type_url","mut_response_type_url","mut_root","mut_source_context","mut_source_context","mut_source_context","mut_string_value","mut_struct_value","mut_type_url","mut_type_url","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_value","mut_value","mut_value","mut_value","mut_values","mut_version","name","name","name","name","name","name","name","name","nanos","nanos","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","null_value","number","number","number_value","oneof_index","oneofs","options","options","options","options","options","options","pack","pack_dyn","packed","paths","request_streaming","request_type_url","response_streaming","response_type_url","root","seconds","seconds","set_bool_value","set_cardinality","set_default_value","set_enumvalue","set_fields","set_fields","set_file_name","set_json_name","set_kind","set_list_value","set_methods","set_mixins","set_name","set_name","set_name","set_name","set_name","set_name","set_name","set_name","set_nanos","set_nanos","set_null_value","set_number","set_number","set_number_value","set_oneof_index","set_oneofs","set_options","set_options","set_options","set_options","set_options","set_options","set_packed","set_paths","set_request_streaming","set_request_type_url","set_response_streaming","set_response_type_url","set_root","set_seconds","set_seconds","set_source_context","set_source_context","set_source_context","set_string_value","set_struct_value","set_syntax","set_syntax","set_syntax","set_syntax","set_type_url","set_type_url","set_value","set_value","set_value","set_value","set_value","set_value","set_value","set_value","set_value","set_value","set_value","set_values","set_version","source_context","source_context","source_context","string_value","struct_value","syntax","syntax","syntax","syntax","take_default_value","take_enumvalue","take_fields","take_fields","take_file_name","take_json_name","take_list_value","take_methods","take_mixins","take_name","take_name","take_name","take_name","take_name","take_name","take_name","take_name","take_oneofs","take_options","take_options","take_options","take_options","take_options","take_options","take_paths","take_request_type_url","take_response_type_url","take_root","take_source_context","take_source_context","take_source_context","take_string_value","take_struct_value","take_type_url","take_type_url","take_value","take_value","take_value","take_value","take_values","take_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_url","type_url","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unpack","unpack_dyn","value","value","value","value","value","value","value","value","value","value","value","value","value","value","value","values","values","values","values","values","version","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","0","0","0","0","0","0","FIELD_NUMBER_MAX","TAG_TYPE_BITS","TAG_TYPE_MASK","Tag","WireType","WireTypeEndGroup","WireTypeFixed32","WireTypeFixed64","WireTypeLengthDelimited","WireTypeStartGroup","WireTypeVarint","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","field_number","fmt","from","from","into","into","make","new","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unpack","value"],"q":["protobuf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","protobuf::UnknownValue","","","","protobuf::UnknownValueRef","","","","protobuf::descriptorprotobuf::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","protobuf::error::ProtobufError","","","","protobuf::error::WireError","","","protobuf::ext","","","","","","","","","","","","","","","","","","","","","","protobuf::lazy","","","","","","","","","","","protobuf::pluginprotobuf::reflect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","protobuf::reflect::ReflectFieldRef","","","protobuf::reflect::ReflectValueRef","","","","","","","","","","","protobuf::rt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","protobuf::rustproto","","protobuf::rustproto::exts","","","","","","","","","","","","","","","","","","","protobuf::text_format","","","protobuf::typesprotobuf::well_known_typesprotobuf::well_known_types::Value_oneof_kind","","","","","","protobuf::wire_format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Cached size field used in generated code. It is always …","anything that can be cleared","Buffered read with handy utilities.","Buffered write with handy utilities","32-bit unknown","32-bit unknown (e. g. <code>fixed32</code> or <code>float</code>)","64-bit unknown","64-bit unknown (e. g. <code>fixed64</code> or <code>double</code>)","Length-delimited unknown","Length-delimited unknown (e. g. <code>message</code> or <code>string</code>)","Trait implemented for all generated structs for protobuf …","Trait implemented by all protobuf enum types.","Wrapper around vector to avoid deallocations on clear.","Like <code>Option&lt;T&gt;</code>, but keeps the actual element on <code>clear</code>.","Like <code>Option&lt;Box&lt;T&gt;&gt;</code>, but keeps the actual element on <code>clear</code>.","Hold “unknown” fields in parsed message.","Iterator over <code>UnknownFields</code>","Unknown value.","Reference to unknown value.","Field unknown values.","Iterator over unknown values","protobuf crate version","This symbol can be referenced to assert that proper …","Varint unknown","Varint unknown (e. g. <code>int32</code> or <code>bool</code>)","Add unknown fixed 32-bit","Add unknown fixed 64-bit","Add unknown length delimited","Add unknown value","Add unknown value","Add unknown varint","View self as <code>Any</code>.","View self as mutable <code>Any</code>.","View self as mutable <code>Any</code>.","View data as mutable <code>Option</code>.","View data as mutable reference option.","Get data a mutable raw pointer.","View data as mutable slice.","Get data as raw pointer.","","View data as <code>Option</code>.","View data as reference option.","View data as slice.","","","","","","","","","","","","","","","","","","","","","","","","","","<code>CodedOutputStream</code> which writes directly to bytes.","How many bytes until current limit","Return current capacity.","Check we are at EOF.","Check if EOF is reached.","Check if all required fields of this object are …","Check if all required fields of this object are …","Clear this make, make it equivalent to newly created …","","Clear.","Clear this object. Note, contained object destructor is …","Clear this object, but do not call destructor of …","","","","","","","","","","","","","","Compute and cache size of this message and all nested …","","True iff this container contains given element.","","","","","","","Return a pointer to default immutable message with static …","","","Generated file from <code>google/protobuf/descriptor.proto</code>","Message descriptor for this message, used for reflection.","Get enum value descriptor.","Get enum value descriptor.","Get message descriptor for message type.","Get message descriptor for message type.","Get enum descriptor.","Get enum descriptor.","Get enum descriptor by type.","Get enum descriptor by type.","Are we at EOF?","","","","","","","","Protobuf error type","Utilities to support “extension” fields.","","","The map.","","32-bit unknowns","64-bit unknowns","Flush the buffer to underlying write","","","","","","","","","","","","","","","","","","","","","","","","","Create from <code>BufRead</code>.","Read from byte slice","Try to create an enum from <code>i32</code> value. Return <code>None</code> if value …","","Construct <code>SingularField</code> from <code>Option</code>.","Construct <code>SingularPtrField</code> from optional.","Copy slice data to <code>RepeatedField</code>","Copy slice data to <code>RepeatedField</code>","Create a contained with data from given vec.","Get cached size","Find unknown field by number","Get size previously computed by <code>compute_size</code>.","Get data as mutable reference. Panics if empty.","Get data as reference. Panics if empty.","As ref","Get a reference to unknown fields.","","","","","","","","View all but last elements of this container.","Insert an element at specified position.","","","","","","","","","","","","","","Convert boxed self to boxed <code>Any</code>.","Convert boxed self to boxed <code>Any</code>.","Into owned iterator.","","","","Convert this object into <code>Option</code>.","Convert into <code>Option&lt;T&gt;</code>.","Convert data into vec.","True iff all required fields are initialized. Always …","True iff this object contains no data.","True iff this object contains no data.","True iff this object contains data.","True iff this object contains data.","Immutable data iterator.","View as iterator over references.","View data as iterator.","Iterate over unknown values","Iterate over all unknowns","Mutable data iterator.","JSON serialization and deserialization.","Last element of this container.","Mutable last element of this container.","Lazily initialized data. Used in generated code.","Return number of elements in this container.","Length-delimited unknowns","Apply a function to contained element and store result in …","Apply given function to contained data to construct …","Update this message object with fields read from given …","Update this message object with fields read from given …","Update this message object with fields read from given …","Read message, do not check if message is initialized","View as iterator over mutable references.","View data as mutable iterator.","Get a mutable reference to unknown fields.","","","Create an empty message object.","Wrap a <code>Read</code>.","Construct from given <code>Write</code>.","Create new empty container.","Empty unknown fields","","","Construct a <code>SingularField</code> with no data.","Construct an empty <code>SingularPtrField</code>.","Parse message from stream.","Parse message from stream.","Parse message from byte array.","Parse message from byte array.","Parse message from byte array.","Parse message from reader. Parse stops on EOF or when …","Parse message from reader. Parse stops on EOF or when …","Parse message from reader. Parse stops on EOF or when …","Parse length-delimited message from stream.","Parse length-delimited message from bytes.","Parse length-delimited message from <code>Read</code>.","Generated file from <code>google/protobuf/compiler/plugin.proto</code>","Pop last element.","Restore previous limit.","How many bytes processed","Push an element to the end.","Push default value. This operation could be faster than …","Push new limit, return previous limit.","","Read bytes into given <code>buf</code>.","Read <code>bool</code>","Read <code>bytes</code> field, length delimited","Read <code>bytes</code> field, length delimited","Read <code>double</code>","Read <code>enum</code> as <code>ProtobufEnum</code>","Read <code>fixed32</code>","Read <code>fixed64</code>","Read <code>float</code>","Read <code>int32</code>","Read <code>int64</code>","Read message","Read one byte","Read exact number of bytes","Read raw bytes into the supplied vector.  The vector will …","Read little-endian 32-bit integer","Read little-endian 64-bit integer","Read varint","Read varint","Read repeated packed <code>bool</code>","Read <code>repeated</code> packed <code>double</code>","Read repeated packed <code>enum</code> into <code>ProtobufEnum</code>","Read repeated packed <code>fixed32</code>","Read repeated packed <code>fixed64</code>","Read <code>repeated</code> packed <code>float</code>","Read repeated packed <code>int32</code>","Read <code>repeated</code> packed <code>int64</code>","Read repeated packed <code>sfixed32</code>","Read repeated packed <code>sfixed64</code>","Read repeated packed <code>sint32</code>","Read repeated packed <code>sint64</code>","Read repeated packed <code>uint32</code>","Read repeated packed <code>uint64</code>","Read <code>sfixed32</code>","Read <code>sfixed64</code>","Read <code>sint32</code>","Read <code>sint64</code>","Read <code>string</code> field, length delimited","Read <code>string</code> field, length delimited","Read tag","Read tag, return it is pair (field number, wire type)","Read <code>uint32</code>","Read <code>uint64</code>","Read <code>UnknownValue</code>","Reflection implementation for protobuf types.","Remove an element from specified position.","Remove unknown field by number","Retains only the elements specified by the predicate.","Reverse in place.","Functions used by generated protobuf code. Should not be …","Generated file from <code>rustproto.proto</code>","Set cached size","Initialize this object with default value. This operation …","Initialize this object with default value. This operation …","Set the recursion limit.","Construct unknown value from <code>sint32</code> value.","Construct unknown value from <code>sint64</code> value.","Skip field","Skip exact number of bytes","Get subslice of this container.","Get slice from given index.","Get mutable slice from given index.","Get mutable subslice of this container.","Get slice to given index.","Get mutable slice to given index.","Construct this object from given value.","Construct <code>SingularPtrField</code> from given object.","Sort elements with given comparator.","View this container as two slices split at given index.","View this container as two mutable slices split at given …","View all but first elements of this container.","Return data as option, clear this object.","Take data as option, leaving this object empty.","Protobuf “text format” implementation.","","","","","","","Copy this data into new vec.","Truncate at specified length.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get type id for downcasting.","Get type id for downcasting.","","","","","","","","","","","Implementations of <code>ProtobufType</code> for all types.","Unwrap data, panic if not set.","Take the data. Panics if empty","Unwrap data as mutable reference.","Unwrap data or return given default value.","Take the data or return supplied default element if empty.","Get contained data, consume self. Return default value for …","Get contained data, consume self. Return default value for …","Unwrap data or return given default value.","Take the data or return supplied default element if empty.","Unwrap data as reference.","Get enum <code>i32</code> value.","Get all enum values for enum type.","Get all enum values for enum type.","Varint unknowns","<code>CodedOutputStream</code> which writes directly to <code>Vec&lt;u8&gt;</code>.","Generated code for “well known types”","Serialization constants.","Wire-type to serialize this unknown","Wire type for this unknown","","Write <code>bool</code> field","Write <code>bool</code>","Write <code>bytes</code> field","Write bytes","Write <code>double</code> field","Write <code>double</code>","Write <code>enum</code> field","Write <code>enum</code>","Write <code>enum</code> field","Write <code>enum</code>","Write <code>fixed32</code> field","Write <code>fixed32</code>","Write <code>fixed64</code> field","Write <code>fixed64</code>","Write <code>float</code> field","Write <code>float</code>","Write <code>int32</code> field","Write varint","Write <code>int64</code> field","Write varint","Write the message to the stream prepending the message …","Write the message to the stream prepending the message …","Write the message to the bytes vec, prepend the message …","Write the message to the bytes vec, prepend the message …","Write the message to the vec, prepend the message with …","Write the message to the vec, prepend the message with …","Write the message to the writer, prepend the message with …","Write the message to the writer, prepend the message with …","Write <code>message</code> field","Write message","Write a byte","Write bytes","Write 32-bit integer little endian","Write 64-bit integer little endian","Write varint","Write varint","Write <code>sfixed32</code> field","Write <code>sfixed32</code>","Write <code>sfixed64</code> field","Write <code>sfixed64</code>","Write <code>sint32</code> field","Write zigzag varint","Write <code>sint64</code> field","Write zigzag varint","Write <code>string</code> field","Write string","Write a tag","Write the message to the stream.","Write the message to the stream.","Write the message to bytes vec.","Write the message to bytes vec.","Write the message to bytes vec.","Write the message to bytes vec.","Write message to the stream.","Write the message to the writer.","Write the message to the writer.","Write <code>uint32</code> field","Write varint","Write <code>uint64</code> field","Write varint","Write unknown field","Write unknown fields","Write unknown valuealformed map field","Incorrect tag value","Malformed varint","Enum value is unknown","I/O error when reading or writing","Not all required fields set","Other error","Message is too nested","Generic protobuf error","<code>Result</code> alias for <code>ProtobufError</code>","Could not read complete message because stream is EOF","Could not read complete message because stream is EOF","Wrong wire type for given field","Protocol contains a string which is not valid UTF-8 string","String is not valid UTD-8","Enum values added here for diagnostic purposes. Users …","Malformed input","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message name","","","","Optional ext field","Repeated ext field","","","","","Extension field number","Extension field number","","","Get a copy of value from a message.","Get a copy of value from a message (<strong>not implemented</strong>).","","","Marker","Extension field number","","","","","","","Uninitialized <code>Lazy</code> object.","Lasily initialized data.","Used to initialize <code>lock</code> field in <code>Lazy</code> struct.","","","","Get lazy field value, initialize it with given function if …code>bool</code>","<code>bytes</code>","<code>enum</code>","Dynamic representation of enum type.","Description for enum variant.","<code>f32</code>","<code>f64</code>","Field descriptor.","<code>i32</code>","<code>i64</code>","Map field","<code>message</code>","Dynamic message type","Singular field, optional or required in proto3 and just …","Type implemented by all protobuf elementary types (ints, …","Reference to a value stored in a field, optional, repeated …","A reference to a value","Repeated field","<code>string</code>","<code>u32</code>","<code>u64</code>","Convert to <code>Any</code>","Convert to <code>Any</code>","As ref","Return <code>ProtobufValueRef</code> if self is <code>Copy</code>.","Return <code>ProtobufValueRef</code> if self is <code>Copy</code>.","","","","","","","","","","","","","","","Find field by name","Find field by number","Message field descriptors.","","","<code>EnumDescriptor</code> for enum type","Get a message descriptor for given message type","","","","","","","Fully qualified protobuf message name","Get <code>bool</code> field.","Get <code>bytes</code> field.","Get <code>enum</code> field.","Get <code>float</code> field.","Get <code>double</code> field.","Find message field by protobuf field name","Find message field by field name or field JSON name","Find message field by field name","Get <code>i32</code> field.","Get <code>i64</code> field.","Get message field or default instance if field is unset.","Get underlying <code>DescriptorProto</code> object.","Get field of any type.","Get <code>string</code> field.","Get <code>u32</code> field.","Get <code>u64</code> field.","Check if field is set in given message.","","","","","","","Is value non-zero?","Is value non-zero?","If this field repeated?","JSON field name.","Return length of repeated field.","Enum name as given in <code>.proto</code> file","Field name as specified in <code>.proto</code> file","Message name as given in <code>.proto</code> file","Name of enum variant as specified in proto file","Create new enum descriptor.","New empty message","Create new enum descriptor.","Get <code>.proto</code> description of field","","","","","","","","","","","","","","","","","","","","<code>i32</code> value of the enum variant","Find enum value by name","Find enum value by number","","","","","","","","","","","","","","","Uninitialized <code>Lazy</code> object.","Lazily initialized data.","Helper trait implemented by integer types which could be …","Helper trait implemented by integer types which could be …","","","Size of encoded bytes field.","Compute serialized size of <code>map</code> field and cache nested …","Given <code>u32</code> value compute varint encoded length.","Given <code>u64</code> value compute varint encoded length.","Size of encoded enum field value.","","Get lazy field value, initialize it with given function if …","","Size of self when encoded as varint.","Size of self when encoded as zigzag varint.","Read <code>map</code> field.","Read repeated <code>enum</code> field into given vec, and when value is …","Read repeated <code>enum</code> field into given vec, and when value is …","Read repeated <code>bool</code> field into given vec.","Read repeated <code>bytes</code> field into given vec.","Read repeated <code>double</code> field into given vec.","Read repeated <code>enum</code> field into given vec. This function is …","Read repeated <code>enum</code> field into given vec, and when value is …","Read repeated <code>fixed32</code> field into given vec.","Read repeated <code>fixed64</code> field into given vec.","Read repeated <code>float</code> field into given vec.","Read repeated <code>int32</code> field into given vec.","Read repeated <code>int64</code> field into given vec.","Read repeated <code>message</code> field.","Read repeated <code>sfixed32</code> field into given vec.","Read repeated <code>sfixed64</code> field into given vec.","Read repeated <code>sint32</code> field into given vec.","Read repeated <code>sint64</code> field into given vec.","Read repeated <code>string</code> field into given vec.","Read repeated <code>uint32</code> field into given vec.","Read repeated <code>uint64</code> field into given vec.","Read singular <code>bytes</code> field.","Read singular <code>message</code> field.","Read singular <code>bytes</code> field for proto3.","Read singular <code>string</code> field for proto3.","Read singular <code>string</code> field.","Handle unknown field in generated code. Either store a …","Size of encoded string field.","Compute tag size. Size of tag does not depend on wire type.","","","","Create an error for unexpected wire type.","Size of encoded unknown fields size.","Integer value size when encoded as specified wire type.","Length of value when encoding with zigzag encoding with tag","Integer value size when encoded as specified wire type.","Size of serialized repeated packed enum field, excluding …","Size of serialized data with length prefix and tag","Size of serialized repeated packed field, excluding length …","Size of serialized data with length prefix and tag","Size of serialized repeated packed field, excluding length …","Size of serialized data with length prefix and tag","Write map, message sizes must be already known.","Extension fields","","","","","","","","","","","","","","","","","","","","","Text-format to <code>fmt::Formatter</code>.","Text-format","Text-format","Protobuf elementary type as generic trait","<code>bool</code>","<code>bytes</code>","Something which should be deleted","<code>double</code>","<code>enum</code>","<code>fixed32</code>","<code>fixed64</code>","<code>float</code>","<code>uint32</code>","<code>int64</code>","<code>message</code>","<code>sfixed32</code>","<code>sfixed64</code>","<code>sint32</code>","<code>sint64</code>","<code>string</code>","<code>uint32</code>","<code>uint64</code>","Rust type of value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute wire size","","","","","","","","","","","","","","","","","","Compute size adding length prefix if wire type is length …","","","","","","","","","","","","","","","","","","","Get previously computed size","","Get previously cached size with length prefix","Get value from <code>UnknownValues</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read value from <code>CodedInputStream</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wire type when writing to stream","","","","","","","","","","","","","","","","","","Write a value with previously cached sizeheck if <code>Any</code> contains a message of given type.","Check if <code>Any</code> contains a message of given typeack any message into <code>well_known_types::Any</code> value.","Pack any message into <code>well_known_types::Any</code> valuextract a message from this <code>Any</code>.","Extract a message from this <code>Any</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Max possible field number","Tag occupies 3 bits","Tag mask","Parsed protobuf tag, which is a pair of field number and …","One of six defined protobuf wire types","Groups are not supported by rust-protobuf","Fixed size 64 bit (e. g. <code>fixed32</code> or <code>float</code>)","Fixed size 64 bit (e. g. <code>fixed64</code> or <code>double</code>)","Length-delimited (e. g. <code>message</code> or <code>string</code>)","Groups are not supported by rust-protobuf","Varint (e. g. <code>int32</code> or <code>sint64</code>)","","","","","","","","","","Protobuf field number","","","","","","Create a tag from a field number and wire type.","Parse wire type","Parse integer into <code>Tag</code> object","","","","","","","","","Tag as pair of (field number, wire type)","Pack a tag to integer"],"i":[0,0,0,0,1,2,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,3,3,4,3,3,5,5,5,6,7,8,8,8,8,6,7,8,9,10,8,8,6,7,1,11,12,13,2,4,3,9,10,8,6,7,1,11,12,13,2,4,3,10,9,8,9,10,5,5,14,8,8,6,7,3,8,6,7,13,4,3,8,6,7,13,4,3,5,9,8,8,6,7,13,4,3,5,8,8,0,5,15,15,5,5,15,15,15,15,9,8,8,6,7,13,4,3,0,0,8,8,3,9,4,4,10,10,8,6,7,13,2,4,3,9,10,8,8,8,6,6,7,7,1,11,12,13,2,4,3,9,9,15,8,6,7,8,8,8,13,3,5,7,7,2,5,8,6,7,4,3,8,8,8,8,9,10,8,8,6,7,1,11,12,13,2,4,3,5,5,8,8,11,12,6,7,8,5,6,7,6,7,8,6,7,4,3,8,0,8,8,0,8,4,6,7,5,5,5,9,6,7,5,4,3,5,9,10,8,3,11,12,6,7,5,5,0,5,5,0,5,5,0,0,0,0,8,9,9,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,8,3,8,8,0,0,13,6,7,9,2,2,9,9,8,8,8,8,8,8,6,7,8,8,8,8,6,7,0,8,6,7,13,4,3,8,8,9,10,8,6,7,1,11,12,13,2,4,3,9,10,8,6,7,1,11,12,13,2,4,3,9,10,5,5,8,6,7,1,11,12,13,2,4,3,0,6,7,6,6,7,6,7,6,7,6,15,15,15,4,10,0,0,1,2,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,5,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,16,17,18,19,20,21,22,23,24,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,27,27,27,28,28,28,24,0,0,0,0,26,0,0,24,25,25,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,52,48,30,56,44,44,43,44,46,37,32,44,45,46,48,49,50,51,52,34,35,40,56,32,33,37,32,33,33,33,37,31,44,51,52,43,53,44,44,44,44,44,44,37,46,37,46,55,55,54,45,45,32,42,32,33,37,38,39,41,42,43,52,53,52,33,45,37,41,44,33,37,44,32,33,34,37,38,39,41,42,43,43,32,46,55,56,44,44,44,44,52,37,32,44,33,39,33,39,44,43,32,32,56,55,34,35,40,52,44,32,55,37,36,44,45,46,47,48,49,50,51,39,46,32,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,32,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,29,28,24,25,27,26,32,33,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,32,33,33,33,31,0,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,29,28,24,25,27,26,52,48,30,56,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,44,44,43,44,46,37,32,44,45,46,48,49,50,51,52,34,35,40,56,32,33,37,32,33,33,33,37,31,44,51,52,43,53,44,44,44,44,44,44,37,46,37,46,55,55,54,45,45,32,42,32,33,37,38,39,41,42,43,52,53,52,33,45,37,41,44,33,37,44,32,33,34,37,38,39,41,42,43,43,32,46,55,56,44,44,44,44,52,37,32,44,33,39,33,39,44,43,32,32,56,55,34,35,40,52,44,32,55,37,36,44,45,46,47,48,49,50,51,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,39,46,32,52,48,56,44,44,43,44,46,37,44,45,46,48,49,50,51,52,34,35,40,56,37,37,44,51,52,43,53,44,44,44,44,44,44,37,46,37,46,55,45,45,32,33,37,38,39,41,42,43,53,52,45,37,41,44,37,44,32,33,34,37,38,39,41,42,43,43,32,46,44,44,44,44,52,37,44,44,43,32,56,34,35,40,52,44,32,55,37,46,29,28,24,25,27,26,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,55,54,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,32,42,52,30,44,37,32,32,33,37,32,33,33,33,31,44,52,43,44,44,37,55,55,54,32,42,32,33,37,38,39,41,42,43,52,53,33,44,33,32,33,34,37,38,39,41,42,43,43,32,55,56,44,44,44,32,33,39,33,39,44,32,32,56,55,52,44,32,55,37,36,44,45,46,47,48,49,50,51,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,39,32,52,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,33,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,30,30,56,56,33,32,33,34,37,38,39,41,42,43,55,56,32,33,39,33,39,32,52,48,30,56,44,44,43,44,46,37,32,44,45,46,48,49,50,51,52,34,35,40,56,32,33,37,32,33,33,33,37,31,44,51,52,43,53,44,44,44,44,44,44,37,46,37,46,55,55,54,45,45,32,42,32,33,37,38,39,41,42,43,52,53,52,33,45,37,41,44,33,37,44,32,33,34,37,38,39,41,42,43,43,32,46,55,56,44,44,44,44,52,37,32,44,33,39,33,39,44,43,32,32,56,55,34,35,40,52,44,32,55,37,36,44,45,46,47,48,49,50,51,39,46,32,32,55,52,30,44,37,32,32,33,37,32,33,33,33,31,44,52,43,44,44,37,55,55,54,32,42,32,33,37,38,39,41,42,43,52,53,33,44,33,32,33,34,37,38,39,41,42,43,43,32,55,56,44,44,44,32,33,39,33,39,44,32,32,56,55,52,44,32,55,37,36,44,45,46,47,48,49,50,51,39,32,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,31,32,33,34,35,36,37,29,28,38,39,40,41,42,43,44,24,45,46,25,27,47,48,49,50,51,26,52,53,54,55,30,56,36,44,45,46,47,48,49,50,51,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,29,28,24,25,27,26,39,29,28,24,25,27,26,32,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,30,56,57,57,57,57,58,58,57,57,0,0,57,57,57,58,57,0,58,57,58,57,58,58,58,57,57,58,58,57,58,58,58,57,58,57,58,57,58,57,58,57,58,59,60,61,62,63,64,65,0,0,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,68,0,0,68,68,68,68,68,68,68,68,0,0,0,0,69,69,0,70,71,72,73,70,71,72,73,70,71,72,73,69,70,71,72,73,69,70,71,72,73,69,70,71,72,73,70,71,72,73,71,73,72,72,71,73,73,70,70,73,71,70,71,70,72,70,71,72,73,69,70,71,72,73,69,71,70,71,72,73,70,71,72,73,69,70,71,72,73,70,71,72,73,70,71,72,73,69,70,71,72,73,69,72,0,71,70,71,72,73,69,70,71,72,73,69,69,73,70,71,72,73,71,73,72,72,71,73,73,70,70,73,71,70,71,70,72,70,71,72,73,71,73,72,73,73,70,70,73,71,70,70,72,69,70,71,72,73,69,70,71,72,73,70,71,72,73,70,71,72,73,71,73,72,72,71,73,73,73,71,71,70,70,71,72,73,70,71,72,73,70,70,71,71,72,72,73,73,71,71,73,72,72,71,73,73,70,70,73,71,70,71,70,72,71,73,72,72,71,73,73,73,71,71,70,70,71,72,73,69,70,71,72,73,69,70,71,72,73,69,70,71,72,73,69,70,71,72,73,69,69,70,71,72,73,74,74,74,0,0,74,74,0,74,74,75,74,0,75,0,0,0,75,74,74,74,76,76,76,76,76,77,75,78,79,80,74,77,75,78,79,80,74,80,80,79,79,79,80,74,77,79,77,75,78,79,80,74,79,78,78,78,78,78,79,79,79,78,78,78,79,78,78,78,78,78,77,75,78,79,80,74,76,76,78,78,78,77,78,79,80,77,79,77,78,80,77,75,78,79,80,74,77,75,78,79,80,74,77,75,78,79,80,74,80,77,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,95,95,0,0,0,0,0,95,95,95,96,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,98,116,98,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,0,0,0,0,117,117,117,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,0,0,119,119,0,0,0,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0,0,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,147,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,134,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,130,134,134,135,129,133,128,134,134,130,122,122,122,123,124,133,134,135,136,137,125,132,130,134,136,130,134,133,122,123,133,134,135,136,134,127,123,123,123,123,124,125,132,122,133,135,130,130,122,123,133,135,121,134,121,137,138,139,140,141,142,143,144,145,146,131,122,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,134,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,118,120,117,119,135,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,129,133,128,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,118,120,117,119,130,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,134,134,135,129,133,128,134,134,130,122,122,122,123,124,133,134,135,136,137,125,132,130,134,136,130,134,133,122,123,133,134,135,136,134,127,123,123,123,123,124,125,132,122,133,135,130,130,122,123,133,135,121,134,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,121,137,138,139,140,141,142,143,144,145,146,131,122,130,130,130,130,122,133,135,130,130,137,118,120,117,119,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,121,121,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,134,130,134,147,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,122,122,134,135,129,133,128,134,130,122,122,122,123,124,133,134,135,136,137,133,122,123,133,134,135,136,127,123,123,124,122,133,135,130,130,121,134,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,121,137,145,146,131,122,122,123,124,133,134,135,136,137,125,132,121,122,123,124,125,126,127,128,129,130,147,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,134,136,147,134,133,122,123,133,134,135,136,121,121,134,127,123,123,123,123,124,125,132,130,134,134,135,129,133,128,134,134,130,122,122,122,123,124,133,134,135,136,137,125,132,130,134,136,130,134,133,122,123,133,134,135,136,134,127,123,123,123,123,124,125,132,122,133,135,130,130,122,123,133,135,121,134,121,137,138,139,140,141,142,143,144,145,146,131,122,122,133,135,147,147,122,123,133,135,134,135,129,133,128,134,130,122,122,122,123,124,133,134,135,136,137,133,122,123,133,134,135,136,127,123,123,124,122,133,135,130,130,121,134,121,137,145,146,131,122,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,122,123,124,125,126,127,128,129,130,147,131,118,132,133,134,120,117,135,136,137,119,138,139,140,141,142,143,144,145,146,121,134,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,121,121,118,120,117,119,121,137,138,139,140,141,142,143,144,145,146,118,120,117,119,131,122,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,0,0,0,0,0,154,154,154,154,154,154,154,155,154,155,154,155,154,155,154,155,154,154,155,154,155,155,154,155,154,155,154,155,154,155,154,155,155,155],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]]],[[["u64",15],["u32",15]]],[[["vec",3,["u8"]],["u8",15],["u32",15]]],[[["unknownvalue",4]]],[[["u32",15],["unknownvalue",4]]],[[["u64",15],["u32",15]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["codedoutputstream",3]],[[],["u64",15]],[[],["usize",15]],[[],["protobufresult",6]],[[]],[[],["protobufresult",6]],[[],["protobufresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["repeatedfield",3]],[[],["singularfield",3]],[[],["singularptrfield",3]],[[],["cachedsize",3]],[[],["unknownvalues",3]],[[],["unknownfields",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[["usize",15]]],[[],["bool",15]],[[],["repeatedfield",3]],[[],["singularfield",3]],[[],["singularptrfield",3]],[[],["cachedsize",3]],[[],["unknownvalues",3]],[[],["unknownfields",3]],[[]],[[]],[[]],null,[[],["messagedescriptor",3]],[[],["enumvaluedescriptor",3]],[[],["enumvaluedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],[["protobufresult",6,["bool"]],["bool",15]]],[[["repeatedfield",3]],["bool",15]],[[],["bool",15]],[[["singularfield",3]],["bool",15]],[[["singularptrfield",3]],["bool",15]],[[["cachedsize",3]],["bool",15]],[[["unknownvalues",3]],["bool",15]],[[["unknownfields",3]],["bool",15]],null,null,[[["intoiterator",8]]],[[["intoiterator",8]]],null,[[],["result",6]],null,null,[[],["protobufresult",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["repeatedfield",3]],[[["vec",3]],["repeatedfield",3]],[[]],[[["option",4]]],[[]],[[["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bufread",8]],["codedinputstream",3]],[[],["codedinputstream",3]],[[["i32",15]],["option",4]],[[["intoiterator",8]],["repeatedfield",3]],[[["option",4]],["singularfield",3]],[[["option",4]],["singularptrfield",3]],[[["asref",8]],["repeatedfield",3]],[[],["repeatedfield",3]],[[["vec",3]],["repeatedfield",3]],[[],["u32",15]],[[["u32",15]],[["option",4,["unknownvalues"]],["unknownvalues",3]]],[[],["u32",15]],[[]],[[]],[[],["unknownvalueref",4]],[[],["unknownfields",3]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[],["intoiter",3]],[[],["intoiter",3]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["vec",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["intoiter",3]],[[],["intoiter",3]],[[],["unknownvaluesiter",3]],[[],["unknownfieldsiter",3]],[[],["itermut",3]],null,[[],["option",4]],[[],["option",4]],null,[[],["usize",15]],null,[[],["singularptrfield",3]],[[],["singularptrfield",3]],[[["codedinputstream",3]],["protobufresult",6]],[[],["protobufresult",6]],[[],["protobufresult",6]],[[],["protobufresult",6]],[[],["intoiter",3]],[[],["intoiter",3]],[[],["unknownfields",3]],[[["unknownvalues",3]],["bool",15]],[[["unknownfields",3]],["bool",15]],[[]],[[["read",8]],["codedinputstream",3]],[[["write",8]],["codedoutputstream",3]],[[],["repeatedfield",3]],[[],["unknownfields",3]],[[],[["option",4,["unknownvalueref"]],["unknownvalueref",4]]],[[],["option",4]],[[],["singularfield",3]],[[],["singularptrfield",3]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[],[["message",8],["protobufresult",6]]],[[],["protobufresult",6]],[[],["protobufresult",6]],[[["read",8]],[["message",8],["protobufresult",6]]],[[["read",8]],["protobufresult",6]],[[["read",8]],["protobufresult",6]],[[["codedinputstream",3]],[["message",8],["protobufresult",6]]],[[],[["message",8],["protobufresult",6]]],[[["read",8]],[["message",8],["protobufresult",6]]],null,[[],["option",4]],[[["u64",15]]],[[],["u64",15]],[[]],[[]],[[["u64",15]],[["u64",15],["protobufresult",6,["u64"]]]],[[],[["result",6,["usize"]],["usize",15]]],[[],["protobufresult",6]],[[],[["protobufresult",6,["bool"]],["bool",15]]],[[],[["vec",3,["u8"]],["protobufresult",6,["vec"]]]],[[["vec",3]],["protobufresult",6]],[[],[["protobufresult",6,["f64"]],["f64",15]]],[[],[["protobufenum",8],["protobufresult",6]]],[[],[["protobufresult",6,["u32"]],["u32",15]]],[[],[["u64",15],["protobufresult",6,["u64"]]]],[[],[["protobufresult",6,["f32"]],["f32",15]]],[[],[["i32",15],["protobufresult",6,["i32"]]]],[[],[["protobufresult",6,["i64"]],["i64",15]]],[[],[["message",8],["protobufresult",6]]],[[],[["protobufresult",6,["u8"]],["u8",15]]],[[["u32",15]],[["vec",3,["u8"]],["protobufresult",6,["vec"]]]],[[["u32",15],["vec",3]],["protobufresult",6]],[[],[["protobufresult",6,["u32"]],["u32",15]]],[[],[["u64",15],["protobufresult",6,["u64"]]]],[[],[["protobufresult",6,["u32"]],["u32",15]]],[[],[["u64",15],["protobufresult",6,["u64"]]]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[],[["i32",15],["protobufresult",6,["i32"]]]],[[],[["protobufresult",6,["i64"]],["i64",15]]],[[],[["i32",15],["protobufresult",6,["i32"]]]],[[],[["protobufresult",6,["i64"]],["i64",15]]],[[],[["protobufresult",6,["string"]],["string",3]]],[[["string",3]],["protobufresult",6]],[[],[["protobufresult",6,["tag"]],["tag",3]]],[[],["protobufresult",6]],[[],[["protobufresult",6,["u32"]],["u32",15]]],[[],[["u64",15],["protobufresult",6,["u64"]]]],[[["wiretype",4]],[["protobufresult",6,["unknownvalue"]],["unknownvalue",4]]],null,[[["usize",15]]],[[["u32",15]]],[[]],[[]],null,null,[[["u32",15]]],[[]],[[]],[[["u32",15]]],[[["i32",15]],["unknownvalue",4]],[[["i64",15]],["unknownvalue",4]],[[["wiretype",4]],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["singularfield",3]],[[],["singularptrfield",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["option",4]],[[],["option",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[]],[[]],null,[[["vec",3]],["codedoutputstream",3]],null,null,[[],["wiretype",4]],[[],["wiretype",4]],[[],[["result",6,["usize"]],["usize",15]]],[[["u32",15],["bool",15]],["protobufresult",6]],[[["bool",15]],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[],["protobufresult",6]],[[["u32",15],["f64",15]],["protobufresult",6]],[[["f64",15]],["protobufresult",6]],[[["i32",15],["u32",15]],["protobufresult",6]],[[["i32",15]],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[["u64",15],["u32",15]],["protobufresult",6]],[[["u64",15]],["protobufresult",6]],[[["f32",15],["u32",15]],["protobufresult",6]],[[["f32",15]],["protobufresult",6]],[[["i32",15],["u32",15]],["protobufresult",6]],[[["i32",15]],["protobufresult",6]],[[["u32",15],["i64",15]],["protobufresult",6]],[[["i64",15]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[],[["vec",3,["u8"]],["protobufresult",6,["vec"]]]],[[],[["vec",3,["u8"]],["protobufresult",6,["vec"]]]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["write",8]],["protobufresult",6]],[[["write",8]],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[],["protobufresult",6]],[[["u8",15]],["protobufresult",6]],[[],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[["u64",15]],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[["u64",15]],["protobufresult",6]],[[["i32",15],["u32",15]],["protobufresult",6]],[[["i32",15]],["protobufresult",6]],[[["u32",15],["i64",15]],["protobufresult",6]],[[["i64",15]],["protobufresult",6]],[[["i32",15],["u32",15]],["protobufresult",6]],[[["i32",15]],["protobufresult",6]],[[["u32",15],["i64",15]],["protobufresult",6]],[[["i64",15]],["protobufresult",6]],[[["str",15],["u32",15]],["protobufresult",6]],[[["str",15]],["protobufresult",6]],[[["u32",15],["wiretype",4]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[],[["vec",3,["u8"]],["protobufresult",6,["vec"]]]],[[],[["vec",3,["u8"]],["protobufresult",6,["vec"]]]],[[["vec",3]],["protobufresult",6]],[[["vec",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["write",8]],["protobufresult",6]],[[["write",8]],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[["u32",15]],["protobufresult",6]],[[["u64",15],["u32",15]],["protobufresult",6]],[[["u64",15]],["protobufresult",6]],[[["u32",15],["unknownvalueref",4]],["protobufresult",6]],[[["unknownfields",3]],["protobufresult",6]],[[["unknownvalueref",4]],["protobufresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullfiledescriptorset",3]],[[],["filedescriptorproto",3]],[[],["descriptorproto",3]],[[],["descriptorproto_extensionrange",3]],[[],["descriptorproto_reservedrange",3]],[[],["extensionrangeoptions",3]],[[],["fielddescriptorproto",3]],[[],["fielddescriptorproto_type",4]],[[],["fielddescriptorproto_label",4]],[[],["oneofdescriptorproto",3]],[[],["enumdescriptorproto",3]],[[],["enumdescriptorproto_enumreservedrange",3]],[[],["enumvaluedescriptorproto",3]],[[],["servicedescriptorproto",3]],[[],["methoddescriptorproto",3]],[[],["fileoptions",3]],[[],["fileoptions_optimizemode",4]],[[],["messageoptions",3]],[[],["fieldoptions",3]],[[],["fieldoptions_ctype",4]],[[],["fieldoptions_jstype",4]],[[],["oneofoptions",3]],[[],["enumoptions",3]],[[],["enumvalueoptions",3]],[[],["serviceoptions",3]],[[],["methodoptions",3]],[[],["methodoptions_idempotencylevel",4]],[[],["uninterpretedoption",3]],[[],["uninterpretedoption_namepart",3]],[[],["sourcecodeinfo",3]],[[],["sourcecodeinfo_location",3]],[[],["generatedcodeinfo",3]],[[],["generatedcodeinfo_annotation",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["filedescriptorset",3]],[[],["filedescriptorproto",3]],[[],["descriptorproto",3]],[[],["descriptorproto_extensionrange",3]],[[],["descriptorproto_reservedrange",3]],[[],["extensionrangeoptions",3]],[[],["fielddescriptorproto",3]],[[]],[[]],[[],["oneofdescriptorproto",3]],[[],["enumdescriptorproto",3]],[[],["enumdescriptorproto_enumreservedrange",3]],[[],["enumvaluedescriptorproto",3]],[[],["servicedescriptorproto",3]],[[],["methoddescriptorproto",3]],[[],["fileoptions",3]],[[]],[[],["messageoptions",3]],[[],["fieldoptions",3]],[[]],[[]],[[],["oneofoptions",3]],[[],["enumoptions",3]],[[],["enumvalueoptions",3]],[[],["serviceoptions",3]],[[],["methodoptions",3]],[[]],[[],["uninterpretedoption",3]],[[],["uninterpretedoption_namepart",3]],[[],["sourcecodeinfo",3]],[[],["sourcecodeinfo_location",3]],[[],["generatedcodeinfo",3]],[[],["generatedcodeinfo_annotation",3]],[[],["filedescriptorset",3]],[[],["filedescriptorproto",3]],[[],["descriptorproto",3]],[[],["descriptorproto_extensionrange",3]],[[],["descriptorproto_reservedrange",3]],[[],["extensionrangeoptions",3]],[[],["fielddescriptorproto",3]],[[],["oneofdescriptorproto",3]],[[],["enumdescriptorproto",3]],[[],["enumdescriptorproto_enumreservedrange",3]],[[],["enumvaluedescriptorproto",3]],[[],["servicedescriptorproto",3]],[[],["methoddescriptorproto",3]],[[],["fileoptions",3]],[[],["messageoptions",3]],[[],["fieldoptions",3]],[[],["oneofoptions",3]],[[],["enumoptions",3]],[[],["enumvalueoptions",3]],[[],["serviceoptions",3]],[[],["methodoptions",3]],[[],["uninterpretedoption",3]],[[],["uninterpretedoption_namepart",3]],[[],["sourcecodeinfo",3]],[[],["sourcecodeinfo_location",3]],[[],["generatedcodeinfo",3]],[[],["generatedcodeinfo_annotation",3]],null,[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],null,null,[[["filedescriptorset",3]],["bool",15]],[[["filedescriptorproto",3]],["bool",15]],[[["descriptorproto",3]],["bool",15]],[[["descriptorproto_extensionrange",3]],["bool",15]],[[["descriptorproto_reservedrange",3]],["bool",15]],[[["extensionrangeoptions",3]],["bool",15]],[[["fielddescriptorproto",3]],["bool",15]],[[["fielddescriptorproto_type",4]],["bool",15]],[[["fielddescriptorproto_label",4]],["bool",15]],[[["oneofdescriptorproto",3]],["bool",15]],[[["enumdescriptorproto",3]],["bool",15]],[[["enumdescriptorproto_enumreservedrange",3]],["bool",15]],[[["enumvaluedescriptorproto",3]],["bool",15]],[[["servicedescriptorproto",3]],["bool",15]],[[["methoddescriptorproto",3]],["bool",15]],[[["fileoptions",3]],["bool",15]],[[["fileoptions_optimizemode",4]],["bool",15]],[[["messageoptions",3]],["bool",15]],[[["fieldoptions",3]],["bool",15]],[[["fieldoptions_ctype",4]],["bool",15]],[[["fieldoptions_jstype",4]],["bool",15]],[[["oneofoptions",3]],["bool",15]],[[["enumoptions",3]],["bool",15]],[[["enumvalueoptions",3]],["bool",15]],[[["serviceoptions",3]],["bool",15]],[[["methodoptions",3]],["bool",15]],[[["methodoptions_idempotencylevel",4]],["bool",15]],[[["uninterpretedoption",3]],["bool",15]],[[["uninterpretedoption_namepart",3]],["bool",15]],[[["sourcecodeinfo",3]],["bool",15]],[[["sourcecodeinfo_location",3]],["bool",15]],[[["generatedcodeinfo",3]],["bool",15]],[[["generatedcodeinfo_annotation",3]],["bool",15]],null,null,null,null,null,[[],["filedescriptorproto",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],[["fielddescriptorproto_type",4],["option",4,["fielddescriptorproto_type"]]]],[[["i32",15]],[["fielddescriptorproto_label",4],["option",4,["fielddescriptorproto_label"]]]],[[["i32",15]],[["option",4,["fileoptions_optimizemode"]],["fileoptions_optimizemode",4]]],[[["i32",15]],[["option",4,["fieldoptions_ctype"]],["fieldoptions_ctype",4]]],[[["i32",15]],[["fieldoptions_jstype",4],["option",4,["fieldoptions_jstype"]]]],[[["i32",15]],[["methodoptions_idempotencylevel",4],["option",4,["methodoptions_idempotencylevel"]]]],[[],["str",15]],[[],["bool",15]],[[]],[[],["i32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["str",15]],[[],["fieldoptions_ctype",4]],[[],["str",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["f64",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[],["fielddescriptorproto_type",4]],[[]],[[],["str",15]],[[],["methodoptions_idempotencylevel",4]],[[],["str",15]],[[],["str",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["str",15]],[[],["str",15]],[[],["bool",15]],[[],["str",15]],[[],["fieldoptions_jstype",4]],[[],["fielddescriptorproto_label",4]],[[],["bool",15]],[[],["str",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[],["str",15]],[[],["i64",15]],[[]],[[],["bool",15]],[[],["i32",15]],[[],["i32",15]],[[],["str",15]],[[]],[[],["i32",15]],[[],["fileoptions_optimizemode",4]],[[],["fileoptions",3]],[[],["messageoptions",3]],[[],["extensionrangeoptions",3]],[[],["fieldoptions",3]],[[],["oneofoptions",3]],[[],["enumoptions",3]],[[],["enumvalueoptions",3]],[[],["serviceoptions",3]],[[],["methodoptions",3]],[[],["str",15]],[[],["str",15]],[[],["bool",15]],[[]],[[]],[[],["str",15]],[[],["bool",15]],[[],["str",15]],[[],["str",15]],[[],["u64",15]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["bool",15]],[[]],[[],["sourcecodeinfo",3]],[[],["str",15]],[[]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],null,null,[[],["string",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["fileoptions",3]],[[],["messageoptions",3]],[[],["extensionrangeoptions",3]],[[],["fieldoptions",3]],[[],["oneofoptions",3]],[[],["enumoptions",3]],[[],["enumvalueoptions",3]],[[],["serviceoptions",3]],[[],["methodoptions",3]],[[],["string",3]],[[],["string",3]],[[],["vec",3]],[[],["vec",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["vec",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["sourcecodeinfo",3]],[[],["string",3]],[[],["vec",3]],[[],["vec",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["repeatedfield",3]],[[],["vec",3]],null,[[["filedescriptorset",3]],["bool",15]],[[["filedescriptorproto",3]],["bool",15]],[[["descriptorproto",3]],["bool",15]],[[["descriptorproto_extensionrange",3]],["bool",15]],[[["descriptorproto_reservedrange",3]],["bool",15]],[[["extensionrangeoptions",3]],["bool",15]],[[["fielddescriptorproto",3]],["bool",15]],[[["oneofdescriptorproto",3]],["bool",15]],[[["enumdescriptorproto",3]],["bool",15]],[[["enumdescriptorproto_enumreservedrange",3]],["bool",15]],[[["enumvaluedescriptorproto",3]],["bool",15]],[[["servicedescriptorproto",3]],["bool",15]],[[["methoddescriptorproto",3]],["bool",15]],[[["fileoptions",3]],["bool",15]],[[["messageoptions",3]],["bool",15]],[[["fieldoptions",3]],["bool",15]],[[["oneofoptions",3]],["bool",15]],[[["enumoptions",3]],["bool",15]],[[["enumvalueoptions",3]],["bool",15]],[[["serviceoptions",3]],["bool",15]],[[["methodoptions",3]],["bool",15]],[[["uninterpretedoption",3]],["bool",15]],[[["uninterpretedoption_namepart",3]],["bool",15]],[[["sourcecodeinfo",3]],["bool",15]],[[["sourcecodeinfo_location",3]],["bool",15]],[[["generatedcodeinfo",3]],["bool",15]],[[["generatedcodeinfo_annotation",3]],["bool",15]],null,[[],["filedescriptorset",3]],[[],["filedescriptorset",3]],[[],["filedescriptorproto",3]],[[],["filedescriptorproto",3]],[[],["descriptorproto",3]],[[],["descriptorproto",3]],[[],["descriptorproto_extensionrange",3]],[[],["descriptorproto_extensionrange",3]],[[],["descriptorproto_reservedrange",3]],[[],["descriptorproto_reservedrange",3]],[[],["extensionrangeoptions",3]],[[],["extensionrangeoptions",3]],[[],["fielddescriptorproto",3]],[[],["fielddescriptorproto",3]],[[],["oneofdescriptorproto",3]],[[],["oneofdescriptorproto",3]],[[],["enumdescriptorproto",3]],[[],["enumdescriptorproto",3]],[[],["enumdescriptorproto_enumreservedrange",3]],[[],["enumdescriptorproto_enumreservedrange",3]],[[],["enumvaluedescriptorproto",3]],[[],["enumvaluedescriptorproto",3]],[[],["servicedescriptorproto",3]],[[],["servicedescriptorproto",3]],[[],["methoddescriptorproto",3]],[[],["methoddescriptorproto",3]],[[],["fileoptions",3]],[[],["fileoptions",3]],[[],["messageoptions",3]],[[],["messageoptions",3]],[[],["fieldoptions",3]],[[],["fieldoptions",3]],[[],["oneofoptions",3]],[[],["oneofoptions",3]],[[],["enumoptions",3]],[[],["enumoptions",3]],[[],["enumvalueoptions",3]],[[],["enumvalueoptions",3]],[[],["serviceoptions",3]],[[],["serviceoptions",3]],[[],["methodoptions",3]],[[],["methodoptions",3]],[[],["uninterpretedoption",3]],[[],["uninterpretedoption",3]],[[],["uninterpretedoption_namepart",3]],[[],["uninterpretedoption_namepart",3]],[[],["sourcecodeinfo",3]],[[],["sourcecodeinfo",3]],[[],["sourcecodeinfo_location",3]],[[],["sourcecodeinfo_location",3]],[[],["generatedcodeinfo",3]],[[],["generatedcodeinfo",3]],[[],["generatedcodeinfo_annotation",3]],[[],["generatedcodeinfo_annotation",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3]]],[[["bool",15]]],[[["repeatedfield",3,["generatedcodeinfo_annotation"]],["generatedcodeinfo_annotation",3]]],[[["i32",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["string",3]]],[[["fieldoptions_ctype",4]]],[[["string",3]]],[[["string",3],["repeatedfield",3,["string"]]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["f64",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["repeatedfield",3,["enumdescriptorproto"]],["enumdescriptorproto",3]]],[[["repeatedfield",3,["enumdescriptorproto"]],["enumdescriptorproto",3]]],[[["string",3]]],[[["repeatedfield",3,["fielddescriptorproto"]],["fielddescriptorproto",3]]],[[["repeatedfield",3,["fielddescriptorproto"]],["fielddescriptorproto",3]]],[[["descriptorproto_extensionrange",3],["repeatedfield",3,["descriptorproto_extensionrange"]]]],[[["repeatedfield",3,["fielddescriptorproto"]],["fielddescriptorproto",3]]],[[["fielddescriptorproto_type",4]]],[[["repeatedfield",3,["filedescriptorproto"]],["filedescriptorproto",3]]],[[["string",3]]],[[["methodoptions_idempotencylevel",4]]],[[["string",3]]],[[["string",3]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["string",3]]],[[["string",3]]],[[["bool",15]]],[[["string",3]]],[[["fieldoptions_jstype",4]]],[[["fielddescriptorproto_label",4]]],[[["bool",15]]],[[["string",3]]],[[["string",3],["repeatedfield",3,["string"]]]],[[["sourcecodeinfo_location",3],["repeatedfield",3,["sourcecodeinfo_location"]]]],[[["bool",15]]],[[["bool",15]]],[[["repeatedfield",3,["descriptorproto"]],["descriptorproto",3]]],[[["repeatedfield",3,["methoddescriptorproto"]],["methoddescriptorproto",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["repeatedfield",3,["uninterpretedoption_namepart"]],["uninterpretedoption_namepart",3]]],[[["string",3]]],[[["i64",15]]],[[["repeatedfield",3,["descriptorproto"]],["descriptorproto",3]]],[[["bool",15]]],[[["i32",15]]],[[["i32",15]]],[[["string",3]]],[[["oneofdescriptorproto",3],["repeatedfield",3,["oneofdescriptorproto"]]]],[[["i32",15]]],[[["fileoptions_optimizemode",4]]],[[["fileoptions",3]]],[[["messageoptions",3]]],[[["extensionrangeoptions",3]]],[[["fieldoptions",3]]],[[["oneofoptions",3]]],[[["enumoptions",3]]],[[["enumvalueoptions",3]]],[[["serviceoptions",3]]],[[["methodoptions",3]]],[[["string",3]]],[[["string",3]]],[[["bool",15]]],[[["i32",15],["vec",3,["i32"]]]],[[["i32",15],["vec",3,["i32"]]]],[[["string",3]]],[[["bool",15]]],[[["string",3]]],[[["string",3]]],[[["u64",15]]],[[["bool",15]]],[[["i32",15],["vec",3,["i32"]]]],[[["bool",15]]],[[["string",3],["repeatedfield",3,["string"]]]],[[["string",3],["repeatedfield",3,["string"]]]],[[["repeatedfield",3,["descriptorproto_reservedrange"]],["descriptorproto_reservedrange",3]]],[[["repeatedfield",3,["enumdescriptorproto_enumreservedrange"]],["enumdescriptorproto_enumreservedrange",3]]],[[["string",3]]],[[["bool",15]]],[[["servicedescriptorproto",3],["repeatedfield",3,["servicedescriptorproto"]]]],[[["sourcecodeinfo",3]]],[[["string",3]]],[[["i32",15],["vec",3,["i32"]]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["u8",15],["vec",3,["u8"]]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["repeatedfield",3,["uninterpretedoption"]],["uninterpretedoption",3]]],[[["repeatedfield",3,["uninterpretedoption"]],["uninterpretedoption",3]]],[[["repeatedfield",3,["uninterpretedoption"]],["uninterpretedoption",3]]],[[["repeatedfield",3,["uninterpretedoption"]],["uninterpretedoption",3]]],[[["repeatedfield",3,["uninterpretedoption"]],["uninterpretedoption",3]]],[[["repeatedfield",3,["uninterpretedoption"]],["uninterpretedoption",3]]],[[["repeatedfield",3,["uninterpretedoption"]],["uninterpretedoption",3]]],[[["repeatedfield",3,["uninterpretedoption"]],["uninterpretedoption",3]]],[[["repeatedfield",3,["uninterpretedoption"]],["uninterpretedoption",3]]],[[["repeatedfield",3,["enumvaluedescriptorproto"]],["enumvaluedescriptorproto",3]]],[[["bool",15]]],[[["i32",15],["vec",3,["i32"]]]],null,null,[[],["string",3]],[[],[["repeatedfield",3,["generatedcodeinfo_annotation"]],["generatedcodeinfo_annotation",3]]],[[],["string",3]],[[],["string",3]],[[],[["string",3],["repeatedfield",3,["string"]]]],[[],[["repeatedfield",3,["enumdescriptorproto"]],["enumdescriptorproto",3]]],[[],[["repeatedfield",3,["enumdescriptorproto"]],["enumdescriptorproto",3]]],[[],["string",3]],[[],[["repeatedfield",3,["fielddescriptorproto"]],["fielddescriptorproto",3]]],[[],[["repeatedfield",3,["fielddescriptorproto"]],["fielddescriptorproto",3]]],[[],[["descriptorproto_extensionrange",3],["repeatedfield",3,["descriptorproto_extensionrange"]]]],[[],[["repeatedfield",3,["fielddescriptorproto"]],["fielddescriptorproto",3]]],[[],[["filedescriptorproto",3],["repeatedfield",3,["filedescriptorproto"]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["string",3],["repeatedfield",3,["string"]]]],[[],[["sourcecodeinfo_location",3],["repeatedfield",3,["sourcecodeinfo_location"]]]],[[],[["repeatedfield",3,["descriptorproto"]],["descriptorproto",3]]],[[],[["repeatedfield",3,["methoddescriptorproto"]],["methoddescriptorproto",3]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["repeatedfield",3,["uninterpretedoption_namepart"]],["uninterpretedoption_namepart",3]]],[[],["string",3]],[[],[["repeatedfield",3,["descriptorproto"]],["descriptorproto",3]]],[[],["string",3]],[[],[["oneofdescriptorproto",3],["repeatedfield",3,["oneofdescriptorproto"]]]],[[],["fileoptions",3]],[[],["messageoptions",3]],[[],["extensionrangeoptions",3]],[[],["fieldoptions",3]],[[],["oneofoptions",3]],[[],["enumoptions",3]],[[],["enumvalueoptions",3]],[[],["serviceoptions",3]],[[],["methodoptions",3]],[[],["string",3]],[[],["string",3]],[[],[["i32",15],["vec",3,["i32"]]]],[[],[["i32",15],["vec",3,["i32"]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["i32",15],["vec",3,["i32"]]]],[[],[["string",3],["repeatedfield",3,["string"]]]],[[],[["string",3],["repeatedfield",3,["string"]]]],[[],[["repeatedfield",3,["descriptorproto_reservedrange"]],["descriptorproto_reservedrange",3]]],[[],[["enumdescriptorproto_enumreservedrange",3],["repeatedfield",3,["enumdescriptorproto_enumreservedrange"]]]],[[],["string",3]],[[],[["servicedescriptorproto",3],["repeatedfield",3,["servicedescriptorproto"]]]],[[],["sourcecodeinfo",3]],[[],["string",3]],[[],[["i32",15],["vec",3,["i32"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["uninterpretedoption",3],["repeatedfield",3,["uninterpretedoption"]]]],[[],[["uninterpretedoption",3],["repeatedfield",3,["uninterpretedoption"]]]],[[],[["uninterpretedoption",3],["repeatedfield",3,["uninterpretedoption"]]]],[[],[["uninterpretedoption",3],["repeatedfield",3,["uninterpretedoption"]]]],[[],[["uninterpretedoption",3],["repeatedfield",3,["uninterpretedoption"]]]],[[],[["uninterpretedoption",3],["repeatedfield",3,["uninterpretedoption"]]]],[[],[["uninterpretedoption",3],["repeatedfield",3,["uninterpretedoption"]]]],[[],[["uninterpretedoption",3],["repeatedfield",3,["uninterpretedoption"]]]],[[],[["uninterpretedoption",3],["repeatedfield",3,["uninterpretedoption"]]]],[[],[["repeatedfield",3,["enumvaluedescriptorproto"]],["enumvaluedescriptorproto",3]]],[[],[["i32",15],["vec",3,["i32"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],[["error",8],["option",4,["error"]]]],[[],["str",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[["utf8error",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["option",4]],[[],["vec",3]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["version",3]],[[],["codegeneratorrequest",3]],[[],["codegeneratorresponse",3]],[[],["codegeneratorresponse_file",3]],[[],["codegeneratorresponse_feature",4]],[[]],[[]],[[]],[[]],[[]],null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["version",3]],[[],["codegeneratorrequest",3]],[[],["codegeneratorresponse",3]],[[],["codegeneratorresponse_file",3]],[[]],[[],["version",3]],[[],["codegeneratorrequest",3]],[[],["codegeneratorresponse",3]],[[],["codegeneratorresponse_file",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["enumdescriptor",3]],[[["version",3]],["bool",15]],[[["codegeneratorrequest",3]],["bool",15]],[[["codegeneratorresponse",3]],["bool",15]],[[["codegeneratorresponse_file",3]],["bool",15]],[[["codegeneratorresponse_feature",4]],["bool",15]],null,[[],["filedescriptorproto",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],[["codegeneratorresponse_feature",4],["option",4,["codegeneratorresponse_feature"]]]],null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["version",3]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[],["generatedcodeinfo",3]],[[],["str",15]],[[],["i32",15]],[[],["i32",15]],[[],["str",15]],[[],["str",15]],[[],["i32",15]],[[]],[[],["str",15]],[[],["u64",15]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[],["version",3]],[[],["string",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["generatedcodeinfo",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[["version",3]],["bool",15]],[[["codegeneratorrequest",3]],["bool",15]],[[["codegeneratorresponse",3]],["bool",15]],[[["codegeneratorresponse_file",3]],["bool",15]],[[],["version",3]],[[],["version",3]],[[],["codegeneratorrequest",3]],[[],["codegeneratorrequest",3]],[[],["codegeneratorresponse",3]],[[],["codegeneratorresponse",3]],[[],["codegeneratorresponse_file",3]],[[],["codegeneratorresponse_file",3]],null,[[["version",3]]],[[["string",3]]],[[["string",3]]],[[["repeatedfield",3,["codegeneratorresponse_file"]],["codegeneratorresponse_file",3]]],[[["string",3],["repeatedfield",3,["string"]]]],[[["generatedcodeinfo",3]]],[[["string",3]]],[[["i32",15]]],[[["i32",15]]],[[["string",3]]],[[["string",3]]],[[["i32",15]]],[[["repeatedfield",3,["filedescriptorproto"]],["filedescriptorproto",3]]],[[["string",3]]],[[["u64",15]]],[[],["version",3]],[[],["string",3]],[[],["string",3]],[[],[["repeatedfield",3,["codegeneratorresponse_file"]],["codegeneratorresponse_file",3]]],[[],[["string",3],["repeatedfield",3,["string"]]]],[[],["generatedcodeinfo",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["repeatedfield",3,["filedescriptorproto"]],["filedescriptorproto",3]]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[],["i32",15]],[[]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["enumvaluedescriptor",3]],[[]],[[["str",15]],["fielddescriptor",3]],[[["u32",15]],["fielddescriptor",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["enumdescriptor",3]],[[],["messagedescriptor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[["message",8]],["bool",15]],[[["message",8]]],[[["message",8]],["enumvaluedescriptor",3]],[[["message",8]],["f32",15]],[[["message",8]],["f64",15]],[[["str",15]],[["option",4,["fielddescriptor"]],["fielddescriptor",3]]],[[["str",15]],[["option",4,["fielddescriptor"]],["fielddescriptor",3]]],[[["u32",15]],[["fielddescriptor",3],["option",4,["fielddescriptor"]]]],[[["message",8]],["i32",15]],[[["message",8]],["i64",15]],[[["message",8]],["message",8]],[[],["descriptorproto",3]],[[["message",8]],["reflectfieldref",4]],[[["message",8]],["str",15]],[[["message",8]],["u32",15]],[[["message",8]],["u64",15]],[[["message",8]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["str",15]],[[["message",8]],["usize",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["filedescriptorproto",3],["str",15]],["enumdescriptor",3]],[[],[["message",8],["box",3,["message"]]]],[[["filedescriptorproto",3],["str",15]],["enumdescriptor",3]],[[],["fielddescriptorproto",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["i32",15]],[[["str",15]],["enumvaluedescriptor",3]],[[["i32",15]],["enumvaluedescriptor",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["u32",15]],["u32",15]],[[["u32",15],["hashmap",3]],["u32",15]],[[["u32",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["protobufenum",8],["u32",15]],["u32",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[["hashmap",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["unknownfields",3],["wiretype",4],["codedinputstream",3],["u32",15],["option",4]],["protobufresult",6]],[[["unknownfields",3],["u32",15],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["repeatedfield",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["unknownfields",3],["vec",3],["wiretype",4],["codedinputstream",3],["u32",15]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["repeatedfield",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["repeatedfield",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["singularfield",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["singularptrfield",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["vec",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["string",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["singularfield",3],["wiretype",4],["codedinputstream",3]],["protobufresult",6]],[[["unknownfields",3],["u32",15],["codedinputstream",3],["wiretype",4]],["protobufresult",6]],[[["str",15],["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["wiretype",4]],["protobuferror",4]],[[["unknownfields",3]],["u32",15]],[[["protobufvarint",8],["u32",15],["wiretype",4]],["u32",15]],[[["protobufvarintzigzag",8],["u32",15]],["u32",15]],[[["protobufvarintzigzag",8]],["u32",15]],[[],["u32",15]],[[["u32",15]],["u32",15]],[[],["u32",15]],[[["u32",15]],["u32",15]],[[],["u32",15]],[[["u32",15]],["u32",15]],[[["codedoutputstream",3],["u32",15],["hashmap",3]],["protobufresult",6]],null,[[],["filedescriptorproto",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3],["message",8]],["result",6]],[[["message",8],["string",3]]],[[["message",8]],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[["f32",15]],["u32",15]],[[["f64",15]],["u32",15]],[[["i32",15]],["u32",15]],[[["i64",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["i32",15]],["u32",15]],[[["i64",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["i32",15]],["u32",15]],[[["i64",15]],["u32",15]],[[["bool",15]],["u32",15]],[[["string",3]],["u32",15]],[[["vec",3]],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["unknownvalues",3]],["option",4]],[[["unknownvalues",3]],[["option",4,["f32"]],["f32",15]]],[[["unknownvalues",3]],[["option",4,["f64"]],["f64",15]]],[[["unknownvalues",3]],[["option",4,["i32"]],["i32",15]]],[[["unknownvalues",3]],[["option",4,["i64"]],["i64",15]]],[[["unknownvalues",3]],[["option",4,["u32"]],["u32",15]]],[[["unknownvalues",3]],[["u64",15],["option",4,["u64"]]]],[[["unknownvalues",3]],[["option",4,["i32"]],["i32",15]]],[[["unknownvalues",3]],[["option",4,["i64"]],["i64",15]]],[[["unknownvalues",3]],[["option",4,["u32"]],["u32",15]]],[[["unknownvalues",3]],[["u64",15],["option",4,["u64"]]]],[[["unknownvalues",3]],[["option",4,["i32"]],["i32",15]]],[[["unknownvalues",3]],[["option",4,["i64"]],["i64",15]]],[[["unknownvalues",3]],[["bool",15],["option",4,["bool"]]]],[[["unknownvalues",3]],[["option",4,["string"]],["string",3]]],[[["unknownvalues",3]],[["option",4,["vec"]],["vec",3,["u8"]]]],[[["unknownvalues",3]],["option",4]],[[["unknownvalues",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],[["protobufresult",6,["f32"]],["f32",15]]],[[["codedinputstream",3]],[["protobufresult",6,["f64"]],["f64",15]]],[[["codedinputstream",3]],[["i32",15],["protobufresult",6,["i32"]]]],[[["codedinputstream",3]],[["protobufresult",6,["i64"]],["i64",15]]],[[["codedinputstream",3]],[["protobufresult",6,["u32"]],["u32",15]]],[[["codedinputstream",3]],[["u64",15],["protobufresult",6,["u64"]]]],[[["codedinputstream",3]],[["i32",15],["protobufresult",6,["i32"]]]],[[["codedinputstream",3]],[["protobufresult",6,["i64"]],["i64",15]]],[[["codedinputstream",3]],[["protobufresult",6,["u32"]],["u32",15]]],[[["codedinputstream",3]],[["u64",15],["protobufresult",6,["u64"]]]],[[["codedinputstream",3]],[["i32",15],["protobufresult",6,["i32"]]]],[[["codedinputstream",3]],[["protobufresult",6,["i64"]],["i64",15]]],[[["codedinputstream",3]],[["protobufresult",6,["bool"]],["bool",15]]],[[["codedinputstream",3]],[["protobufresult",6,["string"]],["string",3]]],[[["codedinputstream",3]],[["vec",3,["u8"]],["protobufresult",6,["vec"]]]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[],["wiretype",4]],[[["codedoutputstream",3],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["u32",15],["f32",15]],["protobufresult",6]],[[["f64",15],["codedoutputstream",3],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["i32",15],["u32",15]],["protobufresult",6]],[[["i64",15],["codedoutputstream",3],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["u32",15],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["u64",15],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["i32",15],["u32",15]],["protobufresult",6]],[[["i64",15],["codedoutputstream",3],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["u32",15],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["u64",15],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["i32",15],["u32",15]],["protobufresult",6]],[[["i64",15],["codedoutputstream",3],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["u32",15],["bool",15]],["protobufresult",6]],[[["codedoutputstream",3],["u32",15],["string",3]],["protobufresult",6]],[[["codedoutputstream",3],["u32",15],["vec",3]],["protobufresult",6]],[[["codedoutputstream",3],["u32",15]],["protobufresult",6]],[[["codedoutputstream",3],["u32",15]],["protobufresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["any",3]],[[],["api",3]],[[],["method",3]],[[],["mixin",3]],[[],["duration",3]],[[],["empty",3]],[[],["fieldmask",3]],[[],["sourcecontext",3]],[[],["struct",3]],[[],["value",3]],[[],["value_oneof_kind",4]],[[],["listvalue",3]],[[],["nullvalue",4]],[[],["timestamp",3]],[[],["type",3]],[[],["field",3]],[[],["field_kind",4]],[[],["field_cardinality",4]],[[],["enum",3]],[[],["enumvalue",3]],[[],["option",3]],[[],["syntax",4]],[[],["doublevalue",3]],[[],["floatvalue",3]],[[],["int64value",3]],[[],["uint64value",3]],[[],["int32value",3]],[[],["uint32value",3]],[[],["boolvalue",3]],[[],["stringvalue",3]],[[],["bytesvalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["any",3]],[[],["api",3]],[[],["method",3]],[[],["mixin",3]],[[],["duration",3]],[[],["empty",3]],[[],["fieldmask",3]],[[],["sourcecontext",3]],[[],["struct",3]],[[],["value",3]],[[],["listvalue",3]],[[]],[[],["timestamp",3]],[[],["type",3]],[[],["field",3]],[[]],[[]],[[],["enum",3]],[[],["enumvalue",3]],[[],["option",3]],[[]],[[],["doublevalue",3]],[[],["floatvalue",3]],[[],["int64value",3]],[[],["uint64value",3]],[[],["int32value",3]],[[],["uint32value",3]],[[],["boolvalue",3]],[[],["stringvalue",3]],[[],["bytesvalue",3]],[[],["any",3]],[[],["api",3]],[[],["method",3]],[[],["mixin",3]],[[],["duration",3]],[[],["empty",3]],[[],["fieldmask",3]],[[],["sourcecontext",3]],[[],["struct",3]],[[],["value",3]],[[],["listvalue",3]],[[],["timestamp",3]],[[],["type",3]],[[],["field",3]],[[],["enum",3]],[[],["enumvalue",3]],[[],["option",3]],[[],["doublevalue",3]],[[],["floatvalue",3]],[[],["int64value",3]],[[],["uint64value",3]],[[],["int32value",3]],[[],["uint32value",3]],[[],["boolvalue",3]],[[],["stringvalue",3]],[[],["bytesvalue",3]],null,[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],null,[[["any",3]],["bool",15]],[[["api",3]],["bool",15]],[[["method",3]],["bool",15]],[[["mixin",3]],["bool",15]],[[["duration",3]],["bool",15]],[[["empty",3]],["bool",15]],[[["fieldmask",3]],["bool",15]],[[["sourcecontext",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["value",3]],["bool",15]],[[["value_oneof_kind",4]],["bool",15]],[[["listvalue",3]],["bool",15]],[[["nullvalue",4]],["bool",15]],[[["timestamp",3]],["bool",15]],[[["type",3]],["bool",15]],[[["field",3]],["bool",15]],[[["field_kind",4]],["bool",15]],[[["field_cardinality",4]],["bool",15]],[[["enum",3]],["bool",15]],[[["enumvalue",3]],["bool",15]],[[["option",3]],["bool",15]],[[["syntax",4]],["bool",15]],[[["doublevalue",3]],["bool",15]],[[["floatvalue",3]],["bool",15]],[[["int64value",3]],["bool",15]],[[["uint64value",3]],["bool",15]],[[["int32value",3]],["bool",15]],[[["uint32value",3]],["bool",15]],[[["boolvalue",3]],["bool",15]],[[["stringvalue",3]],["bool",15]],[[["bytesvalue",3]],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],[["option",4,["nullvalue"]],["nullvalue",4]]],[[["i32",15]],[["option",4,["field_kind"]],["field_kind",4]]],[[["i32",15]],[["option",4,["field_cardinality"]],["field_cardinality",4]]],[[["i32",15]],[["syntax",4],["option",4,["syntax"]]]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["field_cardinality",4]],[[],["str",15]],[[]],[[],["hashmap",3]],[[]],[[],["str",15]],[[],["str",15]],[[],["field_kind",4]],[[],["listvalue",3]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["i32",15]],[[],["i32",15]],[[],["nullvalue",4]],[[],["i32",15]],[[],["i32",15]],[[],["f64",15]],[[],["i32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[],["str",15]],[[],["bool",15]],[[],["str",15]],[[],["str",15]],[[],["i64",15]],[[],["i64",15]],[[],["sourcecontext",3]],[[],["sourcecontext",3]],[[],["sourcecontext",3]],[[],["str",15]],[[],["struct",3]],[[],["syntax",4]],[[],["syntax",4]],[[],["syntax",4]],[[],["syntax",4]],[[],["str",15]],[[],["str",15]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[]],[[],["any",3]],[[],["f64",15]],[[],["f32",15]],[[],["i64",15]],[[],["u64",15]],[[],["i32",15]],[[],["u32",15]],[[],["bool",15]],[[],["str",15]],[[]],[[]],[[],["str",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[["box",3]],[["box",3,["any"]],["any",8]]],[[],["bool",15]],[[["messagedescriptor",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],null,null,[[],["string",3]],[[],["repeatedfield",3]],[[],["hashmap",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["string",3]],[[],["listvalue",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["sourcecontext",3]],[[],["sourcecontext",3]],[[],["sourcecontext",3]],[[],["string",3]],[[],["struct",3]],[[],["string",3]],[[],["string",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["vec",3]],[[],["any",3]],[[],["string",3]],[[],["vec",3]],[[],["repeatedfield",3]],[[],["string",3]],null,null,null,null,null,null,null,null,null,null,[[["any",3]],["bool",15]],[[["api",3]],["bool",15]],[[["method",3]],["bool",15]],[[["mixin",3]],["bool",15]],[[["duration",3]],["bool",15]],[[["empty",3]],["bool",15]],[[["fieldmask",3]],["bool",15]],[[["sourcecontext",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["value",3]],["bool",15]],[[["value_oneof_kind",4]],["bool",15]],[[["listvalue",3]],["bool",15]],[[["timestamp",3]],["bool",15]],[[["type",3]],["bool",15]],[[["field",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["enumvalue",3]],["bool",15]],[[["option",3]],["bool",15]],[[["doublevalue",3]],["bool",15]],[[["floatvalue",3]],["bool",15]],[[["int64value",3]],["bool",15]],[[["uint64value",3]],["bool",15]],[[["int32value",3]],["bool",15]],[[["uint32value",3]],["bool",15]],[[["boolvalue",3]],["bool",15]],[[["stringvalue",3]],["bool",15]],[[["bytesvalue",3]],["bool",15]],[[],["any",3]],[[],["any",3]],[[],["api",3]],[[],["api",3]],[[],["method",3]],[[],["method",3]],[[],["mixin",3]],[[],["mixin",3]],[[],["duration",3]],[[],["duration",3]],[[],["empty",3]],[[],["empty",3]],[[],["fieldmask",3]],[[],["fieldmask",3]],[[],["sourcecontext",3]],[[],["sourcecontext",3]],[[],["struct",3]],[[],["struct",3]],[[],["value",3]],[[],["value",3]],[[],["listvalue",3]],[[],["listvalue",3]],[[],["timestamp",3]],[[],["timestamp",3]],[[],["type",3]],[[],["type",3]],[[],["field",3]],[[],["field",3]],[[],["enum",3]],[[],["enum",3]],[[],["enumvalue",3]],[[],["enumvalue",3]],[[],["option",3]],[[],["option",3]],[[],["doublevalue",3]],[[],["doublevalue",3]],[[],["floatvalue",3]],[[],["floatvalue",3]],[[],["int64value",3]],[[],["int64value",3]],[[],["uint64value",3]],[[],["uint64value",3]],[[],["int32value",3]],[[],["int32value",3]],[[],["uint32value",3]],[[],["uint32value",3]],[[],["boolvalue",3]],[[],["boolvalue",3]],[[],["stringvalue",3]],[[],["stringvalue",3]],[[],["bytesvalue",3]],[[],["bytesvalue",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],[["protobufresult",6,["any"]],["any",3]]],[[["message",8]],[["protobufresult",6,["any"]],["any",3]]],null,null,null,null,null,null,null,null,null,[[["bool",15]]],[[["field_cardinality",4]]],[[["string",3]]],[[["repeatedfield",3,["enumvalue"]],["enumvalue",3]]],[[["hashmap",3,["string","value"]],["string",3],["value",3]]],[[["repeatedfield",3,["field"]],["field",3]]],[[["string",3]]],[[["string",3]]],[[["field_kind",4]]],[[["listvalue",3]]],[[["repeatedfield",3,["method"]],["method",3]]],[[["repeatedfield",3,["mixin"]],["mixin",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["string",3]]],[[["i32",15]]],[[["i32",15]]],[[["nullvalue",4]]],[[["i32",15]]],[[["i32",15]]],[[["f64",15]]],[[["i32",15]]],[[["string",3],["repeatedfield",3,["string"]]]],[[["repeatedfield",3,["option"]],["option",3]]],[[["repeatedfield",3,["option"]],["option",3]]],[[["option",3],["repeatedfield",3,["option"]]]],[[["option",3],["repeatedfield",3,["option"]]]],[[["option",3],["repeatedfield",3,["option"]]]],[[["option",3],["repeatedfield",3,["option"]]]],[[["bool",15]]],[[["string",3],["repeatedfield",3,["string"]]]],[[["bool",15]]],[[["string",3]]],[[["bool",15]]],[[["string",3]]],[[["string",3]]],[[["i64",15]]],[[["i64",15]]],[[["sourcecontext",3]]],[[["sourcecontext",3]]],[[["sourcecontext",3]]],[[["string",3]]],[[["struct",3]]],[[["syntax",4]]],[[["syntax",4]]],[[["syntax",4]]],[[["syntax",4]]],[[["string",3]]],[[["string",3]]],[[["u8",15],["vec",3,["u8"]]]],[[["any",3]]],[[["f64",15]]],[[["f32",15]]],[[["i64",15]]],[[["u64",15]]],[[["i32",15]]],[[["u32",15]]],[[["bool",15]]],[[["string",3]]],[[["u8",15],["vec",3,["u8"]]]],[[["value",3],["repeatedfield",3,["value"]]]],[[["string",3]]],null,null,null,null,null,null,null,null,null,[[],["string",3]],[[],[["repeatedfield",3,["enumvalue"]],["enumvalue",3]]],[[],[["hashmap",3,["string","value"]],["string",3],["value",3]]],[[],[["repeatedfield",3,["field"]],["field",3]]],[[],["string",3]],[[],["string",3]],[[],["listvalue",3]],[[],[["method",3],["repeatedfield",3,["method"]]]],[[],[["repeatedfield",3,["mixin"]],["mixin",3]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["string",3],["repeatedfield",3,["string"]]]],[[],[["repeatedfield",3,["option"]],["option",3]]],[[],[["repeatedfield",3,["option"]],["option",3]]],[[],[["option",3],["repeatedfield",3,["option"]]]],[[],[["option",3],["repeatedfield",3,["option"]]]],[[],[["option",3],["repeatedfield",3,["option"]]]],[[],[["option",3],["repeatedfield",3,["option"]]]],[[],[["string",3],["repeatedfield",3,["string"]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["sourcecontext",3]],[[],["sourcecontext",3]],[[],["sourcecontext",3]],[[],["string",3]],[[],["struct",3]],[[],["string",3]],[[],["string",3]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["any",3]],[[],["string",3]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["value",3],["repeatedfield",3,["value"]]]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["protobufresult",6,["option"]],["option",4]]],[[["messagedescriptor",3]],[["option",4,["box"]],["protobufresult",6,["option"]]]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["wiretype",4]],[[],["tag",3]],[[]],[[]],[[["wiretype",4]],["bool",15]],[[],["u32",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u32",15],["wiretype",4]],["tag",3]],[[["u32",15]],[["option",4,["wiretype"]],["wiretype",4]]],[[["u32",15]],[["tag",3],["option",4,["tag"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["u32",15]]],"p":[[4,"UnknownValueRef"],[4,"UnknownValue"],[3,"UnknownFields"],[3,"UnknownValues"],[8,"Message"],[3,"SingularField"],[3,"SingularPtrField"],[3,"RepeatedField"],[3,"CodedInputStream"],[3,"CodedOutputStream"],[3,"UnknownValuesIter"],[3,"UnknownFieldsIter"],[3,"CachedSize"],[8,"Clear"],[8,"ProtobufEnum"],[13,"Fixed32"],[13,"Fixed64"],[13,"Varint"],[13,"LengthDelimited"],[13,"Fixed32"],[13,"Fixed64"],[13,"Varint"],[13,"LengthDelimited"],[4,"FileOptions_OptimizeMode"],[4,"FieldOptions_CType"],[4,"MethodOptions_IdempotencyLevel"],[4,"FieldOptions_JSType"],[4,"FieldDescriptorProto_Label"],[4,"FieldDescriptorProto_Type"],[3,"GeneratedCodeInfo"],[3,"FileDescriptorSet"],[3,"FileDescriptorProto"],[3,"DescriptorProto"],[3,"DescriptorProto_ExtensionRange"],[3,"DescriptorProto_ReservedRange"],[3,"ExtensionRangeOptions"],[3,"FieldDescriptorProto"],[3,"OneofDescriptorProto"],[3,"EnumDescriptorProto"],[3,"EnumDescriptorProto_EnumReservedRange"],[3,"EnumValueDescriptorProto"],[3,"ServiceDescriptorProto"],[3,"MethodDescriptorProto"],[3,"FileOptions"],[3,"MessageOptions"],[3,"FieldOptions"],[3,"OneofOptions"],[3,"EnumOptions"],[3,"EnumValueOptions"],[3,"ServiceOptions"],[3,"MethodOptions"],[3,"UninterpretedOption"],[3,"UninterpretedOption_NamePart"],[3,"SourceCodeInfo"],[3,"SourceCodeInfo_Location"],[3,"GeneratedCodeInfo_Annotation"],[4,"WireError"],[4,"ProtobufError"],[13,"IoError"],[13,"WireError"],[13,"Utf8"],[13,"MessageNotInitialized"],[13,"UnexpectedWireType"],[13,"IncorrectTag"],[13,"InvalidEnumValue"],[3,"ExtFieldOptional"],[3,"ExtFieldRepeated"],[3,"Lazy"],[4,"CodeGeneratorResponse_Feature"],[3,"Version"],[3,"CodeGeneratorRequest"],[3,"CodeGeneratorResponse"],[3,"CodeGeneratorResponse_File"],[4,"ReflectValueRef"],[4,"ReflectFieldRef"],[8,"ProtobufValue"],[3,"EnumDescriptor"],[3,"FieldDescriptor"],[3,"MessageDescriptor"],[3,"EnumValueDescriptor"],[13,"Optional"],[13,"Repeated"],[13,"Map"],[13,"U32"],[13,"U64"],[13,"I32"],[13,"I64"],[13,"F32"],[13,"F64"],[13,"Bool"],[13,"String"],[13,"Bytes"],[13,"Enum"],[13,"Message"],[3,"LazyV2"],[8,"ProtobufVarint"],[8,"ProtobufVarintZigzag"],[8,"ProtobufType"],[3,"ProtobufTypeFloat"],[3,"ProtobufTypeDouble"],[3,"ProtobufTypeInt32"],[3,"ProtobufTypeInt64"],[3,"ProtobufTypeUint32"],[3,"ProtobufTypeUint64"],[3,"ProtobufTypeSint32"],[3,"ProtobufTypeSint64"],[3,"ProtobufTypeFixed32"],[3,"ProtobufTypeFixed64"],[3,"ProtobufTypeSfixed32"],[3,"ProtobufTypeSfixed64"],[3,"ProtobufTypeBool"],[3,"ProtobufTypeString"],[3,"ProtobufTypeBytes"],[3,"ProtobufTypeChars"],[3,"ProtobufTypeEnum"],[3,"ProtobufTypeMessage"],[4,"Field_Cardinality"],[4,"NullValue"],[4,"Syntax"],[4,"Field_Kind"],[3,"Any"],[3,"Api"],[3,"Method"],[3,"Mixin"],[3,"Duration"],[3,"Empty"],[3,"FieldMask"],[3,"SourceContext"],[3,"Struct"],[3,"Value"],[3,"ListValue"],[3,"Timestamp"],[3,"Type"],[3,"Field"],[3,"Enum"],[3,"EnumValue"],[3,"Option"],[3,"DoubleValue"],[3,"FloatValue"],[3,"Int64Value"],[3,"UInt64Value"],[3,"Int32Value"],[3,"UInt32Value"],[3,"BoolValue"],[3,"StringValue"],[3,"BytesValue"],[4,"Value_oneof_kind"],[13,"null_value"],[13,"number_value"],[13,"string_value"],[13,"bool_value"],[13,"struct_value"],[13,"list_value"],[4,"WireType"],[3,"Tag"]]},\
"protos":{"doc":"","tn":["cdisk_spec","plugin","ComponentDisk","CompositeDisk","READ_ONLY","READ_WRITE","ReadWriteCapability","as_any","as_any","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cached_size","cached_size","clear","clear","clear_component_disks","clear_file_path","clear_length","clear_offset","clear_read_write_capability","clear_version","clone","clone","clone","clone_into","clone_into","clone_into","component_disks","compute_size","compute_size","default","default","default","default_instance","default_instance","descriptor","descriptor","descriptor_static","descriptor_static","enum_descriptor_static","eq","eq","eq","file_descriptor_proto","file_path","fmt","fmt","fmt","from","from","from","from_i32","get_cached_size","get_cached_size","get_component_disks","get_file_path","get_length","get_offset","get_read_write_capability","get_unknown_fields","get_unknown_fields","get_version","hash","into","into","into","into_any","into_any","is_initialized","is_initialized","length","merge_from","merge_from","mut_component_disks","mut_file_path","mut_unknown_fields","mut_unknown_fields","ne","ne","new","new","new","new","offset","read_write_capability","set_component_disks","set_file_path","set_length","set_offset","set_read_write_capability","set_version","take_component_disks","take_file_path","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unknown_fields","unknown_fields","value","values","version","write_to_with_cached_sizes","write_to_with_cached_sizes","AddressSpace","CLOCK","CpuidEntry","DEBUGREGS","EVENTS","FPU","IOAPIC","IOPORT","LAPIC","MMIO","MP","MainRequest","MainRequest_CheckExtension","MainRequest_CpuidRequest","MainRequest_Create","MainRequest_Create_IoEvent","MainRequest_Create_IrqEvent","MainRequest_Create_Memory","MainRequest_Create_oneof_constructor","MainRequest_Destroy","MainRequest_GetNetConfig","MainRequest_GetShutdownEventfd","MainRequest_GetState","MainRequest_GetVcpus","MainRequest_MemoryDirtyLog","MainRequest_MsrListRequest","MainRequest_NewConnection","MainRequest_PauseVcpus","MainRequest_ReserveRange","MainRequest_SetCallHint","MainRequest_SetCallHint_RegHint","MainRequest_SetIdentityMapAddr","MainRequest_SetIrq","MainRequest_SetIrqRouting","MainRequest_SetIrqRouting_Route","MainRequest_SetIrqRouting_Route_Irqchip","MainRequest_SetIrqRouting_Route_Msi","MainRequest_SetIrqRouting_Route_oneof_route","MainRequest_SetState","MainRequest_Start","MainRequest_StateSet","MainRequest_oneof_message","MainResponse","MainResponse_CheckExtension","MainResponse_CpuidResponse","MainResponse_Create","MainResponse_Destroy","MainResponse_GetNetConfig","MainResponse_GetShutdownEventfd","MainResponse_GetState","MainResponse_GetVcpus","MainResponse_MemoryDirtyLog","MainResponse_MsrListResponse","MainResponse_NewConnection","MainResponse_PauseVcpus","MainResponse_ReserveRange","MainResponse_SetCallHint","MainResponse_SetIdentityMapAddr","MainResponse_SetIrq","MainResponse_SetIrqRouting","MainResponse_SetState","MainResponse_Start","MainResponse_oneof_message","PIC0","PIC1","PIT","REGS","SREGS","VcpuRequest","VcpuRequest_CpuidRequest","VcpuRequest_EnableCapability","VcpuRequest_GetMsrs","VcpuRequest_GetState","VcpuRequest_MsrEntry","VcpuRequest_Resume","VcpuRequest_SetCpuid","VcpuRequest_SetMsrs","VcpuRequest_SetState","VcpuRequest_Shutdown","VcpuRequest_StateSet","VcpuRequest_Wait","VcpuRequest_oneof_message","VcpuResponse","VcpuResponse_CpuidResponse","VcpuResponse_EnableCapability","VcpuResponse_GetMsrs","VcpuResponse_GetState","VcpuResponse_SetCpuid","VcpuResponse_SetMsrs","VcpuResponse_SetState","VcpuResponse_Wait","VcpuResponse_Wait_HypervCall","VcpuResponse_Wait_HypervSynic","VcpuResponse_Wait_Init","VcpuResponse_Wait_Io","VcpuResponse_Wait_User","VcpuResponse_Wait_oneof_exit","VcpuResponse_oneof_message","XCREGS","active","address","address","address","address","address","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","async_write","bitmap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","cached_size","capability","check_extension","check_extension","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear_active","clear_address","clear_address","clear_address","clear_address","clear_address","clear_async_write","clear_bitmap","clear_capability","clear_check_extension","clear_check_extension","clear_control","clear_cpu_mask","clear_create","clear_create","clear_data","clear_data","clear_data","clear_data","clear_datamatch","clear_debugregs","clear_debugregs","clear_destroy","clear_destroy","clear_dirty_log","clear_dirty_log","clear_dirty_log","clear_eax","clear_ebx","clear_ecx","clear_edx","clear_enable_capability","clear_enable_capability","clear_entries","clear_entries","clear_entries","clear_entries","clear_entry_data","clear_entry_indices","clear_errno","clear_errno","clear_evt_page","clear_extension","clear_function","clear_get_emulated_cpuid","clear_get_emulated_cpuid","clear_get_hyperv_cpuid","clear_get_hyperv_cpuid","clear_get_msr_index_list","clear_get_msr_index_list","clear_get_msrs","clear_get_msrs","clear_get_net_config","clear_get_net_config","clear_get_shutdown_eventfd","clear_get_shutdown_eventfd","clear_get_state","clear_get_state","clear_get_state","clear_get_state","clear_get_supported_cpuid","clear_get_supported_cpuid","clear_get_vcpus","clear_get_vcpus","clear_has_extension","clear_has_index","clear_hints","clear_host_ipv4_address","clear_host_mac_address","clear_hyperv_call","clear_hyperv_synic","clear_id","clear_id","clear_id","clear_index","clear_index","clear_indices","clear_init","clear_input","clear_io","clear_io_event","clear_irq_event","clear_irq_id","clear_irq_id","clear_irq_id","clear_irqchip","clear_irqchip","clear_is_write","clear_length","clear_length","clear_length","clear_match_rax","clear_match_rbx","clear_match_rcx","clear_match_rdx","clear_memory","clear_msg_page","clear_msi","clear_msr","clear_netmask","clear_new_connection","clear_new_connection","clear_no_resume","clear_offset","clear_on_write","clear_params0","clear_params1","clear_pause_vcpus","clear_pause_vcpus","clear_pin","clear_rax","clear_rbx","clear_rcx","clear_rdx","clear_read_only","clear_regs","clear_regs","clear_resample","clear_reserve_range","clear_reserve_range","clear_resume","clear_routes","clear_send_debugregs","clear_send_sregs","clear_set","clear_set","clear_set","clear_set","clear_set_call_hint","clear_set_call_hint","clear_set_cpuid","clear_set_cpuid","clear_set_identity_map_addr","clear_set_identity_map_addr","clear_set_irq","clear_set_irq","clear_set_irq_routing","clear_set_irq_routing","clear_set_msrs","clear_set_msrs","clear_set_state","clear_set_state","clear_set_state","clear_set_state","clear_shutdown","clear_space","clear_space","clear_space","clear_space","clear_sregs","clear_sregs","clear_start","clear_start","clear_start","clear_start","clear_state","clear_state","clear_state","clear_state","clear_user","clear_user","clear_user","clear_wait","clear_wait","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","compute_size","constructor","control","cpu_mask","cpuid_kvm_to_proto","cpuid_proto_to_kvm","create","create","data","data","data","data","datamatch","debugregs","debugregs","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","default_instance","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","descriptor_static","destroy","destroy","dirty_log","dirty_log","dirty_log","eax","ebx","ecx","edx","enable_capability","enable_capability","entries","entries","entries","entries","entry_data","entry_indices","enum_descriptor_static","enum_descriptor_static","enum_descriptor_static","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","errno","errno","evt_page","exit","extension","file_descriptor_proto","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","function","get_active","get_address","get_address","get_address","get_address","get_address","get_async_write","get_bitmap","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_cached_size","get_capability","get_check_extension","get_check_extension","get_control","get_cpu_mask","get_create","get_create","get_data","get_data","get_data","get_data","get_datamatch","get_debugregs","get_debugregs","get_destroy","get_destroy","get_dirty_log","get_dirty_log","get_dirty_log","get_eax","get_ebx","get_ecx","get_edx","get_emulated_cpuid","get_emulated_cpuid","get_enable_capability","get_enable_capability","get_entries","get_entries","get_entries","get_entries","get_entry_data","get_entry_indices","get_errno","get_errno","get_evt_page","get_extension","get_function","get_get_emulated_cpuid","get_get_emulated_cpuid","get_get_hyperv_cpuid","get_get_hyperv_cpuid","get_get_msr_index_list","get_get_msr_index_list","get_get_msrs","get_get_msrs","get_get_net_config","get_get_net_config","get_get_shutdown_eventfd","get_get_shutdown_eventfd","get_get_state","get_get_state","get_get_state","get_get_state","get_get_supported_cpuid","get_get_supported_cpuid","get_get_vcpus","get_get_vcpus","get_has_extension","get_has_index","get_hints","get_host_ipv4_address","get_host_mac_address","get_hyperv_call","get_hyperv_cpuid","get_hyperv_cpuid","get_hyperv_synic","get_id","get_id","get_id","get_index","get_index","get_indices","get_init","get_input","get_io","get_io_event","get_irq_event","get_irq_id","get_irq_id","get_irq_id","get_irqchip","get_irqchip","get_is_write","get_length","get_length","get_length","get_match_rax","get_match_rbx","get_match_rcx","get_match_rdx","get_memory","get_msg_page","get_msi","get_msr","get_msr_index_list","get_msr_index_list","get_msrs","get_msrs","get_net_config","get_net_config","get_netmask","get_new_connection","get_new_connection","get_no_resume","get_offset","get_on_write","get_params0","get_params1","get_pause_vcpus","get_pause_vcpus","get_pin","get_rax","get_rbx","get_rcx","get_rdx","get_read_only","get_regs","get_regs","get_resample","get_reserve_range","get_reserve_range","get_resume","get_routes","get_send_debugregs","get_send_sregs","get_set","get_set","get_set","get_set","get_set_call_hint","get_set_call_hint","get_set_cpuid","get_set_cpuid","get_set_identity_map_addr","get_set_identity_map_addr","get_set_irq","get_set_irq","get_set_irq_routing","get_set_irq_routing","get_set_msrs","get_set_msrs","get_set_state","get_set_state","get_set_state","get_set_state","get_shutdown","get_shutdown_eventfd","get_shutdown_eventfd","get_space","get_space","get_space","get_space","get_sregs","get_sregs","get_start","get_start","get_start","get_start","get_state","get_state","get_state","get_state","get_state","get_state","get_state","get_state","get_supported_cpuid","get_supported_cpuid","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_unknown_fields","get_user","get_user","get_user","get_vcpus","get_vcpus","get_wait","get_wait","has_check_extension","has_check_extension","has_create","has_create","has_destroy","has_destroy","has_dirty_log","has_dirty_log","has_enable_capability","has_enable_capability","has_extension","has_get_emulated_cpuid","has_get_emulated_cpuid","has_get_hyperv_cpuid","has_get_hyperv_cpuid","has_get_msr_index_list","has_get_msr_index_list","has_get_msrs","has_get_msrs","has_get_net_config","has_get_net_config","has_get_shutdown_eventfd","has_get_shutdown_eventfd","has_get_state","has_get_state","has_get_state","has_get_state","has_get_supported_cpuid","has_get_supported_cpuid","has_get_vcpus","has_get_vcpus","has_hyperv_call","has_hyperv_synic","has_index","has_init","has_io","has_io_event","has_irq_event","has_irqchip","has_memory","has_msi","has_new_connection","has_new_connection","has_pause_vcpus","has_pause_vcpus","has_reserve_range","has_reserve_range","has_resume","has_set_call_hint","has_set_call_hint","has_set_cpuid","has_set_cpuid","has_set_identity_map_addr","has_set_identity_map_addr","has_set_irq","has_set_irq","has_set_irq_routing","has_set_irq_routing","has_set_msrs","has_set_msrs","has_set_state","has_set_state","has_set_state","has_set_state","has_shutdown","has_start","has_start","has_user","has_wait","has_wait","hash","hash","hash","hints","host_ipv4_address","host_mac_address","hyperv_call","hyperv_synic","id","id","id","index","index","indices","init","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","io","io_event","irq_event","irq_id","irq_id","irq_id","irqchip","irqchip","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_initialized","is_write","length","length","length","match_rax","match_rbx","match_rcx","match_rdx","memory","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","merge_from","message","message","message","message","msg_page","msi","msr","mut_bitmap","mut_check_extension","mut_check_extension","mut_create","mut_create","mut_data","mut_data","mut_debugregs","mut_debugregs","mut_destroy","mut_destroy","mut_dirty_log","mut_dirty_log","mut_enable_capability","mut_enable_capability","mut_entries","mut_entries","mut_entries","mut_entries","mut_entry_data","mut_entry_indices","mut_get_emulated_cpuid","mut_get_emulated_cpuid","mut_get_hyperv_cpuid","mut_get_hyperv_cpuid","mut_get_msr_index_list","mut_get_msr_index_list","mut_get_msrs","mut_get_msrs","mut_get_net_config","mut_get_net_config","mut_get_shutdown_eventfd","mut_get_shutdown_eventfd","mut_get_state","mut_get_state","mut_get_state","mut_get_state","mut_get_supported_cpuid","mut_get_supported_cpuid","mut_get_vcpus","mut_get_vcpus","mut_hints","mut_host_mac_address","mut_hyperv_call","mut_hyperv_synic","mut_indices","mut_init","mut_io","mut_io_event","mut_irq_event","mut_irqchip","mut_memory","mut_msi","mut_new_connection","mut_new_connection","mut_pause_vcpus","mut_pause_vcpus","mut_regs","mut_regs","mut_reserve_range","mut_reserve_range","mut_resume","mut_routes","mut_set_call_hint","mut_set_call_hint","mut_set_cpuid","mut_set_cpuid","mut_set_identity_map_addr","mut_set_identity_map_addr","mut_set_irq","mut_set_irq","mut_set_irq_routing","mut_set_irq_routing","mut_set_msrs","mut_set_msrs","mut_set_state","mut_set_state","mut_set_state","mut_set_state","mut_shutdown","mut_sregs","mut_sregs","mut_start","mut_start","mut_state","mut_state","mut_state","mut_state","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","mut_user","mut_wait","mut_wait","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","netmask","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_connection","new_connection","no_resume","offset","on_write","params0","params1","pause_vcpus","pause_vcpus","pin","rax","rbx","rcx","rdx","read_only","regs","regs","resample","reserve_range","reserve_range","resume","route","routes","send_debugregs","send_sregs","set","set","set","set","set_active","set_address","set_address","set_address","set_address","set_address","set_async_write","set_bitmap","set_call_hint","set_call_hint","set_capability","set_check_extension","set_check_extension","set_control","set_cpu_mask","set_cpuid","set_cpuid","set_create","set_create","set_data","set_data","set_data","set_data","set_datamatch","set_debugregs","set_debugregs","set_destroy","set_destroy","set_dirty_log","set_dirty_log","set_dirty_log","set_eax","set_ebx","set_ecx","set_edx","set_enable_capability","set_enable_capability","set_entries","set_entries","set_entries","set_entries","set_entry_data","set_entry_indices","set_errno","set_errno","set_evt_page","set_extension","set_function","set_get_emulated_cpuid","set_get_emulated_cpuid","set_get_hyperv_cpuid","set_get_hyperv_cpuid","set_get_msr_index_list","set_get_msr_index_list","set_get_msrs","set_get_msrs","set_get_net_config","set_get_net_config","set_get_shutdown_eventfd","set_get_shutdown_eventfd","set_get_state","set_get_state","set_get_state","set_get_state","set_get_supported_cpuid","set_get_supported_cpuid","set_get_vcpus","set_get_vcpus","set_has_extension","set_has_index","set_hints","set_host_ipv4_address","set_host_mac_address","set_hyperv_call","set_hyperv_synic","set_id","set_id","set_id","set_identity_map_addr","set_identity_map_addr","set_index","set_index","set_indices","set_init","set_input","set_io","set_io_event","set_irq","set_irq","set_irq_event","set_irq_id","set_irq_id","set_irq_id","set_irq_routing","set_irq_routing","set_irqchip","set_irqchip","set_is_write","set_length","set_length","set_length","set_match_rax","set_match_rbx","set_match_rcx","set_match_rdx","set_memory","set_msg_page","set_msi","set_msr","set_msrs","set_msrs","set_netmask","set_new_connection","set_new_connection","set_no_resume","set_offset","set_on_write","set_params0","set_params1","set_pause_vcpus","set_pause_vcpus","set_pin","set_rax","set_rbx","set_rcx","set_rdx","set_read_only","set_regs","set_regs","set_resample","set_reserve_range","set_reserve_range","set_resume","set_routes","set_send_debugregs","set_send_sregs","set_set","set_set","set_set","set_set","set_set_call_hint","set_set_call_hint","set_set_cpuid","set_set_cpuid","set_set_identity_map_addr","set_set_identity_map_addr","set_set_irq","set_set_irq","set_set_irq_routing","set_set_irq_routing","set_set_msrs","set_set_msrs","set_set_state","set_set_state","set_set_state","set_set_state","set_shutdown","set_space","set_space","set_space","set_space","set_sregs","set_sregs","set_start","set_start","set_start","set_start","set_state","set_state","set_state","set_state","set_state","set_state","set_state","set_state","set_user","set_user","set_user","set_wait","set_wait","shutdown","space","space","space","space","sregs","sregs","start","start","start","start","state","state","state","state","take_bitmap","take_check_extension","take_check_extension","take_create","take_create","take_data","take_data","take_debugregs","take_debugregs","take_destroy","take_destroy","take_dirty_log","take_dirty_log","take_enable_capability","take_enable_capability","take_entries","take_entries","take_entries","take_entries","take_entry_data","take_entry_indices","take_get_emulated_cpuid","take_get_emulated_cpuid","take_get_hyperv_cpuid","take_get_hyperv_cpuid","take_get_msr_index_list","take_get_msr_index_list","take_get_msrs","take_get_msrs","take_get_net_config","take_get_net_config","take_get_shutdown_eventfd","take_get_shutdown_eventfd","take_get_state","take_get_state","take_get_state","take_get_state","take_get_supported_cpuid","take_get_supported_cpuid","take_get_vcpus","take_get_vcpus","take_hints","take_host_mac_address","take_hyperv_call","take_hyperv_synic","take_indices","take_init","take_io","take_io_event","take_irq_event","take_irqchip","take_memory","take_msi","take_new_connection","take_new_connection","take_pause_vcpus","take_pause_vcpus","take_regs","take_regs","take_reserve_range","take_reserve_range","take_resume","take_routes","take_set_call_hint","take_set_call_hint","take_set_cpuid","take_set_cpuid","take_set_identity_map_addr","take_set_identity_map_addr","take_set_irq","take_set_irq","take_set_irq_routing","take_set_irq_routing","take_set_msrs","take_set_msrs","take_set_state","take_set_state","take_set_state","take_set_state","take_shutdown","take_sregs","take_sregs","take_start","take_start","take_state","take_state","take_state","take_state","take_user","take_wait","take_wait","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","user","user","user","value","value","value","values","values","values","wait","wait","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["protos","","protos::cdisk_spec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","protos::pluginprotos::plugin::MainRequest_Create_oneof_constructor","","","protos::plugin::MainRequest_SetIrqRouting_Route_oneof_route","","protos::plugin::MainRequest_oneof_message","","","","","","","","","","","","","","","","","","","","protos::plugin::MainResponse_oneof_message","","","","","","","","","","","","","","","","","","","","protos::plugin::VcpuRequest_oneof_message","","","","","","","","","","protos::plugin::VcpuResponse_Wait_oneof_exit","","","","","protos::plugin::VcpuResponse_oneof_message","","","","","","",""],"d":["Generated file from <code>cdisk_spec.proto</code>","","Generated files are compatible only with the same version …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated files are compatible only with the same version …onverts KVM representation of CpuId data into protobuf …","Converts protobuf representation of CpuId data into KVM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,0,2,3,2,3,2,3,1,2,3,1,2,3,1,2,3,2,3,3,2,3,2,2,3,2,3,1,2,3,1,3,2,3,2,3,1,2,3,2,3,2,3,1,2,3,1,0,2,2,3,1,2,3,1,1,2,3,3,2,3,2,2,2,3,3,1,2,3,1,2,3,2,3,3,2,3,3,2,2,3,2,3,2,2,3,3,2,2,3,2,3,2,2,3,3,2,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,1,3,2,3,0,4,0,5,5,5,4,6,5,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,9,10,11,12,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,4,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,5,68,69,70,12,71,72,73,74,75,76,77,78,79,80,6,25,55,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,67,81,84,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,7,8,9,10,11,12,25,55,67,14,36,73,31,14,36,9,58,63,12,8,58,12,14,36,14,16,36,13,13,13,13,56,68,42,64,65,76,77,62,36,68,73,21,13,14,36,56,68,14,36,56,68,14,36,14,36,14,36,56,68,14,36,14,36,41,13,11,44,44,69,69,15,18,35,13,63,43,69,72,69,15,15,17,7,27,27,28,12,8,16,25,34,34,34,34,15,73,27,73,44,14,36,12,16,11,72,72,14,36,28,34,34,34,34,16,58,12,17,14,36,56,26,34,34,29,30,59,60,14,36,56,68,14,36,14,36,14,36,56,68,14,36,56,68,56,8,25,11,12,58,12,14,16,25,36,30,48,60,74,31,69,71,56,68,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,15,73,31,0,0,81,84,9,58,63,12,8,58,12,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,4,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,5,68,69,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,81,84,16,81,84,13,13,13,13,85,86,42,64,65,76,77,62,4,5,6,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,36,68,73,69,21,0,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,4,5,6,13,7,8,9,10,11,12,25,55,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,67,14,36,73,31,14,36,9,58,63,12,8,58,12,14,36,14,16,36,13,13,13,13,81,84,56,68,42,64,65,76,77,62,36,68,73,21,13,14,36,56,68,14,36,56,68,14,36,14,36,14,36,56,68,14,36,14,36,41,13,11,44,44,69,85,86,69,15,18,35,13,63,43,69,72,69,15,15,17,7,27,27,28,12,8,16,25,34,34,34,34,15,73,27,73,81,84,85,86,81,84,44,14,36,12,16,11,72,72,14,36,28,34,34,34,34,16,58,12,17,14,36,56,26,34,34,29,30,59,60,14,36,56,68,14,36,14,36,14,36,56,68,14,36,56,68,56,81,84,8,25,11,12,58,12,14,16,25,36,30,48,60,74,81,84,85,86,81,84,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,31,69,71,81,84,56,68,14,36,14,36,14,36,14,36,56,68,41,14,36,56,68,14,36,56,68,14,36,14,36,14,36,56,68,14,36,14,36,69,69,13,69,69,15,15,27,15,27,14,36,14,36,14,36,56,14,36,56,68,14,36,14,36,14,36,56,68,14,36,56,68,56,14,36,69,56,68,4,5,6,11,44,44,87,87,15,18,35,13,63,43,87,72,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,87,82,82,17,7,27,28,83,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,12,8,16,25,34,34,34,34,82,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,14,36,56,68,73,83,73,55,14,36,14,36,58,12,58,12,14,36,14,36,56,68,42,64,65,76,77,62,14,36,56,68,14,36,56,68,14,36,14,36,14,36,56,68,14,36,14,36,11,44,69,69,43,69,69,15,15,27,15,27,14,36,14,36,58,12,14,36,56,26,14,36,56,68,14,36,14,36,14,36,56,68,14,36,56,68,56,58,12,14,36,30,48,60,74,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,69,56,68,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,44,13,13,14,14,15,15,8,8,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,7,7,26,26,27,27,28,28,9,9,29,29,30,30,10,10,31,31,32,32,33,33,11,11,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,12,12,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,84,12,16,11,72,72,81,84,28,34,34,34,34,16,58,12,17,81,84,85,27,26,34,34,29,30,59,60,7,8,9,10,11,12,25,55,81,84,67,14,36,73,31,85,86,14,36,9,58,63,12,8,58,12,14,36,14,16,36,13,13,13,13,56,68,42,64,65,76,77,62,36,68,73,21,13,14,36,56,68,14,36,56,68,14,36,14,36,14,36,56,68,14,36,14,36,41,13,11,44,44,69,69,15,18,35,81,84,13,63,43,69,72,69,15,81,84,15,17,7,27,81,84,27,28,12,8,16,25,34,34,34,34,15,73,27,73,85,86,44,14,36,12,16,11,72,72,14,36,28,34,34,34,34,16,58,12,17,14,36,56,26,34,34,29,30,59,60,14,36,56,68,14,36,14,36,14,36,56,68,14,36,56,68,56,8,25,11,12,58,12,14,16,25,36,30,48,60,74,81,84,85,86,31,69,71,56,68,85,8,25,11,12,58,12,16,25,81,84,30,48,60,74,55,14,36,14,36,58,12,58,12,14,36,14,36,56,68,42,64,65,76,77,62,14,36,56,68,14,36,56,68,14,36,14,36,14,36,56,68,14,36,14,36,11,44,69,69,43,69,69,15,15,27,15,27,14,36,14,36,58,12,14,36,56,26,14,36,56,68,14,36,14,36,14,36,56,68,14,36,56,68,56,58,12,14,36,30,48,60,74,69,56,68,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,81,15,82,8,16,17,18,19,20,21,22,23,24,25,7,26,27,83,28,9,29,30,10,31,32,33,11,34,35,4,36,84,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,85,57,58,59,60,61,62,63,64,65,66,67,5,68,86,69,87,70,12,71,72,73,74,75,76,77,78,79,80,6,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,31,71,87,4,5,6,4,5,6,85,86,13,14,15,8,16,17,18,19,20,21,22,23,24,25,7,26,27,28,9,29,30,10,31,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"f":[null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["componentdisk",3]],[[],["compositedisk",3]],[[],["readwritecapability",4]],[[]],[[]],[[]],null,[[],["u32",15]],[[],["u32",15]],[[],["componentdisk",3]],[[],["compositedisk",3]],[[]],[[],["componentdisk",3]],[[],["compositedisk",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["enumdescriptor",3]],[[["componentdisk",3]],["bool",15]],[[["compositedisk",3]],["bool",15]],[[["readwritecapability",4]],["bool",15]],[[],["filedescriptorproto",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["i32",15]],[["readwritecapability",4],["option",4,["readwritecapability"]]]],[[],["u32",15]],[[],["u32",15]],[[]],[[],["str",15]],[[],["u64",15]],[[],["u64",15]],[[],["readwritecapability",4]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[],["bool",15]],[[],["bool",15]],null,[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[],["repeatedfield",3]],[[],["string",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[["componentdisk",3]],["bool",15]],[[["compositedisk",3]],["bool",15]],[[],["componentdisk",3]],[[],["componentdisk",3]],[[],["compositedisk",3]],[[],["compositedisk",3]],null,null,[[["componentdisk",3],["repeatedfield",3,["componentdisk"]]]],[[["string",3]]],[[["u64",15]]],[[["u64",15]]],[[["readwritecapability",4]]],[[["u64",15]]],[[],[["componentdisk",3],["repeatedfield",3,["componentdisk"]]]],[[],["string",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["i32",15]],[[]],null,[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],[[],["reflectvalueref",4]],null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullcpuidentry",3]],[[],["mainrequest",3]],[[],["mainrequest_oneof_message",4]],[[],["mainrequest_create",3]],[[],["mainrequest_create_oneof_constructor",4]],[[],["mainrequest_create_ioevent",3]],[[],["mainrequest_create_memory",3]],[[],["mainrequest_create_irqevent",3]],[[],["mainrequest_destroy",3]],[[],["mainrequest_newconnection",3]],[[],["mainrequest_getshutdowneventfd",3]],[[],["mainrequest_checkextension",3]],[[],["mainrequest_cpuidrequest",3]],[[],["mainrequest_msrlistrequest",3]],[[],["mainrequest_getnetconfig",3]],[[],["mainrequest_reserverange",3]],[[],["mainrequest_setirq",3]],[[],["mainrequest_setirqrouting",3]],[[],["mainrequest_setirqrouting_route",3]],[[],["mainrequest_setirqrouting_route_oneof_route",4]],[[],["mainrequest_setirqrouting_route_irqchip",3]],[[],["mainrequest_setirqrouting_route_msi",3]],[[],["mainrequest_getstate",3]],[[],["mainrequest_setstate",3]],[[],["mainrequest_setidentitymapaddr",3]],[[],["mainrequest_pausevcpus",3]],[[],["mainrequest_getvcpus",3]],[[],["mainrequest_start",3]],[[],["mainrequest_setcallhint",3]],[[],["mainrequest_setcallhint_reghint",3]],[[],["mainrequest_memorydirtylog",3]],[[],["mainrequest_stateset",4]],[[],["mainresponse",3]],[[],["mainresponse_oneof_message",4]],[[],["mainresponse_create",3]],[[],["mainresponse_destroy",3]],[[],["mainresponse_newconnection",3]],[[],["mainresponse_getshutdowneventfd",3]],[[],["mainresponse_checkextension",3]],[[],["mainresponse_cpuidresponse",3]],[[],["mainresponse_msrlistresponse",3]],[[],["mainresponse_getnetconfig",3]],[[],["mainresponse_reserverange",3]],[[],["mainresponse_setirq",3]],[[],["mainresponse_setirqrouting",3]],[[],["mainresponse_getstate",3]],[[],["mainresponse_setstate",3]],[[],["mainresponse_setidentitymapaddr",3]],[[],["mainresponse_pausevcpus",3]],[[],["mainresponse_getvcpus",3]],[[],["mainresponse_start",3]],[[],["mainresponse_setcallhint",3]],[[],["mainresponse_memorydirtylog",3]],[[],["vcpurequest",3]],[[],["vcpurequest_oneof_message",4]],[[],["vcpurequest_wait",3]],[[],["vcpurequest_resume",3]],[[],["vcpurequest_getstate",3]],[[],["vcpurequest_setstate",3]],[[],["vcpurequest_cpuidrequest",3]],[[],["vcpurequest_getmsrs",3]],[[],["vcpurequest_msrentry",3]],[[],["vcpurequest_setmsrs",3]],[[],["vcpurequest_setcpuid",3]],[[],["vcpurequest_shutdown",3]],[[],["vcpurequest_enablecapability",3]],[[],["vcpurequest_stateset",4]],[[],["vcpuresponse",3]],[[],["vcpuresponse_oneof_message",4]],[[],["vcpuresponse_wait",3]],[[],["vcpuresponse_wait_oneof_exit",4]],[[],["vcpuresponse_wait_init",3]],[[],["vcpuresponse_wait_io",3]],[[],["vcpuresponse_wait_user",3]],[[],["vcpuresponse_wait_hypervcall",3]],[[],["vcpuresponse_wait_hypervsynic",3]],[[],["vcpuresponse_getstate",3]],[[],["vcpuresponse_setstate",3]],[[],["vcpuresponse_cpuidresponse",3]],[[],["vcpuresponse_getmsrs",3]],[[],["vcpuresponse_setmsrs",3]],[[],["vcpuresponse_setcpuid",3]],[[],["vcpuresponse_enablecapability",3]],[[],["addressspace",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,null,null,[[["kvm_cpuid_entry2",3]],["cpuidentry",3]],[[["cpuidentry",3]],["kvm_cpuid_entry2",3]],null,null,null,null,null,null,null,null,null,[[],["cpuidentry",3]],[[],["mainrequest",3]],[[],["mainrequest_create",3]],[[],["mainrequest_create_ioevent",3]],[[],["mainrequest_create_memory",3]],[[],["mainrequest_create_irqevent",3]],[[],["mainrequest_destroy",3]],[[],["mainrequest_newconnection",3]],[[],["mainrequest_getshutdowneventfd",3]],[[],["mainrequest_checkextension",3]],[[],["mainrequest_cpuidrequest",3]],[[],["mainrequest_msrlistrequest",3]],[[],["mainrequest_getnetconfig",3]],[[],["mainrequest_reserverange",3]],[[],["mainrequest_setirq",3]],[[],["mainrequest_setirqrouting",3]],[[],["mainrequest_setirqrouting_route",3]],[[],["mainrequest_setirqrouting_route_irqchip",3]],[[],["mainrequest_setirqrouting_route_msi",3]],[[],["mainrequest_getstate",3]],[[],["mainrequest_setstate",3]],[[],["mainrequest_setidentitymapaddr",3]],[[],["mainrequest_pausevcpus",3]],[[],["mainrequest_getvcpus",3]],[[],["mainrequest_start",3]],[[],["mainrequest_setcallhint",3]],[[],["mainrequest_setcallhint_reghint",3]],[[],["mainrequest_memorydirtylog",3]],[[]],[[],["mainresponse",3]],[[],["mainresponse_create",3]],[[],["mainresponse_destroy",3]],[[],["mainresponse_newconnection",3]],[[],["mainresponse_getshutdowneventfd",3]],[[],["mainresponse_checkextension",3]],[[],["mainresponse_cpuidresponse",3]],[[],["mainresponse_msrlistresponse",3]],[[],["mainresponse_getnetconfig",3]],[[],["mainresponse_reserverange",3]],[[],["mainresponse_setirq",3]],[[],["mainresponse_setirqrouting",3]],[[],["mainresponse_getstate",3]],[[],["mainresponse_setstate",3]],[[],["mainresponse_setidentitymapaddr",3]],[[],["mainresponse_pausevcpus",3]],[[],["mainresponse_getvcpus",3]],[[],["mainresponse_start",3]],[[],["mainresponse_setcallhint",3]],[[],["mainresponse_memorydirtylog",3]],[[],["vcpurequest",3]],[[],["vcpurequest_wait",3]],[[],["vcpurequest_resume",3]],[[],["vcpurequest_getstate",3]],[[],["vcpurequest_setstate",3]],[[],["vcpurequest_cpuidrequest",3]],[[],["vcpurequest_getmsrs",3]],[[],["vcpurequest_msrentry",3]],[[],["vcpurequest_setmsrs",3]],[[],["vcpurequest_setcpuid",3]],[[],["vcpurequest_shutdown",3]],[[],["vcpurequest_enablecapability",3]],[[]],[[],["vcpuresponse",3]],[[],["vcpuresponse_wait",3]],[[],["vcpuresponse_wait_init",3]],[[],["vcpuresponse_wait_io",3]],[[],["vcpuresponse_wait_user",3]],[[],["vcpuresponse_wait_hypervcall",3]],[[],["vcpuresponse_wait_hypervsynic",3]],[[],["vcpuresponse_getstate",3]],[[],["vcpuresponse_setstate",3]],[[],["vcpuresponse_cpuidresponse",3]],[[],["vcpuresponse_getmsrs",3]],[[],["vcpuresponse_setmsrs",3]],[[],["vcpuresponse_setcpuid",3]],[[],["vcpuresponse_enablecapability",3]],[[]],[[],["cpuidentry",3]],[[],["mainrequest",3]],[[],["mainrequest_create",3]],[[],["mainrequest_create_ioevent",3]],[[],["mainrequest_create_memory",3]],[[],["mainrequest_create_irqevent",3]],[[],["mainrequest_destroy",3]],[[],["mainrequest_newconnection",3]],[[],["mainrequest_getshutdowneventfd",3]],[[],["mainrequest_checkextension",3]],[[],["mainrequest_cpuidrequest",3]],[[],["mainrequest_msrlistrequest",3]],[[],["mainrequest_getnetconfig",3]],[[],["mainrequest_reserverange",3]],[[],["mainrequest_setirq",3]],[[],["mainrequest_setirqrouting",3]],[[],["mainrequest_setirqrouting_route",3]],[[],["mainrequest_setirqrouting_route_irqchip",3]],[[],["mainrequest_setirqrouting_route_msi",3]],[[],["mainrequest_getstate",3]],[[],["mainrequest_setstate",3]],[[],["mainrequest_setidentitymapaddr",3]],[[],["mainrequest_pausevcpus",3]],[[],["mainrequest_getvcpus",3]],[[],["mainrequest_start",3]],[[],["mainrequest_setcallhint",3]],[[],["mainrequest_setcallhint_reghint",3]],[[],["mainrequest_memorydirtylog",3]],[[],["mainresponse",3]],[[],["mainresponse_create",3]],[[],["mainresponse_destroy",3]],[[],["mainresponse_newconnection",3]],[[],["mainresponse_getshutdowneventfd",3]],[[],["mainresponse_checkextension",3]],[[],["mainresponse_cpuidresponse",3]],[[],["mainresponse_msrlistresponse",3]],[[],["mainresponse_getnetconfig",3]],[[],["mainresponse_reserverange",3]],[[],["mainresponse_setirq",3]],[[],["mainresponse_setirqrouting",3]],[[],["mainresponse_getstate",3]],[[],["mainresponse_setstate",3]],[[],["mainresponse_setidentitymapaddr",3]],[[],["mainresponse_pausevcpus",3]],[[],["mainresponse_getvcpus",3]],[[],["mainresponse_start",3]],[[],["mainresponse_setcallhint",3]],[[],["mainresponse_memorydirtylog",3]],[[],["vcpurequest",3]],[[],["vcpurequest_wait",3]],[[],["vcpurequest_resume",3]],[[],["vcpurequest_getstate",3]],[[],["vcpurequest_setstate",3]],[[],["vcpurequest_cpuidrequest",3]],[[],["vcpurequest_getmsrs",3]],[[],["vcpurequest_msrentry",3]],[[],["vcpurequest_setmsrs",3]],[[],["vcpurequest_setcpuid",3]],[[],["vcpurequest_shutdown",3]],[[],["vcpurequest_enablecapability",3]],[[],["vcpuresponse",3]],[[],["vcpuresponse_wait",3]],[[],["vcpuresponse_wait_init",3]],[[],["vcpuresponse_wait_io",3]],[[],["vcpuresponse_wait_user",3]],[[],["vcpuresponse_wait_hypervcall",3]],[[],["vcpuresponse_wait_hypervsynic",3]],[[],["vcpuresponse_getstate",3]],[[],["vcpuresponse_setstate",3]],[[],["vcpuresponse_cpuidresponse",3]],[[],["vcpuresponse_getmsrs",3]],[[],["vcpuresponse_setmsrs",3]],[[],["vcpuresponse_setcpuid",3]],[[],["vcpuresponse_enablecapability",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],[[],["messagedescriptor",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[],["enumdescriptor",3]],[[["cpuidentry",3]],["bool",15]],[[["mainrequest",3]],["bool",15]],[[["mainrequest_oneof_message",4]],["bool",15]],[[["mainrequest_create",3]],["bool",15]],[[["mainrequest_create_oneof_constructor",4]],["bool",15]],[[["mainrequest_create_ioevent",3]],["bool",15]],[[["mainrequest_create_memory",3]],["bool",15]],[[["mainrequest_create_irqevent",3]],["bool",15]],[[["mainrequest_destroy",3]],["bool",15]],[[["mainrequest_newconnection",3]],["bool",15]],[[["mainrequest_getshutdowneventfd",3]],["bool",15]],[[["mainrequest_checkextension",3]],["bool",15]],[[["mainrequest_cpuidrequest",3]],["bool",15]],[[["mainrequest_msrlistrequest",3]],["bool",15]],[[["mainrequest_getnetconfig",3]],["bool",15]],[[["mainrequest_reserverange",3]],["bool",15]],[[["mainrequest_setirq",3]],["bool",15]],[[["mainrequest_setirqrouting",3]],["bool",15]],[[["mainrequest_setirqrouting_route",3]],["bool",15]],[[["mainrequest_setirqrouting_route_oneof_route",4]],["bool",15]],[[["mainrequest_setirqrouting_route_irqchip",3]],["bool",15]],[[["mainrequest_setirqrouting_route_msi",3]],["bool",15]],[[["mainrequest_getstate",3]],["bool",15]],[[["mainrequest_setstate",3]],["bool",15]],[[["mainrequest_setidentitymapaddr",3]],["bool",15]],[[["mainrequest_pausevcpus",3]],["bool",15]],[[["mainrequest_getvcpus",3]],["bool",15]],[[["mainrequest_start",3]],["bool",15]],[[["mainrequest_setcallhint",3]],["bool",15]],[[["mainrequest_setcallhint_reghint",3]],["bool",15]],[[["mainrequest_memorydirtylog",3]],["bool",15]],[[["mainrequest_stateset",4]],["bool",15]],[[["mainresponse",3]],["bool",15]],[[["mainresponse_oneof_message",4]],["bool",15]],[[["mainresponse_create",3]],["bool",15]],[[["mainresponse_destroy",3]],["bool",15]],[[["mainresponse_newconnection",3]],["bool",15]],[[["mainresponse_getshutdowneventfd",3]],["bool",15]],[[["mainresponse_checkextension",3]],["bool",15]],[[["mainresponse_cpuidresponse",3]],["bool",15]],[[["mainresponse_msrlistresponse",3]],["bool",15]],[[["mainresponse_getnetconfig",3]],["bool",15]],[[["mainresponse_reserverange",3]],["bool",15]],[[["mainresponse_setirq",3]],["bool",15]],[[["mainresponse_setirqrouting",3]],["bool",15]],[[["mainresponse_getstate",3]],["bool",15]],[[["mainresponse_setstate",3]],["bool",15]],[[["mainresponse_setidentitymapaddr",3]],["bool",15]],[[["mainresponse_pausevcpus",3]],["bool",15]],[[["mainresponse_getvcpus",3]],["bool",15]],[[["mainresponse_start",3]],["bool",15]],[[["mainresponse_setcallhint",3]],["bool",15]],[[["mainresponse_memorydirtylog",3]],["bool",15]],[[["vcpurequest",3]],["bool",15]],[[["vcpurequest_oneof_message",4]],["bool",15]],[[["vcpurequest_wait",3]],["bool",15]],[[["vcpurequest_resume",3]],["bool",15]],[[["vcpurequest_getstate",3]],["bool",15]],[[["vcpurequest_setstate",3]],["bool",15]],[[["vcpurequest_cpuidrequest",3]],["bool",15]],[[["vcpurequest_getmsrs",3]],["bool",15]],[[["vcpurequest_msrentry",3]],["bool",15]],[[["vcpurequest_setmsrs",3]],["bool",15]],[[["vcpurequest_setcpuid",3]],["bool",15]],[[["vcpurequest_shutdown",3]],["bool",15]],[[["vcpurequest_enablecapability",3]],["bool",15]],[[["vcpurequest_stateset",4]],["bool",15]],[[["vcpuresponse",3]],["bool",15]],[[["vcpuresponse_oneof_message",4]],["bool",15]],[[["vcpuresponse_wait",3]],["bool",15]],[[["vcpuresponse_wait_oneof_exit",4]],["bool",15]],[[["vcpuresponse_wait_init",3]],["bool",15]],[[["vcpuresponse_wait_io",3]],["bool",15]],[[["vcpuresponse_wait_user",3]],["bool",15]],[[["vcpuresponse_wait_hypervcall",3]],["bool",15]],[[["vcpuresponse_wait_hypervsynic",3]],["bool",15]],[[["vcpuresponse_getstate",3]],["bool",15]],[[["vcpuresponse_setstate",3]],["bool",15]],[[["vcpuresponse_cpuidresponse",3]],["bool",15]],[[["vcpuresponse_getmsrs",3]],["bool",15]],[[["vcpuresponse_setmsrs",3]],["bool",15]],[[["vcpuresponse_setcpuid",3]],["bool",15]],[[["vcpuresponse_enablecapability",3]],["bool",15]],[[["addressspace",4]],["bool",15]],null,null,null,null,null,[[],["filedescriptorproto",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],[["mainrequest_stateset",4],["option",4,["mainrequest_stateset"]]]],[[["i32",15]],[["vcpurequest_stateset",4],["option",4,["vcpurequest_stateset"]]]],[[["i32",15]],[["option",4,["addressspace"]],["addressspace",4]]],null,[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["bool",15]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["mainrequest_checkextension",3]],[[],["mainresponse_checkextension",3]],[[],["u64",15]],[[],["u64",15]],[[],["mainrequest_create",3]],[[],["mainresponse_create",3]],[[],["u32",15]],[[]],[[],["u64",15]],[[]],[[],["u64",15]],[[]],[[]],[[],["mainrequest_destroy",3]],[[],["mainresponse_destroy",3]],[[],["mainrequest_memorydirtylog",3]],[[],["bool",15]],[[],["mainresponse_memorydirtylog",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,null,[[],["vcpurequest_enablecapability",3]],[[],["vcpuresponse_enablecapability",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["i32",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["mainrequest_cpuidrequest",3]],[[],["mainresponse_cpuidresponse",3]],[[],["vcpurequest_cpuidrequest",3]],[[],["vcpuresponse_cpuidresponse",3]],[[],["mainrequest_msrlistrequest",3]],[[],["mainresponse_msrlistresponse",3]],[[],["vcpurequest_getmsrs",3]],[[],["vcpuresponse_getmsrs",3]],[[],["mainrequest_getnetconfig",3]],[[],["mainresponse_getnetconfig",3]],[[],["mainrequest_getshutdowneventfd",3]],[[],["mainresponse_getshutdowneventfd",3]],[[],["mainrequest_getstate",3]],[[],["mainresponse_getstate",3]],[[],["vcpurequest_getstate",3]],[[],["vcpuresponse_getstate",3]],[[],["mainrequest_cpuidrequest",3]],[[],["mainresponse_cpuidresponse",3]],[[],["mainrequest_getvcpus",3]],[[],["mainresponse_getvcpus",3]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["u32",15]],[[]],[[],["vcpuresponse_wait_hypervcall",3]],null,null,[[],["vcpuresponse_wait_hypervsynic",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[],["vcpuresponse_wait_init",3]],[[],["u64",15]],[[],["vcpuresponse_wait_io",3]],[[],["mainrequest_create_ioevent",3]],[[],["mainrequest_create_irqevent",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["mainrequest_setirqrouting_route_irqchip",3]],[[],["u32",15]],[[],["bool",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["mainrequest_create_memory",3]],[[],["u64",15]],[[],["mainrequest_setirqrouting_route_msi",3]],[[],["u32",15]],null,null,null,null,null,null,[[],["u32",15]],[[],["mainrequest_newconnection",3]],[[],["mainresponse_newconnection",3]],[[],["bool",15]],[[],["u64",15]],[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[],["mainrequest_pausevcpus",3]],[[],["mainresponse_pausevcpus",3]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["mainrequest_reserverange",3]],[[],["mainresponse_reserverange",3]],[[],["vcpurequest_resume",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["mainrequest_stateset",4]],[[],["mainrequest_stateset",4]],[[],["vcpurequest_stateset",4]],[[],["vcpurequest_stateset",4]],[[],["mainrequest_setcallhint",3]],[[],["mainresponse_setcallhint",3]],[[],["vcpurequest_setcpuid",3]],[[],["vcpuresponse_setcpuid",3]],[[],["mainrequest_setidentitymapaddr",3]],[[],["mainresponse_setidentitymapaddr",3]],[[],["mainrequest_setirq",3]],[[],["mainresponse_setirq",3]],[[],["mainrequest_setirqrouting",3]],[[],["mainresponse_setirqrouting",3]],[[],["vcpurequest_setmsrs",3]],[[],["vcpuresponse_setmsrs",3]],[[],["mainrequest_setstate",3]],[[],["mainresponse_setstate",3]],[[],["vcpurequest_setstate",3]],[[],["vcpuresponse_setstate",3]],[[],["vcpurequest_shutdown",3]],null,null,[[],["addressspace",4]],[[],["addressspace",4]],[[],["addressspace",4]],[[],["addressspace",4]],[[]],[[]],[[],["mainrequest_start",3]],[[],["u64",15]],[[],["u64",15]],[[],["mainresponse_start",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["u64",15]],[[],["vcpuresponse_wait_user",3]],[[],["u64",15]],null,null,[[],["vcpurequest_wait",3]],[[],["vcpuresponse_wait",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],[[["box",3]],[["any",8],["box",3,["any"]]]],null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],[[["codedinputstream",3]],["protobufresult",6]],null,null,null,null,null,null,null,[[],["vec",3]],[[],["mainrequest_checkextension",3]],[[],["mainresponse_checkextension",3]],[[],["mainrequest_create",3]],[[],["mainresponse_create",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["mainrequest_destroy",3]],[[],["mainresponse_destroy",3]],[[],["mainrequest_memorydirtylog",3]],[[],["mainresponse_memorydirtylog",3]],[[],["vcpurequest_enablecapability",3]],[[],["vcpuresponse_enablecapability",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["repeatedfield",3]],[[],["vec",3]],[[],["vec",3]],[[],["mainrequest_cpuidrequest",3]],[[],["mainresponse_cpuidresponse",3]],[[],["vcpurequest_cpuidrequest",3]],[[],["vcpuresponse_cpuidresponse",3]],[[],["mainrequest_msrlistrequest",3]],[[],["mainresponse_msrlistresponse",3]],[[],["vcpurequest_getmsrs",3]],[[],["vcpuresponse_getmsrs",3]],[[],["mainrequest_getnetconfig",3]],[[],["mainresponse_getnetconfig",3]],[[],["mainrequest_getshutdowneventfd",3]],[[],["mainresponse_getshutdowneventfd",3]],[[],["mainrequest_getstate",3]],[[],["mainresponse_getstate",3]],[[],["vcpurequest_getstate",3]],[[],["vcpuresponse_getstate",3]],[[],["mainrequest_cpuidrequest",3]],[[],["mainresponse_cpuidresponse",3]],[[],["mainrequest_getvcpus",3]],[[],["mainresponse_getvcpus",3]],[[],["repeatedfield",3]],[[],["vec",3]],[[],["vcpuresponse_wait_hypervcall",3]],[[],["vcpuresponse_wait_hypervsynic",3]],[[],["vec",3]],[[],["vcpuresponse_wait_init",3]],[[],["vcpuresponse_wait_io",3]],[[],["mainrequest_create_ioevent",3]],[[],["mainrequest_create_irqevent",3]],[[],["mainrequest_setirqrouting_route_irqchip",3]],[[],["mainrequest_create_memory",3]],[[],["mainrequest_setirqrouting_route_msi",3]],[[],["mainrequest_newconnection",3]],[[],["mainresponse_newconnection",3]],[[],["mainrequest_pausevcpus",3]],[[],["mainresponse_pausevcpus",3]],[[],["vec",3]],[[],["vec",3]],[[],["mainrequest_reserverange",3]],[[],["mainresponse_reserverange",3]],[[],["vcpurequest_resume",3]],[[],["repeatedfield",3]],[[],["mainrequest_setcallhint",3]],[[],["mainresponse_setcallhint",3]],[[],["vcpurequest_setcpuid",3]],[[],["vcpuresponse_setcpuid",3]],[[],["mainrequest_setidentitymapaddr",3]],[[],["mainresponse_setidentitymapaddr",3]],[[],["mainrequest_setirq",3]],[[],["mainresponse_setirq",3]],[[],["mainrequest_setirqrouting",3]],[[],["mainresponse_setirqrouting",3]],[[],["vcpurequest_setmsrs",3]],[[],["vcpuresponse_setmsrs",3]],[[],["mainrequest_setstate",3]],[[],["mainresponse_setstate",3]],[[],["vcpurequest_setstate",3]],[[],["vcpuresponse_setstate",3]],[[],["vcpurequest_shutdown",3]],[[],["vec",3]],[[],["vec",3]],[[],["mainrequest_start",3]],[[],["mainresponse_start",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["unknownfields",3]],[[],["vcpuresponse_wait_user",3]],[[],["vcpurequest_wait",3]],[[],["vcpuresponse_wait",3]],[[["cpuidentry",3]],["bool",15]],[[["mainrequest",3]],["bool",15]],[[["mainrequest_oneof_message",4]],["bool",15]],[[["mainrequest_create",3]],["bool",15]],[[["mainrequest_create_oneof_constructor",4]],["bool",15]],[[["mainrequest_create_ioevent",3]],["bool",15]],[[["mainrequest_create_memory",3]],["bool",15]],[[["mainrequest_create_irqevent",3]],["bool",15]],[[["mainrequest_destroy",3]],["bool",15]],[[["mainrequest_newconnection",3]],["bool",15]],[[["mainrequest_getshutdowneventfd",3]],["bool",15]],[[["mainrequest_checkextension",3]],["bool",15]],[[["mainrequest_cpuidrequest",3]],["bool",15]],[[["mainrequest_msrlistrequest",3]],["bool",15]],[[["mainrequest_getnetconfig",3]],["bool",15]],[[["mainrequest_reserverange",3]],["bool",15]],[[["mainrequest_setirq",3]],["bool",15]],[[["mainrequest_setirqrouting",3]],["bool",15]],[[["mainrequest_setirqrouting_route",3]],["bool",15]],[[["mainrequest_setirqrouting_route_oneof_route",4]],["bool",15]],[[["mainrequest_setirqrouting_route_irqchip",3]],["bool",15]],[[["mainrequest_setirqrouting_route_msi",3]],["bool",15]],[[["mainrequest_getstate",3]],["bool",15]],[[["mainrequest_setstate",3]],["bool",15]],[[["mainrequest_setidentitymapaddr",3]],["bool",15]],[[["mainrequest_pausevcpus",3]],["bool",15]],[[["mainrequest_getvcpus",3]],["bool",15]],[[["mainrequest_start",3]],["bool",15]],[[["mainrequest_setcallhint",3]],["bool",15]],[[["mainrequest_setcallhint_reghint",3]],["bool",15]],[[["mainrequest_memorydirtylog",3]],["bool",15]],[[["mainresponse",3]],["bool",15]],[[["mainresponse_oneof_message",4]],["bool",15]],[[["mainresponse_create",3]],["bool",15]],[[["mainresponse_destroy",3]],["bool",15]],[[["mainresponse_newconnection",3]],["bool",15]],[[["mainresponse_getshutdowneventfd",3]],["bool",15]],[[["mainresponse_checkextension",3]],["bool",15]],[[["mainresponse_cpuidresponse",3]],["bool",15]],[[["mainresponse_msrlistresponse",3]],["bool",15]],[[["mainresponse_getnetconfig",3]],["bool",15]],[[["mainresponse_reserverange",3]],["bool",15]],[[["mainresponse_setirq",3]],["bool",15]],[[["mainresponse_setirqrouting",3]],["bool",15]],[[["mainresponse_getstate",3]],["bool",15]],[[["mainresponse_setstate",3]],["bool",15]],[[["mainresponse_setidentitymapaddr",3]],["bool",15]],[[["mainresponse_pausevcpus",3]],["bool",15]],[[["mainresponse_getvcpus",3]],["bool",15]],[[["mainresponse_start",3]],["bool",15]],[[["mainresponse_setcallhint",3]],["bool",15]],[[["mainresponse_memorydirtylog",3]],["bool",15]],[[["vcpurequest",3]],["bool",15]],[[["vcpurequest_oneof_message",4]],["bool",15]],[[["vcpurequest_wait",3]],["bool",15]],[[["vcpurequest_resume",3]],["bool",15]],[[["vcpurequest_getstate",3]],["bool",15]],[[["vcpurequest_setstate",3]],["bool",15]],[[["vcpurequest_cpuidrequest",3]],["bool",15]],[[["vcpurequest_getmsrs",3]],["bool",15]],[[["vcpurequest_msrentry",3]],["bool",15]],[[["vcpurequest_setmsrs",3]],["bool",15]],[[["vcpurequest_setcpuid",3]],["bool",15]],[[["vcpurequest_shutdown",3]],["bool",15]],[[["vcpurequest_enablecapability",3]],["bool",15]],[[["vcpuresponse",3]],["bool",15]],[[["vcpuresponse_oneof_message",4]],["bool",15]],[[["vcpuresponse_wait",3]],["bool",15]],[[["vcpuresponse_wait_oneof_exit",4]],["bool",15]],[[["vcpuresponse_wait_init",3]],["bool",15]],[[["vcpuresponse_wait_io",3]],["bool",15]],[[["vcpuresponse_wait_user",3]],["bool",15]],[[["vcpuresponse_wait_hypervcall",3]],["bool",15]],[[["vcpuresponse_wait_hypervsynic",3]],["bool",15]],[[["vcpuresponse_getstate",3]],["bool",15]],[[["vcpuresponse_setstate",3]],["bool",15]],[[["vcpuresponse_cpuidresponse",3]],["bool",15]],[[["vcpuresponse_getmsrs",3]],["bool",15]],[[["vcpuresponse_setmsrs",3]],["bool",15]],[[["vcpuresponse_setcpuid",3]],["bool",15]],[[["vcpuresponse_enablecapability",3]],["bool",15]],null,[[],["cpuidentry",3]],[[],["cpuidentry",3]],[[],["mainrequest",3]],[[],["mainrequest",3]],[[],["mainrequest_create",3]],[[],["mainrequest_create",3]],[[],["mainrequest_create_ioevent",3]],[[],["mainrequest_create_ioevent",3]],[[],["mainrequest_create_memory",3]],[[],["mainrequest_create_memory",3]],[[],["mainrequest_create_irqevent",3]],[[],["mainrequest_create_irqevent",3]],[[],["mainrequest_destroy",3]],[[],["mainrequest_destroy",3]],[[],["mainrequest_newconnection",3]],[[],["mainrequest_newconnection",3]],[[],["mainrequest_getshutdowneventfd",3]],[[],["mainrequest_getshutdowneventfd",3]],[[],["mainrequest_checkextension",3]],[[],["mainrequest_checkextension",3]],[[],["mainrequest_cpuidrequest",3]],[[],["mainrequest_cpuidrequest",3]],[[],["mainrequest_msrlistrequest",3]],[[],["mainrequest_msrlistrequest",3]],[[],["mainrequest_getnetconfig",3]],[[],["mainrequest_getnetconfig",3]],[[],["mainrequest_reserverange",3]],[[],["mainrequest_reserverange",3]],[[],["mainrequest_setirq",3]],[[],["mainrequest_setirq",3]],[[],["mainrequest_setirqrouting",3]],[[],["mainrequest_setirqrouting",3]],[[],["mainrequest_setirqrouting_route",3]],[[],["mainrequest_setirqrouting_route",3]],[[],["mainrequest_setirqrouting_route_irqchip",3]],[[],["mainrequest_setirqrouting_route_irqchip",3]],[[],["mainrequest_setirqrouting_route_msi",3]],[[],["mainrequest_setirqrouting_route_msi",3]],[[],["mainrequest_getstate",3]],[[],["mainrequest_getstate",3]],[[],["mainrequest_setstate",3]],[[],["mainrequest_setstate",3]],[[],["mainrequest_setidentitymapaddr",3]],[[],["mainrequest_setidentitymapaddr",3]],[[],["mainrequest_pausevcpus",3]],[[],["mainrequest_pausevcpus",3]],[[],["mainrequest_getvcpus",3]],[[],["mainrequest_getvcpus",3]],[[],["mainrequest_start",3]],[[],["mainrequest_start",3]],[[],["mainrequest_setcallhint",3]],[[],["mainrequest_setcallhint",3]],[[],["mainrequest_setcallhint_reghint",3]],[[],["mainrequest_setcallhint_reghint",3]],[[],["mainrequest_memorydirtylog",3]],[[],["mainrequest_memorydirtylog",3]],[[],["mainresponse",3]],[[],["mainresponse",3]],[[],["mainresponse_create",3]],[[],["mainresponse_create",3]],[[],["mainresponse_destroy",3]],[[],["mainresponse_destroy",3]],[[],["mainresponse_newconnection",3]],[[],["mainresponse_newconnection",3]],[[],["mainresponse_getshutdowneventfd",3]],[[],["mainresponse_getshutdowneventfd",3]],[[],["mainresponse_checkextension",3]],[[],["mainresponse_checkextension",3]],[[],["mainresponse_cpuidresponse",3]],[[],["mainresponse_cpuidresponse",3]],[[],["mainresponse_msrlistresponse",3]],[[],["mainresponse_msrlistresponse",3]],[[],["mainresponse_getnetconfig",3]],[[],["mainresponse_getnetconfig",3]],[[],["mainresponse_reserverange",3]],[[],["mainresponse_reserverange",3]],[[],["mainresponse_setirq",3]],[[],["mainresponse_setirq",3]],[[],["mainresponse_setirqrouting",3]],[[],["mainresponse_setirqrouting",3]],[[],["mainresponse_getstate",3]],[[],["mainresponse_getstate",3]],[[],["mainresponse_setstate",3]],[[],["mainresponse_setstate",3]],[[],["mainresponse_setidentitymapaddr",3]],[[],["mainresponse_setidentitymapaddr",3]],[[],["mainresponse_pausevcpus",3]],[[],["mainresponse_pausevcpus",3]],[[],["mainresponse_getvcpus",3]],[[],["mainresponse_getvcpus",3]],[[],["mainresponse_start",3]],[[],["mainresponse_start",3]],[[],["mainresponse_setcallhint",3]],[[],["mainresponse_setcallhint",3]],[[],["mainresponse_memorydirtylog",3]],[[],["mainresponse_memorydirtylog",3]],[[],["vcpurequest",3]],[[],["vcpurequest",3]],[[],["vcpurequest_wait",3]],[[],["vcpurequest_wait",3]],[[],["vcpurequest_resume",3]],[[],["vcpurequest_resume",3]],[[],["vcpurequest_getstate",3]],[[],["vcpurequest_getstate",3]],[[],["vcpurequest_setstate",3]],[[],["vcpurequest_setstate",3]],[[],["vcpurequest_cpuidrequest",3]],[[],["vcpurequest_cpuidrequest",3]],[[],["vcpurequest_getmsrs",3]],[[],["vcpurequest_getmsrs",3]],[[],["vcpurequest_msrentry",3]],[[],["vcpurequest_msrentry",3]],[[],["vcpurequest_setmsrs",3]],[[],["vcpurequest_setmsrs",3]],[[],["vcpurequest_setcpuid",3]],[[],["vcpurequest_setcpuid",3]],[[],["vcpurequest_shutdown",3]],[[],["vcpurequest_shutdown",3]],[[],["vcpurequest_enablecapability",3]],[[],["vcpurequest_enablecapability",3]],[[],["vcpuresponse",3]],[[],["vcpuresponse",3]],[[],["vcpuresponse_wait",3]],[[],["vcpuresponse_wait",3]],[[],["vcpuresponse_wait_init",3]],[[],["vcpuresponse_wait_init",3]],[[],["vcpuresponse_wait_io",3]],[[],["vcpuresponse_wait_io",3]],[[],["vcpuresponse_wait_user",3]],[[],["vcpuresponse_wait_user",3]],[[],["vcpuresponse_wait_hypervcall",3]],[[],["vcpuresponse_wait_hypervcall",3]],[[],["vcpuresponse_wait_hypervsynic",3]],[[],["vcpuresponse_wait_hypervsynic",3]],[[],["vcpuresponse_getstate",3]],[[],["vcpuresponse_getstate",3]],[[],["vcpuresponse_setstate",3]],[[],["vcpuresponse_setstate",3]],[[],["vcpuresponse_cpuidresponse",3]],[[],["vcpuresponse_cpuidresponse",3]],[[],["vcpuresponse_getmsrs",3]],[[],["vcpuresponse_getmsrs",3]],[[],["vcpuresponse_setmsrs",3]],[[],["vcpuresponse_setmsrs",3]],[[],["vcpuresponse_setcpuid",3]],[[],["vcpuresponse_setcpuid",3]],[[],["vcpuresponse_enablecapability",3]],[[],["vcpuresponse_enablecapability",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15]]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["bool",15]]],[[["u8",15],["vec",3,["u8"]]]],null,null,[[["u32",15]]],[[["mainrequest_checkextension",3]]],[[["mainresponse_checkextension",3]]],[[["u64",15]]],[[["u64",15]]],null,null,[[["mainrequest_create",3]]],[[["mainresponse_create",3]]],[[["u32",15]]],[[["u8",15],["vec",3,["u8"]]]],[[["u64",15]]],[[["u8",15],["vec",3,["u8"]]]],[[["u64",15]]],[[["u8",15],["vec",3,["u8"]]]],[[["u8",15],["vec",3,["u8"]]]],[[["mainrequest_destroy",3]]],[[["mainresponse_destroy",3]]],[[["mainrequest_memorydirtylog",3]]],[[["bool",15]]],[[["mainresponse_memorydirtylog",3]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["vcpurequest_enablecapability",3]]],[[["vcpuresponse_enablecapability",3]]],[[["repeatedfield",3,["cpuidentry"]],["cpuidentry",3]]],[[["repeatedfield",3,["vcpurequest_msrentry"]],["vcpurequest_msrentry",3]]],[[["repeatedfield",3,["cpuidentry"]],["cpuidentry",3]]],[[["repeatedfield",3,["cpuidentry"]],["cpuidentry",3]]],[[["u64",15],["vec",3,["u64"]]]],[[["vec",3,["u32"]],["u32",15]]],[[["i32",15]]],[[["i32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["mainrequest_cpuidrequest",3]]],[[["mainresponse_cpuidresponse",3]]],[[["vcpurequest_cpuidrequest",3]]],[[["vcpuresponse_cpuidresponse",3]]],[[["mainrequest_msrlistrequest",3]]],[[["mainresponse_msrlistresponse",3]]],[[["vcpurequest_getmsrs",3]]],[[["vcpuresponse_getmsrs",3]]],[[["mainrequest_getnetconfig",3]]],[[["mainresponse_getnetconfig",3]]],[[["mainrequest_getshutdowneventfd",3]]],[[["mainresponse_getshutdowneventfd",3]]],[[["mainrequest_getstate",3]]],[[["mainresponse_getstate",3]]],[[["vcpurequest_getstate",3]]],[[["vcpuresponse_getstate",3]]],[[["mainrequest_cpuidrequest",3]]],[[["mainresponse_cpuidresponse",3]]],[[["mainrequest_getvcpus",3]]],[[["mainresponse_getvcpus",3]]],[[["bool",15]]],[[["bool",15]]],[[["mainrequest_setcallhint_reghint",3],["repeatedfield",3,["mainrequest_setcallhint_reghint"]]]],[[["u32",15]]],[[["u8",15],["vec",3,["u8"]]]],[[["vcpuresponse_wait_hypervcall",3]]],[[["vcpuresponse_wait_hypervsynic",3]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],null,null,[[["u32",15]]],[[["u32",15]]],[[["vec",3,["u32"]],["u32",15]]],[[["vcpuresponse_wait_init",3]]],[[["u64",15]]],[[["vcpuresponse_wait_io",3]]],[[["mainrequest_create_ioevent",3]]],null,null,[[["mainrequest_create_irqevent",3]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],null,null,[[["mainrequest_setirqrouting_route_irqchip",3]]],[[["u32",15]]],[[["bool",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["mainrequest_create_memory",3]]],[[["u64",15]]],[[["mainrequest_setirqrouting_route_msi",3]]],[[["u32",15]]],null,null,[[["u32",15]]],[[["mainrequest_newconnection",3]]],[[["mainresponse_newconnection",3]]],[[["bool",15]]],[[["u64",15]]],[[["bool",15]]],[[["u64",15]]],[[["u64",15]]],[[["mainrequest_pausevcpus",3]]],[[["mainresponse_pausevcpus",3]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["bool",15]]],[[["u8",15],["vec",3,["u8"]]]],[[["u8",15],["vec",3,["u8"]]]],[[["bool",15]]],[[["mainrequest_reserverange",3]]],[[["mainresponse_reserverange",3]]],[[["vcpurequest_resume",3]]],[[["repeatedfield",3,["mainrequest_setirqrouting_route"]],["mainrequest_setirqrouting_route",3]]],[[["bool",15]]],[[["bool",15]]],[[["mainrequest_stateset",4]]],[[["mainrequest_stateset",4]]],[[["vcpurequest_stateset",4]]],[[["vcpurequest_stateset",4]]],[[["mainrequest_setcallhint",3]]],[[["mainresponse_setcallhint",3]]],[[["vcpurequest_setcpuid",3]]],[[["vcpuresponse_setcpuid",3]]],[[["mainrequest_setidentitymapaddr",3]]],[[["mainresponse_setidentitymapaddr",3]]],[[["mainrequest_setirq",3]]],[[["mainresponse_setirq",3]]],[[["mainrequest_setirqrouting",3]]],[[["mainresponse_setirqrouting",3]]],[[["vcpurequest_setmsrs",3]]],[[["vcpuresponse_setmsrs",3]]],[[["mainrequest_setstate",3]]],[[["mainresponse_setstate",3]]],[[["vcpurequest_setstate",3]]],[[["vcpuresponse_setstate",3]]],[[["vcpurequest_shutdown",3]]],[[["addressspace",4]]],[[["addressspace",4]]],[[["addressspace",4]]],[[["addressspace",4]]],[[["u8",15],["vec",3,["u8"]]]],[[["u8",15],["vec",3,["u8"]]]],[[["mainrequest_start",3]]],[[["u64",15]]],[[["u64",15]]],[[["mainresponse_start",3]]],[[["u8",15],["vec",3,["u8"]]]],[[["u8",15],["vec",3,["u8"]]]],[[["u8",15],["vec",3,["u8"]]]],[[["u8",15],["vec",3,["u8"]]]],null,null,null,null,[[["u64",15]]],[[["vcpuresponse_wait_user",3]]],[[["u64",15]]],[[["vcpurequest_wait",3]]],[[["vcpuresponse_wait",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["u8",15],["vec",3,["u8"]]]],[[],["mainrequest_checkextension",3]],[[],["mainresponse_checkextension",3]],[[],["mainrequest_create",3]],[[],["mainresponse_create",3]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["mainrequest_destroy",3]],[[],["mainresponse_destroy",3]],[[],["mainrequest_memorydirtylog",3]],[[],["mainresponse_memorydirtylog",3]],[[],["vcpurequest_enablecapability",3]],[[],["vcpuresponse_enablecapability",3]],[[],[["repeatedfield",3,["cpuidentry"]],["cpuidentry",3]]],[[],[["repeatedfield",3,["vcpurequest_msrentry"]],["vcpurequest_msrentry",3]]],[[],[["repeatedfield",3,["cpuidentry"]],["cpuidentry",3]]],[[],[["repeatedfield",3,["cpuidentry"]],["cpuidentry",3]]],[[],[["u64",15],["vec",3,["u64"]]]],[[],[["vec",3,["u32"]],["u32",15]]],[[],["mainrequest_cpuidrequest",3]],[[],["mainresponse_cpuidresponse",3]],[[],["vcpurequest_cpuidrequest",3]],[[],["vcpuresponse_cpuidresponse",3]],[[],["mainrequest_msrlistrequest",3]],[[],["mainresponse_msrlistresponse",3]],[[],["vcpurequest_getmsrs",3]],[[],["vcpuresponse_getmsrs",3]],[[],["mainrequest_getnetconfig",3]],[[],["mainresponse_getnetconfig",3]],[[],["mainrequest_getshutdowneventfd",3]],[[],["mainresponse_getshutdowneventfd",3]],[[],["mainrequest_getstate",3]],[[],["mainresponse_getstate",3]],[[],["vcpurequest_getstate",3]],[[],["vcpuresponse_getstate",3]],[[],["mainrequest_cpuidrequest",3]],[[],["mainresponse_cpuidresponse",3]],[[],["mainrequest_getvcpus",3]],[[],["mainresponse_getvcpus",3]],[[],[["mainrequest_setcallhint_reghint",3],["repeatedfield",3,["mainrequest_setcallhint_reghint"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["vcpuresponse_wait_hypervcall",3]],[[],["vcpuresponse_wait_hypervsynic",3]],[[],[["vec",3,["u32"]],["u32",15]]],[[],["vcpuresponse_wait_init",3]],[[],["vcpuresponse_wait_io",3]],[[],["mainrequest_create_ioevent",3]],[[],["mainrequest_create_irqevent",3]],[[],["mainrequest_setirqrouting_route_irqchip",3]],[[],["mainrequest_create_memory",3]],[[],["mainrequest_setirqrouting_route_msi",3]],[[],["mainrequest_newconnection",3]],[[],["mainresponse_newconnection",3]],[[],["mainrequest_pausevcpus",3]],[[],["mainresponse_pausevcpus",3]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["mainrequest_reserverange",3]],[[],["mainresponse_reserverange",3]],[[],["vcpurequest_resume",3]],[[],[["repeatedfield",3,["mainrequest_setirqrouting_route"]],["mainrequest_setirqrouting_route",3]]],[[],["mainrequest_setcallhint",3]],[[],["mainresponse_setcallhint",3]],[[],["vcpurequest_setcpuid",3]],[[],["vcpuresponse_setcpuid",3]],[[],["mainrequest_setidentitymapaddr",3]],[[],["mainresponse_setidentitymapaddr",3]],[[],["mainrequest_setirq",3]],[[],["mainresponse_setirq",3]],[[],["mainrequest_setirqrouting",3]],[[],["mainresponse_setirqrouting",3]],[[],["vcpurequest_setmsrs",3]],[[],["vcpuresponse_setmsrs",3]],[[],["mainrequest_setstate",3]],[[],["mainresponse_setstate",3]],[[],["vcpurequest_setstate",3]],[[],["vcpuresponse_setstate",3]],[[],["vcpurequest_shutdown",3]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["mainrequest_start",3]],[[],["mainresponse_start",3]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],[["u8",15],["vec",3,["u8"]]]],[[],["vcpuresponse_wait_user",3]],[[],["vcpurequest_wait",3]],[[],["vcpuresponse_wait",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[]],[[]],[[]],null,null,[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],[[["codedoutputstream",3]],["protobufresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"ReadWriteCapability"],[3,"ComponentDisk"],[3,"CompositeDisk"],[4,"MainRequest_StateSet"],[4,"VcpuRequest_StateSet"],[4,"AddressSpace"],[3,"MainRequest_SetIrq"],[3,"MainRequest_Create_IoEvent"],[3,"MainRequest_SetIrqRouting_Route_Msi"],[3,"MainRequest_SetIdentityMapAddr"],[3,"MainRequest_SetCallHint"],[3,"VcpuResponse_Wait_Io"],[3,"CpuidEntry"],[3,"MainRequest"],[3,"MainRequest_Create"],[3,"MainRequest_Create_Memory"],[3,"MainRequest_Create_IrqEvent"],[3,"MainRequest_Destroy"],[3,"MainRequest_NewConnection"],[3,"MainRequest_GetShutdownEventfd"],[3,"MainRequest_CheckExtension"],[3,"MainRequest_CpuidRequest"],[3,"MainRequest_MsrListRequest"],[3,"MainRequest_GetNetConfig"],[3,"MainRequest_ReserveRange"],[3,"MainRequest_SetIrqRouting"],[3,"MainRequest_SetIrqRouting_Route"],[3,"MainRequest_SetIrqRouting_Route_Irqchip"],[3,"MainRequest_GetState"],[3,"MainRequest_SetState"],[3,"MainRequest_PauseVcpus"],[3,"MainRequest_GetVcpus"],[3,"MainRequest_Start"],[3,"MainRequest_SetCallHint_RegHint"],[3,"MainRequest_MemoryDirtyLog"],[3,"MainResponse"],[3,"MainResponse_Create"],[3,"MainResponse_Destroy"],[3,"MainResponse_NewConnection"],[3,"MainResponse_GetShutdownEventfd"],[3,"MainResponse_CheckExtension"],[3,"MainResponse_CpuidResponse"],[3,"MainResponse_MsrListResponse"],[3,"MainResponse_GetNetConfig"],[3,"MainResponse_ReserveRange"],[3,"MainResponse_SetIrq"],[3,"MainResponse_SetIrqRouting"],[3,"MainResponse_GetState"],[3,"MainResponse_SetState"],[3,"MainResponse_SetIdentityMapAddr"],[3,"MainResponse_PauseVcpus"],[3,"MainResponse_GetVcpus"],[3,"MainResponse_Start"],[3,"MainResponse_SetCallHint"],[3,"MainResponse_MemoryDirtyLog"],[3,"VcpuRequest"],[3,"VcpuRequest_Wait"],[3,"VcpuRequest_Resume"],[3,"VcpuRequest_GetState"],[3,"VcpuRequest_SetState"],[3,"VcpuRequest_CpuidRequest"],[3,"VcpuRequest_GetMsrs"],[3,"VcpuRequest_MsrEntry"],[3,"VcpuRequest_SetMsrs"],[3,"VcpuRequest_SetCpuid"],[3,"VcpuRequest_Shutdown"],[3,"VcpuRequest_EnableCapability"],[3,"VcpuResponse"],[3,"VcpuResponse_Wait"],[3,"VcpuResponse_Wait_Init"],[3,"VcpuResponse_Wait_User"],[3,"VcpuResponse_Wait_HypervCall"],[3,"VcpuResponse_Wait_HypervSynic"],[3,"VcpuResponse_GetState"],[3,"VcpuResponse_SetState"],[3,"VcpuResponse_CpuidResponse"],[3,"VcpuResponse_GetMsrs"],[3,"VcpuResponse_SetMsrs"],[3,"VcpuResponse_SetCpuid"],[3,"VcpuResponse_EnableCapability"],[4,"MainRequest_oneof_message"],[4,"MainRequest_Create_oneof_constructor"],[4,"MainRequest_SetIrqRouting_Route_oneof_route"],[4,"MainResponse_oneof_message"],[4,"VcpuRequest_oneof_message"],[4,"VcpuResponse_oneof_message"],[4,"VcpuResponse_Wait_oneof_exit"],[13,"io_event"],[13,"memory"],[13,"irq_event"],[13,"irqchip"],[13,"msi"],[13,"create"],[13,"destroy"],[13,"new_connection"],[13,"get_shutdown_eventfd"],[13,"check_extension"],[13,"get_supported_cpuid"],[13,"get_emulated_cpuid"],[13,"get_msr_index_list"],[13,"get_net_config"],[13,"reserve_range"],[13,"set_irq"],[13,"set_irq_routing"],[13,"get_state"],[13,"set_state"],[13,"set_identity_map_addr"],[13,"pause_vcpus"],[13,"get_vcpus"],[13,"start"],[13,"set_call_hint"],[13,"dirty_log"],[13,"create"],[13,"destroy"],[13,"new_connection"],[13,"get_shutdown_eventfd"],[13,"check_extension"],[13,"get_supported_cpuid"],[13,"get_emulated_cpuid"],[13,"get_msr_index_list"],[13,"get_net_config"],[13,"reserve_range"],[13,"set_irq"],[13,"set_irq_routing"],[13,"get_state"],[13,"set_state"],[13,"set_identity_map_addr"],[13,"pause_vcpus"],[13,"get_vcpus"],[13,"start"],[13,"set_call_hint"],[13,"dirty_log"],[13,"wait"],[13,"resume"],[13,"get_state"],[13,"set_state"],[13,"get_msrs"],[13,"set_msrs"],[13,"set_cpuid"],[13,"shutdown"],[13,"get_hyperv_cpuid"],[13,"enable_capability"],[13,"init"],[13,"io"],[13,"user"],[13,"hyperv_call"],[13,"hyperv_synic"],[13,"wait"],[13,"get_state"],[13,"set_state"],[13,"get_msrs"],[13,"set_msrs"],[13,"set_cpuid"],[13,"get_hyperv_cpuid"],[13,"enable_capability"]]},\
"quote":{"doc":"github crates-io docs-rs","t":[8,8,8,10,10,10,10,10,14,11,11,14,14,11,11,11,11,10],"n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,1,1,1,1,2,0,3,3,0,0,2,2,3,3,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],null,[[],["tokenstream",3]],[[],["tokenstream",3]],null,null,[[],[["option",4,["span"]],["span",3]]],[[],[["option",4,["span"]],["span",3]]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"remain":{"doc":"github crates-io docs-rs","t":[23,23],"n":["check","sorted"],"q":["remain",""],"d":["",""],"i":[0,0],"f":[null,null],"p":[]},\
"remove_dir_all":{"doc":"Reliably remove a directory and all of its children.","t":[5],"n":["remove_dir_all"],"q":["remove_dir_all"],"d":["Removes a directory at this path, after removing all its …"],"i":[0],"f":[[[],[["result",4,["error"]],["error",3]]]],"p":[]},\
"resources":{"doc":"Manages system resources that can be allocated to VMs and …","t":[3,4,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AddressAllocator","Alloc","AllocSizeZero","Anon","BadAlignment","BadAlloc","Error","ExistingAlloc","GpuRenderNode","High","InvalidAlloc","Low","MissingHighMMIOAddresses","MissingLowMMIOAddresses","MissingPlatformMMIOAddresses","MmioType","NoIoAllocator","OutOfBounds","OutOfSpace","PciBar","PciBridgePrefetchWindow","PciBridgeWindow","PmemDevice","PoolOverflow","PoolSizeZero","Pstore","RegionOverlap","Result","SystemAllocator","address_from_pci_offset","allocate","allocate_at","allocate_irq","allocate_pci","allocate_with_align","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone_into","deserialize","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get_anon_alloc","hash","into","into","into","into","into","io_allocator","mmio_allocator","mmio_allocator_any","mmio_platform_allocator","ne","ne","ne","new","pci_bus_empty","pool_base","pool_size","release","release_containing","release_irq","release_pci","reserve_irq","reserve_pci","reverse_allocate_with_align","serialize","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","bar","bus","bus","bus","dev","dev","dev","func","func","func","0","0","0","base","base","size","size"],"q":["resources","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","resources::Alloc","","","","","","","","","","","","resources::Error","","","","","",""],"d":["Manages allocating address ranges. Use <code>AddressAllocator</code> …","Used to tag SystemAllocator allocations.","","An anonymous resource allocation. Should only be …","","","","","GPU render node region.","","","","","","","Manages allocating system resources such as address space …","","","","A PCI BAR region with associated bus, device, function and …","A PCI bridge prefetch window with associated bus, dev, …","A PCI bridge window with associated bus, dev, function.","Pmem device region with associated device index.","","","pstore region.","","","","Returns an address from associated PCI <code>alloc</code> given an …","","Allocates a range of addresses from the managed region …","Reserves the next available system irq number.","Allocate PCI slot location.","Allocates a range of addresses from the managed region …","","","","","","","","","","","Returns a <code>SystemAllocatorBuilder</code> that can create a new …","","","","","","","","","","","","","","","","","Returns allocation associated with <code>alloc</code>, or None if no …","Gets a unique anonymous allocation","","","","","","","Gets an allocator to be used for IO memory.","Gets an allocator to be used for MMIO allocation. …","Gets a set of allocators to be used for MMIO allocation. …","Gets an allocator to be used for platform device MMIO …","","","","Creates a new <code>AddressAllocator</code> for managing a range of …","","Gets the starting address of the allocator.","Gets the size of the allocator’s address range in bytes.","Releases exising allocation back to free pool.","Release a allocation contains the value.","release irq to system irq number pool","release PCI slot location.","Reserves the next available system irq number.","Reserve PCI slot location.","Allocates a range of addresses from the reverse managed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,1,0,1,2,3,1,3,1,1,1,0,1,1,1,2,2,2,2,1,1,2,1,0,0,4,4,4,5,5,4,3,4,5,2,1,3,4,5,2,1,5,2,2,2,4,2,1,4,5,2,1,1,3,4,5,2,1,4,5,2,3,4,5,2,1,5,5,5,5,4,2,1,4,5,4,4,4,4,5,5,5,5,4,2,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,6,7,8,8,9,10,8,9,10,8,9,10,11,12,13,14,15,14,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15],["alloc",4]],[["u64",15],["result",6,["u64"]]]],[[["u64",15],["string",3],["alloc",4]],[["u64",15],["result",6,["u64"]]]],[[["u64",15],["string",3],["alloc",4]],["result",6]],[[],[["option",4,["u32"]],["u32",15]]],[[["u8",15],["string",3]],[["option",4,["alloc"]],["alloc",4]]],[[["u64",15],["string",3],["alloc",4]],[["u64",15],["result",6,["u64"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["systemallocatorbuilder",3]],[[],["alloc",4]],[[]],[[],["result",4]],[[["addressallocator",3]],["bool",15]],[[["alloc",4]],["bool",15]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["alloc",4]],["option",4]],[[],["alloc",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["addressallocator"]],["addressallocator",3]]],[[["mmiotype",4]],["addressallocator",3]],[[],["addressallocatorset",3]],[[],[["option",4,["addressallocator"]],["addressallocator",3]]],[[["addressallocator",3]],["bool",15]],[[["alloc",4]],["bool",15]],[[["error",4]],["bool",15]],[[["u64",15],["option",4,["u64"]]],["result",6]],[[["u8",15]],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[["alloc",4]],["result",6]],[[["u64",15]],["result",6]],[[["u32",15]]],[[["u8",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["string",3],["alloc",4]],["bool",15]],[[["u64",15],["string",3],["alloc",4]],[["u64",15],["result",6,["u64"]]]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Error"],[4,"Alloc"],[4,"MmioType"],[3,"AddressAllocator"],[3,"SystemAllocator"],[13,"Anon"],[13,"PmemDevice"],[13,"PciBar"],[13,"PciBridgeWindow"],[13,"PciBridgePrefetchWindow"],[13,"BadAlloc"],[13,"ExistingAlloc"],[13,"InvalidAlloc"],[13,"PoolOverflow"],[13,"RegionOverlap"]]},\
"rutabaga_gfx":{"doc":"A crate for handling 2D and 3D virtio-gpu hypercalls, …","t":[12,12,13,13,13,13,13,13,3,13,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,13,3,3,4,4,3,8,3,6,3,3,3,3,6,13,3,13,13,13,13,3,13,3,11,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","0","AlreadyInUse","BaseError","CheckedArithmetic","CheckedRange","ComponentError","CrossDomain","DrmFormat","Gfxstream","GfxstreamFlags","ImageAllocationInfo","ImageMemoryRequirements","Invalid2DInfo","InvalidCapset","InvalidCommandSize","InvalidComponent","InvalidContextId","InvalidCrossDomainChannel","InvalidCrossDomainItemId","InvalidCrossDomainItemType","InvalidCrossDomainState","InvalidGrallocBackend","InvalidGrallocDimensions","InvalidGrallocDrmFormat","InvalidGrallocGpuType","InvalidGrallocNumberOfPlanes","InvalidIovec","InvalidResourceId","InvalidRutabagaBuild","InvalidRutabagaHandle","InvalidVulkanInfo","IoError","MappingFailed","RUTABAGA_BLOB_FLAG_USE_CROSS_DEVICE","RUTABAGA_BLOB_FLAG_USE_MAPPABLE","RUTABAGA_BLOB_FLAG_USE_SHAREABLE","RUTABAGA_BLOB_MEM_GUEST","RUTABAGA_BLOB_MEM_HOST3D","RUTABAGA_BLOB_MEM_HOST3D_GUEST","RUTABAGA_CAPSET_CROSS_DOMAIN","RUTABAGA_CAPSET_GFXSTREAM","RUTABAGA_CAPSET_VENUS","RUTABAGA_CAPSET_VIRGL","RUTABAGA_CAPSET_VIRGL2","RUTABAGA_CHANNEL_TYPE_CAMERA","RUTABAGA_CHANNEL_TYPE_WAYLAND","RUTABAGA_CONTEXT_INIT_CAPSET_ID_MASK","RUTABAGA_FENCE_HANDLE_TYPE_OPAQUE_FD","RUTABAGA_FENCE_HANDLE_TYPE_SYNC_FD","RUTABAGA_FLAG_FENCE","RUTABAGA_FLAG_INFO_RING_IDX","RUTABAGA_MAP_CACHE_CACHED","RUTABAGA_MAP_CACHE_UNCACHED","RUTABAGA_MAP_CACHE_WC","RUTABAGA_MEM_HANDLE_TYPE_DMABUF","RUTABAGA_MEM_HANDLE_TYPE_OPAQUE_FD","RUTABAGA_MEM_HANDLE_TYPE_SHM","RUTABAGA_PIPE_BIND_RENDER_TARGET","RUTABAGA_PIPE_TEXTURE_2D","RUTABAGE_FENCE_HANDLE_TYPE_OPAQUE_WIN32","RUTABAGE_MEM_HANDLE_TYPE_OPAQUE_WIN32","Resource3DInfo","ResourceCreate3D","ResourceCreateBlob","Rutabaga","Rutabaga2D","RutabagaBuilder","RutabagaChannel","RutabagaComponentType","RutabagaError","RutabagaFence","RutabagaFenceCallback","RutabagaFenceClosure","RutabagaFenceHandler","RutabagaGralloc","RutabagaGrallocFlags","RutabagaHandle","RutabagaIovec","RutabagaResult","SpecViolation","Transfer3D","TryFromIntError","Unsupported","Utf8Error","VirglRenderer","VirglRendererFlags","VolatileMemoryError","VulkanInfo","allocate_memory","array_size","attach_backing","base","base_channel","bind","blob_flags","blob_id","blob_mem","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","call","call","channel_type","checked_arithmetic","checked_range","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_box","clone_box","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","context_attach_resource","context_detach_resource","create_context","create_fence","ctx_id","d","default","default","default","default","default","default","default","default","depth","destroy_context","detach_backing","drm_format","drm_fourcc","empty","eq","eq","eq","export_blob","export_fence","fence_id","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_ctx_0","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_capset","get_capset_info","get_image_memory_requirements","h","handle_type","height","height","height","host_cached","host_visible","import_and_map","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","last_level","layer_stride","len","level","map","map_info","map_info","memory_idx","modifier","modifier","ne","ne","new","new","new","new","new","new","new","new_2d","nr_samples","offset","offsets","offsets","os_handle","partial_cmp","physical_device_idx","planar_layout","poll","query","resource_create_3d","resource_create_blob","ring_idx","set_display_height","set_display_width","set_gfxstream_flags","set_rutabaga_channels","set_virglrenderer_flags","size","size","stride","strides","strides","submit_command","supports_dmabuf","supports_external_gpu_memory","target","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transfer_read","transfer_write","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unref_resource","use_async_fence_cb","use_egl","use_egl","use_external_blob","use_gles","use_gles","use_glx","use_glx","use_guest_angle","use_linear","use_render_server","use_rendering","use_scanout","use_surfaceless","use_surfaceless","use_sw_read","use_sw_write","use_syncfd","use_thread_sync","use_venus","use_virgl","use_vulkan","uses_rendering","uses_texturing","vulkan_info","vulkan_info","w","width","width","width","x","y","z","0","0","0","0","0","0","0","0","0","field1","field1","field2","field2","op"],"q":["rutabaga_gfxrutabaga_gfx::RutabagaError","","","","","","","","","","","","",""],"d":["","","Indicates <code>Rutabaga</code> was already initialized since only one …","Base error returned as a result of rutabaga library …","Checked Arithmetic error","Checked Range error","An internal Rutabaga component error was returned.","","A fourcc format identifier.","","gfxstream flag struct.","Information required to allocate a swapchain image.","The memory requirements, compression and layout of a …","Invalid 2D info","Invalid Capset","A command size was submitted that was invalid.","Invalid RutabagaComponent","Invalid Context ID","Invalid cross domain channel","Invalid cross domain item ID","Invalid cross domain item type","Invalid cross domain state","Invalid gralloc backend.","Invalid gralloc dimensions.","Invalid gralloc DRM format.","Invalid GPU type.","Invalid number of YUV planes.","The indicated region of guest memory is invalid.","Invalid Resource ID.","Indicates an error in the RutabagaBuilder.","An error with the RutabagaHandle","Invalid Vulkan info","An input/output error occured.","The mapping failed.","","","","Blob resource creation parameters.","","","","","","Rutabaga capsets.","","","Rutabaga channel types","Rutabaga context init capset id mask.","","","Rutabaga flags for creating fences.","","Mapped memory caching flags (see virtio_gpu spec)","","","","Rutabaga handle types (memory and sync in same namespace)","","","3D resource creation parameters.  Also used to create 2D …","","","Metadata associated with a swapchain, video or camera …","","","The global libary handle used to query capability sets, …","","Rutabaga Builder, following the Rust builder pattern.","Information needed to open an OS-specific …","Enumeration of possible rutabaga components.","An error generated while using this crate.","Convenience struct for Rutabaga fences","Trait for fence completion handlers","Fence handler implementation that wraps a closure","Wrapper type to allow cloning while respecting …","A container for a variety of allocation backends.","Usage flags for constructing a buffer object.","Handle to OS-specific memory or synchronization objects.","Represents a buffer.  <code>base</code> contains the address of a …","The result of an operation in this crate.","Violation of the Rutabaga spec occured.","Transfers {to, from} 1D buffers, 2D textures, 3D textures, …","An attempted integer conversion failed.","The command is unsupported.","Utf8 error.","","virglrenderer flag struct.","Volatile memory error","Memory index and physical device index of the associated …","Allocates memory given the particular <code>reqs</code> upon success.","","Attaches <code>vecs</code> to the resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds Rutabaga and returns a handle to it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attaches the resource given by <code>resource_id</code> to the context …","Detaches the resource given by <code>resource_id</code> from the …","Creates a context with the given <code>ctx_id</code> and <code>context_init</code> …","Creates a fence with the given <code>fence</code>. If the flags include …","","","","","","","","","","","","Destroys the context given by <code>ctx_id</code>.","Detaches any previously attached iovecs from the resource.","","","Returns empty set of flags.","","","","Exports a blob resource.  See virtio-gpu spec for blob …","Exports the given fence for import into other processes.","","","","","","","","","","","","Forces context zero for the default rutabaga component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the capability set for the <code>capset_id</code> and <code>version</code>. …","Gets the version and size for the capabilty set <code>index</code>.","Returns a image memory requirements for the given <code>info</code> …","","","","","","Returns true if the memory will read by the CPU or an IP …","Returns true if the memory will accessed by the CPU or an …","Imports the <code>handle</code> using the given <code>vulkan_info</code>.  Returns a …","","","","","","","","","","","","","","","","","","","","","","","Returns true if this box represents a volume of zero.","","","","","Returns a memory mapping of the blob resource.","Returns the <code>map_info</code> of the blob resource. The valid …","","","","","","","Create new a RutabagaBuilder.","Returns a new RutabagaGralloc instance upon success.  All …","Constructs a format identifer using a fourcc byte sequence.","Returns the given set of raw <code>RUTABAGA_GRALLOC</code> flags …","Create new virglrenderer flags.","Create new gfxstream flags.","","Constructs a 2 dimensional XY box in 3 dimensional space …","","","","","","","","Returns the planar layout of the format.","Polls all rutabaga components and contexts, and returns a …","Returns the 3D info associated with the resource, if any.","Creates a resource with the <code>resource_create_3d</code> metadata.","Creates a blob resource with the <code>ctx_id</code> and …","","Set display height for the RutabagaBuilder","Set display width for the RutabagaBuilder","Set gfxstream flags for the RutabagaBuilder","Set rutabaga channels for the RutabagaBuilder","Set virglrenderer flags for the RutabagaBuilder","","","","","","Submits <code>commands</code> to the context given by <code>ctx_id</code>.","Returns true if one of the allocation backends supports …","Returns true if one of the allocation backends supports …","","Returns the fourcc code as a sequence of bytes.","","","","","","","","","","","","","","","","","","If specified, copies to <code>buf</code> from the host resource.…","For HOST3D_GUEST resources, copies from the attached …","Clones an existing rutabaga handle, by using OS specific …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Releases guest kernel reference on the resource.","Retire fence directly from sync thread.","Use EGL for context creation.","Use EGL for context creation.","Use external memory when creating blob resources.","Use GLES drivers.","Use GLES drivers.","Use GLX for context creation.","Use GLX for context creation.","Use ANGLE as the guest GLES driver.","Sets the linear flag’s presence.","","Sets the rendering flag’s presence.","Sets the scanout flag’s presence.","No surfaces required when creating context.","No surfaces required when creating context.","Sets the SW read flag’s presence.","Sets the SW write flag’s presence.","Use external synchronization.","Use a dedicated thread for fence synchronization.","Enable venus support","Enable virgl support","Support using Vulkan.","Returns true if the rendering flag is set.","Returns true if the texturing flag is set.","Returns the <code>vulkan_info</code> of the blob resource, which …","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,3,3,3,3,4,0,4,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,4,0,3,0,5,6,7,8,9,6,10,10,10,7,11,5,12,1,2,13,14,8,6,10,15,16,17,3,18,19,20,9,4,21,7,11,5,12,1,2,13,14,8,6,10,15,16,17,3,18,19,20,9,4,21,11,22,21,9,0,0,23,1,2,13,14,8,6,10,15,16,17,18,19,20,9,4,21,22,21,1,2,13,14,8,6,10,15,16,17,18,19,20,9,4,21,4,7,7,7,7,17,20,1,2,13,14,15,16,18,19,6,7,7,13,15,2,1,2,4,7,7,17,13,6,17,1,6,10,15,3,3,20,7,6,7,11,5,12,1,1,2,13,14,8,6,10,15,16,17,3,3,3,3,3,3,18,19,20,9,4,21,7,7,5,20,12,13,6,15,2,2,5,14,7,11,5,12,1,2,13,14,8,6,10,15,16,17,3,18,19,20,9,4,21,20,6,20,8,20,7,7,14,16,14,15,1,2,11,5,1,2,18,19,21,20,6,20,14,15,12,4,16,1,7,7,7,7,17,11,11,11,11,11,14,10,20,14,15,7,5,5,6,1,1,2,13,14,8,6,10,15,16,17,18,19,20,9,4,21,3,7,7,12,7,11,5,12,1,2,13,14,8,6,10,15,16,17,3,18,19,20,9,4,21,7,11,5,12,1,2,13,14,8,6,10,15,16,17,3,18,19,20,9,4,21,7,11,5,12,1,2,13,14,8,6,10,15,16,17,3,18,19,20,9,4,21,7,18,18,19,18,18,19,18,19,19,2,18,2,2,18,19,2,2,19,18,18,18,19,2,2,7,14,20,13,6,15,20,20,20,24,25,26,27,28,29,30,31,32,33,34,33,34,33],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["imagememoryrequirements",3]],[["rutabagaresult",6,["rutabagahandle"]],["rutabagahandle",3]]],null,[[["vec",3,["rutabagaiovec"]],["u32",15],["rutabagaiovec",3]],["rutabagaresult",6]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rutabagafencehandler",6],["safedescriptor",3],["option",4,["safedescriptor"]]],[["rutabagaresult",6,["rutabaga"]],["rutabaga",3]]],[[["rutabagafence",3]]],[[["rutabagafence",3]]],null,null,null,[[]],[[],["drmformat",3]],[[],["rutabagagrallocflags",3]],[[],["imageallocationinfo",3]],[[],["imagememoryrequirements",3]],[[],["rutabagaiovec",3]],[[],["resourcecreate3d",3]],[[],["resourcecreateblob",3]],[[],["resource3dinfo",3]],[[],["vulkaninfo",3]],[[],["rutabagafence",3]],[[],["virglrendererflags",3]],[[],["gfxstreamflags",3]],[[],["transfer3d",3]],[[],["rutabagachannel",3]],[[],["rutabagacomponenttype",4]],[[],["rutabagafenceclosure",3]],[[],["rutabagafencehandler",6]],[[],["rutabagafencehandler",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rutabagacomponenttype",4]],["ordering",4]],[[["u32",15]],["rutabagaresult",6]],[[["u32",15]],["rutabagaresult",6]],[[["u32",15]],["rutabagaresult",6]],[[["rutabagafence",3]],["rutabagaresult",6]],null,null,[[],["drmformat",3]],[[],["rutabagagrallocflags",3]],[[],["imageallocationinfo",3]],[[],["imagememoryrequirements",3]],[[],["resource3dinfo",3]],[[],["vulkaninfo",3]],[[],["virglrendererflags",3]],[[],["gfxstreamflags",3]],null,[[["u32",15]],["rutabagaresult",6]],[[["u32",15]],["rutabagaresult",6]],null,null,[[],["rutabagagrallocflags",3]],[[["drmformat",3]],["bool",15]],[[["rutabagagrallocflags",3]],["bool",15]],[[["rutabagacomponenttype",4]],["bool",15]],[[["u32",15]],[["rutabagaresult",6,["rutabagahandle"]],["rutabagahandle",3]]],[[["u32",15]],[["rutabagaresult",6,["rutabagahandle"]],["rutabagahandle",3]]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[]],[[]],[[]],[[["u32",15]],["drmformat",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tryfrominterror",3]],["rutabagaerror",4]],[[]],[[["baseerror",3]],["rutabagaerror",4]],[[["ioerror",3]],["rutabagaerror",4]],[[["utf8error",3]],["rutabagaerror",4]],[[["volatilememoryerror",4]],["rutabagaerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],[["rutabagaresult",6,["vec"]],["vec",3,["u8"]]]],[[["u32",15]],["rutabagaresult",6]],[[["imageallocationinfo",3]],[["rutabagaresult",6,["imagememoryrequirements"]],["imagememoryrequirements",3]]],null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[["vulkaninfo",3],["u64",15],["rutabagahandle",3]],[["rutabagaresult",6,["box"]],["box",3,["mappedregion"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,null,null,null,[[["u32",15]],[["rutabagaresult",6,["externalmapping"]],["externalmapping",3]]],[[["u32",15]],[["rutabagaresult",6,["u32"]],["u32",15]]],null,null,null,null,[[["drmformat",3]],["bool",15]],[[["rutabagagrallocflags",3]],["bool",15]],[[["rutabagacomponenttype",4]],["rutabagabuilder",3]],[[],[["rutabagaresult",6,["rutabagagralloc"]],["rutabagagralloc",3]]],[[["u8",15]],["drmformat",3]],[[["u32",15]],["rutabagagrallocflags",3]],[[],["virglrendererflags",3]],[[],["gfxstreamflags",3]],[[],["rutabagafencehandler",6]],[[["u32",15]],["transfer3d",3]],null,null,null,null,null,[[["rutabagacomponenttype",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[],[["planarlayout",3],["rutabagaresult",6,["planarlayout"]]]],[[],[["vec",3,["rutabagafence"]],["rutabagafence",3]]],[[["u32",15]],[["resource3dinfo",3],["rutabagaresult",6,["resource3dinfo"]]]],[[["u32",15],["resourcecreate3d",3]],["rutabagaresult",6]],[[["vec",3,["rutabagaiovec"]],["u32",15],["rutabagahandle",3],["option",4,["rutabagahandle"]],["option",4,["vec"]],["resourcecreateblob",3]],["rutabagaresult",6]],null,[[["u32",15]],["rutabagabuilder",3]],[[["u32",15]],["rutabagabuilder",3]],[[["gfxstreamflags",3]],["rutabagabuilder",3]],[[["option",4,["vec"]],["vec",3,["rutabagachannel"]]],["rutabagabuilder",3]],[[["virglrendererflags",3]],["rutabagabuilder",3]],null,null,null,null,null,[[["u32",15]],["rutabagaresult",6]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[["u32",15],["volatileslice",3],["option",4,["volatileslice"]],["transfer3d",3]],["rutabagaresult",6]],[[["u32",15],["transfer3d",3]],["rutabagaresult",6]],[[],[["rutabagaresult",6,["rutabagahandle"]],["rutabagahandle",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]],["rutabagaresult",6]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["gfxstreamflags",3]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["gfxstreamflags",3]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["gfxstreamflags",3]],[[["bool",15]],["gfxstreamflags",3]],[[["bool",15]],["rutabagagrallocflags",3]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["rutabagagrallocflags",3]],[[["bool",15]],["rutabagagrallocflags",3]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["gfxstreamflags",3]],[[["bool",15]],["rutabagagrallocflags",3]],[[["bool",15]],["rutabagagrallocflags",3]],[[["bool",15]],["gfxstreamflags",3]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["virglrendererflags",3]],[[["bool",15]],["gfxstreamflags",3]],[[],["bool",15]],[[],["bool",15]],[[["u32",15]],[["vulkaninfo",3],["rutabagaresult",6,["vulkaninfo"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"DrmFormat"],[3,"RutabagaGrallocFlags"],[4,"RutabagaError"],[4,"RutabagaComponentType"],[3,"RutabagaGralloc"],[3,"ResourceCreate3D"],[3,"Rutabaga"],[3,"RutabagaIovec"],[3,"RutabagaChannel"],[3,"ResourceCreateBlob"],[3,"RutabagaBuilder"],[3,"RutabagaHandle"],[3,"ImageAllocationInfo"],[3,"ImageMemoryRequirements"],[3,"Resource3DInfo"],[3,"VulkanInfo"],[3,"RutabagaFence"],[3,"VirglRendererFlags"],[3,"GfxstreamFlags"],[3,"Transfer3D"],[3,"RutabagaFenceClosure"],[8,"RutabagaFenceCallback"],[6,"RutabagaFenceHandler"],[13,"BaseError"],[13,"ComponentError"],[13,"InvalidCommandSize"],[13,"IoError"],[13,"MappingFailed"],[13,"SpecViolation"],[13,"TryFromIntError"],[13,"Utf8Error"],[13,"VolatileMemoryError"],[13,"CheckedArithmetic"],[13,"CheckedRange"]]},\
"ryu":{"doc":"github crates-io docs-rs","t":[3,8,11,11,11,11,11,11,11,11,11,0,11,11,11,5,5],"n":["Buffer","Float","borrow","borrow_mut","clone","default","format","format_finite","from","into","new","raw","try_from","try_into","type_id","format32","format64"],"q":["ryu","","","","","","","","","","","","","","","ryu::raw",""],"d":["Safe API for formatting floating point numbers to text.","A floating point number, f32 or f64, that can be written …","","","","","Print a floating point number into this buffer and return …","Print a floating point number into this buffer and return …","","","This is a cheap operation; you don’t need to worry about …","Unsafe functions that mirror the API of the C …","","","","Print f32 to the given buffer and return number of bytes …","Print f64 to the given buffer and return number of bytes …"],"i":[0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0],"f":[null,null,[[]],[[]],[[]],[[]],[[["float",8]],["str",15]],[[["float",8]],["str",15]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["f32",15]],["usize",15]],[[["f64",15]],["usize",15]]],"p":[[3,"Buffer"]]},\
"serde":{"doc":"Serde","t":[8,8,16,16,16,8,16,16,16,16,16,16,16,8,11,11,11,0,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,14,11,11,0,14,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,13,13,13,8,8,8,8,16,13,8,8,16,16,16,16,16,8,13,3,8,13,8,13,13,13,13,13,8,13,13,13,13,4,13,13,13,16,16,16,8,8,11,11,11,11,11,11,11,11,10,11,10,10,11,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,10,11,11,11,10,11,10,11,11,10,11,11,11,11,11,11,11,10,11,11,10,11,11,0,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,16,16,16,16,16,16,16,3,16,16,16,16,16,16,16,16,8,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,11,11,11,11,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,11,11,11,10,10,10,10,10,10,11,11,11,11,11,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11],"n":["Deserialize","Deserializer","Error","Error","Ok","Serialize","SerializeMap","SerializeSeq","SerializeStruct","SerializeStructVariant","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","Serializer","collect_map","collect_seq","collect_str","de","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","forward_to_deserialize_any","is_human_readable","is_human_readable","ser","serde_if_integer128","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","Bool","Bytes","Char","Deserialize","DeserializeOwned","DeserializeSeed","Deserializer","Deserializer","Enum","EnumAccess","Error","Error","Error","Error","Error","Error","Expected","Float","IgnoredAny","IntoDeserializer","Map","MapAccess","NewtypeStruct","NewtypeVariant","Option","Other","Seq","SeqAccess","Signed","Str","StructVariant","TupleVariant","Unexpected","Unit","UnitVariant","Unsigned","Value","Value","Variant","VariantAccess","Visitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","default","deserialize","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","duplicate_field","eq","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","into","into","into_deserializer","invalid_length","invalid_type","invalid_value","is_human_readable","missing_field","ne","newtype_variant","newtype_variant_seed","next_element","next_element_seed","next_entry","next_entry_seed","next_key","next_key_seed","next_value","next_value_seed","size_hint","size_hint","struct_variant","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","tuple_variant","type_id","type_id","unit_variant","unknown_field","unknown_variant","value","variant","variant_seed","visit_bool","visit_bool","visit_borrowed_bytes","visit_borrowed_str","visit_byte_buf","visit_bytes","visit_bytes","visit_char","visit_enum","visit_enum","visit_f32","visit_f64","visit_f64","visit_i128","visit_i128","visit_i16","visit_i32","visit_i64","visit_i64","visit_i8","visit_map","visit_map","visit_newtype_struct","visit_newtype_struct","visit_none","visit_none","visit_seq","visit_seq","visit_some","visit_some","visit_str","visit_str","visit_string","visit_u128","visit_u128","visit_u16","visit_u32","visit_u64","visit_u64","visit_u8","visit_unit","visit_unit","0","0","0","0","0","0","0","0","BoolDeserializer","BorrowedBytesDeserializer","BorrowedStrDeserializer","BytesDeserializer","CharDeserializer","CowStrDeserializer","Error","F32Deserializer","F64Deserializer","I128Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","I8Deserializer","IsizeDeserializer","MapAccessDeserializer","MapDeserializer","SeqAccessDeserializer","SeqDeserializer","StrDeserializer","StringDeserializer","U128Deserializer","U16Deserializer","U32Deserializer","U64Deserializer","U8Deserializer","UnitDeserializer","UsizeDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","custom","description","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","new","new","new","new","new","new","new","next_element_seed","next_element_seed","next_entry_seed","next_key_seed","next_value_seed","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","Error","Error","Error","Error","Error","Error","Error","Error","Error","Impossible","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Serialize","SerializeMap","SerializeMap","SerializeSeq","SerializeSeq","SerializeStruct","SerializeStruct","SerializeStructVariant","SerializeStructVariant","SerializeTuple","SerializeTuple","SerializeTupleStruct","SerializeTupleStruct","SerializeTupleVariant","SerializeTupleVariant","Serializer","borrow","borrow_mut","collect_map","collect_seq","collect_str","custom","end","end","end","end","end","end","end","end","end","end","end","end","end","end","from","into","is_human_readable","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_value","skip_field","skip_field","try_from","try_into","type_id"],"q":["serde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::deserde::de::Unexpected","","","","","","","","serde::de::valueserde::ser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <strong>data structure</strong> that can be deserialized from any data …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","The error type when some error occurs during serialization.","The output type produced by this <code>Serializer</code> during …","A <strong>data structure</strong> that can be serialized into any data …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Generic data structure deserialization framework.","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Helper macro when implementing the <code>Deserializer</code> part of a …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Serialize</code> implementations should …","Generic data structure serialization framework.","Conditional compilation depending on whether Serde is …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","The input contained a boolean value that was not expected.","The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …","The input contained a <code>char</code> that was not expected.","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The type of the deserializer being converted into.","The input contained an enum that was not expected.","Provides a <code>Visitor</code> access to the data of an enum in the …","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","An efficient way of discarding data from a deserializer.","Converts an existing value into a <code>Deserializer</code> from which …","The input contained a map that was not expected.","Provides a <code>Visitor</code> access to each entry of a map in the …","The input contained a newtype struct that was not expected.","The input contained a newtype variant that was not …","The input contained an <code>Option&lt;T&gt;</code> that was not expected.","A message stating what uncategorized thing the input …","The input contained a sequence that was not expected.","Provides a <code>Visitor</code> access to each element of a sequence in …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.","The input contained a struct variant that was not expected.","The input contained a tuple variant that was not expected.","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a unit <code>()</code> that was not expected.","The input contained a unit variant that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…","The type produced by using this seed.","The value produced by this visitor.","The <code>Visitor</code> that will be used to deserialize the content …","<code>VariantAccess</code> is a visitor that is created by the …","This trait represents a visitor that walks through a …","","","","","","","","","Raised when there is general error when deserializing a …","","Deserialize this value from the given Serde deserializer.","Equivalent to the more common <code>Deserialize::deserialize</code> …","","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Raised when a <code>Deserialize</code> struct type received more than …","","Format a message stating what data this Visitor expects to …","","Format an explanation of what data was being expected. …","","","","","","","","","","Convert this value into a deserializer.","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Determine whether <code>Deserialize</code> implementations should …","Raised when a <code>Deserialize</code> struct type expected to receive …","","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns a <code>Ok(value)</code> for the next value in the map.","Returns the number of elements remaining in the sequence, …","Returns the number of entries remaining in the map, if …","Called when deserializing a struct-like variant.","","","","","","","","Called when deserializing a tuple-like variant.","","","Called when deserializing a variant with no values.","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> enum type received a variant …","Building blocks for deserializing basic values using the …","<code>variant</code> is called to identify which variant to deserialize.","<code>variant</code> is called to identify which variant to deserialize.","The input contains a boolean.","","The input contains a byte array that lives at least as …","The input contains a string that lives at least as long as …","The input contains a byte array and ownership of the byte …","The input contains a byte array. The lifetime of the byte …","","The input contains a <code>char</code>.","The input contains an enum.","","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","","The input contains a <code>i128</code>.","","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","","The input contains an <code>i8</code>.","The input contains a key-value map.","","The input contains a newtype struct.","","The input contains an optional that is absent.","","The input contains a sequence of elements.","","The input contains an optional that is present.","","The input contains a string. The lifetime of the string is …","","The input contains a string and ownership of the string is …","The input contains a <code>u128</code>.","","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","","The input contains a <code>u8</code>.","The input contains a unit <code>()</code>.","","","","","","","","","","A deserializer holding a <code>bool</code>.","A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …","A deserializer holding a <code>&amp;str</code> with a lifetime tied to …","A deserializer holding a <code>&amp;[u8]</code>. Always calls …","A deserializer holding a <code>char</code>.","A deserializer holding a <code>Cow&lt;str&gt;</code>.","A minimal representation of all possible errors that can …","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>MapAccess</code>.","A deserializer that iterates over a map.","A deserializer holding a <code>SeqAccess</code>.","A deserializer that iterates over a sequence.","A deserializer holding a <code>&amp;str</code>.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>()</code>.","A deserializer holding a <code>usize</codeheck for remaining elements after passing a …","Check for remaining elements after passing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new borrowed deserializer from the given string.","Create a new deserializer from the given bytes.","Create a new borrowed deserializer from the given borrowed …","Construct a new <code>MapDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait used by <code>Serialize</code> implementations to generically …","The error type when some error occurs during serialization.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Helper type for implementing a <code>Serializer</code> that does not …","The output type produced by this <code>Serializer</code> during …","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","A <strong>data structure</strong> that can be serialized into any data …","Returned from <code>Serializer::serialize_map</code>.","Type returned from <code>serialize_map</code> for serializing the …","Returned from <code>Serializer::serialize_seq</code>.","Type returned from <code>serialize_seq</code> for serializing the …","Returned from <code>Serializer::serialize_struct</code>.","Type returned from <code>serialize_struct</code> for serializing the …","Returned from <code>Serializer::serialize_struct_variant</code>.","Type returned from <code>serialize_struct_variant</code> for …","Returned from <code>Serializer::serialize_tuple</code>.","Type returned from <code>serialize_tuple</code> for serializing the …","Returned from <code>Serializer::serialize_tuple_struct</code>.","Type returned from <code>serialize_tuple_struct</code> for serializing …","Returned from <code>Serializer::serialize_tuple_variant</code>.","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","","","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Used when a <code>Serialize</code> implementation encounters any error …","Finish serializing a sequence.","Finish serializing a tuple.","Finish serializing a tuple struct.","Finish serializing a tuple variant.","Finish serializing a map.","Finish serializing a struct.","Finish serializing a struct variant.","","","","","","","","","","Determine whether <code>Serialize</code> implementations should …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize a sequence element.","Serialize a tuple element.","","","Serialize a map entry consisting of a key and a value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a tuple struct field.","Serialize a tuple variant field.","Serialize a struct field.","Serialize a struct variant field.","","","","","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Serialize a map key.","","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a map value.","","Indicate that a struct field has been skipped.","Indicate that a struct variant field has been skipped.","","",""],"i":[0,0,1,2,2,0,2,2,2,2,2,2,2,0,2,2,2,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,2,0,0,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,0,0,0,0,6,5,0,0,1,7,8,9,10,0,5,0,0,5,0,5,5,5,5,5,0,5,5,5,5,0,5,5,5,11,12,9,0,0,13,5,13,5,13,5,13,5,14,13,3,11,13,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,5,12,13,15,15,13,13,5,5,13,5,13,5,6,14,14,14,1,14,5,10,10,7,7,8,8,8,8,8,8,7,8,10,13,5,5,13,5,13,5,10,13,5,10,14,14,0,9,9,12,13,12,12,12,12,13,12,12,13,12,12,13,12,13,12,12,12,13,12,12,13,12,13,12,13,12,13,12,13,12,13,12,12,13,12,12,12,13,12,12,13,16,17,18,19,20,21,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,33,33,33,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,32,49,33,24,25,26,27,28,29,30,31,32,33,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,33,27,30,31,32,49,50,51,32,49,32,32,32,32,32,49,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,33,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,25,26,27,28,29,51,0,2,52,53,54,55,56,57,58,0,2,52,53,54,55,56,57,58,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,59,59,2,2,2,60,52,53,54,55,56,57,58,59,59,59,59,59,59,59,59,59,2,4,2,2,2,52,53,59,59,56,2,2,54,55,57,58,59,59,59,59,2,2,2,2,2,56,59,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,56,59,57,58,59,59,59],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],null,[[],["bool",15]],[[],["bool",15]],null,null,[[],["result",4]],[[["bool",15]],["result",4]],[[],["result",4]],[[["char",15]],["result",4]],[[["f32",15]],["result",4]],[[["f64",15]],["result",4]],[[["i128",15]],["result",4]],[[["i16",15]],["result",4]],[[["i32",15]],["result",4]],[[["i64",15]],["result",4]],[[["i8",15]],["result",4]],[[["usize",15],["option",4,["usize"]]],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[],["result",4]],[[["usize",15],["option",4,["usize"]]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["u32",15],["str",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["u32",15],["str",15]],["result",4]],[[["u128",15]],["result",4]],[[["u16",15]],["result",4]],[[["u32",15]],["result",4]],[[["u64",15]],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["ignoredany",3]],[[],["unexpected",4]],[[]],[[]],[[]],[[],["ignoredany",3]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["ignoredany"]],["ignoredany",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]]],[[["unexpected",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["expected",8]]],[[["expected",8],["unexpected",4]]],[[["expected",8],["unexpected",4]]],[[],["bool",15]],[[["str",15]]],[[["unexpected",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["option"]],["option",4]]],[[],[["option",4],["result",4,["option"]]]],[[],[["option",4],["result",4,["option"]]]],[[],[["option",4],["result",4,["option"]]]],[[],[["result",4,["option"]],["option",4]]],[[],[["result",4,["option"]],["option",4]]],[[],["result",4]],[[],["result",4]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["result",4]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4]],[[["str",15]]],[[["str",15]]],null,[[],["result",4]],[[],["result",4]],[[["bool",15]],["result",4]],[[["bool",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["vec",3,["u8"]],["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["char",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["f32",15]],["result",4]],[[["f64",15]],["result",4]],[[["f64",15]],["result",4]],[[["i128",15]],["result",4]],[[["i128",15]],["result",4]],[[["i16",15]],["result",4]],[[["i32",15]],["result",4]],[[["i64",15]],["result",4]],[[["i64",15]],["result",4]],[[["i8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["string",3]],["result",4]],[[["u128",15]],["result",4]],[[["u128",15]],["result",4]],[[["u16",15]],["result",4]],[[["u32",15]],["result",4]],[[["u64",15]],["result",4]],[[["u64",15]],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["seqdeserializer",3]],[[],["seqaccessdeserializer",3]],[[],["mapaccessdeserializer",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["error",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["bool",15]],[[["str",15]],["borrowedstrdeserializer",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["result",4,["option"]]]],[[],[["option",4],["result",4,["option"]]]],[[],[["option",4],["result",4,["option"]]]],[[],[["result",4,["option"]],["option",4]]],[[],["result",4]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["bool",15]],[[],["result",4]],[[["bool",15]],["result",4]],[[],["result",4]],[[["char",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["f32",15]],["result",4]],[[["f64",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["i128",15]],["result",4]],[[["i16",15]],["result",4]],[[["i32",15]],["result",4]],[[["i64",15]],["result",4]],[[["i8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15],["option",4,["usize"]]],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[],["result",4]],[[["usize",15],["option",4,["usize"]]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["u32",15],["str",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["usize",15],["u32",15],["str",15]],["result",4]],[[["u128",15]],["result",4]],[[["u16",15]],["result",4]],[[["u32",15]],["result",4]],[[["u64",15]],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[8,"Deserializer"],[8,"Serializer"],[8,"Deserialize"],[8,"Serialize"],[4,"Unexpected"],[8,"IntoDeserializer"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"DeserializeSeed"],[8,"Visitor"],[3,"IgnoredAny"],[8,"Error"],[8,"Expected"],[13,"Bool"],[13,"Unsigned"],[13,"Signed"],[13,"Float"],[13,"Char"],[13,"Str"],[13,"Bytes"],[13,"Other"],[3,"UnitDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"MapDeserializer"],[3,"Error"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapAccessDeserializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Impossible"],[8,"Error"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":[24,24],"n":["Deserialize","Serialize"],"q":["serde_derive",""],"d":["",""],"i":[0,0],"f":[null,null],"p":[]},\
"serde_json":{"doc":"Serde JSON","tn":["Array","Bool","Deserializer","Error","Map","Null","Number","Number","Object","Result","Serializer","StreamDeserializer","String","Value","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","custom","de","default","default","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_reader","from_slice","from_str","from_str","from_value","index","index","index_mut","index_mut","into","into","into","into","into","into","into_deserializer","into_iter","into_iter","invalid_type","json","map","ne","next","ser","serialize","serialize","source","to_owned","to_owned","to_string","to_string","to_string","to_string_pretty","to_value","to_vec","to_vec_pretty","to_writer","to_writer_pretty","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","0","0","0","0","0","Deserializer","IoRead","Read","SliceRead","StrRead","StreamDeserializer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","byte_offset","byte_offset","byte_offset","byte_offset","decode_hex_escape","decode_hex_escape","decode_hex_escape","discard","discard","discard","end","from","from","from","from_reader","from_reader","from_slice","from_slice","from_str","from_str","ignore_str","ignore_str","ignore_str","into","into","into","into_iter","new","new","new","new","new","next","next","next","parse_str","parse_str","parse_str","parse_str_raw","parse_str_raw","parse_str_raw","peek","peek","peek","peek_position","peek_position","peek_position","position","position","position","set_failed","set_failed","set_failed","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Category","Data","Eof","Error","Io","Result","Syntax","borrow","borrow_mut","classify","clone","clone_into","column","eq","fmt","from","into","is_data","is_eof","is_io","is_syntax","line","to_owned","try_from","try_into","type_id","Entry","IntoIter","Iter","IterMut","Keys","Map","Occupied","OccupiedEntry","Vacant","VacantEntry","Values","ValuesMut","and_modify","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","contains_key","entry","from","from","from","from","from","from","from","from","from","get","get","get_key_value","get_mut","get_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","iter","iter_mut","key","key","key","keys","len","len","len","len","len","len","len","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","or_insert","or_insert_with","remove","remove","remove_entry","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","0","0","AsciiControl","Backspace","CarriageReturn","CharEscape","CompactFormatter","FormFeed","Formatter","LineFeed","PrettyFormatter","Quote","ReverseSolidus","Serializer","Solidus","Tab","begin_array","begin_array","begin_array_value","begin_array_value","begin_object","begin_object","begin_object_key","begin_object_key","begin_object_value","begin_object_value","begin_string","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","end_array","end_array","end_array_value","end_array_value","end_object","end_object","end_object_key","end_object_value","end_object_value","end_string","fmt","fmt","from","from","from","into","into","into","into_inner","new","new","pretty","to_owned","to_owned","to_string","to_string_pretty","to_vec","to_vec_pretty","to_writer","to_writer_pretty","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_formatter","with_indent","write_bool","write_char_escape","write_f32","write_f64","write_i16","write_i32","write_i64","write_i8","write_null","write_number_str","write_raw_fragment","write_string_fragment","write_u16","write_u32","write_u64","write_u8","0","Array","Bool","Index","Null","Number","Number","Object","Serializer","String","Value","as_array","as_array_mut","as_bool","as_f64","as_f64","as_i64","as_i64","as_null","as_object","as_object_mut","as_str","as_u64","as_u64","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","collect_str","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","eq","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_str","from_value","get","get_mut","hash","into","into","is_array","is_boolean","is_f64","is_f64","is_i64","is_i64","is_null","is_number","is_object","is_string","is_u64","is_u64","ne","pointer","pointer_mut","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","take","to_owned","to_string","to_value","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0"],"q":["serde_jsonserde_json::Value","","","","","serde_json::de","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde_json::error","","","","","","","","","","","","","","","","","","","","","","","","","","serde_json::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde_json::map::Entry","","serde_json::ser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde_json::ser::CharEscape","serde_json::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde_json::value::Value","","","",""],"d":["Represents a JSON array.","Represents a JSON boolean.","A structure that deserializes JSON into Rust values.","This type represents all possible errors that can occur …","Represents a JSON key/value type.","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON number, whether integer or floating …","Represents a JSON object.","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.","A structure for serializing Rust values into JSON.","Iterator that deserializes a stream into multiple JSON …","Represents a JSON string.","Represents any valid JSON value.","","","","","","","","","","","","","","","","","","","Deserialize JSON data to a Rust data structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When serializing or deserializing JSON goes wrong.","","","","","Display a JSON value as a string.","","","","","","","","","","","","Convert <code>()</code> to <code>Value</code>","Convert copy-on-write string to <code>Value</code>","Convert <code>Number</code> to <code>Value</code>","Convert string slice to <code>Value</code>","Convert <code>String</code> to <code>Value</code>","Convert map (with string keys) to <code>Value</code>","Convert boolean to <code>Value</code>","Convert a <code>Vec</code> to <code>Value</code>","Convert 32-bit floating point number to <code>Value</code>","Convert a slice to <code>Value</code>","","","","","","","Convert 64-bit floating point number to <code>Value</code>","","Convert an iteratable type to a <code>Value</code>","Convert an iteratable type to a <code>Value</code>","Deserialize an instance of type <code>T</code> from an IO stream of …","Deserialize an instance of type <code>T</code> from bytes of JSON text.","Deserialize an instance of type <code>T</code> from a string of JSON …","","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.","","Index into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> or","","Write into a <code>serde_json::Value</code> using the syntax …","","","","","","","","","","","Construct a <code>serde_json::Value</code> from a JSON literal.","A map of String to serde_json::Value.","","","Serialize a Rust data structure into JSON data.","","","","","","Serialize the given data structure as a String of JSON.","","","Serialize the given data structure as a pretty-printed …","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …","Serialize the given data structure as a JSON byte vector.","Serialize the given data structure as a pretty-printed …","Serialize the given data structure as JSON into the IO …","Serialize the given data structure as pretty-printed JSON …","","","","","","","","","","","","","","","","","","","The Value enum, a loosely typed way of representing any …","","","","","","A structure that deserializes JSON into Rust values.","JSON input source that reads from a std::io input stream.","Trait used by the deserializer for iterating over input. …","JSON input source that reads from a slice of bytes.","JSON input source that reads from a UTF-8 string.","Iterator that deserializes a stream into multiple JSON …","","","","","","","Returns the number of bytes so far deserialized into a …","","","","","","","","","","The <code>Deserializer::end</code> method should be called after a …","","","","Deserialize an instance of type <code>T</code> from an IO stream of …","Creates a JSON deserializer from an <code>io::Read</code>.","Deserialize an instance of type <code>T</code> from bytes of JSON text.","Creates a JSON deserializer from a <code>&amp;[u8]</code>.","Deserialize an instance of type <code>T</code> from a string of JSON …","Creates a JSON deserializer from a <code>&amp;str</code>.","","","","","","","Turn a JSON deserializer into an iterator over values of …","Create a JSON deserializer from one of the possible …","Create a JSON stream deserializer from one of the possible …","Create a JSON input source to read from a std::io input …","Create a JSON input source to read from a slice of bytes.","Create a JSON input source to read from a UTF-8 string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Categorizes the cause of a <code>serde_json::Error</code>.","The error was caused by input data that was semantically …","The error was caused by prematurely reaching the end of …","This type represents all possible errors that can occur …","The error was caused by a failure to read or write bytes …","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.","The error was caused by input that was not syntactically …","","","Categorizes the cause of this error.","","","One-based column number at which the error was detected.","","","","","Returns true if this error was caused by input data that …","Returns true if this error was caused by prematurely …","Returns true if this error was caused by a failure to read …","Returns true if this error was caused by input that was not","One-based line number at which the error was detected.","","","","","A view into a single entry in a map, which may either be …","An owning iterator over a serde_json::Map’s entries.","An iterator over a serde_json::Map’s entries.","A mutable iterator over a serde_json::Map’s entries.","An iterator over a serde_json::Map’s keys.","Represents a JSON key/value type.","An occupied Entry.","An occupied Entry. It is part of the <code>Entry</code> enum.","A vacant Entry.","A vacant Entry. It is part of the <code>Entry</code> enum.","An iterator over a serde_json::Map’s values.","A mutable iterator over a serde_json::Map’s values.","Provides in-place mutable access to an occupied entry …","Moves all elements from other into Self, leaving other …","","","","","","","","","","","","","","","","","","","Clears the map, removing all values.","Returns true if the map contains a value for the specified …","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Returns the key-value pair matching the given key.","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Inserts a key-value pair into the map.","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry with the <code>OccupiedEntry</code>’s …","","","","","","","","","","","","","","","","Converts the entry into a mutable reference to its value.","Returns true if the map contains no elements.","Gets an iterator over the entries of the map.","Gets a mutable iterator over the entries of the map.","Returns a reference to this entry’s key.","Gets a reference to the key that would be used when …","Gets a reference to the key in the entry.","Gets an iterator over the keys of the map.","Returns the number of elements in the map.","","","","","","","Makes a new empty Map.","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Removes a key from the map, returning the value at the key …","Takes the value of the entry out of the map, and returns …","Removes a key from the map, returning the stored key and …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets an iterator over the values of the map.","Gets an iterator over mutable values of the map.","Makes a new empty Map with the given initial capacity.","","","An escaped ASCII plane control character (usually escaped …","An escaped backspace character (usually escaped as <code>\\\\b</code>)","An escaped carriage return character (usually escaped as <code>\\\\r</code>…","Represents a character escape code in a type-safe manner.","This structure compacts a JSON value with no extra …","An escaped form feed character (usually escaped as <code>\\\\f</code>)","This trait abstracts away serializing the JSON control …","An escaped line feed character (usually escaped as <code>\\\\n</code>)","This structure pretty prints a JSON value to make it human …","An escaped quote <code>&quot;</code>","An escaped reverse solidus <code>\\\\</code>","A structure for serializing Rust values into JSON.","An escaped solidus <code>/</code>","An escaped tab character (usually escaped as <code>\\\\t</code>)","Called before every array.  Writes a <code>[</code> to the specified …","","Called before every array value.  Writes a <code>,</code> if needed to …","","Called before every object.  Writes a <code>{</code> to the specified …","","Called before every object key.","","Called before every object value.  A <code>:</code> should be written to","","Called before each series of <code>write_string_fragment</code> and …","","","","","","","","","","","","Called after every array.  Writes a <code>]</code> to the specified …","","Called after every array value.","","Called after every object.  Writes a <code>}</code> to the specified …","","Called after every object key.  A <code>:</code> should be written to …","Called after every object value.","","Called after each series of <code>write_string_fragment</code> and …","","","","","","","","","Unwrap the <code>Writer</code> from the <code>Serializer</code>.","Creates a new JSON serializer.","Construct a pretty printer formatter that defaults to …","Creates a new JSON pretty print serializer.","","","Serialize the given data structure as a String of JSON.","Serialize the given data structure as a pretty-printed …","Serialize the given data structure as a JSON byte vector.","Serialize the given data structure as a pretty-printed …","Serialize the given data structure as JSON into the IO …","Serialize the given data structure as pretty-printed JSON …","","","","","","","","","","Creates a new JSON visitor whose output will be written to …","Construct a pretty printer formatter that uses the <code>indent</code> …","Writes a <code>true</code> or <code>false</code> value to the specified writer.","Writes a character escape code to the specified writer.","Writes a floating point value like <code>-31.26e+12</code> to the …","Writes a floating point value like <code>-31.26e+12</code> to the …","Writes an integer value like <code>-123</code> to the specified writer.","Writes an integer value like <code>-123</code> to the specified writer.","Writes an integer value like <code>-123</code> to the specified writer.","Writes an integer value like <code>-123</code> to the specified writer.","Writes a <code>null</code> value to the specified writer.","Writes a number that has already been rendered to a string.","Writes a raw JSON fragment that doesn’t need any …","Writes a string fragment that doesn’t need any escaping …","Writes an integer value like <code>123</code> to the specified writer.","Writes an integer value like <code>123</code> to the specified writer.","Writes an integer value like <code>123</code> to the specified writer.","Writes an integer value like <code>123</code> to the specified writer.","","Represents a JSON array.","Represents a JSON boolean.","A type that can be used to index into a <code>serde_json::Value</code>.","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON number, whether integer or floating …","Represents a JSON object.","Serializer whose output is a <code>Value</code>.","Represents a JSON string.","Represents any valid JSON value.","If the <code>Value</code> is an Array, returns the associated vector. …","If the <code>Value</code> is an Array, returns the associated mutable …","If the <code>Value</code> is a Boolean, returns the associated bool. …","If the <code>Value</code> is a number, represent it as f64 if possible. …","Represents the number as f64 if possible. Returns None …","If the <code>Value</code> is an integer, represent it as i64 if …","If the <code>Number</code> is an integer, represent it as i64 if …","If the <code>Value</code> is a Null, returns (). Returns None otherwise.","If the <code>Value</code> is an Object, returns the associated Map. …","If the <code>Value</code> is an Object, returns the associated mutable …","If the <code>Value</code> is a String, returns the associated str. …","If the <code>Value</code> is an integer, represent it as u64 if …","If the <code>Number</code> is an integer, represent it as u64 if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a finite <code>f64</code> to a <code>Number</code>. Infinite or NaN values …","","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.","Index into a JSON array or map. A string index can be used …","Mutably index into a JSON array or map. A string index can …","","","","Returns true if the <code>Value</code> is an Array. Returns false …","Returns true if the <code>Value</code> is a Boolean. Returns false …","Returns true if the <code>Value</code> is a number that can be …","Returns true if the <code>Number</code> can be represented by f64.","Returns true if the <code>Value</code> is an integer between <code>i64::MIN</code> …","Returns true if the <code>Number</code> is an integer between <code>i64::MIN</code> …","Returns true if the <code>Value</code> is a Null. Returns false …","Returns true if the <code>Value</code> is a Number. Returns false …","Returns true if the <code>Value</code> is an Object. Returns false …","Returns true if the <code>Value</code> is a String. Returns false …","Returns true if the <code>Value</code> is an integer between zero and …","Returns true if the <code>Number</code> is an integer between zero and …","","Looks up a value by a JSON Pointer.","Looks up a value by a JSON Pointer and returns a mutable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes the value out of the <code>Value</code>, leaving a <code>Null</code> in its …","","","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …","","","","","","","","","","",""],"i":[1,1,0,0,0,1,0,1,1,0,0,0,1,0,2,3,4,5,6,1,2,3,4,5,6,1,5,1,5,1,4,4,0,5,1,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,5,4,4,5,1,1,2,3,4,5,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,1,0,0,0,1,0,5,1,5,1,2,3,4,5,6,1,1,3,5,4,0,0,1,3,0,5,1,4,5,1,0,4,1,0,0,0,0,0,0,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,0,7,8,9,10,11,0,0,0,0,0,0,12,13,14,12,13,14,3,12,13,14,12,13,14,12,13,14,2,12,13,14,0,2,0,2,0,2,12,13,14,12,13,14,2,2,3,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,0,15,15,0,15,0,15,15,15,4,15,15,4,15,15,15,15,4,4,4,4,4,15,15,15,15,0,0,0,0,0,0,16,0,16,0,0,0,16,5,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,5,5,5,16,17,18,19,20,21,22,23,24,5,18,5,5,18,5,17,18,16,17,18,19,20,21,22,23,24,19,20,21,22,23,24,18,5,5,5,16,17,18,5,5,19,20,21,22,23,24,5,19,20,21,22,23,24,19,20,21,22,23,24,16,16,5,18,5,5,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,5,5,5,25,26,27,27,27,0,0,27,0,27,0,27,27,0,27,27,28,29,28,29,28,29,28,29,28,29,28,27,30,29,27,30,29,30,29,30,29,29,28,29,28,29,28,29,28,28,29,28,30,29,27,30,29,27,30,29,6,6,29,6,30,29,0,0,0,0,0,0,27,30,29,27,30,29,27,30,29,6,29,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,31,1,1,0,1,0,1,1,0,1,0,1,1,1,1,32,1,32,1,1,1,1,1,32,33,32,33,32,32,32,33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,32,32,32,32,32,32,32,32,32,32,32,32,32,0,1,1,32,33,32,1,1,1,32,1,32,1,1,1,1,1,32,32,1,1,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,1,32,32,0,33,32,33,32,33,32,7,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["value",4]],[[]],[[]],[[["display",8]],["error",3]],[[["display",8]],["error",3]],null,[[]],[[],["value",4]],[[],["result",4]],[[],[["result",4,["value"]],["value",4]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["str",15]],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["str",15]],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["str",15]],[["error",3],["result",4,["error"]]]],[[["usize",15]],[["error",3],["result",4,["error"]]]],[[["usize",15],["str",15]],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["str",15]],[["error",3],["result",4,["error"]]]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["i64",15]],["bool",15]],[[],["bool",15]],[[["u8",15]],["bool",15]],[[["u16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["f32",15]],["bool",15]],[[["i8",15]],["bool",15]],[[["i32",15]],["bool",15]],[[["u64",15]],["bool",15]],[[["value",4]],["bool",15]],[[["string",3]],["bool",15]],[[["isize",15]],["bool",15]],[[["bool",15]],["bool",15]],[[["f64",15]],["bool",15]],[[["i16",15]],["bool",15]],null,[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[["u16",15]]],[[]],[[["i8",15]]],[[["i16",15]]],[[]],[[["cow",4,["str"]],["str",15]]],[[["number",3]]],[[["str",15]]],[[["string",3]]],[[["string",3],["map",3,["string","value"]],["value",4]]],[[["bool",15]]],[[["vec",3]]],[[["f32",15]]],[[]],[[["usize",15]]],[[["u64",15]]],[[["u32",15]]],[[["i64",15]]],[[["isize",15]]],[[["u8",15]]],[[["f64",15]]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["result",6]],[[],["result",6]],[[["str",15]],["result",6]],[[["str",15]],[["value",4],["error",3],["result",4,["value","error"]]]],[[["value",4]],[["result",4,["error"]],["error",3]]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["expected",8],["unexpected",4]]],null,null,[[["value",4]],["bool",15]],[[],[["option",4,["result"]],["result",6]]],null,[[],["result",4]],[[],["result",4]],[[],[["option",4,["error"]],["error",8]]],[[]],[[]],[[],[["string",3],["result",6,["string"]]]],[[],["string",3]],[[],["string",3]],[[],[["string",3],["result",6,["string"]]]],[[],[["value",4],["error",3],["result",4,["value","error"]]]],[[],[["vec",3,["u8"]],["result",6,["vec"]]]],[[],[["vec",3,["u8"]],["result",6,["vec"]]]],[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["result",6,["u16"]],["u16",15]]],[[],[["result",6,["u16"]],["u16",15]]],[[],[["result",6,["u16"]],["u16",15]]],[[]],[[]],[[]],[[],["result",6]],[[]],[[]],[[]],[[],["result",6]],[[]],[[],["result",6]],[[]],[[["str",15]],["result",6]],[[["str",15]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[]],[[]],[[],["streamdeserializer",3]],[[]],[[]],[[]],[[]],[[["str",15]]],[[],[["option",4,["u8"]],["result",6,["option"]]]],[[],[["option",4,["u8"]],["result",6,["option"]]]],[[],[["option",4,["u8"]],["result",6,["option"]]]],[[["vec",3]],[["reference",4,["str"]],["result",6,["reference"]]]],[[["vec",3]],[["reference",4,["str"]],["result",6,["reference"]]]],[[["vec",3]],[["reference",4,["str"]],["result",6,["reference"]]]],[[["vec",3]],[["reference",4],["result",6,["reference"]]]],[[["vec",3]],[["result",6,["reference"]],["reference",4]]],[[["vec",3]],[["result",6,["reference"]],["reference",4]]],[[],[["option",4,["u8"]],["result",6,["option"]]]],[[],[["option",4,["u8"]],["result",6,["option"]]]],[[],[["option",4,["u8"]],["result",6,["option"]]]],[[],["position",3]],[[],["position",3]],[[],["position",3]],[[],["position",3]],[[],["position",3]],[[],["position",3]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["category",4]],[[],["category",4]],[[]],[[],["usize",15]],[[["category",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["entry",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["value",4],["option",4,["value"]]]],[[],["value",4]],[[],["option",4]],[[],[["value",4],["option",4,["value"]]]],[[],["value",4]],[[["string",3],["value",4]],[["value",4],["option",4,["value"]]]],[[["value",4]],["value",4]],[[["value",4]],["value",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["value",4]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["keys",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["value",4]],["value",4]],[[],["value",4]],[[],[["value",4],["option",4,["value"]]]],[[],["value",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["values",3]],[[],["valuesmut",3]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[],["result",6]],[[["bool",15]],["result",6]],[[["bool",15]],["result",6]],[[],["result",6]],[[],["result",6]],[[["bool",15]],["result",6]],[[["bool",15]],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["compactformatter",3]],[[],["prettyformatter",3]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["string",3],["result",6,["string"]]]],[[],[["string",3],["result",6,["string"]]]],[[],[["vec",3,["u8"]],["result",6,["vec"]]]],[[],[["vec",3,["u8"]],["result",6,["vec"]]]],[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["bool",15]],["result",6]],[[["charescape",4]],["result",6]],[[["f32",15]],["result",6]],[[["f64",15]],["result",6]],[[["i16",15]],["result",6]],[[["i32",15]],["result",6]],[[["i64",15]],["result",6]],[[["i8",15]],["result",6]],[[],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["u16",15]],["result",6]],[[["u32",15]],["result",6]],[[["u64",15]],["result",6]],[[["u8",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["vec"]],["vec",3]]],[[],[["vec",3],["option",4,["vec"]]]],[[],[["bool",15],["option",4,["bool"]]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["option",4,["i64"]],["i64",15]]],[[],[["option",4,["i64"]],["i64",15]]],[[],["option",4]],[[],[["option",4,["map"]],["map",3]]],[[],[["option",4,["map"]],["map",3]]],[[],[["str",15],["option",4,["str"]]]],[[],[["u64",15],["option",4,["u64"]]]],[[],[["u64",15],["option",4,["u64"]]]],[[]],[[]],[[]],[[]],[[],["number",3]],[[]],[[],[["value",4],["result",6,["value"]]]],[[],[["result",4,["number"]],["number",3]]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[["str",15]],["result",4]],[[["number",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["i16",15]]],[[["i32",15]]],[[["isize",15]]],[[["i64",15]]],[[["i8",15]]],[[]],[[["usize",15]]],[[["u64",15]]],[[["u32",15]]],[[["u8",15]]],[[["u16",15]]],[[["f64",15]],[["number",3],["option",4,["number"]]]],[[["str",15]],["result",4]],[[["value",4]],[["result",4,["error"]],["error",3]]],[[["index",8]],[["value",4],["option",4,["value"]]]],[[["index",8]],[["value",4],["option",4,["value"]]]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["number",3]],["bool",15]],[[["str",15]],[["value",4],["option",4,["value"]]]],[[["str",15]],[["value",4],["option",4,["value"]]]],[[],["result",4]],[[["bool",15]],[["value",4],["result",6,["value"]]]],[[],[["value",4],["result",6,["value"]]]],[[["char",15]],[["value",4],["result",6,["value"]]]],[[["f32",15]],[["value",4],["result",6,["value"]]]],[[["f64",15]],[["value",4],["result",6,["value"]]]],[[["i16",15]],[["value",4],["result",6,["value"]]]],[[["i32",15]],[["value",4],["result",6,["value"]]]],[[["i64",15]],[["value",4],["result",6,["value"]]]],[[["i8",15]],[["value",4],["result",6,["value"]]]],[[["usize",15],["option",4,["usize"]]],["result",6]],[[["str",15]],[["value",4],["result",6,["value"]]]],[[["u32",15],["str",15]],[["value",4],["result",6,["value"]]]],[[],[["value",4],["result",6,["value"]]]],[[["usize",15],["option",4,["usize"]]],["result",6]],[[],[["value",4],["result",6,["value"]]]],[[["str",15]],[["value",4],["result",6,["value"]]]],[[["usize",15],["str",15]],["result",6]],[[["usize",15],["u32",15],["str",15]],["result",6]],[[["usize",15]],["result",6]],[[["usize",15],["str",15]],["result",6]],[[["usize",15],["u32",15],["str",15]],["result",6]],[[["u16",15]],[["value",4],["result",6,["value"]]]],[[["u32",15]],[["value",4],["result",6,["value"]]]],[[["u64",15]],[["value",4],["result",6,["value"]]]],[[["u8",15]],[["value",4],["result",6,["value"]]]],[[],[["value",4],["result",6,["value"]]]],[[["str",15]],[["value",4],["result",6,["value"]]]],[[["u32",15],["str",15]],[["value",4],["result",6,["value"]]]],[[],["value",4]],[[]],[[],["string",3]],[[],[["value",4],["error",3],["result",4,["value","error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[3,"Error"],[3,"Map"],[3,"Serializer"],[13,"Bool"],[13,"Number"],[13,"String"],[13,"Array"],[13,"Object"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[4,"Category"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[13,"Vacant"],[13,"Occupied"],[4,"CharEscape"],[8,"Formatter"],[3,"PrettyFormatter"],[3,"CompactFormatter"],[13,"AsciiControl"],[3,"Number"],[3,"Serializer"]]},\
"slab":{"doc":"Pre-allocated storage for a uniform data type.","t":[3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Drain","IntoIter","Iter","IterMut","Slab","VacantEntry","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_into","clone_into","compact","contains","default","drain","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","get","get2_mut","get2_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","index","index_mut","insert","insert","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","key","key_of","len","len","len","len","len","new","next","next","next","next","next_back","next_back","next_back","next_back","remove","reserve","reserve_exact","retain","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_remove","type_id","type_id","type_id","type_id","type_id","type_id","vacant_entry","with_capacity"],"q":["slab","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A draining iterator for <code>Slab</code>","A consuming iterator over the values stored in a <code>Slab</code>","An iterator over the values stored in the <code>Slab</code>","A mutable iterator over the values stored in the <code>Slab</code>","Pre-allocated storage for a uniform data type","A handle to a vacant entry in a <code>Slab</code>.","","","","","","","","","","","","","Return the number of values the slab can store without …","Clear the slab of all values.","","","","","Reduce the capacity as much as possible, changing the key …","Return <code>true</code> if a value is associated with the given key.","","Return a draining iterator that removes all elements from …","","","","","","","","","","","","","","Return a reference to the value associated with the given …","Return two mutable references to the values associated …","Return two mutable references to the values associated …","Return a mutable reference to the value associated with …","Return a reference to the value associated with the given …","Return a mutable reference to the value associated with …","","","Insert a value in the slab, returning key assigned to the …","Insert a value in the entry, returning a mutable reference …","","","","","","","","","","","","Return <code>true</code> if there are no values stored in the slab.","Return an iterator over the slab.","Return an iterator that allows modifying each value.","Return the key associated with this entry.","Get the key for an element in the slab.","","","","","Return the number of stored values.","Construct a new, empty <code>Slab</code>.","","","","","","","","","Remove and return the value associated with the given key.","Reserve capacity for at least <code>additional</code> more values to be …","Reserve the minimum capacity required to store exactly …","Retain only the elements specified by the predicate.","Shrink the capacity of the slab as much as possible …","","","","","","","","","","","","","","","","","","","Tries to remove the value associated with the given key, …","","","","","","","Return a handle to a vacant entry allowing for further …","Construct a new, empty <code>Slab</code> with the specified capacity."],"i":[0,0,0,0,0,0,1,2,3,4,5,6,1,2,3,4,5,6,5,5,2,5,2,5,5,5,5,5,1,2,3,4,5,6,1,2,3,4,5,6,5,5,5,5,5,5,5,5,5,5,6,1,2,3,4,5,6,1,2,3,4,5,5,5,5,6,5,1,2,3,4,5,5,1,2,3,4,1,2,3,4,5,5,5,5,5,1,2,3,4,2,5,1,2,3,4,5,6,1,2,3,4,5,6,5,1,2,3,4,5,6,5,5],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["slab",3]],[[]],[[]],[[]],[[["usize",15]],["bool",15]],[[]],[[],["drain",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["slab",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["option",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["vacantentry",3]],[[["usize",15]],["slab",3]]],"p":[[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[3,"Slab"],[3,"VacantEntry"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":[13,8,13,4,3,3,16,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":["smallvec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smallvec::CollectionAllocErr"],"d":["The allocator return an error","Types that can be used as the backing store for a SmallVec","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","","","","","","","","","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","","","","","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","","","","Convert a SmallVec to a Vec, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[1,0,1,0,0,0,2,0,0,3,3,3,3,4,3,3,3,4,5,3,3,4,1,5,3,3,4,1,3,3,3,4,3,3,4,3,3,3,3,3,3,3,3,5,3,4,3,3,3,5,3,4,1,1,5,3,3,3,3,3,4,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,3,4,1,3,3,5,3,4,3,3,5,3,3,5,4,5,4,3,3,3,3,3,3,3,3,3,3,3,2,5,4,0,3,3,3,4,6,1,3,5,3,4,1,3,5,3,4,1,3,3,5,3,4,1,3,7],"f":[null,null,null,null,null,null,null,null,null,[[["smallvec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["smallvec",3]],[[],["intoiter",3]],[[]],[[]],[[]],[[["smallvec",3]],["ordering",4]],[[]],[[]],[[]],[[],["smallvec",3]],[[]],[[]],[[],["drain",3]],[[]],[[]],[[]],[[["smallvec",3]],["bool",15]],[[["intoiterator",8]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["smallvec",3]],[[["vec",3]],["smallvec",3]],[[],["smallvec",3]],[[]],[[]],[[["layouterr",6]]],[[]],[[],["smallvec",3]],[[["usize",15]],["smallvec",3]],[[["usize",15],["maybeuninit",19]],["smallvec",3]],[[["usize",15]]],[[["intoiterator",8]],["smallvec",3]],[[["usize",15]],["smallvec",3]],[[]],[[["vec",3]],["smallvec",3]],[[["usize",15]]],[[]],[[]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15],["intoiterator",8]]],[[]],[[]],[[]],[[]],[[],["box",3]],[[],["result",4]],[[]],[[]],[[]],[[],["vec",3]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["smallvec",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["smallvec",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["option",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["fnmut",8]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[]],null,[[],["bool",15]],[[["usize",15]]],[[]],[[]],[[],["smallvec",3]],[[],["string",3]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],[["result",4,["collectionallocerr"]],["collectionallocerr",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],[["result",4,["collectionallocerr"]],["collectionallocerr",4]]],[[["usize",15]],[["result",4,["collectionallocerr"]],["collectionallocerr",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]]],null],"p":[[4,"CollectionAllocErr"],[8,"Array"],[3,"SmallVec"],[3,"IntoIter"],[3,"Drain"],[8,"ToSmallVec"],[13,"AllocErr"]]},\
"syn":{"doc":"github crates-io docs-rs","tn":["Abi","Add","AddEq","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssignOp","Async","AttrStyle","Attribute","AttributeArgs","Await","BareFn","BareFnArg","BinOp","Binary","Binding","Binding","BitAnd","BitAndEq","BitOr","BitOrEq","BitXor","BitXorEq","Block","Block","Bool","BoundLifetimes","Box","Box","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Crate","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivEq","Enum","Enum","Eq","Eq","Error","Expr","Expr","ExprArray","ExprAssign","ExprAssignOp","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBox","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprType","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericMethodArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemMacro","ImplItemMethod","ImplItemType","ImplTrait","Index","Index","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMacro2","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeDef","List","Lit","Lit","Lit","Lit","LitBool","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","Local","Local","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro2","MacroDelimiter","Match","Maybe","Member","Meta","Meta","MetaList","MetaNameValue","Method","Method","MethodCall","MethodTurbofish","Mod","Mul","MulEq","Name","NameValue","Named","Named","Ne","Neg","NestedMeta","Never","None","None","Not","Or","Or","Outer","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatBox","PatIdent","PatLit","PatMacro","PatOr","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateEq","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Raw","Receiver","Receiver","Reference","Reference","Reference","Rem","RemEq","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Semi","Shl","ShlEq","Shr","ShrEq","Signature","Slice","Slice","Static","Static","Stmt","Str","StrStyle","Struct","Struct","Struct","Struct","Sub","SubEq","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemMacro","TraitItemMethod","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisCrate","VisPublic","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","box_token","box_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","constness","content","continue_token","crate_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","discriminant","display","display","display","display","display","display","display","display","display","display","dot2_token","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","else_branch","enum_token","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","hi","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","is_empty","is_ident","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","left","len","len","len","let_token","let_token","lhs_ty","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","lo","loop_token","lt_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","macro_token","make_where_clause","match_token","member","member","member","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","named","nested","new","new","new","new","new","new","new","new","new","new","new","op","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_meta","parse_mod_style","parse_named","parse_outer","parse_quote","parse_quote_spanned","parse_str","parse_unnamed","parse_with","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","position","pound_token","predicates","pub_token","pub_token","punctuated","qself","qself","qself","question_token","raw","receiver","receiver","reference","rename","rename","rest","return_token","rhs_ty","right","right","right","rules","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","visit_mut","where_clause","where_token","while_token","without_plus","without_plus","without_plus","without_plus","yield_tokenursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","empty","eof","eq","from","from","group","ident","into","into","lifetime","literal","new","new2","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_str","parse_terminated","peek","peek","peek2","peek3","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Speculative","advance_to","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","punct","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","0","0","1","Spanned","span","Abstract","Add","AddEq","And","AndAnd","AndEq","As","Async","At","Auto","Await","Bang","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Colon2","Comma","Const","Continue","Crate","Default","Div","DivEq","Do","Dollar","Dot","Dot2","Dot3","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Mod","Move","MulEq","Mut","Ne","Or","OrEq","OrOr","Override","Paren","Pound","Priv","Pub","Question","RArrow","Ref","Rem","RemEq","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Star","Static","Struct","Sub","SubEq","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","VisitMut","visit_abi_mut","visit_abi_mut","visit_abi_mut","visit_angle_bracketed_generic_arguments_mut","visit_angle_bracketed_generic_arguments_mut","visit_angle_bracketed_generic_arguments_mut","visit_arm_mut","visit_arm_mut","visit_arm_mut","visit_attr_style_mut","visit_attr_style_mut","visit_attr_style_mut","visit_attribute_mut","visit_attribute_mut","visit_attribute_mut","visit_bare_fn_arg_mut","visit_bare_fn_arg_mut","visit_bare_fn_arg_mut","visit_bin_op_mut","visit_bin_op_mut","visit_bin_op_mut","visit_binding_mut","visit_binding_mut","visit_binding_mut","visit_block_mut","visit_block_mut","visit_block_mut","visit_bound_lifetimes_mut","visit_bound_lifetimes_mut","visit_bound_lifetimes_mut","visit_const_param_mut","visit_const_param_mut","visit_const_param_mut","visit_constraint_mut","visit_constraint_mut","visit_constraint_mut","visit_data_enum_mut","visit_data_enum_mut","visit_data_enum_mut","visit_data_mut","visit_data_mut","visit_data_mut","visit_data_struct_mut","visit_data_struct_mut","visit_data_struct_mut","visit_data_union_mut","visit_data_union_mut","visit_data_union_mut","visit_derive_input_mut","visit_derive_input_mut","visit_derive_input_mut","visit_expr_array_mut","visit_expr_array_mut","visit_expr_array_mut","visit_expr_assign_mut","visit_expr_assign_mut","visit_expr_assign_mut","visit_expr_assign_op_mut","visit_expr_assign_op_mut","visit_expr_assign_op_mut","visit_expr_async_mut","visit_expr_async_mut","visit_expr_async_mut","visit_expr_await_mut","visit_expr_await_mut","visit_expr_await_mut","visit_expr_binary_mut","visit_expr_binary_mut","visit_expr_binary_mut","visit_expr_block_mut","visit_expr_block_mut","visit_expr_block_mut","visit_expr_box_mut","visit_expr_box_mut","visit_expr_box_mut","visit_expr_break_mut","visit_expr_break_mut","visit_expr_break_mut","visit_expr_call_mut","visit_expr_call_mut","visit_expr_call_mut","visit_expr_cast_mut","visit_expr_cast_mut","visit_expr_cast_mut","visit_expr_closure_mut","visit_expr_closure_mut","visit_expr_closure_mut","visit_expr_continue_mut","visit_expr_continue_mut","visit_expr_continue_mut","visit_expr_field_mut","visit_expr_field_mut","visit_expr_field_mut","visit_expr_for_loop_mut","visit_expr_for_loop_mut","visit_expr_for_loop_mut","visit_expr_group_mut","visit_expr_group_mut","visit_expr_group_mut","visit_expr_if_mut","visit_expr_if_mut","visit_expr_if_mut","visit_expr_index_mut","visit_expr_index_mut","visit_expr_index_mut","visit_expr_let_mut","visit_expr_let_mut","visit_expr_let_mut","visit_expr_lit_mut","visit_expr_lit_mut","visit_expr_lit_mut","visit_expr_loop_mut","visit_expr_loop_mut","visit_expr_loop_mut","visit_expr_macro_mut","visit_expr_macro_mut","visit_expr_macro_mut","visit_expr_match_mut","visit_expr_match_mut","visit_expr_match_mut","visit_expr_method_call_mut","visit_expr_method_call_mut","visit_expr_method_call_mut","visit_expr_mut","visit_expr_mut","visit_expr_mut","visit_expr_paren_mut","visit_expr_paren_mut","visit_expr_paren_mut","visit_expr_path_mut","visit_expr_path_mut","visit_expr_path_mut","visit_expr_range_mut","visit_expr_range_mut","visit_expr_range_mut","visit_expr_reference_mut","visit_expr_reference_mut","visit_expr_reference_mut","visit_expr_repeat_mut","visit_expr_repeat_mut","visit_expr_repeat_mut","visit_expr_return_mut","visit_expr_return_mut","visit_expr_return_mut","visit_expr_struct_mut","visit_expr_struct_mut","visit_expr_struct_mut","visit_expr_try_block_mut","visit_expr_try_block_mut","visit_expr_try_block_mut","visit_expr_try_mut","visit_expr_try_mut","visit_expr_try_mut","visit_expr_tuple_mut","visit_expr_tuple_mut","visit_expr_tuple_mut","visit_expr_type_mut","visit_expr_type_mut","visit_expr_type_mut","visit_expr_unary_mut","visit_expr_unary_mut","visit_expr_unary_mut","visit_expr_unsafe_mut","visit_expr_unsafe_mut","visit_expr_unsafe_mut","visit_expr_while_mut","visit_expr_while_mut","visit_expr_while_mut","visit_expr_yield_mut","visit_expr_yield_mut","visit_expr_yield_mut","visit_field_mut","visit_field_mut","visit_field_mut","visit_field_pat_mut","visit_field_pat_mut","visit_field_pat_mut","visit_field_value_mut","visit_field_value_mut","visit_field_value_mut","visit_fields_mut","visit_fields_mut","visit_fields_mut","visit_fields_named_mut","visit_fields_named_mut","visit_fields_named_mut","visit_fields_unnamed_mut","visit_fields_unnamed_mut","visit_fields_unnamed_mut","visit_file_mut","visit_file_mut","visit_file_mut","visit_fn_arg_mut","visit_fn_arg_mut","visit_fn_arg_mut","visit_foreign_item_fn_mut","visit_foreign_item_fn_mut","visit_foreign_item_fn_mut","visit_foreign_item_macro_mut","visit_foreign_item_macro_mut","visit_foreign_item_macro_mut","visit_foreign_item_mut","visit_foreign_item_mut","visit_foreign_item_mut","visit_foreign_item_static_mut","visit_foreign_item_static_mut","visit_foreign_item_static_mut","visit_foreign_item_type_mut","visit_foreign_item_type_mut","visit_foreign_item_type_mut","visit_generic_argument_mut","visit_generic_argument_mut","visit_generic_argument_mut","visit_generic_method_argument_mut","visit_generic_method_argument_mut","visit_generic_method_argument_mut","visit_generic_param_mut","visit_generic_param_mut","visit_generic_param_mut","visit_generics_mut","visit_generics_mut","visit_generics_mut","visit_ident_mut","visit_ident_mut","visit_ident_mut","visit_impl_item_const_mut","visit_impl_item_const_mut","visit_impl_item_const_mut","visit_impl_item_macro_mut","visit_impl_item_macro_mut","visit_impl_item_macro_mut","visit_impl_item_method_mut","visit_impl_item_method_mut","visit_impl_item_method_mut","visit_impl_item_mut","visit_impl_item_mut","visit_impl_item_mut","visit_impl_item_type_mut","visit_impl_item_type_mut","visit_impl_item_type_mut","visit_index_mut","visit_index_mut","visit_index_mut","visit_item_const_mut","visit_item_const_mut","visit_item_const_mut","visit_item_enum_mut","visit_item_enum_mut","visit_item_enum_mut","visit_item_extern_crate_mut","visit_item_extern_crate_mut","visit_item_extern_crate_mut","visit_item_fn_mut","visit_item_fn_mut","visit_item_fn_mut","visit_item_foreign_mod_mut","visit_item_foreign_mod_mut","visit_item_foreign_mod_mut","visit_item_impl_mut","visit_item_impl_mut","visit_item_impl_mut","visit_item_macro2_mut","visit_item_macro2_mut","visit_item_macro2_mut","visit_item_macro_mut","visit_item_macro_mut","visit_item_macro_mut","visit_item_mod_mut","visit_item_mod_mut","visit_item_mod_mut","visit_item_mut","visit_item_mut","visit_item_mut","visit_item_static_mut","visit_item_static_mut","visit_item_static_mut","visit_item_struct_mut","visit_item_struct_mut","visit_item_struct_mut","visit_item_trait_alias_mut","visit_item_trait_alias_mut","visit_item_trait_alias_mut","visit_item_trait_mut","visit_item_trait_mut","visit_item_trait_mut","visit_item_type_mut","visit_item_type_mut","visit_item_type_mut","visit_item_union_mut","visit_item_union_mut","visit_item_union_mut","visit_item_use_mut","visit_item_use_mut","visit_item_use_mut","visit_label_mut","visit_label_mut","visit_label_mut","visit_lifetime_def_mut","visit_lifetime_def_mut","visit_lifetime_def_mut","visit_lifetime_mut","visit_lifetime_mut","visit_lifetime_mut","visit_lit_bool_mut","visit_lit_bool_mut","visit_lit_bool_mut","visit_lit_byte_mut","visit_lit_byte_mut","visit_lit_byte_mut","visit_lit_byte_str_mut","visit_lit_byte_str_mut","visit_lit_byte_str_mut","visit_lit_char_mut","visit_lit_char_mut","visit_lit_char_mut","visit_lit_float_mut","visit_lit_float_mut","visit_lit_float_mut","visit_lit_int_mut","visit_lit_int_mut","visit_lit_int_mut","visit_lit_mut","visit_lit_mut","visit_lit_mut","visit_lit_str_mut","visit_lit_str_mut","visit_lit_str_mut","visit_local_mut","visit_local_mut","visit_local_mut","visit_macro_delimiter_mut","visit_macro_delimiter_mut","visit_macro_delimiter_mut","visit_macro_mut","visit_macro_mut","visit_macro_mut","visit_member_mut","visit_member_mut","visit_member_mut","visit_meta_list_mut","visit_meta_list_mut","visit_meta_list_mut","visit_meta_mut","visit_meta_mut","visit_meta_mut","visit_meta_name_value_mut","visit_meta_name_value_mut","visit_meta_name_value_mut","visit_method_turbofish_mut","visit_method_turbofish_mut","visit_method_turbofish_mut","visit_nested_meta_mut","visit_nested_meta_mut","visit_nested_meta_mut","visit_parenthesized_generic_arguments_mut","visit_parenthesized_generic_arguments_mut","visit_parenthesized_generic_arguments_mut","visit_pat_box_mut","visit_pat_box_mut","visit_pat_box_mut","visit_pat_ident_mut","visit_pat_ident_mut","visit_pat_ident_mut","visit_pat_lit_mut","visit_pat_lit_mut","visit_pat_lit_mut","visit_pat_macro_mut","visit_pat_macro_mut","visit_pat_macro_mut","visit_pat_mut","visit_pat_mut","visit_pat_mut","visit_pat_or_mut","visit_pat_or_mut","visit_pat_or_mut","visit_pat_path_mut","visit_pat_path_mut","visit_pat_path_mut","visit_pat_range_mut","visit_pat_range_mut","visit_pat_range_mut","visit_pat_reference_mut","visit_pat_reference_mut","visit_pat_reference_mut","visit_pat_rest_mut","visit_pat_rest_mut","visit_pat_rest_mut","visit_pat_slice_mut","visit_pat_slice_mut","visit_pat_slice_mut","visit_pat_struct_mut","visit_pat_struct_mut","visit_pat_struct_mut","visit_pat_tuple_mut","visit_pat_tuple_mut","visit_pat_tuple_mut","visit_pat_tuple_struct_mut","visit_pat_tuple_struct_mut","visit_pat_tuple_struct_mut","visit_pat_type_mut","visit_pat_type_mut","visit_pat_type_mut","visit_pat_wild_mut","visit_pat_wild_mut","visit_pat_wild_mut","visit_path_arguments_mut","visit_path_arguments_mut","visit_path_arguments_mut","visit_path_mut","visit_path_mut","visit_path_mut","visit_path_segment_mut","visit_path_segment_mut","visit_path_segment_mut","visit_predicate_eq_mut","visit_predicate_eq_mut","visit_predicate_eq_mut","visit_predicate_lifetime_mut","visit_predicate_lifetime_mut","visit_predicate_lifetime_mut","visit_predicate_type_mut","visit_predicate_type_mut","visit_predicate_type_mut","visit_qself_mut","visit_qself_mut","visit_qself_mut","visit_range_limits_mut","visit_range_limits_mut","visit_range_limits_mut","visit_receiver_mut","visit_receiver_mut","visit_receiver_mut","visit_return_type_mut","visit_return_type_mut","visit_return_type_mut","visit_signature_mut","visit_signature_mut","visit_signature_mut","visit_span_mut","visit_span_mut","visit_span_mut","visit_stmt_mut","visit_stmt_mut","visit_stmt_mut","visit_trait_bound_modifier_mut","visit_trait_bound_modifier_mut","visit_trait_bound_modifier_mut","visit_trait_bound_mut","visit_trait_bound_mut","visit_trait_bound_mut","visit_trait_item_const_mut","visit_trait_item_const_mut","visit_trait_item_const_mut","visit_trait_item_macro_mut","visit_trait_item_macro_mut","visit_trait_item_macro_mut","visit_trait_item_method_mut","visit_trait_item_method_mut","visit_trait_item_method_mut","visit_trait_item_mut","visit_trait_item_mut","visit_trait_item_mut","visit_trait_item_type_mut","visit_trait_item_type_mut","visit_trait_item_type_mut","visit_type_array_mut","visit_type_array_mut","visit_type_array_mut","visit_type_bare_fn_mut","visit_type_bare_fn_mut","visit_type_bare_fn_mut","visit_type_group_mut","visit_type_group_mut","visit_type_group_mut","visit_type_impl_trait_mut","visit_type_impl_trait_mut","visit_type_impl_trait_mut","visit_type_infer_mut","visit_type_infer_mut","visit_type_infer_mut","visit_type_macro_mut","visit_type_macro_mut","visit_type_macro_mut","visit_type_mut","visit_type_mut","visit_type_mut","visit_type_never_mut","visit_type_never_mut","visit_type_never_mut","visit_type_param_bound_mut","visit_type_param_bound_mut","visit_type_param_bound_mut","visit_type_param_mut","visit_type_param_mut","visit_type_param_mut","visit_type_paren_mut","visit_type_paren_mut","visit_type_paren_mut","visit_type_path_mut","visit_type_path_mut","visit_type_path_mut","visit_type_ptr_mut","visit_type_ptr_mut","visit_type_ptr_mut","visit_type_reference_mut","visit_type_reference_mut","visit_type_reference_mut","visit_type_slice_mut","visit_type_slice_mut","visit_type_slice_mut","visit_type_trait_object_mut","visit_type_trait_object_mut","visit_type_trait_object_mut","visit_type_tuple_mut","visit_type_tuple_mut","visit_type_tuple_mut","visit_un_op_mut","visit_un_op_mut","visit_un_op_mut","visit_use_glob_mut","visit_use_glob_mut","visit_use_glob_mut","visit_use_group_mut","visit_use_group_mut","visit_use_group_mut","visit_use_name_mut","visit_use_name_mut","visit_use_name_mut","visit_use_path_mut","visit_use_path_mut","visit_use_path_mut","visit_use_rename_mut","visit_use_rename_mut","visit_use_rename_mut","visit_use_tree_mut","visit_use_tree_mut","visit_use_tree_mut","visit_variadic_mut","visit_variadic_mut","visit_variadic_mut","visit_variant_mut","visit_variant_mut","visit_variant_mut","visit_vis_crate_mut","visit_vis_crate_mut","visit_vis_crate_mut","visit_vis_public_mut","visit_vis_public_mut","visit_vis_public_mut","visit_vis_restricted_mut","visit_vis_restricted_mut","visit_vis_restricted_mut","visit_visibility_mut","visit_visibility_mut","visit_visibility_mut","visit_where_clause_mut","visit_where_clause_mut","visit_where_clause_mut","visit_where_predicate_mut","visit_where_predicate_mut","visit_where_predicate_mut"],"q":["synsyn::AttrStyle","syn::BinOp","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Data","","","syn::Expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Fields","","syn::FnArg","","syn::ForeignItem","","","","","syn::GenericArgument","","","","","syn::GenericMethodArgument","","syn::GenericParam","","","syn::ImplItem","","","","","syn::Item","","","","","","","","","","","","","","","","","syn::Lit","","","","","","","","syn::MacroDelimiter","","","syn::Member","","syn::Meta","","","syn::NestedMeta","","syn::Pat","","","","","","","","","","","","","","","","syn::PathArguments","","syn::RangeLimits","","syn::ReturnType","","syn::Stmt","","","","","syn::StrStyle","syn::TraitBoundModifier","syn::TraitItem","","","","","syn::Type","","","","","","","","","","","","","","","syn::TypeParamBound","","syn::UnOp","","","syn::UseTree","","","","","syn::Visibility","","","syn::WherePredicate","","","syn::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::ext","","","","syn::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse::discouraged","","syn::punctuated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::punctuated::Pair","","","syn::spanned","","syn::tokensyn::visit_mutd":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","One arm of a <code>match</code> expression: <code>0...10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute like <code>#[repr(transparent)]</code>.","Conventional argument type associated with an invocation …","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A binding (equality constraint) on an associated type: …","A binding (equality constraint) on an associated type: the …","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","A box expression: <code>box f</code>.","A box pattern: <code>box v</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","A crate-level visibility: <code>crate</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An enum input to a <code>proc_macro_derive</code> macro.","An equality predicate in a <code>where</code> clause (unsupported).","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","Expr without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A blocked scope: <code>{ ... }</code>.","A box expression: <code>box f</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A type ascription expression: <code>foo: f64</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: …","A foreign function in an <code>extern</code> block.","An argument in a function signature: the <code>n: usize</code> in …","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","An individual generic argument to a method, like <code>T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","A word of Rust code, which may be a keyword or legal …","A pattern that binds a new variable: …","An <code>if</code> expression with an optional <code>else</code> block: …","An impl block providing trait or associated items: …","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","A macro invocation within an impl block.","A method within an impl block.","An associated type within an impl block.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or …","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A 2.0-style declarative macro introduced by the <code>macro</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A type alias: …","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","A Rust literal, like the <code>&quot;new_name&quot;</code> in …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> …","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in the type position.","A macro in pattern position.","A 2.0-style declarative macro introduced by the <code>macro</code> …","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A trait method within the definition of a trait.","A method within an impl block.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","The <code>::&lt;&gt;</code> explicit type parameters passed to a method call: …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","Element of a compile-time attribute list.","The never type: <code>!</code>.","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A pattern in a local binding, function signature, match …","A box pattern: <code>box v</code>.","A pattern that binds a new variable: …","A literal pattern: <code>0</code>.","A macro in pattern position.","A pattern that matches any one of a set of cases.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A range pattern: <code>1..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A path pattern like <code>Color::Red</code>, optionally qualified with a","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","An equality predicate in a <code>where</code> clause (unsupported).","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","A raw string like <code>r##&quot;data&quot;##</code>.","The <code>self</code> argument of an associated method, whether taken …","The <code>self</code> argument of an associated method, whether taken …","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A reference pattern: <code>&amp;mut var</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: …","An array literal constructed from one repeated element: …","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","Expression with trailing semicolon.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: …","A dynamically sized slice type: <code>[T]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A statement, usually ending in a semicolon.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct input to a <code>proc_macro_derive</code> macro.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","A macro invocation within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A type ascription expression: <code>foo: f64</code>.","A type argument.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type alias: …","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A particular type is returned.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","An untagged union input to a <code>proc_macro_derive</code> macro.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: …","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by …","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in type position not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","A crate-level visibility: <code>crate</code>.","A public visibility level: <code>pub</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","Attributes tagged on the variant.","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the whole struct or enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to …","","","","","","","","Parse a set of square brackets and expose their content to …","","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","","","","","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","Data within the struct or enum.","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of the field.","","","","","Extension traits to provide parsing methods on foreign …","","","","Content stored in the variantenerics required to complete the definition.","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","Name of the struct or enum.","","","","","","","","","","","","","","","","<code>(A, B)</codeeturns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","","","","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeDef&gt; over the lifetime …","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeDef&gt; over the …","","","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","Name or index of the field.","","","","","","","","","","","","","","","","","","","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","","","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","Parse the arguments to the attribute using the given …","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parses the content of the attribute, consisting of the …","Parse a <code>Path</code> containing no path arguments on any of its …","Parses a named (braced struct) field.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a string of Rust code into the chosen syntax tree …","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","Parse the body of a block as zero or more statements, …","An alternative to the primary <code>Expr::parse</code> parser (from the …","","","","","","","","","","","","Returns the identifier that begins this structured meta …","","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","","","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","A method’s <code>self</code> receiver, such as <code>&amp;self</code> or …","","","","","","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …eturns the span of this <code>Ident</code>.","","","","A trait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…","","","","","Statements in a blockokens representing Rust punctuation, keywords, and …","","","","","","","","","","Trait this impl implements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of the fieldeturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","","","","","","","","Visibility of the field.","","","","","","","","","","","","","","","","","","","","Visibility of the struct or enum.","Syntax tree traversal to mutate an exclusive borrow of a …","","","","In some positions, types may not contain the <code>+</code> character, …cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","","","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","","","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","Forks a parse stream so that parsing tokens out of either …","","","","","","","","","","","","Render the error as an invocation of <code>compile_error!</code>.","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","Returns the <code>Span</code> of the next token in the parse stream, or …","The source location of the error.","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","A punctuated sequence of syntax tree nodes of type <code>T</code> …","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","","","","","","","","","","","","","Inserts an element at position <code>index</code>.","","","","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Borrows the punctuation from this punctuated pair, unless …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","","","","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>+</code>","<code>+=</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>!</code>","<code>become</code>","<code>box</code>","<code>{...}</code>","<code>[...]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>::</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>/</code>","<code>/=</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>mod</code>","<code>move</code>","<code>*=</code>","<code>mut</code>","<code>!=</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(...)</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>%</code>","<code>%=</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>*</code>","<code>static</code>","<code>struct</code>","<code>-</code>","<code>-=</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeyntax tree traversal to mutate an exclusive borrow of a …i":[0,1,1,1,2,0,0,3,4,3,3,3,0,0,0,3,4,0,0,3,0,5,1,1,1,1,1,1,0,3,6,0,3,7,8,8,3,6,6,3,3,6,9,3,10,11,12,13,14,5,0,0,5,3,15,16,0,0,0,0,17,18,0,1,1,12,19,20,1,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,3,0,0,0,0,0,0,6,12,22,0,3,0,0,0,0,0,12,1,0,0,0,0,23,3,23,4,1,9,0,7,3,12,0,0,0,0,0,0,4,0,3,4,16,24,6,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,11,25,20,5,0,26,0,27,3,7,0,0,0,0,0,0,0,0,21,3,1,0,3,12,22,13,14,4,7,12,0,3,28,0,0,27,0,0,13,14,3,0,12,1,1,23,26,29,30,1,18,0,4,28,2,18,1,7,24,3,8,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,3,23,4,7,0,0,0,0,0,4,16,0,3,7,0,15,0,31,3,4,7,1,1,23,3,7,16,0,3,0,21,1,1,1,1,0,4,7,12,22,0,6,0,3,12,19,7,1,1,0,25,12,12,0,0,0,0,0,0,0,4,3,3,3,4,7,7,0,0,3,10,11,20,12,22,13,14,17,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,3,12,19,29,29,30,3,12,0,0,0,0,0,0,0,0,3,12,22,13,14,6,4,7,0,0,0,0,0,0,3,7,3,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,33,51,52,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,100,56,138,139,56,62,140,141,140,141,49,58,78,82,93,114,50,63,69,83,86,142,48,143,38,144,24,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,15,138,8,119,19,170,171,172,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,47,190,142,48,143,38,144,24,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,15,138,8,119,19,170,171,172,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,47,190,158,87,88,158,159,101,111,176,183,188,59,123,147,44,76,91,32,94,100,164,171,173,132,0,144,53,66,74,174,182,131,0,60,0,124,49,50,127,142,48,143,38,144,24,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,138,8,119,19,170,171,172,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,47,190,142,48,143,38,144,24,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,138,8,119,19,170,171,172,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,47,190,38,190,41,161,42,52,80,85,153,87,88,89,158,159,90,98,100,106,109,111,113,135,137,188,86,65,83,154,154,89,90,109,113,181,33,97,61,150,92,0,0,119,154,155,2,87,89,109,110,111,94,113,114,115,138,51,38,6,165,166,167,168,140,141,169,190,76,130,132,56,62,40,122,183,174,175,179,181,36,182,53,79,184,131,133,65,91,171,38,30,152,190,190,146,54,67,87,89,160,90,98,101,102,113,115,187,59,60,45,63,64,66,67,44,71,35,74,75,77,80,81,84,85,90,98,113,125,0,92,185,86,51,76,99,103,170,172,132,38,30,152,140,141,190,190,190,33,34,63,155,142,48,143,38,144,24,26,26,26,26,145,146,27,27,27,51,29,29,29,147,148,52,16,16,16,16,149,150,151,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,30,30,30,152,152,41,10,85,153,86,9,154,11,11,11,11,87,87,88,89,155,25,25,25,156,28,157,20,20,20,20,158,159,160,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,23,23,23,23,23,161,162,46,163,164,22,22,22,22,22,105,106,107,108,13,13,13,13,13,109,110,111,112,14,14,14,14,14,113,114,115,116,33,31,31,31,117,118,6,6,6,6,6,6,6,6,165,166,167,168,140,140,141,141,169,15,138,8,119,119,119,119,19,19,19,19,170,171,172,1,18,173,21,120,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,186,43,43,2,5,42,187,188,189,47,190,190,190,190,190,190,190,73,39,91,94,99,100,101,102,103,111,115,33,119,186,64,175,41,154,155,42,47,86,38,30,152,190,129,38,51,52,87,89,90,91,92,95,96,97,98,99,100,101,102,103,161,162,46,106,107,109,111,113,115,33,119,124,43,187,188,65,94,176,151,63,66,152,120,50,33,34,189,142,48,143,38,144,24,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,15,138,8,119,19,170,171,172,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,47,190,29,29,2,186,32,94,100,164,118,29,29,58,60,61,63,69,83,104,186,127,54,55,57,29,74,174,67,120,160,117,88,159,36,154,155,156,158,34,154,73,129,146,68,129,69,41,154,155,42,47,70,95,108,112,116,178,126,96,154,44,62,85,137,40,97,156,50,35,98,106,117,181,36,124,37,153,185,121,147,145,38,88,6,165,166,167,168,140,141,169,190,55,57,81,50,50,50,33,34,189,154,145,148,151,39,40,71,79,156,33,34,179,184,133,189,0,0,0,38,26,145,146,27,51,147,148,16,3,53,54,55,49,57,58,59,60,39,45,50,61,62,63,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,165,166,167,168,140,141,169,138,119,1,18,173,21,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,17,7,186,43,5,42,187,188,189,190,0,190,144,144,138,138,0,144,0,144,186,52,144,0,0,0,52,165,173,3,38,190,63,67,86,120,123,37,134,135,137,26,144,145,146,151,72,76,156,138,180,128,132,134,38,6,165,166,167,168,140,141,169,190,47,144,157,149,151,0,72,180,128,77,35,33,40,117,92,46,76,75,160,54,55,57,96,186,117,94,97,74,90,92,95,98,99,101,102,104,105,106,107,108,109,110,111,112,113,115,116,170,120,174,38,6,165,166,167,168,140,141,169,190,118,93,105,110,114,142,48,143,38,38,144,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,30,152,152,41,10,85,153,86,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,6,165,165,166,166,167,167,168,168,140,140,141,141,169,169,138,119,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,190,190,190,152,169,0,154,163,181,98,106,173,99,170,144,124,6,165,166,167,168,140,141,100,65,73,142,48,143,38,144,24,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,138,8,119,19,170,171,172,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,47,190,38,140,141,190,142,48,143,38,144,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,138,119,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,190,0,165,166,167,168,140,141,169,144,138,94,100,101,104,161,142,48,143,38,144,24,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,15,138,8,119,19,170,171,172,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,47,190,142,48,143,38,144,24,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,15,138,8,119,19,170,171,172,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,47,190,78,40,52,45,80,89,90,98,102,106,109,113,115,121,135,187,47,142,48,143,38,144,24,26,145,146,27,51,29,147,148,52,16,149,150,151,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,152,41,10,85,153,86,9,154,11,87,88,89,155,25,156,28,157,20,158,159,160,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,161,162,46,163,164,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,165,166,167,168,140,141,169,15,138,8,119,19,170,171,172,1,18,173,21,120,4,174,34,175,176,177,178,139,179,180,181,36,182,183,184,185,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,186,43,2,5,42,187,188,189,47,190,154,154,102,107,111,115,177,136,103,172,148,190,82,94,100,33,34,104,165,166,167,168,169,169,33,34,91,171,52,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,119,0,154,157,83,4,176,183,17,84,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,342,343,344,345,346,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,0,0,385,385,386,385,386,386,386,385,386,386,386,385,386,386,386,385,386,386,386,385,385,386,386,386,386,386,385,386,385,386,385,386,0,387,387,387,0,0,0,388,0,0,0,0,0,0,0,389,390,389,391,392,393,390,389,391,392,393,389,391,393,391,393,393,389,391,0,389,390,389,391,393,389,389,393,393,389,390,389,391,392,393,393,390,389,391,392,393,393,393,389,389,393,393,394,389,388,392,388,388,389,390,389,389,389,389,393,389,393,391,393,389,393,390,389,391,392,393,390,389,391,392,393,390,389,391,392,393,0,395,396,0,0,0,0,0,0,0,0,396,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,397,397,398,400,401,402,396,397,398,400,401,402,396,397,397,397,397,397,397,397,398,399,400,401,402,403,396,397,397,397,397,397,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,397,396,396,397,397,397,397,397,397,398,399,400,401,402,403,397,396,398,399,400,401,402,403,398,399,400,401,402,403,397,397,397,397,397,397,397,396,397,397,397,398,399,400,401,402,403,397,396,397,398,400,401,402,396,397,396,397,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,396,396,404,405,404,0,406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,460,462,465,466,467,469,471,472,474,475,479,482,484,487,490,491,494,497,502,503,505,407,460,462,465,466,467,469,471,472,474,475,479,482,484,487,490,491,494,497,502,503,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,506,507,508,509,407,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,0,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["turbofish",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["result",6]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullident",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lifetime",3]],["ordering",4]],[[["ident",3]],["ordering",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["constparams",3]],[[],["constparamsmut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["lifetime",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["ident",3]],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["metalist",3]],["meta",4]],[[["path",3]],["meta",4]],[[]],[[["metanamevalue",3]],["meta",4]],[[]],[[]],[[]],[[["meta",4]],["nestedmeta",4]],[[["lit",4]],["nestedmeta",4]],[[]],[[["fieldsunnamed",3]],["fields",4]],[[]],[[["fieldsnamed",3]],["fields",4]],[[]],[[]],[[]],[[["vispublic",3]],["visibility",4]],[[]],[[["viscrate",3]],["visibility",4]],[[["visrestricted",3]],["visibility",4]],[[]],[[]],[[]],[[["exprreturn",3]],["expr",4]],[[["exprif",3]],["expr",4]],[[["exprcast",3]],["expr",4]],[[["exprloop",3]],["expr",4]],[[["exprclosure",3]],["expr",4]],[[["exprmacro",3]],["expr",4]],[[["exprmatch",3]],["expr",4]],[[["exprcontinue",3]],["expr",4]],[[["exprmethodcall",3]],["expr",4]],[[["exprassign",3]],["expr",4]],[[["exprasync",3]],["expr",4]],[[["exprfield",3]],["expr",4]],[[["exprforloop",3]],["expr",4]],[[["exprtuple",3]],["expr",4]],[[["exprbinary",3]],["expr",4]],[[["exprblock",3]],["expr",4]],[[["exprgroup",3]],["expr",4]],[[["exprparen",3]],["expr",4]],[[["exprpath",3]],["expr",4]],[[["exprrange",3]],["expr",4]],[[["exprbox",3]],["expr",4]],[[["exprunary",3]],["expr",4]],[[["exprarray",3]],["expr",4]],[[["exprreference",3]],["expr",4]],[[["exprcall",3]],["expr",4]],[[["exprawait",3]],["expr",4]],[[["exprrepeat",3]],["expr",4]],[[["exprstruct",3]],["expr",4]],[[["exprindex",3]],["expr",4]],[[["exprtry",3]],["expr",4]],[[["exprbreak",3]],["expr",4]],[[]],[[["exprtype",3]],["expr",4]],[[["expryield",3]],["expr",4]],[[["exprlit",3]],["expr",4]],[[["exprtryblock",3]],["expr",4]],[[["exprlet",3]],["expr",4]],[[["exprwhile",3]],["expr",4]],[[["exprunsafe",3]],["expr",4]],[[["exprassignop",3]],["expr",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["member",4]],[[]],[[["ident",3]],["member",4]],[[["index",3]],["member",4]],[[]],[[["usize",15]],["index",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typeparam",3]],["genericparam",4]],[[["lifetimedef",3]],["genericparam",4]],[[["constparam",3]],["genericparam",4]],[[]],[[["ident",3]]],[[]],[[]],[[]],[[]],[[["traitbound",3]],["typeparambound",4]],[[["lifetime",3]],["typeparambound",4]],[[]],[[]],[[]],[[["predicateeq",3]],["wherepredicate",4]],[[["predicatetype",3]],["wherepredicate",4]],[[["predicatelifetime",3]],["wherepredicate",4]],[[]],[[]],[[]],[[]],[[["itemunion",3]],["item",4]],[[["itemforeignmod",3]],["item",4]],[[["itemimpl",3]],["item",4]],[[["itemmacro",3]],["item",4]],[[["deriveinput",3]],["item",4]],[[["itemuse",3]],["item",4]],[[]],[[["itemmacro2",3]],["item",4]],[[["itemtype",3]],["item",4]],[[["itemconst",3]],["item",4]],[[["itemtraitalias",3]],["item",4]],[[["itemfn",3]],["item",4]],[[["itemtrait",3]],["item",4]],[[["itemexterncrate",3]],["item",4]],[[["itemstruct",3]],["item",4]],[[["itemstatic",3]],["item",4]],[[["itemmod",3]],["item",4]],[[["itemenum",3]],["item",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usegroup",3]],["usetree",4]],[[["usepath",3]],["usetree",4]],[[["usename",3]],["usetree",4]],[[["userename",3]],["usetree",4]],[[["useglob",3]],["usetree",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["foreignitemfn",3]],["foreignitem",4]],[[["foreignitemstatic",3]],["foreignitem",4]],[[["foreignitemtype",3]],["foreignitem",4]],[[["foreignitemmacro",3]],["foreignitem",4]],[[]],[[]],[[]],[[]],[[]],[[["traititemconst",3]],["traititem",4]],[[["traititemtype",3]],["traititem",4]],[[["traititemmacro",3]],["traititem",4]],[[["traititemmethod",3]],["traititem",4]],[[]],[[]],[[]],[[]],[[]],[[["implitemconst",3]],["implitem",4]],[[["implitemmacro",3]],["implitem",4]],[[["implitemtype",3]],["implitem",4]],[[]],[[["implitemmethod",3]],["implitem",4]],[[]],[[]],[[]],[[]],[[]],[[["pattype",3]],["fnarg",4]],[[]],[[["receiver",3]],["fnarg",4]],[[]],[[]],[[["litbyte",3]],["lit",4]],[[["litchar",3]],["lit",4]],[[["litint",3]],["lit",4]],[[["litfloat",3]],["lit",4]],[[["litbool",3]],["lit",4]],[[["litbytestr",3]],["lit",4]],[[["litstr",3]],["lit",4]],[[]],[[]],[[]],[[]],[[]],[[["literal",3]]],[[]],[[["literal",3]]],[[]],[[]],[[]],[[]],[[]],[[["itemenum",3]],["deriveinput",3]],[[["itemstruct",3]],["deriveinput",3]],[[["itemunion",3]],["deriveinput",3]],[[]],[[["dataunion",3]],["data",4]],[[["datastruct",3]],["data",4]],[[["dataenum",3]],["data",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typegroup",3]],["type",4]],[[["typepath",3]],["type",4]],[[["typearray",3]],["type",4]],[[["typetuple",3]],["type",4]],[[["typenever",3]],["type",4]],[[["typemacro",3]],["type",4]],[[["typebarefn",3]],["type",4]],[[["typeslice",3]],["type",4]],[[]],[[["typeptr",3]],["type",4]],[[["typereference",3]],["type",4]],[[["typeinfer",3]],["type",4]],[[["typetraitobject",3]],["type",4]],[[["typeparen",3]],["type",4]],[[["typeimpltrait",3]],["type",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pattuple",3]],["pat",4]],[[["pator",3]],["pat",4]],[[["patslice",3]],["pat",4]],[[["patwild",3]],["pat",4]],[[["patstruct",3]],["pat",4]],[[["patrest",3]],["pat",4]],[[["pattype",3]],["pat",4]],[[["patreference",3]],["pat",4]],[[["patbox",3]],["pat",4]],[[["patident",3]],["pat",4]],[[["pattuplestruct",3]],["pat",4]],[[]],[[["patrange",3]],["pat",4]],[[["patpath",3]],["pat",4]],[[["patlit",3]],["pat",4]],[[["patmacro",3]],["pat",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["underscore",3]],["ident",3]],[[["extern",3]],["ident",3]],[[["selfvalue",3]],["ident",3]],[[]],[[["selftype",3]],["ident",3]],[[["super",3]],["ident",3]],[[["crate",3]],["ident",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["ident"]],["ident",3]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullbool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,[[],[["field",3],["iter",3,["field"]]]],[[],[["field",3],["itermut",3,["field"]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],null,null,null,null,null,[[],[["option",4,["lifetime"]],["lifetime",3]]],null,null,null,[[],["lifetimes",3]],null,null,null,null,[[],["lifetimesmut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["whereclause",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15],["span",3]]],[[["lifetime",3]]],[[["literal",3]]],[[["str",15],["span",3]]],[[["span",3]]],[[["u8",15],["span",3]]],[[["char",15],["span",3]]],[[["str",15],["span",3]]],[[["str",15],["span",3]]],[[["span",3],["bool",15]]],[[["span",3],["str",15]],["ident",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenstream",3]],[["result",6],["parse",8]]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],[["result",6,["arm"]],["arm",3]]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],[["result",6,["usetree"]],["usetree",4]]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[],[["result",6],["parse",8]]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["tokenstream",3]],[["result",6],["parse",8]]],[[["parsestream",6]],["result",6]],[[],[["result",6],["parse",8]]],[[["parser",8]],["result",6]],[[],[["result",6],["parse",8]]],[[["parser",8]],["result",6]],[[["str",15]],[["result",6,["file"]],["file",3]]],[[["parsestream",6]],[["result",6,["vec"]],["vec",3]]],null,[[],[["result",6,["meta"]],["meta",4]]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],[["result",6,["vec"]],["vec",3]]],null,null,[[["str",15]],[["result",6],["parse",8]]],[[["parsestream",6]],["result",6]],[[["parser",8]],["result",6]],[[["parsestream",6]],[["vec",3,["stmt"]],["result",6,["vec"]]]],[[["parsestream",6]],[["result",6,["expr"]],["expr",4]]],[[["lifetime",3]],[["option",4,["ordering"]],["ordering",4]]],[[["ident",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,null,null,null,null,null,null,[[],["path",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[],[["fnarg",4],["option",4,["fnarg"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],null,null,null,null,null,[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],[["option",4,["span"]],["span",3]]],[[],["span",3]],[[],[["option",4,["span"]],["span",3]]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],[["option",4,["span"]],["span",3]]],null,null,null,[[]],null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],null,null,nullstring",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],null,[[],["literal",3]],[[],["literal",3]],[[],["literal",3]],[[],["literal",3]],[[],["literal",3]],[[],["literal",3]],[[],["ident",3]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeparams",3]],[[],["typeparamsmut",3]],null,null,null,null,null,null,null,null,null,[[],["ident",3]],null,null,null,null,null,null,[[],["string",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["u8",15]],[[],["char",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cursor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["delimiter",4]],["option",4]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[],["option",4]],[[],["span",3]],[[]],[[],["tokenstream",3]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["parsestream",6]],["result",6]],null,[[],["ident",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[]],[[]],[[]],[[]],[[["error",3]]],[[],["cursor",3]],[[]],null,[[]],[[],["error",3]],[[["display",8]],["error",3]],[[["display",8]],["error",3]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lexerror",3]]],[[]],[[]],[[]],[[]],[[]],[[],["tokenstream",3]],[[]],[[],["bool",15]],[[],["lookahead1",3]],[[["span",3],["display",8]]],[[["totokens",8],["display",8]]],[[["parsestream",6]],["result",6]],[[],[["result",6],["parse",8]]],[[["tokenstream",3]],["result",6]],[[["parsestream",6]],["result",6]],[[["tokenstream",3]],["result",6]],[[["str",15]],["result",6]],[[],[["result",6,["punctuated"]],["punctuated",3]]],[[["peek",8]],["bool",15]],[[["peek",8]],["bool",15]],[[["peek",8]],["bool",15]],[[["peek",8]],["bool",15]],[[],["span",3]],[[],["span",3]],[[],["result",6]],[[],["tokenstream",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intopairs",3]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["option",4]],[[],["option",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[["option",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["pairs",3]],[[],["pairsmut",3]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[],[["option",4,["pair"]],["pair",4]]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["span",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["strparsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstreamtokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["abi",3]]],[[["abi",3]]],[[["abi",3]]],[[["anglebracketedgenericarguments",3]]],[[["anglebracketedgenericarguments",3]]],[[["anglebracketedgenericarguments",3]]],[[["arm",3]]],[[["arm",3]]],[[["arm",3]]],[[["attrstyle",4]]],[[["attrstyle",4]]],[[["attrstyle",4]]],[[["attribute",3]]],[[["attribute",3]]],[[["attribute",3]]],[[["barefnarg",3]]],[[["barefnarg",3]]],[[["barefnarg",3]]],[[["binop",4]]],[[["binop",4]]],[[["binop",4]]],[[["binding",3]]],[[["binding",3]]],[[["binding",3]]],[[["block",3]]],[[["block",3]]],[[["block",3]]],[[["boundlifetimes",3]]],[[["boundlifetimes",3]]],[[["boundlifetimes",3]]],[[["constparam",3]]],[[["constparam",3]]],[[["constparam",3]]],[[["constraint",3]]],[[["constraint",3]]],[[["constraint",3]]],[[["dataenum",3]]],[[["dataenum",3]]],[[["dataenum",3]]],[[["data",4]]],[[["data",4]]],[[["data",4]]],[[["datastruct",3]]],[[["datastruct",3]]],[[["datastruct",3]]],[[["dataunion",3]]],[[["dataunion",3]]],[[["dataunion",3]]],[[["deriveinput",3]]],[[["deriveinput",3]]],[[["deriveinput",3]]],[[["exprarray",3]]],[[["exprarray",3]]],[[["exprarray",3]]],[[["exprassign",3]]],[[["exprassign",3]]],[[["exprassign",3]]],[[["exprassignop",3]]],[[["exprassignop",3]]],[[["exprassignop",3]]],[[["exprasync",3]]],[[["exprasync",3]]],[[["exprasync",3]]],[[["exprawait",3]]],[[["exprawait",3]]],[[["exprawait",3]]],[[["exprbinary",3]]],[[["exprbinary",3]]],[[["exprbinary",3]]],[[["exprblock",3]]],[[["exprblock",3]]],[[["exprblock",3]]],[[["exprbox",3]]],[[["exprbox",3]]],[[["exprbox",3]]],[[["exprbreak",3]]],[[["exprbreak",3]]],[[["exprbreak",3]]],[[["exprcall",3]]],[[["exprcall",3]]],[[["exprcall",3]]],[[["exprcast",3]]],[[["exprcast",3]]],[[["exprcast",3]]],[[["exprclosure",3]]],[[["exprclosure",3]]],[[["exprclosure",3]]],[[["exprcontinue",3]]],[[["exprcontinue",3]]],[[["exprcontinue",3]]],[[["exprfield",3]]],[[["exprfield",3]]],[[["exprfield",3]]],[[["exprforloop",3]]],[[["exprforloop",3]]],[[["exprforloop",3]]],[[["exprgroup",3]]],[[["exprgroup",3]]],[[["exprgroup",3]]],[[["exprif",3]]],[[["exprif",3]]],[[["exprif",3]]],[[["exprindex",3]]],[[["exprindex",3]]],[[["exprindex",3]]],[[["exprlet",3]]],[[["exprlet",3]]],[[["exprlet",3]]],[[["exprlit",3]]],[[["exprlit",3]]],[[["exprlit",3]]],[[["exprloop",3]]],[[["exprloop",3]]],[[["exprloop",3]]],[[["exprmacro",3]]],[[["exprmacro",3]]],[[["exprmacro",3]]],[[["exprmatch",3]]],[[["exprmatch",3]]],[[["exprmatch",3]]],[[["exprmethodcall",3]]],[[["exprmethodcall",3]]],[[["exprmethodcall",3]]],[[["expr",4]]],[[["expr",4]]],[[["expr",4]]],[[["exprparen",3]]],[[["exprparen",3]]],[[["exprparen",3]]],[[["exprpath",3]]],[[["exprpath",3]]],[[["exprpath",3]]],[[["exprrange",3]]],[[["exprrange",3]]],[[["exprrange",3]]],[[["exprreference",3]]],[[["exprreference",3]]],[[["exprreference",3]]],[[["exprrepeat",3]]],[[["exprrepeat",3]]],[[["exprrepeat",3]]],[[["exprreturn",3]]],[[["exprreturn",3]]],[[["exprreturn",3]]],[[["exprstruct",3]]],[[["exprstruct",3]]],[[["exprstruct",3]]],[[["exprtryblock",3]]],[[["exprtryblock",3]]],[[["exprtryblock",3]]],[[["exprtry",3]]],[[["exprtry",3]]],[[["exprtry",3]]],[[["exprtuple",3]]],[[["exprtuple",3]]],[[["exprtuple",3]]],[[["exprtype",3]]],[[["exprtype",3]]],[[["exprtype",3]]],[[["exprunary",3]]],[[["exprunary",3]]],[[["exprunary",3]]],[[["exprunsafe",3]]],[[["exprunsafe",3]]],[[["exprunsafe",3]]],[[["exprwhile",3]]],[[["exprwhile",3]]],[[["exprwhile",3]]],[[["expryield",3]]],[[["expryield",3]]],[[["expryield",3]]],[[["field",3]]],[[["field",3]]],[[["field",3]]],[[["fieldpat",3]]],[[["fieldpat",3]]],[[["fieldpat",3]]],[[["fieldvalue",3]]],[[["fieldvalue",3]]],[[["fieldvalue",3]]],[[["fields",4]]],[[["fields",4]]],[[["fields",4]]],[[["fieldsnamed",3]]],[[["fieldsnamed",3]]],[[["fieldsnamed",3]]],[[["fieldsunnamed",3]]],[[["fieldsunnamed",3]]],[[["fieldsunnamed",3]]],[[["file",3]]],[[["file",3]]],[[["file",3]]],[[["fnarg",4]]],[[["fnarg",4]]],[[["fnarg",4]]],[[["foreignitemfn",3]]],[[["foreignitemfn",3]]],[[["foreignitemfn",3]]],[[["foreignitemmacro",3]]],[[["foreignitemmacro",3]]],[[["foreignitemmacro",3]]],[[["foreignitem",4]]],[[["foreignitem",4]]],[[["foreignitem",4]]],[[["foreignitemstatic",3]]],[[["foreignitemstatic",3]]],[[["foreignitemstatic",3]]],[[["foreignitemtype",3]]],[[["foreignitemtype",3]]],[[["foreignitemtype",3]]],[[["genericargument",4]]],[[["genericargument",4]]],[[["genericargument",4]]],[[["genericmethodargument",4]]],[[["genericmethodargument",4]]],[[["genericmethodargument",4]]],[[["genericparam",4]]],[[["genericparam",4]]],[[["genericparam",4]]],[[["generics",3]]],[[["generics",3]]],[[["generics",3]]],[[["ident",3]]],[[["ident",3]]],[[["ident",3]]],[[["implitemconst",3]]],[[["implitemconst",3]]],[[["implitemconst",3]]],[[["implitemmacro",3]]],[[["implitemmacro",3]]],[[["implitemmacro",3]]],[[["implitemmethod",3]]],[[["implitemmethod",3]]],[[["implitemmethod",3]]],[[["implitem",4]]],[[["implitem",4]]],[[["implitem",4]]],[[["implitemtype",3]]],[[["implitemtype",3]]],[[["implitemtype",3]]],[[["index",3]]],[[["index",3]]],[[["index",3]]],[[["itemconst",3]]],[[["itemconst",3]]],[[["itemconst",3]]],[[["itemenum",3]]],[[["itemenum",3]]],[[["itemenum",3]]],[[["itemexterncrate",3]]],[[["itemexterncrate",3]]],[[["itemexterncrate",3]]],[[["itemfn",3]]],[[["itemfn",3]]],[[["itemfn",3]]],[[["itemforeignmod",3]]],[[["itemforeignmod",3]]],[[["itemforeignmod",3]]],[[["itemimpl",3]]],[[["itemimpl",3]]],[[["itemimpl",3]]],[[["itemmacro2",3]]],[[["itemmacro2",3]]],[[["itemmacro2",3]]],[[["itemmacro",3]]],[[["itemmacro",3]]],[[["itemmacro",3]]],[[["itemmod",3]]],[[["itemmod",3]]],[[["itemmod",3]]],[[["item",4]]],[[["item",4]]],[[["item",4]]],[[["itemstatic",3]]],[[["itemstatic",3]]],[[["itemstatic",3]]],[[["itemstruct",3]]],[[["itemstruct",3]]],[[["itemstruct",3]]],[[["itemtraitalias",3]]],[[["itemtraitalias",3]]],[[["itemtraitalias",3]]],[[["itemtrait",3]]],[[["itemtrait",3]]],[[["itemtrait",3]]],[[["itemtype",3]]],[[["itemtype",3]]],[[["itemtype",3]]],[[["itemunion",3]]],[[["itemunion",3]]],[[["itemunion",3]]],[[["itemuse",3]]],[[["itemuse",3]]],[[["itemuse",3]]],[[["label",3]]],[[["label",3]]],[[["label",3]]],[[["lifetimedef",3]]],[[["lifetimedef",3]]],[[["lifetimedef",3]]],[[["lifetime",3]]],[[["lifetime",3]]],[[["lifetime",3]]],[[["litbool",3]]],[[["litbool",3]]],[[["litbool",3]]],[[["litbyte",3]]],[[["litbyte",3]]],[[["litbyte",3]]],[[["litbytestr",3]]],[[["litbytestr",3]]],[[["litbytestr",3]]],[[["litchar",3]]],[[["litchar",3]]],[[["litchar",3]]],[[["litfloat",3]]],[[["litfloat",3]]],[[["litfloat",3]]],[[["litint",3]]],[[["litint",3]]],[[["litint",3]]],[[["lit",4]]],[[["lit",4]]],[[["lit",4]]],[[["litstr",3]]],[[["litstr",3]]],[[["litstr",3]]],[[["local",3]]],[[["local",3]]],[[["local",3]]],[[["macrodelimiter",4]]],[[["macrodelimiter",4]]],[[["macrodelimiter",4]]],[[["macro",3]]],[[["macro",3]]],[[["macro",3]]],[[["member",4]]],[[["member",4]]],[[["member",4]]],[[["metalist",3]]],[[["metalist",3]]],[[["metalist",3]]],[[["meta",4]]],[[["meta",4]]],[[["meta",4]]],[[["metanamevalue",3]]],[[["metanamevalue",3]]],[[["metanamevalue",3]]],[[["methodturbofish",3]]],[[["methodturbofish",3]]],[[["methodturbofish",3]]],[[["nestedmeta",4]]],[[["nestedmeta",4]]],[[["nestedmeta",4]]],[[["parenthesizedgenericarguments",3]]],[[["parenthesizedgenericarguments",3]]],[[["parenthesizedgenericarguments",3]]],[[["patbox",3]]],[[["patbox",3]]],[[["patbox",3]]],[[["patident",3]]],[[["patident",3]]],[[["patident",3]]],[[["patlit",3]]],[[["patlit",3]]],[[["patlit",3]]],[[["patmacro",3]]],[[["patmacro",3]]],[[["patmacro",3]]],[[["pat",4]]],[[["pat",4]]],[[["pat",4]]],[[["pator",3]]],[[["pator",3]]],[[["pator",3]]],[[["patpath",3]]],[[["patpath",3]]],[[["patpath",3]]],[[["patrange",3]]],[[["patrange",3]]],[[["patrange",3]]],[[["patreference",3]]],[[["patreference",3]]],[[["patreference",3]]],[[["patrest",3]]],[[["patrest",3]]],[[["patrest",3]]],[[["patslice",3]]],[[["patslice",3]]],[[["patslice",3]]],[[["patstruct",3]]],[[["patstruct",3]]],[[["patstruct",3]]],[[["pattuple",3]]],[[["pattuple",3]]],[[["pattuple",3]]],[[["pattuplestruct",3]]],[[["pattuplestruct",3]]],[[["pattuplestruct",3]]],[[["pattype",3]]],[[["pattype",3]]],[[["pattype",3]]],[[["patwild",3]]],[[["patwild",3]]],[[["patwild",3]]],[[["patharguments",4]]],[[["patharguments",4]]],[[["patharguments",4]]],[[["path",3]]],[[["path",3]]],[[["path",3]]],[[["pathsegment",3]]],[[["pathsegment",3]]],[[["pathsegment",3]]],[[["predicateeq",3]]],[[["predicateeq",3]]],[[["predicateeq",3]]],[[["predicatelifetime",3]]],[[["predicatelifetime",3]]],[[["predicatelifetime",3]]],[[["predicatetype",3]]],[[["predicatetype",3]]],[[["predicatetype",3]]],[[["qself",3]]],[[["qself",3]]],[[["qself",3]]],[[["rangelimits",4]]],[[["rangelimits",4]]],[[["rangelimits",4]]],[[["receiver",3]]],[[["receiver",3]]],[[["receiver",3]]],[[["returntype",4]]],[[["returntype",4]]],[[["returntype",4]]],[[["signature",3]]],[[["signature",3]]],[[["signature",3]]],[[["span",3]]],[[["span",3]]],[[["span",3]]],[[["stmt",4]]],[[["stmt",4]]],[[["stmt",4]]],[[["traitboundmodifier",4]]],[[["traitboundmodifier",4]]],[[["traitboundmodifier",4]]],[[["traitbound",3]]],[[["traitbound",3]]],[[["traitbound",3]]],[[["traititemconst",3]]],[[["traititemconst",3]]],[[["traititemconst",3]]],[[["traititemmacro",3]]],[[["traititemmacro",3]]],[[["traititemmacro",3]]],[[["traititemmethod",3]]],[[["traititemmethod",3]]],[[["traititemmethod",3]]],[[["traititem",4]]],[[["traititem",4]]],[[["traititem",4]]],[[["traititemtype",3]]],[[["traititemtype",3]]],[[["traititemtype",3]]],[[["typearray",3]]],[[["typearray",3]]],[[["typearray",3]]],[[["typebarefn",3]]],[[["typebarefn",3]]],[[["typebarefn",3]]],[[["typegroup",3]]],[[["typegroup",3]]],[[["typegroup",3]]],[[["typeimpltrait",3]]],[[["typeimpltrait",3]]],[[["typeimpltrait",3]]],[[["typeinfer",3]]],[[["typeinfer",3]]],[[["typeinfer",3]]],[[["typemacro",3]]],[[["typemacro",3]]],[[["typemacro",3]]],[[["type",4]]],[[["type",4]]],[[["type",4]]],[[["typenever",3]]],[[["typenever",3]]],[[["typenever",3]]],[[["typeparambound",4]]],[[["typeparambound",4]]],[[["typeparambound",4]]],[[["typeparam",3]]],[[["typeparam",3]]],[[["typeparam",3]]],[[["typeparen",3]]],[[["typeparen",3]]],[[["typeparen",3]]],[[["typepath",3]]],[[["typepath",3]]],[[["typepath",3]]],[[["typeptr",3]]],[[["typeptr",3]]],[[["typeptr",3]]],[[["typereference",3]]],[[["typereference",3]]],[[["typereference",3]]],[[["typeslice",3]]],[[["typeslice",3]]],[[["typeslice",3]]],[[["typetraitobject",3]]],[[["typetraitobject",3]]],[[["typetraitobject",3]]],[[["typetuple",3]]],[[["typetuple",3]]],[[["typetuple",3]]],[[["unop",4]]],[[["unop",4]]],[[["unop",4]]],[[["useglob",3]]],[[["useglob",3]]],[[["useglob",3]]],[[["usegroup",3]]],[[["usegroup",3]]],[[["usegroup",3]]],[[["usename",3]]],[[["usename",3]]],[[["usename",3]]],[[["usepath",3]]],[[["usepath",3]]],[[["usepath",3]]],[[["userename",3]]],[[["userename",3]]],[[["userename",3]]],[[["usetree",4]]],[[["usetree",4]]],[[["usetree",4]]],[[["variadic",3]]],[[["variadic",3]]],[[["variadic",3]]],[[["variant",3]]],[[["variant",3]]],[[["variant",3]]],[[["viscrate",3]]],[[["viscrate",3]]],[[["viscrate",3]]],[[["vispublic",3]]],[[["vispublic",3]]],[[["vispublic",3]]],[[["visrestricted",3]]],[[["visrestricted",3]]],[[["visrestricted",3]]],[[["visibility",4]]],[[["visibility",4]]],[[["visibility",4]]],[[["whereclause",3]]],[[["whereclause",3]]],[[["whereclause",3]]],[[["wherepredicate",4]]],[[["wherepredicate",4]]],[[["wherepredicate",4]]]],"p":[[4,"BinOp"],[4,"PathArguments"],[4,"Expr"],[4,"Type"],[4,"GenericArgument"],[4,"Lit"],[4,"Pat"],[4,"MacroDelimiter"],[4,"RangeLimits"],[4,"GenericMethodArgument"],[4,"GenericParam"],[4,"Item"],[4,"TraitItem"],[4,"ImplItem"],[4,"StrStyle"],[4,"Visibility"],[4,"ReturnType"],[4,"UnOp"],[4,"Data"],[4,"WherePredicate"],[4,"Stmt"],[4,"ForeignItem"],[4,"UseTree"],[4,"AttrStyle"],[4,"TypeParamBound"],[4,"Meta"],[4,"NestedMeta"],[4,"TraitBoundModifier"],[4,"Fields"],[4,"Member"],[4,"FnArg"],[3,"ItemForeignMod"],[3,"Signature"],[3,"TypeBareFn"],[3,"ExprReference"],[3,"TypeReference"],[3,"PatReference"],[3,"Lifetime"],[3,"ExprCall"],[3,"ExprMethodCall"],[3,"MethodTurbofish"],[3,"AngleBracketedGenericArguments"],[3,"PathSegment"],[3,"ExprMatch"],[3,"ExprCast"],[3,"UseRename"],[3,"QSelf"],[3,"TypeGenerics"],[3,"ExprAsync"],[3,"ExprClosure"],[3,"Variant"],[3,"Field"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"FieldValue"],[3,"Arm"],[3,"TypeParam"],[3,"LifetimeDef"],[3,"ConstParam"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemMacro"],[3,"TraitItemConst"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemMacro"],[3,"ImplItemConst"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemMacro"],[3,"Receiver"],[3,"File"],[3,"DeriveInput"],[3,"Local"],[3,"BareFnArg"],[3,"Variadic"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Macro"],[3,"TypeNever"],[3,"LitInt"],[3,"LitFloat"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"VisPublic"],[3,"VisCrate"],[3,"VisRestricted"],[3,"Index"],[3,"Label"],[3,"Generics"],[3,"BoundLifetimes"],[3,"TraitBound"],[3,"WhereClause"],[3,"PredicateType"],[3,"PredicateLifetime"],[3,"PredicateEq"],[3,"UsePath"],[3,"UseName"],[3,"UseGlob"],[3,"UseGroup"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitBool"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[3,"Block"],[3,"TypeArray"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"Path"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Ident"],[13,"Inner"],[13,"Add"],[13,"Sub"],[13,"Mul"],[13,"Div"],[13,"Rem"],[13,"And"],[13,"Or"],[13,"BitXor"],[13,"BitAnd"],[13,"BitOr"],[13,"Shl"],[13,"Shr"],[13,"Eq"],[13,"Lt"],[13,"Le"],[13,"Ne"],[13,"Ge"],[13,"Gt"],[13,"AddEq"],[13,"SubEq"],[13,"MulEq"],[13,"DivEq"],[13,"RemEq"],[13,"BitXorEq"],[13,"BitAndEq"],[13,"BitOrEq"],[13,"ShlEq"],[13,"ShrEq"],[13,"Struct"],[13,"Enum"],[13,"Union"],[13,"Array"],[13,"Assign"],[13,"AssignOp"],[13,"Async"],[13,"Await"],[13,"Binary"],[13,"Block"],[13,"Box"],[13,"Break"],[13,"Call"],[13,"Cast"],[13,"Closure"],[13,"Continue"],[13,"Field"],[13,"ForLoop"],[13,"Group"],[13,"If"],[13,"Index"],[13,"Let"],[13,"Lit"],[13,"Loop"],[13,"Macro"],[13,"Match"],[13,"MethodCall"],[13,"Paren"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Repeat"],[13,"Return"],[13,"Struct"],[13,"Try"],[13,"TryBlock"],[13,"Tuple"],[13,"Type"],[13,"Unary"],[13,"Unsafe"],[13,"Verbatim"],[13,"While"],[13,"Yield"],[13,"Named"],[13,"Unnamed"],[13,"Receiver"],[13,"Typed"],[13,"Fn"],[13,"Static"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Lifetime"],[13,"Type"],[13,"Binding"],[13,"Constraint"],[13,"Const"],[13,"Type"],[13,"Const"],[13,"Type"],[13,"Lifetime"],[13,"Const"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Const"],[13,"Enum"],[13,"ExternCrate"],[13,"Fn"],[13,"ForeignMod"],[13,"Impl"],[13,"Macro"],[13,"Macro2"],[13,"Mod"],[13,"Static"],[13,"Struct"],[13,"Trait"],[13,"TraitAlias"],[13,"Type"],[13,"Union"],[13,"Use"],[13,"Verbatim"],[13,"Str"],[13,"ByteStr"],[13,"Byte"],[13,"Char"],[13,"Int"],[13,"Float"],[13,"Bool"],[13,"Verbatim"],[13,"Paren"],[13,"Brace"],[13,"Bracket"],[13,"Named"],[13,"Unnamed"],[13,"Path"],[13,"List"],[13,"NameValue"],[13,"Meta"],[13,"Lit"],[13,"Box"],[13,"Ident"],[13,"Lit"],[13,"Macro"],[13,"Or"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Rest"],[13,"Slice"],[13,"Struct"],[13,"Tuple"],[13,"TupleStruct"],[13,"Type"],[13,"Verbatim"],[13,"Wild"],[13,"AngleBracketed"],[13,"Parenthesized"],[13,"HalfOpen"],[13,"Closed"],[13,"Type"],[13,"Local"],[13,"Item"],[13,"Expr"],[13,"Semi"],[13,"Raw"],[13,"Maybe"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Array"],[13,"BareFn"],[13,"Group"],[13,"ImplTrait"],[13,"Infer"],[13,"Macro"],[13,"Never"],[13,"Paren"],[13,"Path"],[13,"Ptr"],[13,"Reference"],[13,"Slice"],[13,"TraitObject"],[13,"Tuple"],[13,"Verbatim"],[13,"Trait"],[13,"Lifetime"],[13,"Deref"],[13,"Not"],[13,"Neg"],[13,"Path"],[13,"Name"],[13,"Rename"],[13,"Glob"],[13,"Group"],[13,"Public"],[13,"Crate"],[13,"Restricted"],[13,"Type"],[13,"Lifetime"],[13,"Eq"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[8,"Parser"],[3,"ParseBuffer"],[3,"Lookahead1"],[3,"StepCursor"],[3,"Nothing"],[3,"Error"],[8,"Parse"],[8,"Speculative"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[13,"Punctuated"],[13,"End"],[8,"Spanned"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[8,"VisitMut"]]},\
"sync":{"doc":"Sync primitive types whose methods panic rather than …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Condvar","Mutex","WouldBlock","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","get_mut","into","into","into","into_inner","lock","new","new","notify_all","notify_one","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","wait","wait_timeout","wait_timeout_while","wait_while"],"q":["sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Condition Variable.","A mutual exclusion primitive useful for protecting shared …","The lock could not be acquired at this time because the …","","","","","","","","","","","","","","","","","","Returns a mutable reference to the underlying data.","","","","Consumes this mutex, returning the underlying data.","Acquires a mutex, blocking the current thread until it is …","Creates a new condvar that is ready to be waited on.","Creates a new mutex in an unlocked state ready for use.","Notifies all threads blocked by this condvar.","Notifies one thread blocked by this condvar.","","","","","","","","Attempts to acquire this lock.","","","","Waits on a condvar, blocking the current thread until it …","Waits on a condvar, blocking the current thread until it …","Waits on this condition variable for a notification, …","Blocks the current thread until this condition variable …"],"i":[0,0,0,1,2,3,1,2,3,1,2,1,2,3,3,1,2,2,2,3,2,1,2,3,2,2,1,2,1,1,3,1,2,3,1,2,3,2,1,2,3,1,1,1,1],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["condvar",3]],[[],["mutex",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutexguard",3]],[[],["condvar",3]],[[],["mutex",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["mutexguard","wouldblock"]],["mutexguard",3],["wouldblock",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["mutexguard",3]],["mutexguard",3]],[[["mutexguard",3],["duration",3]]],[[["mutexguard",3],["duration",3]]],[[["mutexguard",3]],["mutexguard",3]]],"p":[[3,"Condvar"],[3,"Mutex"],[3,"WouldBlock"]]},\
"sys_util":{"doc":"Small system utility modules for usage by other modules.","t":[12,12,12,12,12,13,13,13,8,8,8,3,4,4,13,13,13,13,13,13,13,13,3,3,3,3,4,4,4,3,4,13,3,4,6,3,3,4,3,4,3,4,8,6,13,8,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,6,8,3,3,3,4,6,13,3,3,3,3,13,13,13,13,13,6,3,3,3,3,3,8,24,3,8,13,6,13,13,13,13,13,13,6,6,13,17,3,8,3,8,3,3,3,4,13,13,13,13,13,13,13,13,13,8,13,3,6,3,3,13,6,13,13,6,4,3,13,13,13,8,8,13,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,5,5,11,11,11,11,11,11,5,11,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,5,14,5,5,5,0,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,5,5,5,11,11,11,5,5,5,5,5,11,0,14,14,14,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,0,14,14,14,14,14,14,5,11,11,11,11,11,11,11,11,5,5,11,14,5,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,5,11,12,5,5,10,0,11,11,11,11,0,11,11,5,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,0,11,11,10,10,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,5,11,11,11,11,5,5,11,11,11,11,11,11,5,11,0,10,11,11,11,11,10,11,14,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,14,14,0,11,11,11,11,5,11,11,14,0,0,11,11,11,11,11,11,11,10,11,11,11,11,10,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,8,8,8,8,8,8,10,10,10,10,0,10,11,11,11,11,10,10,11,11,10,11,11,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,6,11,5,5,5,5,5,5,11,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,8,10,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,12,4,3,3,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,3,3,11,11,11,11,11,11,12,11,11,12,11,12,5,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,5,11,11,11,11,13,3,4,13,13,13,6,3,13,8,13,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,3,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,5,5,13,4,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,5,11,11,11,11,11,11,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,5,11,5,10,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,4,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,13,13,13,13,13,3,8,17,4,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5],"n":["0","0","0","0","0","AddFdMappingIsUnsupported","AddFdMappingIsUnsupported","Allocate","AsIobuf","AsRawDescriptor","AsRawPid","Clock","CloneError","CloneNamespace","Continued","Count","CreateBlockSignal","CreateBlockSignal","CreateSignalFd","CreateSignalFd","CreateSigset","CreateSigset","Descriptor","EpollContext","EpollEvents","Error","Error","Error","Error","EventFd","EventReadResult","Exited","ExternalMapping","ExternalMappingError","ExternalMappingResult","FakeClock","FakeTimerFd","FallocateMode","Fd","FileFlags","FileSerdeWrapper","FlockOperation","FromRawDescriptor","Gid","Inherit","IntoRawDescriptor","InvalidAddress","InvalidAddress","InvalidArgument","InvalidArgument","InvalidOffset","InvalidOffset","InvalidRange","InvalidRange","InvalidSize","InvalidSize","IterateTasks","LayoutAllocation","LibraryError","LibraryError","LockExclusive","LockShared","Map","MappedRegion","MemfdSeals","MemoryMapping","MemoryMappingArena","MmapError","Mode","Multithreaded","NetlinkGenericRead","NetlinkGenericSocket","NetlinkMessage","NetlinkMessageIter","NewUserPid","NotPageAligned","NotPageAligned","NullAddress","NullAddress","Pid","PollContext","PollEvent","PollEventIter","PollEvents","PollEventsOwned","PollToken","PollToken","Protection","PunchHole","PunchHole","RawDescriptor","Read","ReadToMemory","ReadToMemory","ReadWrite","RemoveMappingIsUnsupported","RemoveMappingIsUnsupported","Result","Result","Running","SCM_SOCKET_MAX_FD_COUNT","SafeDescriptor","ScmSocket","ScopedEvent","SeekHole","SerializeDescriptors","SharedMemory","SignalFd","SignalFdError","SignalFdPartialRead","SignalFdPartialRead","SignalFdRead","SignalFdRead","Signaled","Stopped","Sys","SystemCallFailed","SystemCallFailed","Terminal","Timeout","TimerFd","Uid","UnlinkUnixDatagram","UnlinkUnixListener","Unlock","Unmap","Unsupported","Unsupported","UnsyncMarker","WaitStatus","WatchingEvents","Write","WriteFromMemory","WriteFromMemory","WriteZeroes","WriteZeroesAt","ZeroRange","_type","add","add","add_anon","add_anon_protection","add_event_fd","add_fd","add_fd_flags","add_fd_mapping","add_fd_mapping","add_fd_mapping","add_fd_offset","add_fd_offset_protection","add_fd_with_events","add_fd_with_events","add_many","add_many","add_ns","add_seals","anon","as_iobuf","as_iobuf_slice","as_mut","as_mut_slice","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_descriptor","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_pid","as_raw_pid","as_raw_token","as_raw_token","as_ref","as_ref","as_ref","as_ref","as_slice","bitmask","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_with","build_with","checked_sub","checked_sub","chown","clear","clear","clear_fd_flags","clone","clone","clone","clone","clone","clone","clone_descriptor","clone_fd","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_process","cmp","data","debug","default","default","default","default","delete","delete","deref","deref","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_with_descriptors","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_capabilities","duration_since","duration_since","duration_to_timespec","elapsed","elapsed","empty","enable_core_scheduling","eq","eq","eq","eq","eq","eq","eq","eq","eq","errno","errno_result","error","fallocate","fchmod","fchown","file_traits","flags","flock","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_fd_offset","from_fd_offset_protection","from_fd_offset_protection_fixed","from_fd_offset_protection_populate","from_file","from_file","from_raw_descriptor","from_raw_descriptor","from_raw_fd","from_raw_fd","from_raw_token","from_raw_token","get_cpu_affinity","get_filesystem_type","get_max_open_files","get_raw","get_seals","get_slice","getegid","geteuid","getpid","getsid","gettid","grow_seal","handle_eintr","handle_eintr","handle_eintr_errno","handle_eintr_rc","hash","hungup","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_descriptors","into_iter","into_iter","into_raw_descriptor","into_raw_descriptor","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","ioctl","ioctl_expr","ioctl_io_nr","ioctl_ioc_nr","ioctl_ior_nr","ioctl_iow_nr","ioctl_iowr_nr","iov_max","is_armed","is_armed","is_interrupted","iter","iter","iter_hungup","iter_readable","iter_writable","kernel_has_memfd","kill_process_group","last","log","max_timeout","modify","modify","msync","msync","named","nanos","ne","ne","ne","ne","ne","ne","ne","net","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_pipe_full","new_protection","new_protection_fixed","next","next","none","now","now","open_file","pagesize","partial_cmp","pid","pipe","poll_in","punch_hole","rand","read","read","read","read","read_dir","read_name","read_obj","read_raw_stdin","read_slice","read_timeout","read_to_memory","read_write","readable","reap_child","recv","recv_iovecs_with_fds","recv_iovecs_with_fds","recv_with_fd","recv_with_fd","recv_with_fds","recv_with_fds","remove","remove_mapping","remove_mapping","remove_mapping","remove_range","reset","reset","resolution","resolution","round_up_to_page_size","safe_descriptor_from_path","scoped_path","scoped_signal_handler","seal_seal","seek","seek_data","seek_hole","send_bufs_with_fd","send_bufs_with_fd","send_bufs_with_fds","send_bufs_with_fds","send_with_fd","send_with_fd","send_with_fds","send_with_fds","seq","serialize","serialize","serialize","serialize","serialize","serialize","set_canon_mode","set_canon_mode","set_cpu_affinity","set_grow_seal","set_non_block","set_non_block","set_pipe_size","set_raw_mode","set_raw_mode","set_read","set_read","set_rt_prio_limit","set_rt_round_robin","set_seal_seal","set_shrink_seal","set_size","set_write","set_write","set_write_seal","setsid","shrink_seal","signal","size","size","size","size","size","socket_fd","source","syscall","syslog","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","token","try_clone","try_clone","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tty_fd","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uninitialized","use_hugepages","validate_raw_fd","volatile_at_impl","volatile_impl","vsock","wait","wait","wait","wait","wait_for_pid","wait_timeout","wait_timeout","warn","with_as_descriptor","with_raw_descriptor","writable","write","write","write_from_memory","write_obj","write_seal","write_slice","write_zeroes","write_zeroes_all","write_zeroes_all","write_zeroes_all_at","write_zeroes_all_at","write_zeroes_at","zeroed","0","0","0","0","0","0","0","0","0","0","0","0","0","1","2","0","0","0","0","0","0","1","2","0","0","0","0","0","0","0","0","AsRawFds","FileAllocate","FileGetLen","FileReadWriteAtVolatile","FileReadWriteVolatile","FileSetLen","FileSync","allocate","as_raw_fds","fsync","get_len","lib","read_at_volatile","read_exact_at_volatile","read_exact_volatile","read_vectored_at_volatile","read_vectored_volatile","read_volatile","set_len","write_all_at_volatile","write_all_volatile","write_at_volatile","write_vectored_at_volatile","write_vectored_volatile","write_volatile","IoBufMut","VolatileSlice","advance","advance","as_iobuf","as_iobuf","as_iobuf_slice","as_iobufs","as_iobufs","as_mut","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_int","c_void","clone","clone","clone","clone_into","clone_into","clone_into","copy_from","copy_to","copy_to_volatile_slice","fmt","fmt","fmt","from","from","from","from","from_raw_parts","from_raw_parts","get_slice","into","into","into","into","iov_base","iov_len","iovec","is_empty","len","new","new","off64_t","offset","pread64","preadv64","pwrite64","pwritev64","read","readv","size","size_t","sub_slice","to_owned","to_owned","to_owned","truncate","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write_bytes","writev","InterruptibleResult","is_interrupted","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","IoctlNr","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","ioctl","ioctl_with_mut_ptr","ioctl_with_mut_ref","ioctl_with_ptr","ioctl_with_ref","ioctl_with_val","0","InetVersion","TcpSocket","UnixSeqpacket","UnixSeqpacketListener","UnlinkUnixSeqpacketListener","V4","V6","accept","as_raw_descriptor","as_raw_descriptor","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_ref","bind","bind","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect","connect","deref","deserialize","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","from","from_raw_descriptor","from_raw_fd","from_raw_fd","from_sockaddr","get_readable_bytes","into","into","into","into","into","into_raw_descriptor","into_raw_fd","listen","local_port","new","next_packet_size","pair","path","recv","recv_as_vec","recv_as_vec_with_fds","recv_to_vec","send","serialize","set_read_timeout","set_write_timeout","socket_fd","to_owned","try_clone","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Pseudorandom","Random","Source","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","rand_bytes","rand_vec","to_owned","try_from","try_into","type_id","DirEntry","ReadDir","borrow","borrow","borrow_mut","borrow_mut","from","from","ino","into","into","name","next","offset","read_dir","try_from","try_from","try_into","try_into","type_","type_id","type_id","ScopedPath","as_ref","borrow","borrow_mut","create","deref","drop","from","get_temp_path","into","try_from","try_into","type_id","AlreadyWaiting","EmptySignalHandler","Error","HandlerAlreadySet","HasDefaultSignalHandler","RegisterSignalHandler","Result","ScopedSignalHandler","Sigaction","SignalHandler","WaitForSignal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","fmt","fmt","from","from","from","handle_signal","handle_signal","into","into","into","new","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_for_interrupt","0","0","0","0","0","1","1","1","Abort","Alarm","BlockSignal","Bus","Child","ClearCheckPending","ClearGetPending","ClearWaitPending","CompareBlockedSignals","Continue","CreateSigset","Error","ExceededFileSize","FloatingPointException","GetSid","HangUp","IllegalInstruction","Interrupt","Io","Kill","Kill","KillOnDrop","Killable","Pipe","Power","Profile","Quit","RetrieveSignalMask","Rt0","Rt1","Rt10","Rt11","Rt12","Rt13","Rt14","Rt15","Rt16","Rt17","Rt18","Rt19","Rt2","Rt20","Rt21","Rt22","Rt23","Rt24","Rt25","Rt26","Rt27","Rt28","Rt29","Rt3","Rt30","Rt31","Rt4","Rt5","Rt6","Rt7","Rt8","Rt9","RtSignumGreaterThanMax","SIGRTMAX","SIGRTMIN","SegmentationViolation","Signal","SignalAlreadyBlocked","SignalResult","StackFault","Stop","Sys","Terminate","TimedOut","Trap","TtyIn","TtyOut","TtyStop","UnblockSignal","UnrecognizedSignum","Urgent","User1","User2","VtAlarm","WaitForSignal","WaitPid","Winch","Xcpu","as_mut","as_ref","block_signal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_signal","clear_signal_handler","clone","clone_into","create_sigset","deref","deref_mut","drop","eq","fmt","fmt","fmt","from","from","from","from","get_blocked_signals","has_default_signal_handler","into","into","into","kill","kill","kill_tree","pthread_handle","register_rt_signal_handler","register_signal_handler","timeout","timeout_mut","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unblock_signal","wait_for_signal","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Alert","Auth","Connect","Critical","Daemon","Debug","Emergency","Error","Error","Facility","GetLowestFd","Info","InvalidFd","Kernel","Local0","Local1","Local2","Local3","Local4","Local5","Local6","Local7","Lpr","Mail","NeverInitialized","News","Notice","Poisoned","Priority","Socket","Syslog","Syslogger","User","Uucp","Warning","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","echo_file","echo_stderr","echo_syslog","flush","fmt","fmt","fmt","fmt","from","from","from","from","init","into","into","into","into","log","new","push_descriptors","push_fds","set_proc_name","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","0","0","0","AddrParseError","Any","Cid","Host","Hypervisor","Local","SocketAddr","ToSocketAddr","VMADDR_PORT_ANY","VsockCid","VsockListener","VsockSocket","VsockStream","accept","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fds","as_raw_fds","as_raw_fds","bind","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cid","clone","clone","clone_into","clone_into","cmp","cmp","connect","connect","drop","eq","eq","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","from_str","hash","hash","into","into","into","into","into","into","into_raw_fd","into_raw_fd","listen","local_port","local_port","local_port","ne","ne","new","partial_cmp","partial_cmp","port","read","set_nonblocking","set_nonblocking","set_nonblocking","to_owned","to_owned","to_socket_addr","to_socket_addr","to_string","to_string","to_string","try_clone","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","0","deserialize","serialize","deserialize","serialize"],"q":["sys_utilsys_util::CloneError","","","sys_util::Error","","","","","","","","","","","","sys_util::EventReadResult","sys_util::ExternalMappingError","sys_util::MmapError","","","","","","sys_util::SignalFdError","","","","","sys_util::WaitStatus","","","sys_util::file_traits","","","","","","","","","","","","","","","","","","","","","","","","","sys_util::file_traits::lib","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sys_util::handle_eintr","","sys_util::ioctl","","","","","","","","","","","","","","","","","","","","","","","","","","","sys_util::net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sys_util::rand","","","","","","","","","","","","","","","","","","sys_util::read_dir","","","","","","","","","","","","","","","","","","","","","","sys_util::scoped_path","","","","","","","","","","","","","sys_util::scoped_signal_handler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sys_util::scoped_signal_handler::Error","","","","","","","","sys_util::signal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sys_util::signal::Error","","","","","","","","","","","","","","","sys_util::syslog","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sys_util::syslog::Error","","","sys_util::vsock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sys_util::vsock::VsockCid","sys_util::with_as_descriptor","","sys_util::with_raw_descriptor",""],"d":["","","","","","","","","Trait for types that can be converted into an <code>iovec</code> that …","Trait for returning the underlying raw descriptor, without …","A trait used to abstract types that provide a process id …","","","Controls what namespace <code>clone_process</code> will have. See …","","","Failed to block the signal when creating signalfd.","Failed to block the signal when creating signalfd.","Failed to create a new signalfd.","Failed to create a new signalfd.","Failed to construct sigset when creating signalfd.","Failed to construct sigset when creating signalfd.","For use cases where a simple wrapper around a …","EpollContext wraps linux epoll. It provides similar …","EpollEvents wraps raw epoll_events, it should only be used …","An error number, retrieved from errno (man 3 errno), set …","","","","A safe wrapper around a Linux eventfd (man 2 eventfd).","Wrapper around the return value of doing a read on an …","","ExternalMapping wraps an external library mapping.  This …","","","A fake clock that can be used in tests to give exact …","FakeTimerFd: For use in tests.","The operation to perform with <code>fallocate</code>.","","","A simple wrapper around <code>File</code> that implements <code>Serialize</code>/…","The operation to perform with <code>flock</code>.","","","The new process will inherit the namespace from the old …","Trait for forfeiting ownership of the current raw …","","","","","","","","","","","There was an error trying to iterate this process’s …","A contiguous memory allocation with a specified size and …","","","","","","A range of memory that can be msynced, for abstracting …","A set of memfd seals.","Wraps an anonymous shared memory mapping in the current …","Tracks Fixed Memory Maps within an anonymous memory-mapped …","","","There are multiple threads running. The <code>usize</code> indicates …","","Safe wrapper for <code>NETLINK_GENERIC</code> netlink sockets.","A single netlink message, including its header and data.","Iterator over <code>struct nlmsghdr</code> as received from a netlink …","The new process with be in a new user and PID namespace.","","","","","Re-export libc types that are part of the API.","Used to poll multiple objects that have file descriptors.","An event returned by <code>PollContext::wait</code>.","An iterator over some (sub)set of events returned by …","The list of event returned by <code>PollContext::wait</code>.","A deep copy of the event records from <code>PollEvents</code>.","Trait for a token that can be associated with an <code>fd</code> in a …","Implements the PollToken trait for a given <code>enum</code>.","Memory access type for anonymous shared memory mapping.","A trait for deallocating space in a file.","","","","","","","","","","","","The maximum number of FDs that can be sent in a single …","Wraps a RawDescriptor and safely closes it when self falls …","Trait for file descriptors can send and receive socket …","An <code>EventFd</code> wrapper which triggers when it goes out of …","A trait for seeking to the next hole or non-hole position …","Wrapper for a <code>Serialize</code> value which will capture any …","A shared memory file descriptor and its size.","A safe wrapper around a Linux signalfd (man 2 signalfd).","","Signalfd could be read, but didn’t return a full siginfo …","Signalfd could be read, but didn’t return a full siginfo …","Unable to read from signalfd.","Unable to read from signalfd.","","","There was an error while cloning.","","","Trait for file descriptors that are TTYs, according to …","","A safe wrapper around a Linux timerfd (man 2 …","","Used to attempt to clean up a named pipe after it is no …","Used to attempt to clean up a named pipe after it is no …","","","","","Used to mark types as !Sync.","A logical set of the values *status can take from …","Watching events taken by PollContext.","","","","A trait for writing zeroes to a stream.","A trait for writing zeroes to an arbitrary position in a …","","","Adds the given <code>fd</code> to this context and associates the given …","Adds the given <code>fd</code> to this context and associates the given …","Anonymously maps <code>size</code> bytes at <code>offset</code> bytes from the start …","Anonymously maps <code>size</code> bytes at <code>offset</code> bytes from the start …","Register the event fd for a notification when self’s …","Maps <code>size</code> bytes from the start of the given <code>fd</code> at <code>offset</code> …","Performs a logical OR of the given flags with the FD’s …","Maps <code>size</code> bytes starting at <code>fd_offset</code> bytes from within …","Maps <code>size</code> bytes starting at <code>fd_offset</code> bytes from within …","","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …","Maps <code>size</code> bytes starting at <code>fs_offset</code> bytes from within …","Adds the given <code>fd</code> to this context, watching for the …","Adds the given <code>fd</code> to this context, watching for the …","Adds the given slice of <code>fd</code> and <code>token</code> tuples to this …","Adds the given slice of <code>fd</code> and <code>token</code> tuples to this …","","Adds the given set of memfd seals.","Convenience function for <code>SharedMemory::new</code> that has an …","Returns a <code>iovec</code> that describes a contiguous region of …","Returns a slice of <code>iovec</code>s that each describe a contiguous …","Returns an exclusive reference to the allocated data.","Returns an exclusive slice reference to the allocated data.","Returns a pointer to the beginning of the memory region. …","Returns a raw pointer to the allocated data.","","used for passing this region to ioctls for setting guest …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this token into a u64 that can be turned back …","","Returns a shared reference to the allocated data.","Takes a reference to the events so that they can be …","","","Returns a shared slice reference to the allocated data.","Gets the raw bitmask of seals enumerated in <code>fcntl(2)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>EpollContext</code> and adds the slice of <code>fd</code> and …","Creates a new <code>PollContext</code> and adds the slice of <code>fd</code> and …","","","Safe wrapper for chown(2).","Disarms the timer.","Disarms the timer.","Clears the given flags in the FD’s flags.","","","","","","","Clones <code>descriptor</code>, returning a new <code>RawDescriptor</code> that …","Clones <code>fd</code>, returning a new file descriptor that refers to …","","","","","","","Clones this process and calls a closure in the new process.","","","A macro for logging debug information.","","","","","Deletes the given <code>fd</code> from this context.","Deletes the given <code>fd</code> from this context.","","","","","","","","","","Allows the use of any serde deserializer within a closure …","","","","","","","","","","Drops all capabilities (permitted, inheritable, and …","","Get the duration since |earlier|, assuming that earlier &lt; …","Return a timespec filed with the specified Duration …","","Get the time that has elapsed since this clock was made. …","Returns empty Events.","Enable experimental core scheduling for the current thread.","","","","","","","","","","Gets the errno for this error","Returns the last errno as a Result that is always an error.","A macro for logging an error.","Safe wrapper for <code>fallocate()</code>.","Safe wrapper for fchmod(2).","Safe wrapper for fchown(2).","","","Safe wrapper for flock(2) with the operation <code>op</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps the first <code>size</code> bytes of the given <code>fd</code> as read/write.","","Maps the <code>size</code> bytes starting at <code>offset</code> bytes of the given …","Maps the <code>size</code> bytes starting at <code>offset</code> bytes of the given …","Maps <code>size</code> bytes starting at <code>offset</code> from the given <code>fd</code> as …","","Constructs a <code>SharedMemory</code> instance from a <code>File</code> that …","Safety","","","","Converts a raw token as returned from <code>as_raw_token</code> back …","","","Obtain file system type of the file system that the file …","Get the max number of open files allowed by the …","Get the underlying epoll events.","Gets the memfd seals that have already been added to this.","","Safe wrapper for <code>getegid(2)</code>.","Safe wrapper for <code>geteuid(2)</code>.","This bypasses <code>libc</code>’s caching <code>getpid(2)</code> wrapper which can …","Safe wrapper for <code>getsid(2)</code>.","Safe wrapper for the gettid Linux systemcall.","True of the grow seal bit is present.","Macro and helper trait for handling interrupted routines.","Macro that retries the given expression every time its …","Macro that retries the given expression every time its …","Macro that retries the given expression every time its …","","True if the <code>fd</code> associated with this token in …","A macro for logging info.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Macros and wrapper functions for dealing with ioctls.","Raw macro to declare the expression that calculates an …","Declare an ioctl that transfers no data.","Raw macro to declare a function that returns an ioctl …","Declare an ioctl that reads data.","Declare an ioctl that writes data.","Declare an ioctl that reads and writes data.","Safe wrapper for <code>sysconf(_SC_IOV_MAX)</code>.","Returns <code>true</code> if the timer is currently armed.","Returns <code>true</code> if the timer is currently armed.","","","Iterates over each event.","Iterates over each hungup event.","Iterates over each readable event.","Iterates over each writable event.","Checks if the kernel we are running on has memfd_create. …","Kill all processes in the current process group.","Constructs an error from the current errno.","A macro for logging at an arbitrary priority level.","Return the maximum Duration that can be used with …","If <code>fd</code> was previously added to this context, the watched …","If <code>fd</code> was previously added to this context, the watched …","Calls msync with MS_SYNC on a mapping of <code>size</code> bytes …","Calls msync with MS_SYNC on the mapping.","Convenience function for <code>SharedMemory::new</code> that is always …","Get the current time in ns, according to this clock.","","","","","","","","","","Creates a new <code>ScopedEvent</code> which triggers when it goes out …","Creates an mmap arena of <code>size</code> bytes.","Create and bind a new <code>NETLINK_GENERIC</code> socket.","","Build Events from raw epoll events (defined in …","Creates a new <code>EpollContext</code>.","Creates a new <code>PollContext</code>.","Creates a new SignalFd for the given signal, blocking the …","Creates a new timerfd.  The timer is initally disarmed and …","Creates a new fake timerfd.  The timer is initally …","","","Constructs a new error with the given errno.","Creates a new blocking EventFd with an initial value of 0.","Creates an ExternalMapping given a library-specific …","Creates an anonymous shared, read/write mapping of <code>size</code> …","Creates a new shared memory file descriptor with zero size.","Returns an empty set of memfd seals.","Test-only function used to create a pipe that is full. The …","Creates an anonymous shared mapping of <code>size</code> bytes with <code>prot</code>…","Creates an anonymous shared mapping of <code>size</code> bytes with <code>prot</code>…","","","Returns Protection allowing no access.","","Get the current time, according to this clock.","Open the file with the given path, or if it is of the form …","Safe wrapper for <code>sysconf(_SC_PAGESIZE)</code>.","","","Spawns a pipe pair where the first pipe is the read end …","Utility function that returns true if the given FD is …","Replace a range of bytes with a hole.","Rust implementation of functionality parallel to libchrome…","Read a siginfo struct from the signalfd, if available.","Blocks until the the eventfd’s count is non-zero, then …","Returns Protection allowing read access.","","","Reads the name from the underlying file as a <code>String</code>.","Reads on object from the memory region at the given offset.","Read raw bytes from stdin.","Reads to a slice from the memory region at the specified …","Blocks for a maximum of <code>timeout</code> duration until the the …","Reads data from a file descriptor and writes it to guest …","Returns Protection allowing read/write access.","True if the <code>fd</code> associated with this token in …","Reaps a child process that has terminated.","Receive messages from the netlink socket.","Receives data and file descriptors from the socket.","Receives data and file descriptors from the socket.","Receives data and potentially a file descriptor from the …","Receives data and potentially a file descriptor from the …","Receives data and file descriptors from the socket.","Receives data and file descriptors from the socket.","Removes <code>size</code> bytes at <code>offset</code> bytes from the start of the …","Remove <code>size</code>-byte mapping starting at <code>offset</code>.","Remove <code>size</code>-byte mapping starting at <code>offset</code>.","","Uses madvise to tell the kernel to remove the specified …","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …","Sets the timer to expire after <code>dur</code>.  If <code>interval</code> is not …","Returns the resolution of timers on the host.","Returns the resolution of timers on the host.","Uses the system’s page size in bytes to round the given …","If the given path is of the form /proc/self/fd/N for some …","","Provides a struct for registering signal handlers that get …","True of the seal seal bit is present.","","Seek to the first data in a file at a position greater …","Seek to the first hole in a file at a position greater …","Sends the given data and file descriptor over the socket.","Sends the given data and file descriptor over the socket.","Sends the given data and file descriptors over the socket.","Sends the given data and file descriptors over the socket.","Sends the given data and file descriptor over the socket.","Sends the given data and file descriptor over the socket.","Sends the given data and file descriptors over the socket.","Sends the given data and file descriptors over the socket.","","","","","","","","Set this terminal’s mode to canonical mode (…","Set this terminal’s mode to canonical mode (…","Set the CPU affinity of the current thread to a given set …","Sets the grow seal bit.","Sets the non-blocking mode of this terminal’s file …","Sets the non-blocking mode of this terminal’s file …","Sets the pipe signified with fd to <code>size</code>.","Set this terminal’s mode to raw mode (…","Set this terminal’s mode to raw mode (…","Set read events.","Set read events.","Enables real time thread priorities in the current thread …","Sets the current thread to be scheduled using the round …","Sets the seal seal bit.","Sets the shrink seal bit.","Sets the size in bytes of the shared memory.","Set write events.","Set write events.","Sets the write seal bit.","Wrapper for <code>setsid(2)</code>.","True of the shrink seal bit is present.","","Returns the size of the memory region in bytes.","","Returns the size of the memory region in bytes.","","Gets the size in bytes of the shared memory.","Gets the file descriptor of this socket.","","","Facilities for sending log message to syslog.","Copies the events to an owned structure so the reference …","","","","","","","","","","","","Gets the token associated in <code>PollContext::add</code> with this …","Creates a new <code>TimerFd</code> instance that shares the same …","Clones this descriptor, internally creating a new …","Clones this EventFd, internally creating a new file …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the file descriptor of the TTY.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allocates memory with the specified size and alignment. …","Madvise the kernel to use Huge Pages for this mapping.","Verifies that |raw_fd| is actually owned by this process …","","","","Waits for any events to occur in FDs that were previously …","Waits for any events to occur in FDs that were previously …","Waits until the timer expires.  The return value …","Waits until the timer expires.  The return value …","A safe wrapper around waitpid.","Like <code>wait</code> except will only block for a maximum of the …","Like <code>wait</code> except will only block for a maximum of the …","A macro for logging a warning.","Module that exports <code>serialize</code>/<code>deserialize</code> functions for …","Module that exports <code>serialize</code>/<code>deserialize</code> functions for …","True if the <code>fd</code> associated with this token in …","Adds <code>v</code> to the eventfd’s count, blocking until this won’…","","Writes data from memory to a file descriptor.","Writes an object to the memory region at the specified …","True of the write seal bit is present.","Writes a slice to the memory region at the specified …","Write up to <code>length</code> bytes of zeroes to the stream, …","Write zeroes to the stream until <code>length</code> bytes have been …","Write zeroes to the stream until <code>length</code> bytes have been …","Write zeroes starting at <code>offset</code> until <code>length</code> bytes have …","Write zeroes starting at <code>offset</code> until <code>length</code> bytes have …","Write up to <code>length</code> bytes of zeroes starting at <code>offset</code>, …","Allocates memory with the specified size and alignment and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait similar to <code>AsRawFd</code> but supports an arbitrary …","A trait for allocating disk space in a sparse file. This …","A trait for getting the size of a file. This is equivalent …","A trait similar to the unix <code>ReadExt</code> and <code>WriteExt</code> traits, …","A trait similar to <code>Read</code> and <code>Write</code>, but uses volatile …","A trait for setting the size of a file. This is equivalent …","A trait for flushing the contents of a file to disk. This …","Allocate storage for the region of the file starting at …","","","Get the current length of the file in bytes.","","Reads bytes from this file at <code>offset</code> into the given slice, …","Reads bytes from this file at <code>offset</code> into the given slice …","Reads bytes from this into the given slice until all bytes …","Like <code>read_at_volatile</code>, except it reads to a slice of …","Like <code>read_volatile</code>, except it reads to a slice of buffers. …","Read bytes from this file into the given slice, returning …","","Writes bytes from this file at <code>offset</code> into the given slice …","Write bytes from the slice to the given file until all the …","Writes bytes from this file at <code>offset</code> into the given …","Like <code>write_at_at_volatile</code>, except that it writes from a …","Like <code>write_volatile</code>, except that it writes from a slice of …","Write bytes from the slice to the given file, returning …","This type is essentialy <code>std::io::IoBufMut</code>, and guaranteed …","A slice of raw memory that supports volatile access. Like …","Advance the starting position of this slice.","Advance the internal position of the buffer.","Returns this <code>VolatileSlice</code> as an <code>IoBufMut</code>.","","","Converts a slice of <code>VolatileSlice</code>s into a slice of <code>IoBufMut</code>…","Converts a slice of <code>IoBufMut</code>s into a slice of <code>iovec</code>s.","","Gets a mutable pointer to this slice’s memory.","Gets a mutable pointer to this slice’s memory.","Gets a const pointer to this slice’s memory.","Gets a const pointer to this slice’s memory.","","","","","","","","","","","Equivalent to C’s <code>void</code> type when used as a pointer.","","","","","","","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> bytes, …","Copies <code>self.size()</code> or <code>buf.len()</code> times the size of <code>T</code> bytes, …","Copies <code>self.size()</code> or <code>slice.size()</code> bytes, whichever is …","","","","","","","","Creates a <code>VolatileSlice</code> from a pointer and a length.","Creates a <code>IoBufMut</code> from a pointer and a length.","","","","","","","","","","","Creates a slice of raw memory that must support volatile …","","","Creates a copy of this slice with the address increased by …","","","","","","","Gets the size of this slice.","","Similar to <code>get_slice</code> but the returned slice outlives this …","","","","Shorten the length of the slice.","Shorten the length of the buffer.","","","","","","","","","","","","","","Sets each byte of this slice with the given byte, similar …","","Trait for determining if a result indicates the operation …","Returns <code>true</code> if this result indicates the operation was …","","","","","","","","","","","","","","","","","","","","","","Run an ioctl with no arguments.","Run an ioctl with a mutable raw pointer.","Run an ioctl with a mutable reference.","Run an ioctl with a raw pointer.","Run an ioctl with an immutable reference.","Run an ioctl with a single value argument.","","Assist in handling both IP version 4 and IP version 6.","A TCP socket.","A Unix <code>SOCK_SEQPACKET</code> socket point to given <code>path</code>","Like a <code>UnixListener</code> but for accepting <code>UnixSeqpacket</code> type …","Used to attempt to clean up a <code>UnixSeqpacketListener</code> after …","","","Blocks for and accepts a new incoming connection and …","","","","","","","","","","","","Creates a new <code>UnixSeqpacketListener</code> bound to the given …","","","","","","","","","","","","","","","Open a <code>SOCK_SEQPACKET</code> connection to socket named by <code>path</code>.","","","","","","","","","","","","","","","","","","","Gets the number of bytes that can be read from this socket …","","","","","","","","","Returns the port that this socket is bound to. This can …","","Gets the number of bytes in the next packet. This blocks …","Creates a pair of connected <code>SOCK_SEQPACKET</code> sockets.","Gets the path that this listener is bound to.","Read data from the socket fd to a given buffer","Read data from the socket fd to a new <code>Vec</code>.","Read data and fds from the socket fd to a new pair of <code>Vec</code>.","Read data from the socket fd to a given <code>Vec</code>, resizing it …","Write data from a given buffer to the socket fd","","Sets or removes the timeout for read/recv operations on …","Sets or removes the timeout for write/send operations on …","","","Clone the underlying FD.","","","","","","","","","","","","","","","","","","Represents whether or not the random bytes are pulled from …","","","","","","","","","","Fills <code>output</code> completely with random bytes from the …","Allocates a vector of length <code>len</code> filled with random bytes …","","","","","","","","","","","","","","","","","Return the next directory entry. This is implemented as a …","","","","","","","","","","Automatically deletes the path it contains when it goes …","","","","","","","","Returns a stable path based on the label, pid, and tid. If …","","","","","Already waiting for interrupt.","A signal handler that does nothing.","","Signal already has a handler.","Failed to check if signal has the default signal handler.","Failed to register a signal handler.","","Represents a signal handler that is registered with a set …","Sigaction failed.","The interface used by Scoped Signal handler.","Failed to wait for signal.","","","","","","","","","","","","","A function that is called to handle the passed signal.","","","","","Attempts to register <code>handler</code> with the provided <code>signals</code>. It …","","","","","","","","","","","Blocks until SIGINT is received, which often happens …","","","","","","","","","","","The signal could not be blocked.","","","Failed to check if given signal is in the set of pending …","Failed to get pending signals.","Failed to wait for given signal.","Failed to check if the requested signal is in the blocked …","","Couldn’t create a sigset.","","","","Failed to get session id.","","","","","Failed to send signal to pid.","","Wraps a Child process, and calls kill_tree for its process …","Trait for threads that can be signalled via <code>pthread_kill</code>.","","","","","The signal mask could not be retrieved.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converted signum greater than SIGRTMAX.","Returns the maximum (inclusive) real-time signal number.","Returns the minimum (inclusive) real-time signal number.","","","The wrapped signal has already been blocked.","","","","","","Timeout reached.","","","","","The signal could not be unblocked.","Failed to convert signum to Signal.","","","","","Failed to wait for signal.","Failed to wait for pid.","","","","","Masks given signal.","","","","","","","Clears pending signal.","Resets the signal handler of signum <code>num</code> back to the …","","","Creates <code>sigset</code> from an array of signal numbers.","","","","","","","","","","","","Retrieves the signal mask of the current thread as a …","Returns true if the signal handler for signum <code>num</code> is the …","","","","Safety","Sends the signal <code>num</code> to this killable thread.","Terminates and reaps a child process. If the child process …","","Registers <code>handler</code> as the signal handler for the real-time …","Registers <code>handler</code> as the signal handler of signum <code>num</code>.","Get the timeout. See timeout_mut() for more details.","Change the timeout for how long child processes are waited …","","","","","","","","","","","","","Unmasks given signal.","Wait for signal before continuing. The signal number of …","","","","","","","","","","","","","","","","","","Error while attempting to connect socket.","","","","","Errors returned by <code>syslog::init()</code>.","","The facility of a syslog message.","There was an error using <code>open</code> to get the lowest file …","","The guess of libc’s file descriptor for the syslog …","","","","","","","","","","","","Initialization was never attempted.","","","Initialization has previously failed and can not be …","The priority (i.e. severity) of a syslog message.","Error while creating socket.","","","","","","","","","","","","","","","","","","Replaces the optional <code>File</code> to echo log messages to.","Enables or disables echoing log messages to the …","Enables or disables echoing log messages to the syslog.","","","","","","","","","","Initialize the syslog connection and internal variables.","","","","","Records a log message with the given details.","","Does the same as push_fds, but using the RawDescriptorType","Retrieves the file descriptors owned by the global …","Replaces the process name reported in each syslog message.","","","","","","","","","","","","","","","","","","","","","","Vsock equivalent of INADDR_ANY. Indicates the context id …","An assigned CID that serves as the address for VSOCK.","The parent machine. It may not be the hypervisor for …","An address that refers to the bare-metal machine that …","The loopback address.","An address associated with a virtual socket.","","Vsock equivalent of binding on port 0. Binds to a random …","The vsock equivalent of an IP address.","Represents a virtual socket server.","A virtual socket.","A virtual stream socket.","Accepts a new incoming connection on this listener.  …","","","","","","","","Creates a new <code>VsockListener</code> bound to the specified port on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a vsock SocketAddr from a string. vsock socket …","","","","","","","","","","","","Returns the port that this socket is bound to. This can …","Returns the port that this stream is bound to.","Returns the port that this listener is bound to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializes a descriptor for later retrieval in a parent …"],"i":[1,2,3,4,5,6,6,7,0,0,0,0,0,0,8,9,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,11,0,6,6,6,6,6,6,6,6,12,12,13,0,12,12,14,14,0,0,0,0,0,0,0,13,0,0,0,0,11,6,6,12,12,0,0,0,0,0,0,0,0,0,0,7,0,15,6,6,15,6,6,0,0,8,0,0,0,0,0,0,0,0,0,10,10,10,10,8,8,13,6,6,0,9,0,0,0,0,14,0,12,12,0,0,0,15,6,6,0,0,7,16,17,18,19,19,20,19,0,21,21,19,19,19,17,18,17,18,20,22,22,23,23,24,24,21,24,19,25,26,27,28,29,4,30,17,18,1,28,31,32,29,4,30,22,17,18,1,28,31,32,29,4,30,22,33,34,35,4,24,36,2,3,24,37,24,38,39,11,19,16,40,41,42,43,44,45,46,36,47,17,18,1,28,31,32,14,7,8,2,3,48,20,29,4,5,49,30,9,12,25,15,13,6,50,26,22,37,10,24,38,39,11,19,16,40,41,42,43,44,45,46,36,47,17,18,1,28,31,32,14,7,8,2,3,48,20,29,4,5,49,30,9,12,25,15,13,6,50,26,22,37,10,17,18,48,20,0,31,32,0,48,4,49,15,50,37,0,0,48,4,49,15,50,37,0,4,16,0,43,48,20,37,17,18,39,3,5,5,29,5,49,30,22,0,24,39,19,28,2,3,29,25,26,0,48,20,0,48,20,47,0,29,4,49,30,9,12,25,15,50,49,0,0,0,0,0,0,16,0,22,48,20,29,5,49,49,30,9,12,12,25,15,13,13,6,6,26,10,10,24,38,39,39,11,19,19,16,40,41,42,43,44,45,46,36,47,17,18,1,28,31,32,14,7,8,8,2,3,48,20,29,29,29,29,4,5,5,49,49,30,30,9,12,25,15,13,6,50,50,26,22,37,10,51,51,26,26,26,26,26,15,22,52,29,31,30,35,4,0,0,0,47,22,26,0,0,0,0,0,37,0,0,0,0,4,44,0,24,38,39,11,19,16,40,41,42,43,44,45,46,36,47,17,18,1,28,31,32,14,7,8,2,3,48,20,29,4,5,49,30,9,12,25,15,13,6,50,26,22,37,10,38,40,45,53,29,17,18,31,32,30,22,0,0,0,0,0,0,0,0,31,32,54,42,46,46,46,46,0,0,49,0,0,17,18,21,26,22,20,4,49,30,9,12,25,50,0,38,39,19,41,43,47,17,18,28,31,32,48,20,49,30,25,26,22,37,0,26,26,40,45,50,48,20,0,0,4,16,0,0,55,0,28,30,50,22,0,22,26,0,26,30,26,50,44,0,41,56,56,56,56,56,56,19,21,21,19,26,31,32,31,32,0,0,0,0,37,22,57,57,56,56,56,56,56,56,56,56,16,38,29,5,49,30,22,58,58,0,37,58,58,0,58,58,47,50,0,0,37,37,22,47,50,37,0,37,0,21,19,25,26,22,56,6,0,0,46,48,4,49,15,50,37,49,12,13,6,10,44,31,29,30,24,38,39,11,19,16,40,41,42,43,44,45,46,36,47,17,18,1,28,31,32,14,7,8,2,3,48,20,29,29,4,5,49,30,9,12,25,15,13,6,50,26,22,37,10,24,38,39,11,19,16,40,41,42,43,44,45,46,36,47,17,18,1,28,31,32,14,7,8,2,3,48,20,29,4,5,49,30,9,12,25,15,13,6,50,26,22,37,10,58,24,38,39,11,19,16,40,41,42,43,44,45,46,36,47,17,18,1,28,31,32,14,7,8,2,3,48,20,29,4,5,49,30,9,12,25,15,13,6,50,26,22,37,10,24,26,0,0,0,0,17,18,31,32,0,17,18,0,0,0,44,30,22,26,26,37,26,59,59,59,60,60,60,24,61,62,63,64,65,66,67,68,69,70,71,72,73,65,65,74,64,65,66,67,68,65,65,69,70,71,72,73,75,76,77,0,0,0,0,0,0,0,78,79,80,81,0,82,82,83,82,83,83,84,82,83,82,82,83,83,0,0,85,86,85,85,85,85,86,86,85,86,85,86,86,87,88,85,86,87,88,85,86,0,0,88,85,86,88,85,86,85,85,85,87,85,86,87,88,85,86,85,86,85,87,88,85,86,88,88,0,86,86,85,86,0,85,0,0,0,0,0,0,85,0,85,88,85,86,85,86,87,88,85,86,87,88,85,86,87,88,85,86,0,85,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,0,0,0,91,91,92,90,93,92,90,94,93,92,90,94,93,90,92,94,92,90,91,94,93,92,90,91,94,93,91,91,94,93,90,93,92,90,94,93,91,91,94,92,90,91,94,93,93,92,93,91,93,92,90,91,94,93,93,94,94,94,94,93,93,92,93,93,93,93,93,93,93,93,93,91,93,92,90,91,94,93,92,90,91,94,93,92,90,91,94,93,95,95,0,95,95,95,95,95,95,95,95,95,0,0,95,95,95,95,0,0,96,97,96,97,96,97,96,96,97,96,97,96,0,96,97,96,97,96,96,97,0,98,98,98,98,98,98,98,0,98,98,98,98,99,0,0,99,99,99,0,0,99,0,99,100,101,99,100,101,99,100,99,99,100,101,99,102,101,100,101,99,100,99,100,101,99,100,101,99,100,101,99,0,103,104,105,106,107,104,105,106,108,108,109,108,108,109,109,109,109,108,109,0,108,108,109,108,108,108,108,109,108,0,0,108,108,108,108,109,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,109,0,0,108,0,109,0,108,108,108,108,109,108,108,108,108,109,109,108,108,108,108,109,109,108,108,110,110,0,110,109,108,110,109,108,0,0,108,108,0,110,110,110,108,109,109,108,110,110,109,108,0,0,110,109,108,0,111,0,111,0,0,110,110,108,109,110,109,108,108,110,109,108,110,109,108,0,0,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,127,128,127,127,0,127,0,129,127,129,128,128,128,128,128,128,128,128,128,128,128,129,128,127,129,0,129,128,0,128,128,127,130,127,128,129,130,127,128,129,127,128,127,128,0,0,0,130,127,127,129,129,130,127,128,129,0,130,127,128,129,0,130,0,0,0,127,128,127,129,130,127,128,129,130,127,128,129,130,127,128,129,130,131,132,133,0,134,134,134,134,134,0,0,0,0,0,0,0,135,136,137,135,136,137,135,136,135,138,134,139,136,137,135,138,134,139,136,137,135,139,134,139,134,139,134,139,136,137,136,134,139,137,138,138,134,134,139,139,136,137,135,138,134,134,139,136,137,135,134,139,134,139,138,134,139,136,137,135,136,137,136,136,137,135,134,139,136,134,139,139,137,136,137,135,134,139,140,139,138,134,139,136,137,138,134,139,136,137,135,138,134,139,136,137,135,138,134,139,136,137,135,137,141,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asrawfd",8]],["result",6]],[[["asrawfd",8]],["result",6]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[["usize",15],["protection",3]],[["result",4,["error"]],["error",4]]],[[["u64",15],["eventfd",3]]],[[["usize",15],["asrawfd",8]],[["result",4,["error"]],["error",4]]],[[["rawfd",6],["c_int",6]],["result",6]],[[["usize",15],["u64",15],["protection",3],["asrawfd",8]],[["result",4,["error"]],["error",4]]],[[["usize",15],["u64",15],["protection",3],["asrawfd",8]],[["result",4,["error"]],["error",4]]],[[["usize",15],["u64",15],["protection",3],["asrawfd",8]],[["result",4,["error"]],["error",4]]],[[["usize",15],["u64",15],["asrawfd",8]],[["result",4,["error"]],["error",4]]],[[["usize",15],["u64",15],["protection",3],["asrawfd",8]],[["result",4,["error"]],["error",4]]],[[["asrawfd",8],["watchingevents",3]],["result",6]],[[["asrawfd",8],["watchingevents",3]],["result",6]],[[],["result",6]],[[],["result",6]],[[["u64",15]]],[[["memfdseals",3]],["result",6]],[[],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[],["iovec",3]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],["pid",6]],[[],["pid",6]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["pollevents",3]],[[],["unixdatagram",3]],[[],["unixlistener",3]],[[["usize",15]]],[[],["i32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["epollcontext",3],["result",6,["epollcontext"]]]],[[],[["pollcontext",3],["result",6,["pollcontext"]]]],[[["duration",3]],["option",4]],[[["duration",3]],["option",4]],[[["cstr",3],["uid",6],["gid",6]],["result",6]],[[],["result",6]],[[],["result",6]],[[["rawfd",6],["c_int",6]],["result",6]],[[],["clock",3]],[[],["descriptor",3]],[[],["error",3]],[[],["fileflags",4]],[[],["protection",3]],[[],["memfdseals",3]],[[["asrawdescriptor",8]],[["result",6,["rawdescriptor"]],["rawdescriptor",6]]],[[["asrawfd",8]],[["result",6,["rawfd"]],["rawfd",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["clonenamespace",4]],[["result",4,["pid_t","cloneerror"]],["pid_t",6],["cloneerror",4]]],[[["descriptor",3]],["ordering",4]],null,null,[[],["epollevents",3]],[[]],[[]],[[],["memfdseals",3]],[[["asrawfd",8]],["result",6]],[[["asrawfd",8]],["result",6]],[[],["eventfd",3]],[[],["unixlistener",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["vec",3]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],["duration",3]],[[],["duration",3]],[[["duration",3]],["timespec",3]],[[],["duration",3]],[[],["duration",3]],[[],["watchingevents",3]],[[],["result",6]],[[],["bool",15]],[[["descriptor",3]],["bool",15]],[[["error",3]],["bool",15]],[[["eventfd",3]],["bool",15]],[[["eventreadresult",4]],["bool",15]],[[["error",4]],["bool",15]],[[["externalmapping",3]],["bool",15]],[[["fileflags",4]],["bool",15]],[[["protection",3]],["bool",15]],[[],["i32",15]],[[],["result",6]],null,[[["fallocatemode",4],["u64",15],["bool",15],["asrawfd",8]],["result",6]],[[["mode",6]],["result",6]],[[["uid",6],["gid",6]],["result",6]],null,null,[[["flockoperation",4],["asrawfd",8],["bool",15]],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["eventfd",3]]],[[]],[[]],[[["memorymapping",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["c_int",6]],["waitstatus",4]],[[]],[[]],[[]],[[]],[[["unixseqpacket",3]]],[[["eventfd",3]]],[[]],[[["file",3]],["safedescriptor",3]],[[]],[[["file",3]]],[[]],[[]],[[["error",3]]],[[["scopedevent",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["c_int",6]]],[[]],[[]],[[]],[[]],[[["protection",3]],["c_int",6]],[[["signal",4]],["c_int",6]],[[["usize",15],["asrawfd",8]],[["result",4,["memorymapping","error"]],["memorymapping",3],["error",4]]],[[["usize",15],["u64",15],["asrawfd",8]],[["result",4,["memorymapping","error"]],["memorymapping",3],["error",4]]],[[["usize",15],["u64",15],["protection",3],["asrawfd",8]],[["result",4,["memorymapping","error"]],["memorymapping",3],["error",4]]],[[["usize",15],["u64",15],["protection",3],["asrawfd",8]],[["result",4,["memorymapping","error"]],["memorymapping",3],["error",4]]],[[["usize",15],["u64",15],["protection",3],["bool",15],["asrawfd",8]],[["result",4,["memorymapping","error"]],["memorymapping",3],["error",4]]],[[["asrawfd",8]],[["result",6,["fileflags"]],["fileflags",4]]],[[["file",3]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[["rawdescriptor",6]]],[[["rawdescriptor",6]]],[[["rawfd",6]]],[[["rawfd",6]]],[[["u64",15]]],[[["u64",15]]],[[],[["vec",3,["usize"]],["result",6,["vec"]]]],[[["file",3]],[["result",6,["i64"]],["i64",15]]],[[],[["u64",15],["result",6,["u64"]]]],[[],["u32",15]],[[],[["result",6,["memfdseals"]],["memfdseals",3]]],[[["usize",15]],[["volatilememoryresult",6,["volatileslice"]],["volatileslice",3]]],[[],["gid",6]],[[],["uid",6]],[[],["pid",6]],[[["option",4,["pid"]],["pid",6]],[["result",6,["pid"]],["pid",6]]],[[],["pid",6]],[[],["bool",15]],null,null,null,null,[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["rawdescriptor"]],["rawdescriptor",6]]],[[]],[[]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],null,null,null,null,null,null,null,[[],["usize",15]],[[],[["bool",15],["result",6,["bool"]]]],[[],[["bool",15],["result",6,["bool"]]]],[[],["bool",15]],[[],["netlinkmessageiter",3]],[[],[["polleventiter",3,["iter"]],["iter",3,["epoll_event"]]]],[[],[["polleventiter",3,["iter"]],["iter",3,["epoll_event"]]]],[[],[["polleventiter",3,["iter"]],["iter",3,["epoll_event"]]]],[[],[["polleventiter",3,["iter"]],["iter",3,["epoll_event"]]]],[[],["bool",15]],[[],["result",6]],[[],["error",3]],null,[[],["duration",3]],[[["asrawfd",8],["watchingevents",3]],["result",6]],[[["asrawfd",8],["watchingevents",3]],["result",6]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[["into",8,["vec"]],["vec",3,["u8"]]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[],["u64",15]],[[["descriptor",3]],["bool",15]],[[["error",3]],["bool",15]],[[["eventfd",3]],["bool",15]],[[["eventreadresult",4]],["bool",15]],[[["error",4]],["bool",15]],[[["externalmapping",3]],["bool",15]],[[["protection",3]],["bool",15]],null,[[]],[[],[["result",6,["scopedevent"]],["scopedevent",3]]],[[["usize",15]],[["memorymappingarena",3],["error",4],["result",4,["memorymappingarena","error"]]]],[[["u32",15]],["result",6]],[[],["epollevents",3]],[[["u32",15]],["watchingevents",3]],[[],[["epollcontext",3],["result",6,["epollcontext"]]]],[[],[["pollcontext",3],["result",6,["pollcontext"]]]],[[["c_int",6]],[["result",4,["signalfd","error"]],["signalfd",3],["error",4]]],[[],[["timerfd",3],["result",6,["timerfd"]]]],[[["mutex",3,["fakeclock"]],["arc",3,["mutex"]]]],[[]],[[]],[[["i32",15]],["error",3]],[[],[["result",6,["eventfd"]],["eventfd",3]]],[[["unmap",6],["u32",15],["map",6]],[["externalmapping",3],["result",6,["externalmapping"]]]],[[["usize",15]],[["result",4,["memorymapping","error"]],["memorymapping",3],["error",4]]],[[["cstr",3],["option",4,["cstr"]]],[["result",6,["sharedmemory"]],["sharedmemory",3]]],[[],["memfdseals",3]],[[],["result",6]],[[["usize",15],["protection",3]],[["result",4,["memorymapping","error"]],["memorymapping",3],["error",4]]],[[["usize",15],["protection",3]],[["result",4,["memorymapping","error"]],["memorymapping",3],["error",4]]],[[],["option",4]],[[],["option",4]],[[],["protection",3]],[[]],[[]],[[["asref",8,["path"]],["bool",15],["path",3]],[["result",6,["file"]],["file",3]]],[[],["usize",15]],[[["descriptor",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[["bool",15]],["result",6]],[[["asrawfd",8]],["bool",15]],[[["u64",15]],["result",6]],null,[[],[["option",4,["signalfd_siginfo"]],["error",4],["result",4,["option","error"]]]],[[],[["u64",15],["result",6,["u64"]]]],[[],["protection",3]],[[],[["usize",15],["result",6,["usize"]]]],null,[[],[["string",3],["result",6,["string"]]]],[[["usize",15]],[["result",4,["error"]],["datainit",8],["error",4]]],[[],[["usize",15],["result",6,["usize"]]]],[[["usize",15]],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[["duration",3]],[["eventreadresult",4],["result",6,["eventreadresult"]]]],[[["usize",15],["asrawfd",8]],[["result",4,["error"]],["error",4]]],[[],["protection",3]],[[],["bool",15]],[[],[["result",6,["pid"]],["pid",6]]],[[],[["netlinkgenericread",3],["result",6,["netlinkgenericread"]]]],[[],["result",6]],[[],["result",6]],[[["ioslicemut",3]],["result",6]],[[["ioslicemut",3]],["result",6]],[[["ioslicemut",3]],["result",6]],[[["ioslicemut",3]],["result",6]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[["usize",15]],[["result",4,["error"]],["error",4]]],[[["option",4,["duration"]],["duration",3]],["result",6]],[[["option",4,["duration"]],["duration",3]],["result",6]],[[],[["result",6,["duration"]],["duration",3]]],[[],[["result",6,["duration"]],["duration",3]]],[[["usize",15]],["usize",15]],[[["asref",8,["path"]],["path",3]],[["option",4,["safedescriptor"]],["result",6,["option"]]]],null,null,[[],["bool",15]],[[["seekfrom",4]],[["u64",15],["result",6,["u64"]]]],[[["u64",15]],[["result",6,["option"]],["option",4,["u64"]]]],[[["u64",15]],[["result",6,["option"]],["option",4,["u64"]]]],[[["rawfd",6]],[["usize",15],["result",6,["usize"]]]],[[["rawfd",6]],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["rawfd",6]],[["usize",15],["result",6,["usize"]]]],[[["rawfd",6]],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["result",6]],[[["intoiterator",8]],["result",6]],[[]],[[["bool",15]],["result",6]],[[["bool",15]],["result",6]],[[["rawfd",6],["usize",15]],[["usize",15],["result",6,["usize"]]]],[[],["result",6]],[[],["result",6]],[[],["watchingevents",3]],[[],["protection",3]],[[["u64",15]],["result",6]],[[["i32",15]],["result",6]],[[]],[[]],[[["u64",15]],["result",6]],[[],["watchingevents",3]],[[],["protection",3]],[[]],[[],[["result",6,["pid"]],["pid",6]]],[[],["bool",15]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["u64",15]],[[],["rawfd",6]],[[],[["error",8],["option",4,["error"]]]],null,null,[[],["polleventsowned",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[],[["error",3],["result",4,["timerfd","error"]],["timerfd",3]]],[[],[["result",6,["safedescriptor"]],["safedescriptor",3]]],[[],[["result",6,["eventfd"]],["eventfd",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["asrawfd",8]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["rawfd",6]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["layout",3]]],[[],[["result",4,["error"]],["error",4]]],[[["rawfd",6]],[["result",6,["rawfd"]],["rawfd",6]]],null,null,null,[[["epollevents",3]],[["result",6,["pollevents"]],["pollevents",3]]],[[],[["result",6,["pollevents"]],["pollevents",3]]],[[],[["u64",15],["result",6,["u64"]]]],[[],[["u64",15],["result",6,["u64"]]]],[[["c_int",6],["asrawpid",8]],["result",6]],[[["epollevents",3],["duration",3]],[["result",6,["pollevents"]],["pollevents",3]]],[[["duration",3]],[["result",6,["pollevents"]],["pollevents",3]]],null,null,null,[[],["bool",15]],[[["u64",15]],["result",6]],[[],[["usize",15],["result",6,["usize"]]]],[[["usize",15],["asrawfd",8]],[["result",4,["error"]],["error",4]]],[[["usize",15],["datainit",8]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[["usize",15]],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[["usize",15]],[["usize",15],["result",6,["usize"]]]],[[["usize",15]],["result",6]],[[["usize",15]],["result",6]],[[["u64",15],["usize",15]],["result",6]],[[["u64",15],["usize",15]],["result",6]],[[["u64",15],["usize",15]],[["usize",15],["result",6,["usize"]]]],[[["layout",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]],["result",6]],[[],[["vec",3,["rawfd"]],["rawfd",6]]],[[],["result",6]],[[],[["u64",15],["result",6,["u64"]]]],null,[[["u64",15],["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],[[["u64",15],["volatileslice",3]],["result",6]],[[["volatileslice",3]],["result",6]],[[["u64",15]],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],[[["u64",15]],["result",6]],[[["u64",15],["volatileslice",3]],["result",6]],[[["volatileslice",3]],["result",6]],[[["u64",15],["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],[[["u64",15]],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[["volatileslice",3]],[["usize",15],["result",6,["usize"]]]],null,null,[[["usize",15]]],[[["usize",15]]],[[],["iobufmut",3]],[[],["iovec",3]],[[]],[[]],[[]],[[],["iovec",3]],[[]],[[]],[[]],[[]],[[],["iovec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["iovec",3]],[[],["volatileslice",3]],[[],["iobufmut",3]],[[]],[[]],[[]],[[]],[[]],[[["volatileslice",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[["usize",15]],["volatileslice",3]],[[["usize",15]],["iobufmut",3]],[[["usize",15]],[["volatilememoryerror",4],["result",4,["volatileslice","volatilememoryerror"]],["volatileslice",3]]],[[]],[[]],[[]],[[]],null,null,null,[[],["bool",15]],[[],["usize",15]],[[],["volatileslice",3]],[[],["iobufmut",3]],null,[[["usize",15]],[["result",4,["volatileslice","volatilememoryerror"]],["volatilememoryerror",4],["volatileslice",3]]],[[["usize",15],["i32",15],["i64",15]],["isize",15]],[[["i32",15],["i64",15]],["isize",15]],[[["usize",15],["i32",15],["i64",15]],["isize",15]],[[["i32",15],["i64",15]],["isize",15]],[[["usize",15],["i32",15]],["isize",15]],[[["i32",15]],["isize",15]],[[],["usize",15]],null,[[["usize",15]],[["result",4,["volatileslice","volatilememoryerror"]],["volatilememoryerror",4],["volatileslice",3]]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["i32",15]],["isize",15]],[[["u8",15]]],[[["i32",15]],["isize",15]],null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ioctlnr",6]],["c_int",6]],[[["ioctlnr",6]],["c_int",6]],[[["ioctlnr",6]],["c_int",6]],[[["ioctlnr",6]],["c_int",6]],[[["ioctlnr",6]],["c_int",6]],[[["c_ulong",6],["ioctlnr",6]],["c_int",6]],null,null,null,null,null,null,null,null,[[],[["unixseqpacket",3],["result",6,["unixseqpacket"]]]],[[],["rawdescriptor",6]],[[],["rawdescriptor",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],["unixseqpacketlistener",3]],[[["asref",8,["path"]],["path",3]],["result",6]],[[["tosocketaddrs",8]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["inetversion",4]],[[]],[[["tosocketaddrs",8]],[["tcpstream",3],["result",6,["tcpstream"]]]],[[["asref",8,["path"]],["path",3]],["result",6]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[["inetversion",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["rawdescriptor",6]]],[[["rawfd",6]]],[[["rawfd",6]]],[[["socketaddr",4]]],[[],[["usize",15],["result",6,["usize"]]]],[[]],[[]],[[]],[[]],[[]],[[],["rawdescriptor",6]],[[],["rawfd",6]],[[],[["result",6,["tcplistener"]],["tcplistener",3]]],[[],[["u16",15],["result",6,["u16"]]]],[[["inetversion",4]],["result",6]],[[],[["usize",15],["result",6,["usize"]]]],[[],["result",6]],[[],[["result",6,["pathbuf"]],["pathbuf",3]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["vec",3,["u8"]],["result",6,["vec"]]]],[[],["result",6]],[[["vec",3]],["result",6]],[[],[["usize",15],["result",6,["usize"]]]],[[],["result",4]],[[["option",4,["duration"]],["duration",3]],["result",6]],[[["option",4,["duration"]],["duration",3]],["result",6]],[[],["rawfd",6]],[[]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[],["source",4]],[[]],[[]],[[["source",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["source",4]],["result",6]],[[["usize",15],["source",4]],[["result",6,["vec"]],["vec",3,["u8"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[],[["result",6,["direntry"]],["option",4,["result"]]]],null,[[["off64_t",6]],[["result",6,["readdir"]],["readdir",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],null,[[],["path",3]],[[]],[[]],[[],["result",6]],[[]],[[]],[[]],[[["str",15],["option",4,["str"]]],["pathbuf",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["signal",4]]],[[["signal",4]]],[[]],[[]],[[]],[[],["result",6]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["child",3]],[[],["child",3]],[[["c_int",6]],["signalresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["c_int",6]],["signalresult",6]],[[["c_int",6]],["result",6]],[[],["signal",4]],[[]],[[],[["result",6,["sigset_t"]],["sigset_t",3]]],[[]],[[]],[[]],[[["signal",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["child",3]]],[[]],[[]],[[]],[[],[["vec",3,["c_int"]],["signalresult",6,["vec"]]]],[[["c_int",6]],[["result",6,["bool"]],["bool",15]]],[[]],[[]],[[]],[[["c_int",6],["pid",6]],["result",6]],[[["c_int",6]],["result",6]],[[["child",3],["duration",3]],["signalresult",6]],[[],["pthread_t",6]],[[["c_int",6]],["result",6]],[[["c_int",6]],["result",6]],[[],["duration",3]],[[],["duration",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["c_int",6]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["c_int",6]],["signalresult",6]],[[["option",4,["duration"]],["duration",3]],[["c_int",6],["result",6,["c_int"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["priority",4]],[[],["facility",4]],[[]],[[]],[[["option",4,["file"]],["file",3]]],[[["bool",15]]],[[["bool",15]],[["error",4],["result",4,["error"]]]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],[["error",4],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[["arguments",3],["priority",4],["facility",4],["option",4]]],[[["priority",4],["facility",4]],["syslogger",3]],[[["vec",3]]],[[["vec",3]]],[[["into",8,["string"]],["string",3]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[],[["i32",15],["vec",3,["i32","global"]],["global",3]]],[[["tosocketaddr",8]],["result",6]],[[["tosocketaddr",8]],[["result",6,["vsocklistener"]],["vsocklistener",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["vsockcid",4]],[[],["socketaddr",3]],[[]],[[]],[[["vsockcid",4]],["ordering",4]],[[["socketaddr",3]],["ordering",4]],[[["tosocketaddr",8]],[["vsockstream",3],["result",6,["vsockstream"]]]],[[["tosocketaddr",8]],[["vsockstream",3],["result",6,["vsockstream"]]]],[[]],[[["vsockcid",4]],["bool",15]],[[["socketaddr",3]],["bool",15]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["c_uint",6]]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],[["result",4,["socketaddr","addrparseerror"]],["addrparseerror",3],["socketaddr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rawfd",6]],[[],["rawfd",6]],[[],[["result",6,["vsocklistener"]],["vsocklistener",3]]],[[],[["result",6,["u32"]],["u32",15]]],[[],[["result",6,["u32"]],["u32",15]]],[[],[["result",6,["u32"]],["u32",15]]],[[["vsockcid",4]],["bool",15]],[[["socketaddr",3]],["bool",15]],[[],["result",6]],[[["vsockcid",4]],[["option",4,["ordering"]],["ordering",4]]],[[["socketaddr",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[],[["usize",15],["result",6,["usize"]]]],[[["bool",15]],["result",6]],[[["bool",15]],["result",6]],[[["bool",15]],["result",6]],[[]],[[]],[[],[["socketaddr",3],["addrparseerror",3],["result",4,["socketaddr","addrparseerror"]]]],[[],[["socketaddr",3],["addrparseerror",3],["result",4,["socketaddr","addrparseerror"]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",6]],[[],[["vsockstream",3],["result",6,["vsockstream"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["result",6,["usize"]]]],null,[[],["result",4]],[[["asrawdescriptor",8],["serializer",8]],["result",4]],[[],[["rawdescriptor",6],["result",4,["rawdescriptor"]]]],[[["rawdescriptor",6],["serializer",8]],["result",4]]],"p":[[3,"Fd"],[3,"UnlinkUnixDatagram"],[3,"UnlinkUnixListener"],[3,"Descriptor"],[3,"FileSerdeWrapper"],[4,"Error"],[4,"FallocateMode"],[4,"WaitStatus"],[4,"EventReadResult"],[4,"Error"],[4,"CloneNamespace"],[4,"Error"],[4,"CloneError"],[4,"FlockOperation"],[4,"FileFlags"],[3,"NetlinkMessage"],[3,"EpollContext"],[3,"PollContext"],[3,"MemoryMappingArena"],[3,"FakeClock"],[8,"MappedRegion"],[3,"SharedMemory"],[8,"AsIobuf"],[3,"LayoutAllocation"],[3,"ExternalMapping"],[3,"MemoryMapping"],[8,"AsRawDescriptor"],[3,"SignalFd"],[3,"SafeDescriptor"],[3,"EventFd"],[3,"TimerFd"],[3,"FakeTimerFd"],[8,"AsRawPid"],[6,"Pid"],[8,"PollToken"],[3,"PollEventsOwned"],[3,"MemfdSeals"],[3,"SerializeDescriptors"],[3,"ScopedEvent"],[3,"NetlinkMessageIter"],[3,"NetlinkGenericSocket"],[3,"NetlinkGenericRead"],[3,"EpollEvents"],[3,"PollEvent"],[3,"PollEventIter"],[3,"PollEvents"],[3,"WatchingEvents"],[3,"Clock"],[3,"Error"],[3,"Protection"],[6,"c_int"],[8,"FromRawDescriptor"],[8,"IntoRawDescriptor"],[6,"Result"],[8,"PunchHole"],[8,"ScmSocket"],[8,"SeekHole"],[8,"Terminal"],[8,"WriteZeroes"],[8,"WriteZeroesAt"],[13,"IterateTasks"],[13,"Multithreaded"],[13,"Sys"],[13,"LibraryError"],[13,"InvalidRange"],[13,"ReadToMemory"],[13,"SystemCallFailed"],[13,"WriteFromMemory"],[13,"CreateBlockSignal"],[13,"CreateSignalFd"],[13,"CreateSigset"],[13,"SignalFdPartialRead"],[13,"SignalFdRead"],[13,"Count"],[13,"Exited"],[13,"Signaled"],[13,"Stopped"],[8,"FileAllocate"],[8,"AsRawFds"],[8,"FileSync"],[8,"FileGetLen"],[8,"FileReadWriteAtVolatile"],[8,"FileReadWriteVolatile"],[8,"FileSetLen"],[3,"VolatileSlice"],[3,"IoBufMut"],[4,"c_void"],[3,"iovec"],[8,"InterruptibleResult"],[3,"UnlinkUnixSeqpacketListener"],[4,"InetVersion"],[3,"UnixSeqpacketListener"],[3,"UnixSeqpacket"],[3,"TcpSocket"],[4,"Source"],[3,"DirEntry"],[3,"ReadDir"],[3,"ScopedPath"],[4,"Error"],[3,"ScopedSignalHandler"],[3,"EmptySignalHandler"],[8,"SignalHandler"],[13,"HandlerAlreadySet"],[13,"HasDefaultSignalHandler"],[13,"RegisterSignalHandler"],[13,"Sigaction"],[13,"WaitForSignal"],[4,"Signal"],[4,"Error"],[3,"KillOnDrop"],[8,"Killable"],[13,"BlockSignal"],[13,"ClearCheckPending"],[13,"ClearGetPending"],[13,"ClearWaitPending"],[13,"CompareBlockedSignals"],[13,"CreateSigset"],[13,"GetSid"],[13,"Kill"],[13,"RetrieveSignalMask"],[13,"RtSignumGreaterThanMax"],[13,"SignalAlreadyBlocked"],[13,"UnblockSignal"],[13,"UnrecognizedSignum"],[13,"WaitForSignal"],[13,"WaitPid"],[4,"Priority"],[4,"Facility"],[4,"Error"],[3,"Syslogger"],[13,"Connect"],[13,"GetLowestFd"],[13,"Socket"],[4,"VsockCid"],[3,"VsockListener"],[3,"VsockSocket"],[3,"VsockStream"],[3,"AddrParseError"],[3,"SocketAddr"],[8,"ToSocketAddr"],[13,"Cid"]]},\
"tempfile":{"doc":"Temporary files and directories.","t":[3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Builder","NamedTempFile","PathPersistError","PersistError","SpooledTempFile","TempDir","TempPath","append","as_file","as_file_mut","as_raw_fd","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","close","close","default","deref","drop","drop","eq","error","error","file","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_path","into","into","into","into","into","into","into","into_file","into_inner","into_parts","into_path","into_temp_path","is_rolled","keep","keep","ne","new","new","new","new","new_in","new_in","path","path","path","persist","persist","persist_noclobber","persist_noclobber","prefix","rand_bytes","read","read","reopen","roll","seek","seek","set_len","source","source","spooled_tempfile","suffix","tempdir","tempdir","tempdir_in","tempdir_in","tempfile","tempfile","tempfile_in","tempfile_in","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write"],"q":["tempfile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Create a new temporary file or directory with custom …","A named temporary file.","Error returned when persisting a temporary file path fails.","Error returned when persisting a temporary file fails.","An object that behaves like a regular temporary file, but …","A directory in the filesystem that is automatically …","A path to a named temporary file without an open file …","Set the file to be opened in append mode.","Get a reference to the underlying file.","Get a mutable reference to the underlying file.","","","","","","","","","","","","","","","","","","","","","","Closes and removes the temporary directory, returning a …","Close and remove the temporary file.","Close and remove the temporary file.","","","","","","The underlying IO error.","The underlying IO error.","The temporary file that couldn’t be persisted.","","","","","","","","","","","","","","","","","","","","","Create a new TempPath from an existing path. This can be …","","","","","","","","Convert the temporary file into a <code>std::fs::File</code>.","Consumes and returns the inner <code>SpooledData</code> type.","Converts the named temporary file into its constituent …","Persist the temporary directory to disk, returning the …","Closes the file, leaving only the temporary file path.","Returns true if the file has been rolled over to disk.","Keep the temporary file from being deleted. This function …","Keep the temporary file from being deleted. This function …","","Attempts to make a temporary directory inside of …","Create a new named temporary file.","","Create a new <code>Builder</code>.","Attempts to make a temporary directory inside of <code>dir</code>. The …","Create a new named temporary file in the specified …","Accesses the <code>Path</code> to the temporary directory.","Get the temporary file’s path.","The temporary file path that couldn’t be persisted.","Persist the temporary file at the target path.","Persist the temporary file at the target path.","Persist the temporary file at the target path if and only …","Persist the temporary file at the target path if and only …","Set a custom filename prefix.","Set the number of random bytes.","","","Securely reopen the temporary file.","Rolls over to a file on disk, regardless of current size. …","","","","","","Create a new spooled temporary file.","Set a custom filename suffix.","Create a new temporary directory.","Attempts to make a temporary directory inside of …","Create a new temporary directory.","Attempts to make a temporary directory inside of <code>dir</code>. The …","Create a new temporary file.","Create the named temporary file.","Create a new temporary file in the specified directory.","Create the named temporary file in the specified directory.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,2,2,3,4,4,2,3,4,2,5,6,7,1,3,4,2,5,6,7,1,1,1,3,4,2,1,4,3,4,1,5,6,6,2,7,3,4,2,5,5,6,6,7,1,3,4,4,2,2,5,6,7,1,4,3,4,2,5,6,7,1,2,7,2,3,2,7,4,2,1,3,2,7,1,3,2,3,2,5,4,2,4,2,1,1,2,7,2,7,2,7,7,5,6,0,1,0,1,0,1,0,1,0,1,1,5,6,3,4,2,5,6,7,1,3,4,2,5,6,7,1,3,4,2,5,6,7,1,2,7],"f":[null,null,null,null,null,null,null,[[["bool",15]]],[[],["file",3]],[[],["file",3]],[[],["rawfd",6]],[[],["path",3]],[[],["path",3]],[[],["osstr",3]],[[],["path",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[],["path",3]],[[]],[[]],[[["builder",3]],["bool",15]],null,null,null,[[],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["pathpersisterror",3]],["temppath",3]],[[]],[[["persisterror",3]],["namedtempfile",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["file",3]],[[],["spooleddata",4]],[[]],[[],["pathbuf",3]],[[],["temppath",3]],[[],["bool",15]],[[],[["result",4,["pathbuf","pathpersisterror"]],["pathbuf",3],["pathpersisterror",3]]],[[],[["persisterror",3],["result",4,["persisterror"]]]],[[["builder",3]],["bool",15]],[[],[["tempdir",3],["result",6,["tempdir"]]]],[[],[["namedtempfile",3],["result",6,["namedtempfile"]]]],[[["usize",15]],["spooledtempfile",3]],[[]],[[["asref",8,["path"]],["path",3]],[["tempdir",3],["result",6,["tempdir"]]]],[[["asref",8,["path"]],["path",3]],[["namedtempfile",3],["result",6,["namedtempfile"]]]],[[],["path",3]],[[],["path",3]],null,[[["asref",8,["path"]],["path",3]],[["pathpersisterror",3],["result",4,["pathpersisterror"]]]],[[["asref",8,["path"]],["path",3]],[["result",4,["file","persisterror"]],["file",3],["persisterror",3]]],[[["asref",8,["path"]],["path",3]],[["pathpersisterror",3],["result",4,["pathpersisterror"]]]],[[["asref",8,["path"]],["path",3]],[["result",4,["file","persisterror"]],["file",3],["persisterror",3]]],[[]],[[["usize",15]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["result",6,["file"]],["file",3]]],[[],["result",6]],[[["seekfrom",4]],[["u64",15],["result",6,["u64"]]]],[[["seekfrom",4]],[["u64",15],["result",6,["u64"]]]],[[["u64",15]],[["result",4,["error"]],["error",3]]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[["usize",15]],["spooledtempfile",3]],[[]],[[],[["tempdir",3],["result",6,["tempdir"]]]],[[],[["tempdir",3],["result",6,["tempdir"]]]],[[["asref",8,["path"]],["path",3]],[["tempdir",3],["result",6,["tempdir"]]]],[[["asref",8,["path"]],["path",3]],[["tempdir",3],["result",6,["tempdir"]]]],[[],[["result",6,["file"]],["file",3]]],[[],[["namedtempfile",3],["result",6,["namedtempfile"]]]],[[["asref",8,["path"]],["path",3]],[["result",6,["file"]],["file",3]]],[[["asref",8,["path"]],["path",3]],[["namedtempfile",3],["result",6,["namedtempfile"]]]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["result",6,["usize"]]]],[[],[["usize",15],["result",6,["usize"]]]]],"p":[[3,"Builder"],[3,"NamedTempFile"],[3,"TempDir"],[3,"TempPath"],[3,"PathPersistError"],[3,"PersistError"],[3,"SpooledTempFile"]]},\
"thiserror":{"doc":"github crates-io docs-rs","t":[24],"n":["Error"],"q":["thiserror"],"d":[""],"i":[0],"f":[null],"p":[]},\
"thiserror_impl":{"doc":"","t":[24],"n":["Error"],"q":["thiserror_impl"],"d":[""],"i":[0],"f":[null],"p":[]},\
"tpm2":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11],"n":["Simulator","borrow","borrow_mut","execute_command","from","into","singleton_in_current_directory","try_from","try_into","type_id"],"q":["tpm2","","","","","","","","",""],"d":["A libtpm2-based TPM simulator.","","","Sends a TPM command to the TPM simulator, waits for the …","","","Initializes a TPM simulator in the current working …","","",""],"i":[0,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Simulator"]]},\
"tpm2_sys":{"doc":"","t":[5,5,5,5,5],"n":["ExecuteCommand","TPM_Manufacture","_TPM_Init","_plat__SetNvAvail","_plat__Signal_PowerOn"],"q":["tpm2_sys","","","",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[null,null,null,null,null],"p":[]},\
"unicode_segmentation":{"doc":"Iterators which split strings on Grapheme Cluster, Word or …","t":[3,4,3,3,13,13,13,13,17,3,3,3,3,8,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,12],"n":["GraphemeCursor","GraphemeIncomplete","GraphemeIndices","Graphemes","InvalidOffset","NextChunk","PreContext","PrevChunk","UNICODE_VERSION","USentenceBoundIndices","USentenceBounds","UWordBoundIndices","UWordBounds","UnicodeSegmentation","UnicodeSentences","UnicodeWordIndices","UnicodeWords","as_str","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","cur_cursor","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","grapheme_indices","graphemes","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_boundary","ne","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_boundary","prev_boundary","provide_context","set_cursor","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","split_sentence_bound_indices","split_sentence_bounds","split_word_bound_indices","split_word_bounds","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode_sentences","unicode_word_indices","unicode_words","0"],"q":["unicode_segmentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unicode_segmentation::GraphemeIncomplete"],"d":["Cursor-based segmenter for grapheme clusters.","An error return indicating that not enough content was …","External iterator for grapheme clusters and byte offsets.","External iterator for a string’s grapheme clusters.","An error returned when the chunk given does not contain …","When requesting <code>next_boundary</code>, the cursor is moving past …","More pre-context is needed. The caller should call …","When requesting <code>prev_boundary</code>, the cursor is moving past …","The version of Unicode that this version of …","External iterator for sentence boundaries and byte offsets.","External iterator for a string’s sentence boundaries.","External iterator for word boundaries and byte offsets.","External iterator for a string’s word boundaries.","Methods for segmenting strings according to Unicode …","An iterator over the substrings of a string which, after …","An iterator over the substrings of a string which, after …","An iterator over the substrings of a string which, after …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The current offset of the cursor. Equal to the last value …","","","","","","","","","","","","","","","","Returns an iterator over the grapheme clusters of <code>self</code> and …","Returns an iterator over the grapheme clusters of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","Determine whether the current cursor location is a …","","Create a new cursor. The string and initial offset are …","","","","","","","","","","","","","","","","Find the next boundary after the current cursor position. …","Find the previous boundary after the current cursor …","Provide additional pre-context when it is needed to decide …","Set the cursor to a new location in the same string.","","","","","","","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over the words of <code>self</code>, separated on …","Returns an iterator over the words of <code>self</code>, separated on …",""],"i":[0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,2,3,4,5,6,7,2,3,8,1,4,5,9,10,11,6,7,2,3,8,1,4,5,9,10,11,2,3,8,4,5,9,10,11,8,1,3,8,1,6,7,2,3,8,1,4,5,9,10,11,12,12,6,7,2,3,8,1,4,5,9,10,11,6,7,2,3,4,5,9,10,11,8,1,8,6,7,2,3,4,5,9,10,11,6,7,2,3,4,5,8,8,8,8,2,3,4,5,10,11,12,12,12,12,6,7,2,3,8,1,4,5,9,10,11,6,7,2,3,8,1,4,5,9,10,11,6,7,2,3,8,1,4,5,9,10,11,12,12,12,13],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["graphemeindices",3]],[[],["graphemes",3]],[[],["graphemecursor",3]],[[],["uwordbounds",3]],[[],["uwordboundindices",3]],[[],["unicodesentences",3]],[[],["usentencebounds",3]],[[],["usentenceboundindices",3]],[[],["usize",15]],[[["graphemeincomplete",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]],["graphemeindices",3]],[[["bool",15]],["graphemes",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["str",15]],[["bool",15],["graphemeincomplete",4],["result",4,["bool","graphemeincomplete"]]]],[[["graphemeincomplete",4]],["bool",15]],[[["usize",15],["bool",15]],["graphemecursor",3]],[[],[["str",15],["option",4,["str"]]]],[[],["option",4]],[[],["option",4]],[[],[["str",15],["option",4,["str"]]]],[[],[["str",15],["option",4,["str"]]]],[[],["option",4]],[[],[["str",15],["option",4,["str"]]]],[[],[["str",15],["option",4,["str"]]]],[[],["option",4]],[[],[["str",15],["option",4,["str"]]]],[[],["option",4]],[[],["option",4]],[[],[["str",15],["option",4,["str"]]]],[[],[["str",15],["option",4,["str"]]]],[[],["option",4]],[[["usize",15],["str",15]],[["result",4,["option","graphemeincomplete"]],["graphemeincomplete",4],["option",4,["usize"]]]],[[["usize",15],["str",15]],[["result",4,["option","graphemeincomplete"]],["graphemeincomplete",4],["option",4,["usize"]]]],[[["usize",15],["str",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usentenceboundindices",3]],[[],["usentencebounds",3]],[[],["uwordboundindices",3]],[[],["uwordbounds",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["unicodesentences",3]],[[],["unicodewordindices",3]],[[],["unicodewords",3]],null],"p":[[4,"GraphemeIncomplete"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[3,"UnicodeWords"],[3,"UnicodeWordIndices"],[3,"GraphemeCursor"],[3,"UnicodeSentences"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"],[8,"UnicodeSegmentation"],[13,"PreContext"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","t":[17,8,10,10],"n":["UNICODE_VERSION","UnicodeXID","is_xid_continue","is_xid_start"],"q":["unicode_xid","","",""],"d":["The version of Unicode that this version of unicode-xid is …","Methods for determining if a character is a valid …","Returns whether the specified <code>char</code> satisfies the ‘…","Returns whether the specified character satisfies the ‘…"],"i":[0,0,1,1],"f":[null,null,[[],["bool",15]],[[],["bool",15]]],"p":[[8,"UnicodeXID"]]},\
"usb_sys":{"doc":"","t":[5,5,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,17,17,5,5,5,5,5,5,5,5,17,5,5,5,5,5,5,5,5,5,17,17,17,17,17,17,17,17,17,17,3,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12],"n":["USBDEVFS_ALLOC_STREAMS","USBDEVFS_BULK","USBDEVFS_CAP_BULK_CONTINUATION","USBDEVFS_CAP_BULK_SCATTER_GATHER","USBDEVFS_CAP_DROP_PRIVILEGES","USBDEVFS_CAP_MMAP","USBDEVFS_CAP_NO_PACKET_SIZE_LIM","USBDEVFS_CAP_REAP_AFTER_DISCONNECT","USBDEVFS_CAP_ZERO_PACKET","USBDEVFS_CLAIMINTERFACE","USBDEVFS_CLAIM_PORT","USBDEVFS_CLEAR_HALT","USBDEVFS_CONNECT","USBDEVFS_CONNECTINFO","USBDEVFS_CONTROL","USBDEVFS_DISCARDURB","USBDEVFS_DISCONNECT","USBDEVFS_DISCONNECT_CLAIM","USBDEVFS_DISCONNECT_CLAIM_EXCEPT_DRIVER","USBDEVFS_DISCONNECT_CLAIM_IF_DRIVER","USBDEVFS_DISCSIGNAL","USBDEVFS_DROP_PRIVILEGES","USBDEVFS_FREE_STREAMS","USBDEVFS_GETDRIVER","USBDEVFS_GET_CAPABILITIES","USBDEVFS_GET_SPEED","USBDEVFS_HUB_PORTINFO","USBDEVFS_IOCTL","USBDEVFS_MAXDRIVERNAME","USBDEVFS_REAPURB","USBDEVFS_REAPURBNDELAY","USBDEVFS_RELEASEINTERFACE","USBDEVFS_RELEASE_PORT","USBDEVFS_RESET","USBDEVFS_RESETEP","USBDEVFS_SETCONFIGURATION","USBDEVFS_SETINTERFACE","USBDEVFS_SUBMITURB","USBDEVFS_URB_BULK_CONTINUATION","USBDEVFS_URB_ISO_ASAP","USBDEVFS_URB_NO_FSBR","USBDEVFS_URB_NO_INTERRUPT","USBDEVFS_URB_SHORT_NOT_OK","USBDEVFS_URB_TYPE_BULK","USBDEVFS_URB_TYPE_CONTROL","USBDEVFS_URB_TYPE_INTERRUPT","USBDEVFS_URB_TYPE_ISO","USBDEVFS_URB_ZERO_PACKET","__IncompleteArrayField","actual_length","actual_length","altsetting","as_mut_ptr","as_mut_slice","as_ptr","as_slice","bRequest","bRequestType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_length","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","data","default","default","default","default","default","devnum","driver","driver","endpoint","ep","eps","error_count","flags","flags","from","from","from","from","from","from","from","from","from","from","from","from","ifno","interface","interface","interface","into","into","into","into","into","into","into","into","into","into","into","into","ioctl_code","iso_frame_desc","len","length","new","nports","num_eps","num_streams","number_of_packets_or_stream_id","port","signr","slow","start_frame","status","status","timeout","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","urb_type","usbdevfs_bulktransfer","usbdevfs_connectinfo","usbdevfs_ctrltransfer","usbdevfs_disconnect_claim","usbdevfs_getdriver","usbdevfs_hub_portinfo","usbdevfs_ioctl","usbdevfs_iso_packet_desc","usbdevfs_setinterface","usbdevfs_streams","usbdevfs_urb","usercontext","wIndex","wLength","wValue"],"q":["usb_sysd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,4,4,4,5,5,6,4,5,7,3,8,9,1,2,10,11,12,6,4,5,7,3,8,9,1,2,10,11,12,2,2,4,5,7,3,8,9,1,2,10,11,12,4,5,7,3,8,9,1,2,10,11,12,5,7,10,4,3,9,1,2,9,8,12,2,7,6,2,2,12,6,4,5,7,3,8,9,1,2,10,11,12,10,3,8,12,6,4,5,7,3,8,9,1,2,10,11,12,10,2,7,1,4,11,6,6,2,11,2,9,2,1,2,5,7,4,5,7,3,8,9,1,2,10,11,12,6,4,5,7,3,8,9,1,2,10,11,12,6,4,5,7,3,8,9,1,2,10,11,12,6,4,5,7,3,8,9,1,2,10,11,12,2,0,0,0,0,0,0,0,0,0,0,0,2,5,5,5],"f":[[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,null,null,null,null,null,null,[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,null,[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[]],[[["usize",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[],["usbdevfs_ctrltransfer",3]],[[],["usbdevfs_bulktransfer",3]],[[],["usbdevfs_setinterface",3]],[[],["usbdevfs_getdriver",3]],[[],["usbdevfs_connectinfo",3]],[[],["usbdevfs_iso_packet_desc",3]],[[],["usbdevfs_urb",3]],[[],["usbdevfs_ioctl",3]],[[],["usbdevfs_hub_portinfo",3]],[[],["usbdevfs_disconnect_claim",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["__incompletearrayfield",3]],[[],["usbdevfs_setinterface",3]],[[],["usbdevfs_connectinfo",3]],[[],["usbdevfs_iso_packet_desc",3]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"usbdevfs_iso_packet_desc"],[3,"usbdevfs_urb"],[3,"usbdevfs_setinterface"],[3,"__IncompleteArrayField"],[3,"usbdevfs_ctrltransfer"],[3,"usbdevfs_streams"],[3,"usbdevfs_bulktransfer"],[3,"usbdevfs_getdriver"],[3,"usbdevfs_connectinfo"],[3,"usbdevfs_ioctl"],[3,"usbdevfs_hub_portinfo"],[3,"usbdevfs_disconnect_claim"]]},\
"usb_util":{"doc":"","t":[13,13,13,13,13,3,3,13,13,4,4,4,3,13,13,4,3,13,13,3,3,13,13,17,13,13,3,4,4,4,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,4,13,3,13,4,3,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["Bulk","Cancelled","Class","ClearFeature","Completed","ConfigDescriptor","ConfigDescriptorTree","Configuration","Control","ControlRequestDataPhaseTransferDirection","ControlRequestRecipient","ControlRequestType","DescriptorHeader","DescriptorParse","DescriptorRead","DescriptorType","Device","Device","Device","DeviceDescriptor","DeviceDescriptorTree","DeviceToHost","DeviceToHost","ENDPOINT_DIRECTION_OFFSET","Endpoint","Endpoint","EndpointDescriptor","EndpointDirection","EndpointType","Error","Error","FdCloneFailed","GetConfiguration","GetDescriptor","GetInterface","GetStatus","HostToDevice","HostToDevice","Interface","Interface","InterfaceDescriptor","InterfaceDescriptorTree","Interrupt","InvalidActualLength","InvalidBufferLength","IoctlFailed","Isochronous","NoDevice","NoDevice","NoSuchDescriptor","Other","RcGetMutFailed","RcUnwrapFailed","Reserved","Reserved","Result","SetAddress","SetConfiguration","SetDescriptor","SetFeature","SetInterface","Standard","StandardControlRequest","SynchFrame","Transfer","TransferAlreadyCompleted","TransferStatus","UsbRequestSetup","Vendor","actual_length","as_raw_descriptor","as_raw_descriptors","bAlternateSetting","bConfigurationValue","bDescriptorType","bDeviceClass","bDeviceProtocol","bDeviceSubClass","bEndpointAddress","bInterfaceClass","bInterfaceNumber","bInterfaceProtocol","bInterfaceSubClass","bInterval","bLength","bMaxPacketSize0","bMaxPower","bNumConfigurations","bNumEndpoints","bNumInterfaces","bcdDevice","bcdUSB","bmAttributes","bmAttributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","claim_interface","clear_halt","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","control_request_type","default","default","default","default","default","deref","deref","deref","eq","eq","eq","eq","eq","eq","eq","fd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_active_configuration","get_config_descriptor","get_config_descriptor","get_config_descriptor_by_index","get_config_descriptor_by_index","get_device_descriptor","get_device_descriptor_tree","get_direction","get_direction","get_endpoint_descriptor","get_endpoint_number","get_endpoint_type","get_interface_descriptor","get_num_configurations","get_recipient","get_standard_request","get_type","iConfiguration","iInterface","iManufacturer","iProduct","iSerialNumber","idProduct","idVendor","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","length","new","new","new_bulk","new_control","new_interrupt","new_isochronous","num_interfaces","offset","offset","parse_usbfs_descriptors","poll_transfers","raw","release_interface","request","request_type","reset","set_active_configuration","set_callback","set_interface_alt_setting","status","submit_transfer","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","wMaxPacketSize","wTotalLength","0","0","0","0","0","1"],"q":["usb_utilusb_util::Error","","","","",""],"d":["","","","","","Standard USB configuration descriptor as defined in USB …","","","","","Recipient type of control request.","Request types.","Standard USB descriptor header common to all descriptor …","","","Standard USB descriptor types.","Device represents a USB device.","","","Standard USB device descriptor as defined in USB 2.0 …","","","","Endpoint direction offset.","","","Standard USB endpoint descriptor as defined in USB 2.0 …","Endpoint Directions.","Endpoint types.","","","","","","","","","","","","Standard USB interface descriptor as defined in USB 2.0 …","","","","","","","","","","","","","","","","","","","","","","Standard request defined in usb spec.","","Transfer contains the information necessary to submit a …","","","RequestSetup is first part of control transfer buffer.","","Get the actual amount of data transferred, which may be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Claim an interface on this device.","Clear the halt/stall condition for an endpoint.","","","","","","","","","","","","","","","","","","","","","","","Construct a bmRequestType value for a control request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get bConfigurationValue of the currently active …","Get active config descriptor of this device.","","Get a configuration descriptor by its index within the …","Retrieve the Nth configuration descriptor in the device …","Get the device descriptor of this device.","","","Get request direction.","","","","Get interface by number and alt setting.","Get the total number of configurations for this device.","Get recipient of this control transfer.","Return the type of standard control request.","Get type of request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Device</code> from a file descriptor. <code>fd</code> should be a …","","Create a bulk transfer.","Create a control transfer.","Create an interrupt transfer.","Create an isochronous transfer.","","Get the offset of this configuration descriptor within the …","Get the offset of this interface descriptor within the raw …","Given <code>data</code> containing a full set of descriptors as …","Check for completed asynchronous transfers submitted via …","Access the raw descriptor tree as a slice of bytes.","Release an interface previously claimed with …","","","Perform a USB port reset to reinitialize a device.","Set active configuration for this device.","Set callback function for transfer completion.","Activate an alternate setting for an interface.","Get the status of a completed transfer.","Submit a transfer to the device. The transfer will be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,2,0,0,5,1,0,0,0,0,6,6,0,0,5,7,0,0,8,9,0,5,7,0,0,0,0,2,6,4,4,4,4,8,9,5,7,0,0,1,6,6,6,1,2,6,6,7,6,6,3,7,0,4,4,4,4,4,3,0,4,0,6,0,0,3,10,11,11,12,13,14,15,15,15,16,12,12,12,12,16,14,15,13,15,12,13,15,15,13,16,11,10,5,17,18,19,2,6,14,15,13,12,16,1,8,9,3,7,4,20,11,10,5,17,18,19,2,6,14,15,13,12,16,1,8,9,3,7,4,20,10,11,11,17,18,19,14,15,13,12,16,8,9,20,17,18,19,14,15,13,12,16,8,9,20,0,14,15,13,12,16,17,18,19,2,1,8,9,3,7,4,11,6,6,14,15,13,12,16,20,11,10,5,17,18,19,2,6,14,15,13,12,16,1,8,9,3,7,4,20,11,11,17,11,17,11,11,16,20,19,16,16,18,11,20,20,20,13,12,15,15,15,15,15,20,11,10,5,17,18,19,2,6,14,15,13,12,16,1,8,9,3,7,4,20,20,11,20,10,10,10,10,13,18,19,0,11,17,11,20,20,11,11,10,11,10,11,17,18,19,14,15,13,12,16,8,9,20,6,11,10,5,17,18,19,2,6,14,15,13,12,16,1,8,9,3,7,4,20,11,10,5,17,18,19,2,6,14,15,13,12,16,1,8,9,3,7,4,20,11,10,5,17,18,19,2,6,14,15,13,12,16,1,8,9,3,7,4,20,20,16,13,21,22,23,24,25,25],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[],["rawdescriptor",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u8",15]],["result",6]],[[["u8",15]],["result",6]],[[],["devicedescriptortree",3]],[[],["configdescriptortree",3]],[[],["interfacedescriptortree",3]],[[],["descriptorheader",3]],[[],["devicedescriptor",3]],[[],["configdescriptor",3]],[[],["interfacedescriptor",3]],[[],["endpointdescriptor",3]],[[],["endpointdirection",4]],[[],["controlrequestdataphasetransferdirection",4]],[[],["usbrequestsetup",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["controlrequesttype",4],["controlrequestrecipient",4],["controlrequestdataphasetransferdirection",4]],["u8",15]],[[],["descriptorheader",3]],[[],["devicedescriptor",3]],[[],["configdescriptor",3]],[[],["interfacedescriptor",3]],[[],["endpointdescriptor",3]],[[],["devicedescriptor",3]],[[],["configdescriptor",3]],[[],["interfacedescriptor",3]],[[["transferstatus",4]],["bool",15]],[[["endpointtype",4]],["bool",15]],[[["endpointdirection",4]],["bool",15]],[[["controlrequestdataphasetransferdirection",4]],["bool",15]],[[["controlrequesttype",4]],["bool",15]],[[["controlrequestrecipient",4]],["bool",15]],[[["standardcontrolrequest",4]],["bool",15]],[[],[["arc",3,["file"]],["file",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6,["u8"]],["u8",15]]],[[["u8",15]],[["result",6,["configdescriptortree"]],["configdescriptortree",3]]],[[["u8",15]],[["option",4,["configdescriptortree"]],["configdescriptortree",3]]],[[["u8",15]],[["result",6,["configdescriptortree"]],["configdescriptortree",3]]],[[["u8",15]],[["option",4,["configdescriptortree"]],["configdescriptortree",3]]],[[],[["devicedescriptor",3],["result",6,["devicedescriptor"]]]],[[],["devicedescriptortree",3]],[[],["endpointdirection",4]],[[],["controlrequestdataphasetransferdirection",4]],[[["u8",15]],[["endpointdescriptor",3],["option",4,["endpointdescriptor"]]]],[[],["u8",15]],[[],[["endpointtype",4],["option",4,["endpointtype"]]]],[[["u8",15]],[["interfacedescriptortree",3],["option",4,["interfacedescriptortree"]]]],[[],["u8",15]],[[],["controlrequestrecipient",4]],[[],[["option",4,["standardcontrolrequest"]],["standardcontrolrequest",4]]],[[],["controlrequesttype",4]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["file",3]],["result",6]],[[["u16",15],["u8",15]],["usbrequestsetup",3]],[[["vec",3,["u8"]],["u8",15]],[["transfer",3],["result",6,["transfer"]]]],[[["vec",3,["u8"]],["u8",15]],[["transfer",3],["result",6,["transfer"]]]],[[["vec",3,["u8"]],["u8",15]],[["transfer",3],["result",6,["transfer"]]]],[[["vec",3,["u8"]],["u8",15]],[["transfer",3],["result",6,["transfer"]]]],[[],["u8",15]],[[],["usize",15]],[[],["usize",15]],[[],[["devicedescriptortree",3],["result",6,["devicedescriptortree"]]]],[[],["result",6]],[[]],[[["u8",15]],["result",6]],null,null,[[],["result",6]],[[["u8",15]],["result",6]],[[["fn",8],["send",8],["sync",8]]],[[["u8",15]],["result",6]],[[],["transferstatus",4]],[[["transfer",3]],[["result",6,["transferhandle"]],["transferhandle",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null],"p":[[4,"EndpointType"],[4,"TransferStatus"],[4,"ControlRequestType"],[4,"StandardControlRequest"],[4,"DescriptorType"],[4,"Error"],[4,"ControlRequestRecipient"],[4,"EndpointDirection"],[4,"ControlRequestDataPhaseTransferDirection"],[3,"Transfer"],[3,"Device"],[3,"InterfaceDescriptor"],[3,"ConfigDescriptor"],[3,"DescriptorHeader"],[3,"DeviceDescriptor"],[3,"EndpointDescriptor"],[3,"DeviceDescriptorTree"],[3,"ConfigDescriptorTree"],[3,"InterfaceDescriptorTree"],[3,"UsbRequestSetup"],[13,"DescriptorRead"],[13,"FdCloneFailed"],[13,"InvalidActualLength"],[13,"InvalidBufferLength"],[13,"IoctlFailed"]]},\
"uuid":{"doc":"Generate and parse UUIDs.","t":[3,6,13,3,13,13,13,13,18,18,18,18,13,13,13,13,13,3,4,4,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,18,18,18,18,18,18,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Builder","Bytes","Dce","Error","Future","Mac","Md5","Microsoft","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","NCS","Nil","RFC4122","Random","Sha1","Uuid","Variant","Version","adapter","as_bytes","as_fields","as_u128","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","encode_buffer","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_fields","from_fields","from_fields_le","from_slice","from_slice","from_str","from_u128","from_u128","from_u128_le","get_variant","get_version","get_version_num","hash","hash","into","into","into","into","into","is_nil","ne","ne","new_v4","nil","nil","parse_str","partial_cmp","set_variant","set_version","source","to_fields_le","to_hyphenated","to_hyphenated_ref","to_owned","to_owned","to_owned","to_owned","to_simple","to_simple_ref","to_string","to_string","to_string","to_u128_le","to_urn","to_urn_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Hyphenated","HyphenatedRef","LENGTH","LENGTH","LENGTH","LENGTH","LENGTH","LENGTH","Simple","SimpleRef","Urn","UrnRef","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","encode_lower","encode_lower","encode_lower","encode_lower","encode_lower","encode_lower","encode_upper","encode_upper","encode_upper","encode_upper","encode_upper","encode_upper","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uuid","from_uuid","from_uuid","from_uuid_ref","from_uuid_ref","from_uuid_ref","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["uuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uuid::adapter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A builder struct for creating a UUID.","A 128-bit (16 byte) buffer containing the ID.","Version 2: DCE Security.","A general error that can occur when working with UUIDs.","Reserved for future expansion.","Version 1: MAC address.","Version 3: MD5 hash.","Reserved by Microsoft for backward compatibility.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","Reserved by the NCS for backward compatibility.","Special case for <code>nil</code> UUID.","As described in the RFC4122 Specification (default).","Version 4: Random.","Version 5: SHA-1 hash.","A Universally Unique Identifier (UUID).","The reserved variants of UUIDs.","The version of the UUID, denoting the generating algorithm.","Adapters for various formats for UUIDs","Returns an array of 16 octets containing the UUID data.","Returns the four field values of the UUID in big-endian …","Returns a 128bit value containing the UUID data.","","","","","","","","","","","Hands over the internal constructed <code>Uuid</code>.","","","","","","","","","","","A buffer that can be used for <code>encode_...</code> calls, that is …","","","","","","","","","","","","","","","","","","","","Creates a <code>Builder</code> using the supplied big-endian bytes.","Creates a UUID using the supplied big-endian bytes.","Creates a <code>Builder</code> from four big-endian field values.","Creates a UUID from four field values in big-endian order.","Creates a UUID from four field values in little-endian …","Creates a <code>Builder</code> using the supplied big-endian bytes.","Creates a UUID using the supplied big-endian bytes.","","Creates a <code>Builder</code> from a big-endian 128bit value.","Creates a UUID from a 128bit value in big-endian order.","Creates a UUID from a 128bit value in little-endian order.","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","","","","","","","","Tests if the UUID is nil.","","","Creates a random UUID.","Creates a <code>Builder</code> with an initial <code>Uuid::nil</code>.","The ‘nil UUID’.","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","Specifies the variant of the UUID.","Specifies the version number of the UUID.","","Returns the four field values of the UUID in little-endian …","Get a <code>Hyphenated</code> formatter.","Get a borrowed <code>HyphenatedRef</code> formatter.","","","","","Get a <code>Simple</code> formatter.","Get a borrowed <code>SimpleRef</code> formatter.","","","","Returns a 128bit little-endian value containing the UUID …","Get a <code>Urn</code> formatter.","Get a borrowed <code>UrnRef</code> formatter.","","","","","","","","","","","","","","","","An adaptor for formatting an <code>Uuid</code> as a hyphenated string.","An adaptor for formatting an <code>Uuid</code> as a hyphenated string.","The length of a hyphenated <code>Uuid</code> string.","The length of a hyphenated <code>Uuid</code> string.","The length of a simple <code>Uuid</code> string.","The length of a simple <code>Uuid</code> string.","The length of a URN <code>Uuid</code> string.","The length of a URN <code>Uuid</code> string.","An adaptor for formatting an <code>Uuid</code> as a simple string.","An adaptor for formatting an <code>Uuid</code> as a simple string.","An adaptor for formatting an <code>Uuid</code> as a URN string.","An adaptor for formatting an <code>Uuid</code> as a URN string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes the <code>Uuid</code> as a lower-case hyphenated string to <code>buffer</code>…","Writes the <code>Uuid</code> as a lower-case hyphenated string to <code>buffer</code>…","Writes the <code>Uuid</code> as a lower-case simple string to <code>buffer</code>, …","Writes the <code>Uuid</code> as a lower-case simple string to <code>buffer</code>, …","Writes the <code>Uuid</code> as a lower-case URN string to <code>buffer</code>, and …","Writes the <code>Uuid</code> as a lower-case URN string to <code>buffer</code>, and …","Writes the <code>Uuid</code> as an upper-case hyphenated string to …","Writes the <code>Uuid</code> as an upper-case hyphenated string to …","Writes the <code>Uuid</code> as an upper-case simple string to <code>buffer</code>, …","Writes the <code>Uuid</code> as an upper-case simple string to <code>buffer</code>, …","Writes the <code>Uuid</code> as an upper-case URN string to <code>buffer</code>, and …","Writes the <code>Uuid</code> as an upper-case URN string to <code>buffer</code>, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Hyphenated</code> from a <code>Uuid</code>.","Creates a <code>Simple</code> from a <code>Uuid</code>.","Creates a <code>Urn</code> from a <code>Uuid</code>.","Creates a <code>HyphenatedRef</code> from a <code>Uuid</code> reference.","Creates a <code>SimpleRef</code> from a <code>Uuid</code> reference.","Creates a <code>UrnRef</code> from a <code>Uuid</code> reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,2,1,1,2,3,3,3,3,2,1,2,1,1,0,0,0,0,3,3,3,4,5,1,2,3,4,5,1,2,3,5,4,1,2,3,4,1,2,3,3,3,3,4,1,2,3,4,4,5,1,2,2,3,3,3,3,4,5,1,2,3,5,3,5,3,3,5,3,3,5,3,3,3,3,3,4,3,4,5,1,2,3,3,4,3,3,5,3,3,3,5,5,4,3,3,3,4,1,2,3,3,3,4,2,3,3,3,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,0,0,6,7,8,9,10,11,0,0,0,0,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,8,10,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,6,6,7,7,8,8,9,9,10,10,11,11,6,8,10,7,9,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bytes",6]],[[]],[[],["u128",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["uuid",3]],[[],["error",3]],[[],["version",4]],[[],["variant",4]],[[],["uuid",3]],[[]],[[]],[[]],[[]],[[["uuid",3]],["ordering",4]],[[]],[[]],[[["error",3]],["bool",15]],[[["version",4]],["bool",15]],[[["variant",4]],["bool",15]],[[["uuid",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["bytes",6]]],[[["bytes",6]],["uuid",3]],[[["u16",15],["u32",15]],[["result",4,["error"]],["error",3]]],[[["u16",15],["u32",15]],[["uuid",3],["error",3],["result",4,["uuid","error"]]]],[[["u16",15],["u32",15]],[["uuid",3],["error",3],["result",4,["uuid","error"]]]],[[],[["result",4,["error"]],["error",3]]],[[],[["uuid",3],["error",3],["result",4,["uuid","error"]]]],[[["str",15]],["result",4]],[[["u128",15]]],[[["u128",15]]],[[["u128",15]]],[[],[["variant",4],["option",4,["variant"]]]],[[],[["version",4],["option",4,["version"]]]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["error",3]],["bool",15]],[[["uuid",3]],["bool",15]],[[],["uuid",3]],[[]],[[]],[[["str",15]],[["uuid",3],["error",3],["result",4,["uuid","error"]]]],[[["uuid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["variant",4]]],[[["version",4]]],[[],[["option",4,["error"]],["error",8]]],[[]],[[],["hyphenated",3]],[[],["hyphenatedref",3]],[[]],[[]],[[]],[[]],[[],["simple",3]],[[],["simpleref",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["u128",15]],[[],["urn",3]],[[],["urnref",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hyphenated",3]],[[],["hyphenatedref",3]],[[],["simple",3]],[[],["simpleref",3]],[[],["urn",3]],[[],["urnref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hyphenated",3]],["ordering",4]],[[["hyphenatedref",3]],["ordering",4]],[[["simple",3]],["ordering",4]],[[["simpleref",3]],["ordering",4]],[[["urn",3]],["ordering",4]],[[["urnref",3]],["ordering",4]],[[],["hyphenated",3]],[[],["simple",3]],[[],["urn",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["hyphenated",3]],["bool",15]],[[["hyphenatedref",3]],["bool",15]],[[["simple",3]],["bool",15]],[[["simpleref",3]],["bool",15]],[[["urn",3]],["bool",15]],[[["urnref",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["uuid",3]]],[[]],[[["uuid",3]]],[[["uuid",3]]],[[]],[[["uuid",3]]],[[]],[[["uuid",3]]],[[]],[[["uuid",3]]],[[]],[[["uuid",3]]],[[["uuid",3]]],[[["uuid",3]]],[[["uuid",3]]],[[["uuid",3]]],[[["uuid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hyphenated",3]],["bool",15]],[[["hyphenatedref",3]],["bool",15]],[[["simple",3]],["bool",15]],[[["simpleref",3]],["bool",15]],[[["urn",3]],["bool",15]],[[["urnref",3]],["bool",15]],[[["hyphenated",3]],[["option",4,["ordering"]],["ordering",4]]],[[["hyphenatedref",3]],[["option",4,["ordering"]],["ordering",4]]],[[["simple",3]],[["option",4,["ordering"]],["ordering",4]]],[[["simpleref",3]],[["option",4,["ordering"]],["ordering",4]]],[[["urn",3]],[["option",4,["ordering"]],["ordering",4]]],[[["urnref",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Version"],[4,"Variant"],[3,"Uuid"],[3,"Error"],[3,"Builder"],[3,"Hyphenated"],[3,"HyphenatedRef"],[3,"Simple"],[3,"SimpleRef"],[3,"Urn"],[3,"UrnRef"]]},\
"vfio_sys":{"doc":"","tn":["PLAT_IRQ_FORWARD_SET","VFIO_CHECK_EXTENSION","VFIO_DEVICE_GET_GFX_DMABUF","VFIO_DEVICE_GET_INFO","VFIO_DEVICE_GET_IRQ_INFO","VFIO_DEVICE_GET_PCI_HOT_RESET_INFO","VFIO_DEVICE_GET_REGION_INFO","VFIO_DEVICE_IOEVENTFD","VFIO_DEVICE_PCI_HOT_RESET","VFIO_DEVICE_QUERY_GFX_PLANE","VFIO_DEVICE_RESET","VFIO_DEVICE_SET_IRQS","VFIO_GET_API_VERSION","VFIO_GROUP_GET_DEVICE_FD","VFIO_GROUP_GET_STATUS","VFIO_GROUP_SET_CONTAINER","VFIO_GROUP_UNSET_CONTAINER","VFIO_IOMMU_DISABLE","VFIO_IOMMU_ENABLE","VFIO_IOMMU_GET_INFO","VFIO_IOMMU_MAP_DMA","VFIO_IOMMU_UNMAP_DMA","VFIO_SET_IOMMU","plat","vfio","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","PLAT_IRQ_FORWARD_API_VERSION","PLAT_IRQ_FORWARD_BASE","PLAT_IRQ_FORWARD_SET_EDGE_TRIGGER","PLAT_IRQ_FORWARD_SET_LEVEL_TRIGGER_EVENTFD","PLAT_IRQ_FORWARD_SET_LEVEL_UNMASK_EVENTFD","PLAT_IRQ_FORWARD_TYPE","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","__BITS_PER_LONG","__FD_SETSIZE","__IncompleteArrayField","__be16","__be32","__be64","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sighandler_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__wsum","action_flags","argsz","as_mut_ptr","as_mut_slice","as_ptr","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","default","default","default","default","eventfd","fds_bits","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","irq_number_host","new","plat_irq_forward_set","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","val","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","VFIO_API_VERSION","VFIO_BASE","VFIO_CCW_CONFIG_REGION_INDEX","VFIO_CCW_IO_IRQ_INDEX","VFIO_CCW_NUM_IRQS","VFIO_CCW_NUM_REGIONS","VFIO_DEVICE_API_AMBA_STRING","VFIO_DEVICE_API_CCW_STRING","VFIO_DEVICE_API_PCI_STRING","VFIO_DEVICE_API_PLATFORM_STRING","VFIO_DEVICE_FLAGS_AMBA","VFIO_DEVICE_FLAGS_CCW","VFIO_DEVICE_FLAGS_PCI","VFIO_DEVICE_FLAGS_PLATFORM","VFIO_DEVICE_FLAGS_RESET","VFIO_DEVICE_IOEVENTFD_16","VFIO_DEVICE_IOEVENTFD_32","VFIO_DEVICE_IOEVENTFD_64","VFIO_DEVICE_IOEVENTFD_8","VFIO_DEVICE_IOEVENTFD_SIZE_MASK","VFIO_DMA_CC_IOMMU","VFIO_DMA_MAP_FLAG_READ","VFIO_DMA_MAP_FLAG_WRITE","VFIO_EEH","VFIO_EEH_PE_CONFIGURE","VFIO_EEH_PE_DISABLE","VFIO_EEH_PE_ENABLE","VFIO_EEH_PE_GET_STATE","VFIO_EEH_PE_INJECT_ERR","VFIO_EEH_PE_RESET_DEACTIVATE","VFIO_EEH_PE_RESET_FUNDAMENTAL","VFIO_EEH_PE_RESET_HOT","VFIO_EEH_PE_STATE_NORMAL","VFIO_EEH_PE_STATE_RESET","VFIO_EEH_PE_STATE_STOPPED","VFIO_EEH_PE_STATE_STOPPED_DMA","VFIO_EEH_PE_STATE_UNAVAIL","VFIO_EEH_PE_UNFREEZE_DMA","VFIO_EEH_PE_UNFREEZE_IO","VFIO_GFX_PLANE_TYPE_DMABUF","VFIO_GFX_PLANE_TYPE_PROBE","VFIO_GFX_PLANE_TYPE_REGION","VFIO_GROUP_FLAGS_CONTAINER_SET","VFIO_GROUP_FLAGS_VIABLE","VFIO_IOMMU_INFO_PGSIZES","VFIO_IOMMU_SPAPR_INFO_DDW","VFIO_IRQ_INFO_AUTOMASKED","VFIO_IRQ_INFO_EVENTFD","VFIO_IRQ_INFO_MASKABLE","VFIO_IRQ_INFO_NORESIZE","VFIO_IRQ_SET_ACTION_MASK","VFIO_IRQ_SET_ACTION_TRIGGER","VFIO_IRQ_SET_ACTION_TYPE_MASK","VFIO_IRQ_SET_ACTION_UNMASK","VFIO_IRQ_SET_DATA_BOOL","VFIO_IRQ_SET_DATA_EVENTFD","VFIO_IRQ_SET_DATA_NONE","VFIO_IRQ_SET_DATA_TYPE_MASK","VFIO_NOIOMMU_IOMMU","VFIO_PCI_BAR0_REGION_INDEX","VFIO_PCI_BAR1_REGION_INDEX","VFIO_PCI_BAR2_REGION_INDEX","VFIO_PCI_BAR3_REGION_INDEX","VFIO_PCI_BAR4_REGION_INDEX","VFIO_PCI_BAR5_REGION_INDEX","VFIO_PCI_CONFIG_REGION_INDEX","VFIO_PCI_ERR_IRQ_INDEX","VFIO_PCI_INTX_IRQ_INDEX","VFIO_PCI_MSIX_IRQ_INDEX","VFIO_PCI_MSI_IRQ_INDEX","VFIO_PCI_NUM_IRQS","VFIO_PCI_NUM_REGIONS","VFIO_PCI_REQ_IRQ_INDEX","VFIO_PCI_ROM_REGION_INDEX","VFIO_PCI_VGA_REGION_INDEX","VFIO_REGION_INFO_CAP_MSIX_MAPPABLE","VFIO_REGION_INFO_CAP_SPARSE_MMAP","VFIO_REGION_INFO_CAP_TYPE","VFIO_REGION_INFO_FLAG_CAPS","VFIO_REGION_INFO_FLAG_MMAP","VFIO_REGION_INFO_FLAG_READ","VFIO_REGION_INFO_FLAG_WRITE","VFIO_REGION_SUBTYPE_INTEL_IGD_HOST_CFG","VFIO_REGION_SUBTYPE_INTEL_IGD_LPC_CFG","VFIO_REGION_SUBTYPE_INTEL_IGD_OPREGION","VFIO_REGION_TYPE_PCI_VENDOR_MASK","VFIO_REGION_TYPE_PCI_VENDOR_TYPE","VFIO_SPAPR_TCE_IOMMU","VFIO_SPAPR_TCE_v2_IOMMU","VFIO_TYPE","VFIO_TYPE1_IOMMU","VFIO_TYPE1_NESTING_IOMMU","VFIO_TYPE1v2_IOMMU","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","__BITS_PER_LONG","__FD_SETSIZE","__IncompleteArrayField","__be16","__be32","__be64","__bindgen_anon_1","__bindgen_anon_1","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sighandler_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__resv1","__resv2","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__wsum","_bindgen_ty_1","_bindgen_ty_2","_bindgen_ty_3","_bindgen_ty_4","addr","areas","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","argsz","as_mut_ptr","as_mut_slice","as_ptr","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","cap_info","cap_offset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count","count","data","data","ddw","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","devfn","devices","dma32_window_size","dma32_window_start","dmabuf_id","drm_format","drm_format_mod","drm_plane_type","err","fd","fds_bits","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","group_fds","group_id","header","header","height","id","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iova","iova","iova_pgsizes","levels","levels","mask","max_dynamic_windows_supported","new","next","nr_areas","num_irqs","num_regions","offset","offset","offset","op","page_shift","pgsizes","region_index","region_info","reserved","segment","size","size","size","size","size","size","start","start_addr","start_addr","stride","subtype","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vaddr","vaddr","val","version","vfio_device_gfx_plane_info","vfio_device_gfx_plane_info__bindgen_ty_1","vfio_device_info","vfio_device_ioeventfd","vfio_eeh_pe_err","vfio_eeh_pe_op","vfio_eeh_pe_op__bindgen_ty_1","vfio_group_status","vfio_info_cap_header","vfio_iommu_spapr_register_memory","vfio_iommu_spapr_tce_create","vfio_iommu_spapr_tce_ddw_info","vfio_iommu_spapr_tce_info","vfio_iommu_spapr_tce_remove","vfio_iommu_type1_dma_map","vfio_iommu_type1_dma_unmap","vfio_iommu_type1_info","vfio_irq_info","vfio_irq_set","vfio_pci_dependent_device","vfio_pci_hot_reset","vfio_pci_hot_reset_info","vfio_region_info","vfio_region_info_cap_sparse_mmap","vfio_region_info_cap_type","vfio_region_info_with_cap","vfio_region_sparse_mmap_area","width","window_size","x_hot","x_pos","y_hot","y_pos"],"q":["vfio_sys","","","","","","","","","","","","","","","","","","","","","","","","","vfio_sys::plat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vfio_sys::vfiodi":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,2,2,3,4,1,2,3,4,1,3,4,3,4,1,2,3,4,1,1,3,2,3,4,1,2,3,4,1,2,3,4,1,1,2,0,3,4,2,3,4,1,2,3,4,1,2,3,4,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,10,11,12,13,14,15,16,5,17,18,19,20,21,6,22,7,23,24,24,24,24,24,25,26,27,10,11,12,28,29,9,30,13,14,31,15,16,5,32,17,18,19,20,33,21,8,6,34,22,7,23,24,25,26,27,10,11,12,28,29,9,30,13,14,31,15,16,5,32,17,18,19,20,33,21,8,6,34,22,7,23,31,28,12,24,25,26,27,10,11,12,29,30,13,31,5,32,17,18,19,20,33,21,8,6,34,22,7,23,24,25,26,27,10,11,12,29,30,13,31,5,32,17,18,19,20,33,21,8,6,34,22,7,23,13,14,15,16,14,17,21,24,25,26,27,10,11,12,28,29,9,30,13,14,31,15,16,5,32,17,18,19,20,33,21,8,6,34,22,7,23,31,15,21,21,32,5,5,5,34,17,25,10,11,12,13,14,15,16,5,17,18,19,20,21,6,22,7,23,24,25,26,27,10,11,12,28,29,9,30,13,14,31,15,16,17,18,19,20,33,21,8,22,7,23,24,25,26,27,10,11,12,28,29,9,30,13,14,31,15,16,5,32,17,18,19,20,33,21,8,6,34,22,7,23,8,16,31,9,30,5,27,12,13,14,24,25,26,27,10,11,12,28,29,9,30,13,14,31,15,16,5,32,17,18,19,20,33,21,8,6,34,22,7,23,19,20,18,33,7,8,33,24,27,9,11,11,12,29,17,6,7,33,32,28,9,31,12,29,5,19,20,22,14,7,23,5,30,24,25,26,27,10,11,12,29,30,13,31,5,32,17,18,19,20,33,21,8,6,34,22,7,23,24,25,26,27,10,11,12,28,29,9,30,13,14,31,15,16,5,32,17,18,19,20,33,21,8,6,34,22,7,23,24,25,26,27,10,11,12,28,29,9,30,13,14,31,15,16,5,32,17,18,19,20,33,21,8,6,34,22,7,23,30,8,24,25,26,27,10,11,12,28,29,9,30,13,14,31,15,16,5,32,17,18,19,20,33,21,8,6,34,22,7,23,19,22,26,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,5,5,5,5],"f":[[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[]],[[]],null,[[],["__incompletearrayfield",3]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[],["plat_irq_forward_set",3]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[],["vfio_info_cap_header",3]],[[],["vfio_group_status",3]],[[],["vfio_device_info",3]],[[],["vfio_region_info",3]],[[],["vfio_region_sparse_mmap_area",3]],[[],["vfio_region_info_cap_type",3]],[[],["vfio_irq_info",3]],[[],["vfio_pci_dependent_device",3]],[[],["vfio_device_gfx_plane_info",3]],[[],["vfio_device_gfx_plane_info__bindgen_ty_1",19]],[[],["vfio_device_ioeventfd",3]],[[],["vfio_iommu_type1_info",3]],[[],["vfio_iommu_type1_dma_map",3]],[[],["vfio_iommu_type1_dma_unmap",3]],[[],["vfio_iommu_spapr_tce_ddw_info",3]],[[],["vfio_iommu_spapr_tce_info",3]],[[],["vfio_eeh_pe_err",3]],[[],["vfio_eeh_pe_op",3]],[[],["vfio_eeh_pe_op__bindgen_ty_1",19]],[[],["vfio_iommu_spapr_register_memory",3]],[[],["vfio_iommu_spapr_tce_create",3]],[[],["vfio_iommu_spapr_tce_remove",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["__incompletearrayfield",3]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[],["vfio_info_cap_header",3]],[[],["vfio_group_status",3]],[[],["vfio_device_info",3]],[[],["vfio_region_info",3]],[[],["vfio_region_info_with_cap",3]],[[],["vfio_region_sparse_mmap_area",3]],[[],["vfio_region_info_cap_sparse_mmap",3]],[[],["vfio_region_info_cap_type",3]],[[],["vfio_irq_info",3]],[[],["vfio_irq_set",3]],[[],["vfio_pci_dependent_device",3]],[[],["vfio_pci_hot_reset_info",3]],[[],["vfio_pci_hot_reset",3]],[[]],[[]],[[],["vfio_device_ioeventfd",3]],[[],["vfio_iommu_type1_info",3]],[[],["vfio_iommu_type1_dma_map",3]],[[],["vfio_iommu_type1_dma_unmap",3]],[[],["vfio_iommu_spapr_tce_ddw_info",3]],[[],["vfio_iommu_spapr_tce_info",3]],[[],["vfio_eeh_pe_err",3]],[[]],[[]],[[],["vfio_iommu_spapr_register_memory",3]],[[],["vfio_iommu_spapr_tce_create",3]],[[],["vfio_iommu_spapr_tce_remove",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"plat_irq_forward_set"],[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"vfio_device_gfx_plane_info"],[3,"vfio_eeh_pe_op"],[3,"vfio_iommu_spapr_tce_create"],[3,"vfio_eeh_pe_err"],[3,"vfio_region_info_cap_sparse_mmap"],[3,"vfio_group_status"],[3,"vfio_device_info"],[3,"vfio_region_info"],[3,"vfio_irq_info"],[3,"vfio_irq_set"],[3,"vfio_pci_hot_reset_info"],[3,"vfio_pci_hot_reset"],[3,"vfio_device_ioeventfd"],[3,"vfio_iommu_type1_info"],[3,"vfio_iommu_type1_dma_map"],[3,"vfio_iommu_type1_dma_unmap"],[3,"vfio_iommu_spapr_tce_info"],[3,"vfio_iommu_spapr_register_memory"],[3,"vfio_iommu_spapr_tce_remove"],[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"vfio_info_cap_header"],[3,"vfio_region_info_with_cap"],[3,"vfio_region_sparse_mmap_area"],[3,"vfio_region_info_cap_type"],[3,"vfio_pci_dependent_device"],[19,"vfio_device_gfx_plane_info__bindgen_ty_1"],[3,"vfio_iommu_spapr_tce_ddw_info"],[19,"vfio_eeh_pe_op__bindgen_ty_1"]]},\
"vhost":{"doc":"","t":[13,13,4,13,13,13,6,13,8,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,8,11,11,11,11,0,11,11,10,11,10,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AvailAddress","DescriptorTableAddress","Error","InvalidQueue","IoctlError","LogAddress","Result","UsedAddress","Vhost","VhostOpen","Vsock","as_raw_descriptor","as_raw_descriptors","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","get_features","get_vring_base","into","into","is_valid","net","new","reset_owner","set_cid","set_features","set_mem_table","set_owner","set_vring_addr","set_vring_base","set_vring_call","set_vring_err","set_vring_kick","set_vring_num","start","stop","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","Net","NetT","as_raw_descriptor","as_raw_descriptors","borrow","borrow_mut","fakes","from","into","new","new","set_backend","set_backend","try_from","try_into","type_id","FakeNet","as_raw_descriptor","as_raw_descriptors","borrow","borrow_mut","drop","from","into","new","set_backend","try_from","try_into","type_id"],"q":["vhost","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vhost::Error","","","","","","vhost::net","","","","","","","","","","","","","","","","vhost::net::fakes","","","","","","","","","","","",""],"d":["Invalid available address.","Invalid descriptor table address.","","Invalid queue.","Error while running ioctl.","Invalid log address.","","Invalid used address.","An interface for setting up vhost-based virtio devices.  …","Error opening vhost device.","Handle for running VHOST_VSOCK ioctls.","","","","","","","","","","","Get a bitmask of supported virtio/vhost features.","Gets the index of the next available descriptor in the …","","","","","Open a handle to a new VHOST_VSOCK instance.","Give up ownership and reset the device to default values. …","Set the CID for the guest.  This number is used for …","Inform the vhost subsystem which features to enable. This …","Set the guest memory mappings for vhost to use.","Set the current process as the owner of this file …","Set the addresses for a given vring.","Set the first index to look for available descriptors.","Set the event to trigger when buffers have been used by …","Set the event to trigger to signal an error.","Set the event that will be signaled by the guest when …","Set the number of descriptors in the vring.","Tell the VHOST driver to start performing data transfer.","Tell the VHOST driver to stop performing data transfer.","","","","","","","","","","","","","","Handle to run VHOST_NET ioctls.","","","","","","","","","Create a new NetT instance","Opens /dev/vhost-net and holds a file descriptor open for …","Set the tap file descriptor that will serve as the …","","","","","","","","","","","","","","","","",""],"i":[1,1,0,1,1,1,0,1,0,1,0,2,2,2,1,2,1,1,1,2,1,3,3,2,1,3,0,2,3,2,3,3,3,3,3,3,3,3,3,2,2,1,2,1,2,1,2,1,4,5,6,7,8,9,0,0,10,10,10,10,0,10,10,11,10,11,10,10,10,10,0,12,12,12,12,12,12,12,12,12,12,12,12],"f":[null,null,null,null,null,null,null,null,null,null,null,[[],["rawdescriptor",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["u64",15],["result",6,["u64"]]]],[[["usize",15]],[["u16",15],["result",6,["u16"]]]],[[]],[[]],[[["guestaddress",3],["u16",15],["guestmemory",3]],["bool",15]],null,[[["file",3]],["vsock",3]],[[],["result",6]],[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],[[["guestmemory",3]],["result",6]],[[],["result",6]],[[["usize",15],["u32",15],["guestaddress",3],["u16",15],["option",4,["guestaddress"]],["guestmemory",3]],["result",6]],[[["usize",15],["u16",15]],["result",6]],[[["usize",15],["event",3]],["result",6]],[[["usize",15],["event",3]],["result",6]],[[["usize",15],["event",3]],["result",6]],[[["usize",15],["u16",15]],["result",6]],[[],["result",6]],[[],["result",6]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[],["rawdescriptor",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],null,[[]],[[]],[[["path",3]],["result",6]],[[["path",3]],[["net",3],["result",6,["net"]]]],[[["usize",15],["option",4]],["result",6]],[[["usize",15],["option",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["rawdescriptor",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[["path",3]],[["result",6,["fakenet"]],["fakenet",3]]],[[["usize",15],["option",4]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"Error"],[3,"Vsock"],[8,"Vhost"],[13,"AvailAddress"],[13,"DescriptorTableAddress"],[13,"IoctlError"],[13,"LogAddress"],[13,"UsedAddress"],[13,"VhostOpen"],[3,"Net"],[8,"NetT"],[3,"FakeNet"]]},\
"virtio_sys":{"doc":"","t":[17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,12,12,6,6,6,6,3,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,6,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,12,12,12,12,3,3,3,12,3,3,3,12,3,3,3,3,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,6,6,6,6,6,6,6,3,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,6,3,3,3,3,3,3,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,12,6,6,6,6,3,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,6,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,12,12,3,3,3,3,3],"n":["VHOST","VHOST_GET_FEATURES","VHOST_GET_VRING_BASE","VHOST_NET_SET_BACKEND","VHOST_RESET_OWNER","VHOST_SCSI_CLEAR_ENDPOINT","VHOST_SCSI_GET_ABI_VERSION","VHOST_SCSI_GET_EVENTS_MISSED","VHOST_SCSI_SET_ENDPOINT","VHOST_SCSI_SET_EVENTS_MISSED","VHOST_SET_FEATURES","VHOST_SET_LOG_BASE","VHOST_SET_LOG_FD","VHOST_SET_MEM_TABLE","VHOST_SET_OWNER","VHOST_SET_VRING_ADDR","VHOST_SET_VRING_BASE","VHOST_SET_VRING_CALL","VHOST_SET_VRING_ERR","VHOST_SET_VRING_KICK","VHOST_SET_VRING_NUM","VHOST_VSOCK_SET_GUEST_CID","VHOST_VSOCK_SET_RUNNING","vhost","virtio_net","virtio_ring","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","PTRDIFF_MAX","PTRDIFF_MIN","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","VHOST_F_LOG_ALL","VHOST_NET_F_VIRTIO_NET_HDR","VHOST_PAGE_SIZE","VHOST_SCSI_ABI_VERSION","VHOST_VIRTIO","VHOST_VRING_BIG_ENDIAN","VHOST_VRING_F_LOG","VHOST_VRING_LITTLE_ENDIAN","VIRTIO_CONFIG_S_ACKNOWLEDGE","VIRTIO_CONFIG_S_DRIVER","VIRTIO_CONFIG_S_DRIVER_OK","VIRTIO_CONFIG_S_FAILED","VIRTIO_CONFIG_S_FEATURES_OK","VIRTIO_F_ANY_LAYOUT","VIRTIO_F_NOTIFY_ON_EMPTY","VIRTIO_F_VERSION_1","VIRTIO_RING_F_EVENT_IDX","VIRTIO_RING_F_INDIRECT_DESC","VIRTIO_TRANSPORT_F_END","VIRTIO_TRANSPORT_F_START","VRING_AVAIL_ALIGN_SIZE","VRING_AVAIL_F_NO_INTERRUPT","VRING_DESC_ALIGN_SIZE","VRING_DESC_F_INDIRECT","VRING_DESC_F_NEXT","VRING_DESC_F_WRITE","VRING_USED_ALIGN_SIZE","VRING_USED_F_NO_NOTIFY","WINT_MAX","WINT_MIN","_ATFILE_SOURCE","_BITS_WCHAR_H","_DEFAULT_SOURCE","_FEATURES_H","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_SYS_CDEFS_H","__BITS_PER_LONG","__FD_SETSIZE","__GLIBC_MINOR__","__GLIBC__","__GNU_LIBRARY__","__IncompleteArrayField","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__STDC_NO_THREADS__","__SYSCALL_WORDSIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__be16","__be32","__be64","__bindgen_align","__force_alignment","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sighandler_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__virtio16","__virtio32","__virtio64","__wsum","abi_version","addr","as_mut_ptr","as_mut_slice","as_ptr","as_slice","avail","avail_user_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","desc","desc_user_addr","event","fds_bits","flags","flags","flags","flags","flags_padding","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","guest_phys_addr","id","idx","idx","index","index","index","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","len","len","log_guest_addr","memory_size","new","next","nregions","num","num","padding","regions","reserved","ring","ring","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","used","used_user_addr","userspace_addr","val","vhost_memory","vhost_memory_region","vhost_scsi_target","vhost_tpgt","vhost_vring_addr","vhost_vring_file","vhost_vring_state","vhost_wwpn","vring","vring_avail","vring_desc","vring_used","vring_used_elem","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CAN","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_TSN","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_P_XDSA","ETH_ZLEN","VIRTIO_CONFIG_S_ACKNOWLEDGE","VIRTIO_CONFIG_S_DRIVER","VIRTIO_CONFIG_S_DRIVER_OK","VIRTIO_CONFIG_S_FAILED","VIRTIO_CONFIG_S_FEATURES_OK","VIRTIO_F_ANY_LAYOUT","VIRTIO_F_NOTIFY_ON_EMPTY","VIRTIO_F_VERSION_1","VIRTIO_ID_9P","VIRTIO_ID_BALLOON","VIRTIO_ID_BLOCK","VIRTIO_ID_CAIF","VIRTIO_ID_CONSOLE","VIRTIO_ID_GPU","VIRTIO_ID_INPUT","VIRTIO_ID_NET","VIRTIO_ID_RNG","VIRTIO_ID_RPMSG","VIRTIO_ID_RPROC_SERIAL","VIRTIO_ID_SCSI","VIRTIO_NET_CTRL_ANNOUNCE","VIRTIO_NET_CTRL_ANNOUNCE_ACK","VIRTIO_NET_CTRL_GUEST_OFFLOADS","VIRTIO_NET_CTRL_GUEST_OFFLOADS_SET","VIRTIO_NET_CTRL_MAC","VIRTIO_NET_CTRL_MAC_ADDR_SET","VIRTIO_NET_CTRL_MAC_TABLE_SET","VIRTIO_NET_CTRL_MQ","VIRTIO_NET_CTRL_MQ_VQ_PAIRS_MAX","VIRTIO_NET_CTRL_MQ_VQ_PAIRS_MIN","VIRTIO_NET_CTRL_MQ_VQ_PAIRS_SET","VIRTIO_NET_CTRL_RX","VIRTIO_NET_CTRL_RX_ALLMULTI","VIRTIO_NET_CTRL_RX_ALLUNI","VIRTIO_NET_CTRL_RX_NOBCAST","VIRTIO_NET_CTRL_RX_NOMULTI","VIRTIO_NET_CTRL_RX_NOUNI","VIRTIO_NET_CTRL_RX_PROMISC","VIRTIO_NET_CTRL_VLAN","VIRTIO_NET_CTRL_VLAN_ADD","VIRTIO_NET_CTRL_VLAN_DEL","VIRTIO_NET_ERR","VIRTIO_NET_F_CSUM","VIRTIO_NET_F_CTRL_GUEST_OFFLOADS","VIRTIO_NET_F_CTRL_MAC_ADDR","VIRTIO_NET_F_CTRL_RX","VIRTIO_NET_F_CTRL_RX_EXTRA","VIRTIO_NET_F_CTRL_VLAN","VIRTIO_NET_F_CTRL_VQ","VIRTIO_NET_F_GSO","VIRTIO_NET_F_GUEST_ANNOUNCE","VIRTIO_NET_F_GUEST_CSUM","VIRTIO_NET_F_GUEST_ECN","VIRTIO_NET_F_GUEST_TSO4","VIRTIO_NET_F_GUEST_TSO6","VIRTIO_NET_F_GUEST_UFO","VIRTIO_NET_F_HOST_ECN","VIRTIO_NET_F_HOST_TSO4","VIRTIO_NET_F_HOST_TSO6","VIRTIO_NET_F_HOST_UFO","VIRTIO_NET_F_MAC","VIRTIO_NET_F_MQ","VIRTIO_NET_F_MRG_RXBUF","VIRTIO_NET_F_MTU","VIRTIO_NET_F_STATUS","VIRTIO_NET_HDR_F_DATA_VALID","VIRTIO_NET_HDR_F_NEEDS_CSUM","VIRTIO_NET_HDR_GSO_ECN","VIRTIO_NET_HDR_GSO_NONE","VIRTIO_NET_HDR_GSO_TCPV4","VIRTIO_NET_HDR_GSO_TCPV6","VIRTIO_NET_HDR_GSO_UDP","VIRTIO_NET_OK","VIRTIO_NET_S_ANNOUNCE","VIRTIO_NET_S_LINK_UP","VIRTIO_TRANSPORT_F_END","VIRTIO_TRANSPORT_F_START","__BITS_PER_LONG","__FD_SETSIZE","__IncompleteArrayField","__be16","__be32","__be64","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sighandler_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__virtio16","__virtio32","__virtio64","__wsum","as_mut_ptr","as_mut_slice","as_ptr","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","csum_offset","csum_offset","csum_start","csum_start","default","entries","ethhdr","fds_bits","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","gso_size","gso_size","gso_type","gso_type","h_dest","h_proto","h_source","hdr","hdr_len","hdr_len","into","into","into","into","into","into","into","into","into","into","into","mac","macs","max_virtqueue_pairs","mtu","new","num_buffers","num_buffers","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","val","virtio_net_config","virtio_net_ctrl_ack","virtio_net_ctrl_hdr","virtio_net_ctrl_mac","virtio_net_ctrl_mq","virtio_net_hdr","virtio_net_hdr_mrg_rxbuf","virtio_net_hdr_v1","virtqueue_pairs","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","PTRDIFF_MAX","PTRDIFF_MIN","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","VIRTIO_RING_F_EVENT_IDX","VIRTIO_RING_F_INDIRECT_DESC","VRING_AVAIL_ALIGN_SIZE","VRING_AVAIL_F_NO_INTERRUPT","VRING_DESC_ALIGN_SIZE","VRING_DESC_F_INDIRECT","VRING_DESC_F_NEXT","VRING_DESC_F_WRITE","VRING_USED_ALIGN_SIZE","VRING_USED_F_NO_NOTIFY","WINT_MAX","WINT_MIN","_ATFILE_SOURCE","_BITS_WCHAR_H","_DEFAULT_SOURCE","_FEATURES_H","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_SYS_CDEFS_H","__BITS_PER_LONG","__FD_SETSIZE","__GLIBC_MINOR__","__GLIBC__","__GNU_LIBRARY__","__IncompleteArrayField","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__STDC_NO_THREADS__","__SYSCALL_WORDSIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__be16","__be32","__be64","__bindgen_align","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sighandler_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__virtio16","__virtio32","__virtio64","__wsum","addr","as_mut_ptr","as_mut_slice","as_ptr","as_slice","avail","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","desc","fds_bits","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","idx","idx","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","len","len","new","next","num","ring","ring","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","used","val","vring","vring_avail","vring_desc","vring_used","vring_used_elem"],"q":["virtio_sys","","","","","","","","","","","","","","","","","","","","","","","","","","virtio_sys::vhostvirtio_sys::virtio_netvirtio_sys::virtio_ringdi":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,5,5,5,6,7,3,5,8,9,4,10,11,1,6,12,13,7,14,2,3,5,8,9,4,10,11,1,6,12,13,7,14,2,5,8,9,4,10,11,1,6,12,13,7,14,2,5,8,9,4,10,11,1,6,12,13,7,14,2,3,5,8,9,4,10,11,1,6,12,13,7,14,2,6,7,13,8,4,10,1,7,14,5,8,9,4,10,11,1,6,12,13,7,14,2,3,5,8,9,4,10,11,1,6,12,13,7,14,2,14,11,10,1,12,13,7,0,0,0,0,0,0,0,0,0,3,5,8,9,4,10,11,1,6,12,13,7,14,2,4,11,7,14,5,4,2,6,12,2,2,3,10,1,5,8,9,4,10,11,1,6,12,13,7,14,2,3,5,8,9,4,10,11,1,6,12,13,7,14,2,3,5,8,9,4,10,11,1,6,12,13,7,14,2,3,5,8,9,4,10,11,1,6,12,13,7,14,2,0,0,0,0,0,0,0,0,0,6,7,14,9,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,16,17,18,19,20,21,22,23,24,25,15,16,17,18,19,20,21,22,23,24,25,23,15,16,17,18,19,20,21,22,23,24,25,15,16,17,18,19,20,21,22,23,24,25,23,20,21,20,21,15,24,0,16,20,21,15,16,17,18,19,20,21,22,23,24,25,15,16,17,18,19,20,21,22,23,24,25,20,21,20,21,18,18,18,22,20,21,15,16,17,18,19,20,21,22,23,24,25,19,24,19,19,15,20,22,19,15,16,17,18,19,20,21,22,23,24,25,15,16,17,18,19,20,21,22,23,24,25,15,16,17,18,19,20,21,22,23,24,25,15,16,17,18,19,20,21,22,23,24,25,17,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,28,28,28,29,28,30,31,27,32,33,26,29,28,30,31,27,32,33,26,29,28,30,31,27,32,33,26,29,28,30,31,27,32,33,26,29,28,29,30,27,32,26,28,30,31,27,32,33,26,29,28,30,31,27,32,33,26,29,33,32,26,0,0,0,0,0,0,0,0,0,28,30,31,27,32,33,26,29,27,33,28,27,29,32,26,28,30,31,27,32,33,26,29,28,30,31,27,32,33,26,29,28,30,31,27,32,33,26,29,28,30,31,27,32,33,26,29,0,0,0,0,0,0,0,0,0,29,31,0,0,0,0,0],"f":[null,[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],[[],["ioctlnr",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[]],[[["usize",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["__incompletearrayfield",3]],[[],["__kernel_fd_set",3]],[[],["__kernel_fsid_t",3]],[[],["vring_desc",3]],[[],["vring_avail",3]],[[],["vring_used_elem",3]],[[],["vring_used",3]],[[]],[[],["vhost_vring_state",3]],[[],["vhost_vring_file",3]],[[],["vhost_vring_addr",3]],[[],["vhost_memory_region",3]],[[],["vhost_memory",3]],null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["__incompletearrayfield",3]],null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[]],[[["usize",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["__incompletearrayfield",3]],null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"vring_used"],[3,"vhost_memory"],[3,"vhost_scsi_target"],[3,"vring_desc"],[3,"__IncompleteArrayField"],[3,"vring"],[3,"vhost_vring_addr"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"vring_avail"],[3,"vring_used_elem"],[3,"vhost_vring_state"],[3,"vhost_vring_file"],[3,"vhost_memory_region"],[3,"__IncompleteArrayField"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"ethhdr"],[3,"virtio_net_config"],[3,"virtio_net_hdr_v1"],[3,"virtio_net_hdr"],[3,"virtio_net_hdr_mrg_rxbuf"],[3,"virtio_net_ctrl_hdr"],[3,"virtio_net_ctrl_mac"],[3,"virtio_net_ctrl_mq"],[3,"vring_used"],[3,"vring_desc"],[3,"__IncompleteArrayField"],[3,"vring"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"vring_avail"],[3,"vring_used_elem"]]},\
"vm_control":{"doc":"Handles IPC for controlling the main VM process.","tn":["ACOnline","AddMsiRoute","Adjust","Adjust","AllocateAndRegisterGpuMemory","AllocateAndRegisterGpuMemory","AllocateAndRegisterGpuMemory","AllocateOneMsi","AllocateOneMsi","AllocateSharedMemoryRegion","AttachDevice","BalloonCommand","BalloonControlCommand","BalloonControlResult","BalloonStats","BalloonStats","BalloonTubeCommand","BalloonTubeResult","BatCommand","BatControl","BatControlCommand","BatControlResult","BatHealth","BatProperty","BatResponse","BatStatus","BatteryType","Breakpoint","Capacity","Charging","Cold","CreateMemoryMapping","Dead","Debug","DetachDevice","Devices","DisCharging","DiskCommand","DiskControlCommand","DiskControlResult","Err","Err","Err","Err","Err","Event","Exit","Exiting","FailedToInitHostDevice","FailedToOpenDevice","FsMappingRequest","Full","Goldfish","Good","GpuMemoryDesc","GpuMemoryPlaneDesc","Health","IrqSetup","ListDevice","MakeRT","MakeRT","MemSlot","MsyncArena","NoAvailablePort","NoBatDevice","NoSuchBatType","NoSuchDevice","NoSuchHealth","NoSuchPort","NoSuchProperty","NoSuchStatus","NotCharging","Ok","Ok","Ok","Ok","Ok","Ok","Ok","OverCurrent","OverVoltage","Overheat","Present","RegisterFdAtPciBarOffset","RegisterHostPointerAtPciBarOffset","RegisterMemory","RegisterMemory","RegisterMemory","RegisterMmapMemory","RegisterVulkanMemoryAtPciBarOffset","ReleaseOneIrq","RemoveMemoryMapping","Resize","Resume","Route","RunState","Running","SafetyTimerExpire","SetACOnline","SetCapacity","SetHealth","SetPresent","SetStatus","Stats","Stats","Stats","Stats","Status","StringParseIntErr","Suspend","Suspending","USB_CONTROL_MAX_PORTS","UnRegister","UnexpectedFailure","Unknown","Unknown","UnregisterMemory","UsbCommand","UsbControlAttachedDevice","UsbControlCommand","UsbControlResult","UsbResponse","VcpuControl","VmIrqRequest","VmIrqResponse","VmMemoryRequest","VmMemoryResponse","VmMsyncRequest","VmMsyncResponse","VmRequest","VmResponse","VmRunMode","WatchdogTimerExpire","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","available_memory","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","control_tube","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disk_caches","eq","eq","eq","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_memory","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","gdb","hugetlb_allocations","hugetlb_failures","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","major_faults","minor_faults","ne","new","new","offset","planes","port","product_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shared_memory","stride","swap_in","swap_out","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","total_memory","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unevictable_memory","valid","vendor_id","num_bytes","balloon_actual","stats","id","num_bytes","balloon_actual","id","stats","0","0","0","0","0","new_size","0","0","fd","file_offset","mem_offset","offset","prot","size","size","slot","slot","0","0","0","1","1","addr","bus","file","pid","port","ports","vid","0","port","0","0","gsi","gsi","irqfd","irqfd","msi_address","msi_data","0","gsi","0","0","0","0","1","1","2","3","alloc","descriptor","descriptor","format","gpa","handle_type","height","memory_idx","offset","offset","physical_device_idx","size","size","width","0","desc","descriptor","pfn","pfn","slot","slot","offset","size","slot","0","0","0","0","1","command","disk_index","0","0","0","balloon_actual","desc","descriptor","pfn","pfn","slot","slot","stats","ArgMissing","ArgParse","ArgParseInt","DoModifyBatteryResult","FailedDescriptorValidate","HandleRequestResult","ModifyUsbError","ModifyUsbResult","PathDoesNotExist","SocketFailed","UnexpectedResponse","UnknownCommand","UsbControl","VmsRequestResult","as_any","as_any_mut","borrow","borrow_mut","do_modify_battery","do_usb_attach","do_usb_detach","do_usb_list","fmt","fmt","from","handle_request","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","vms_request","0","0","0","0","0","0","0","0","1","1","2","CommandComplete","EnableSinglestep","HitBreakPoint","MemoryRegion","ReadMem","ReadRegs","RegValues","SetHwBreakPoint","VcpuDebug","VcpuDebugStatus","VcpuDebugStatusMessage","WriteMem","WriteRegs","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cpu","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","msg","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","0","0","1","1","0","0"],"q":["vm_controlvm_control::BalloonControlCommand","vm_control::BalloonControlResult","","vm_control::BalloonTubeCommand","","vm_control::BalloonTubeResult","","","vm_control::BatControlCommand","","","","","vm_control::DiskControlCommand","vm_control::DiskControlResult","vm_control::FsMappingRequest","","","","","","","","","","vm_control::IrqSetup","","","","","vm_control::UsbControlCommand","","","","","","","vm_control::UsbControlResult","","vm_control::VcpuControl","","vm_control::VmIrqRequest","","","","","","vm_control::VmIrqResponse","","vm_control::VmMemoryRequest","","","","","","","","","","","","","","","","","","","","","","vm_control::VmMemoryResponse","","","","","","","vm_control::VmMsyncRequest","","","vm_control::VmMsyncResponse","vm_control::VmRequest","","","","","","vm_control::VmResponse","","","","","","","","","","","vm_control::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vm_control::client::ModifyUsbError","","","","","","","","","","","vm_control::gdb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vm_control::gdb::VcpuDebug","","","","","","vm_control::gdb::VcpuDebugStatus",""],"d":["","Add one msi route entry into the IRQ chip.","Set the size of the VM’s balloon.","","Allocate GPU buffer of a given size/format and register …","The request to allocate and register GPU memory into guest …","The request to allocate and register GPU memory into guest …","Allocate one gsi, and associate gsi to irqfd with …","","Create an anonymous memory mapping that spans the entire …","","Command for balloon driver.","","","","Results of balloon control commands.","","","Command to set battery.","Used for VM to control battery properties.","","","","","Results of battery control commands.","","","Indicates that the VM is in a breakpoint waiting for the …","","","","Create a memory mapping.","","","","","","Send a command to a disk chosen by <code>disk_index</code>. <code>disk_index</code> …","","","","","","","Indicates the request encountered some error during …","","Break the VM’s run loop and exit.","Indicates that the VM is exiting all processes.","","","","","","","Struct that describes a GPU memory allocation that …","Struct that describes the offset and stride of a plane …","","Data to set up an IRQ event or IRQ route on the IRQ chip. …","","","Make the VM’s RT VCPU real-time.","An index in the list of guest-mapped memory regions.","Flush the content of a memory mapping to its backing file. …","","","","","","","","","","","","","","","","Indicates the request was executed successfully.","","","","","Similiar to <code>VmMemoryRequest::RegisterMemory</code>, but doesn’t …","Similar to RegisterFdAtPciBarOffset, but is for buffers in …","Register shared memory represented by the given descriptor …","The request to register memory into guest address space …","The request to register memory into guest address space …","Register mmaped memory into the hypervisor’s EPT.","Similiar to <code>RegisterFdAtPciBarOffset</code>, but uses Vulkano to …","","Remove a memory mapping.","Resize a disk to <code>new_size</code> in bytes.","Resume the VM’s VCPUs that were previously suspended.","","","The default run mode indicating the VCPUs are running.","","","","","","","","","","","","","Suspend the VM’s VCPUs until resume.","Indicates that the VCPUs are suspending execution until …","The maximum number of devices that can be listed in one …","","","","","Unregister the given memory slot that was previously …","Command to use controller.","","","","Results of usb control commands.","Control the state of a particular VM CPU.","","","","","","","A request to the main process to perform some operation on …","Indication of success or failure of a <code>VmRequest</code>.","Mode of execution for thexecutes this request on the given Vm.","Executes this request on the given Vm.","Executes this request on the given Vm.","","Executes this request on the given Vm and other mutable …he file descriptor that should be mapped.","The offset into the file from where the mapping should …","The offset into the shared memory region where the mapping …","The offset into the shared memory region.","The memory protection to be used for the mapping.  …","The size of the mapping.","The size of the mapping.","The slot for a MemoryMappingArena, previously returned by …","The slot for a MemoryMappingArena.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Messages that can be sent to a vCPU to set/get its state …","Messages that can be sent from a vCPU to update the state …","Pair of a vCPU ID and messages that can be sent from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,6,7,2,8,9,10,11,0,0,0,7,0,0,11,0,0,0,0,0,7,0,0,12,1,13,14,9,14,15,10,16,13,11,0,0,17,6,8,18,7,19,11,12,16,16,0,13,20,14,0,0,1,0,10,15,11,0,21,16,22,22,16,22,16,22,22,13,17,16,6,8,18,22,7,14,14,14,1,5,5,5,6,7,5,5,2,9,23,11,19,15,12,14,24,24,24,24,24,3,4,25,26,1,22,11,12,0,19,14,13,14,5,11,0,0,0,7,0,0,0,0,0,0,0,0,0,0,14,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,30,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,0,28,29,15,12,31,20,28,29,15,12,31,20,27,28,29,12,30,31,20,28,29,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,30,28,12,20,5,2,21,9,11,28,29,15,12,12,3,4,30,25,26,23,23,17,10,31,16,16,6,2,8,21,18,22,22,20,1,13,14,24,9,11,7,7,30,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,20,1,13,14,0,30,30,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,30,30,28,13,24,28,29,31,31,28,29,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,30,28,30,30,28,29,15,12,31,20,12,23,16,22,7,30,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,27,19,27,28,29,15,12,3,4,30,25,26,23,17,10,31,16,5,6,2,8,21,18,22,20,1,13,14,24,9,11,7,30,31,31,32,33,33,34,35,36,36,36,37,38,39,40,41,42,43,44,45,45,45,46,45,45,46,45,46,47,48,49,47,49,50,50,50,50,51,52,50,53,54,55,56,57,58,59,58,57,57,60,61,62,63,64,65,63,64,63,63,66,66,67,68,67,66,68,66,66,67,66,66,67,68,69,70,70,71,70,71,70,72,72,72,73,74,75,76,76,77,77,78,79,80,81,82,82,83,82,83,82,81,84,84,84,0,84,0,0,0,84,84,84,84,84,0,84,84,84,84,0,0,0,0,84,84,84,0,84,84,84,84,84,84,84,84,0,85,86,87,88,89,90,91,92,86,87,87,93,94,93,93,94,94,93,94,0,0,0,94,94,94,93,95,94,93,95,94,93,95,94,93,95,94,94,95,94,93,95,94,93,95,94,93,95,94,93,95,94,93,95,94,93,95,95,94,94,93,95,94,93,95,94,93,95,96,97,98,99,96,98,100,101],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["gpumemoryplanedesc",3]],[[],["gpumemorydesc",3]],[[],["vcpucontrol",4]],[[],["vmrunmode",4]],[[],["usbcontrolattacheddevice",3]],[[],["batterytype",4]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["gpumemoryplanedesc",3]],[[],["gpumemorydesc",3]],[[]],[[],["balloonstats",3]],[[],["usbcontrolattacheddevice",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["gpumemoryplanedesc",3]],["bool",15]],[[["vmrunmode",4]],["bool",15]],[[["batterytype",4]],["bool",15]],[[["rutabagagralloc",3],["systemallocator",3],["mutex",3,["option"]],["arc",3,["mutex"]]],["vmmemoryresponse",4]],[[["systemallocator",3]],["vmirqresponse",4]],[[],["vmmsyncresponse",4]],[[["vm",8],["systemallocator",3]],["vmresponse",4]],[[["u64",15],["option",4,["tube"]],["tube",3],["option",4],["option",4]],["vmresponse",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["stdresult",4]],[[["str",15]],["stdresult",4]],[[["str",15]],["stdresult",4]],[[["str",15]],["stdresult",4]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,[[["gpumemoryplanedesc",3]],["bool",15]],[[["string",3]],[["result",4,["batcontrolresult"]],["batcontrolresult",4]]],[[["string",3]],[["result",4,["batcontrolresult"]],["batcontrolresult",4]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["str",15],["path",3]],["domodifybatteryresult",6]],[[["u8",15],["u16",15],["path",3]],[["modifyusbresult",6,["usbcontrolresult"]],["usbcontrolresult",4]]],[[["u8",15],["path",3]],[["modifyusbresult",6,["usbcontrolresult"]],["usbcontrolresult",4]]],[[["path",3]],[["modifyusbresult",6,["usbcontrolresult"]],["usbcontrolresult",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["vmrequest",4],["path",3]],["handlerequestresult",6]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["vmrequest",4],["path",3]],["vmsrequestresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vcpudebug",4]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["global",3],["box",3,["global"]]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null],"p":[[4,"BatProperty"],[4,"VmIrqRequest"],[4,"BalloonControlCommand"],[4,"BalloonTubeCommand"],[4,"VmMemoryRequest"],[4,"VmMemoryResponse"],[4,"VmResponse"],[4,"VmIrqResponse"],[4,"FsMappingRequest"],[4,"UsbControlCommand"],[4,"VmRequest"],[4,"VmRunMode"],[4,"BatStatus"],[4,"BatHealth"],[4,"VcpuControl"],[4,"UsbControlResult"],[4,"DiskControlResult"],[4,"VmMsyncResponse"],[4,"IrqSetup"],[4,"BatteryType"],[4,"VmMsyncRequest"],[4,"BatControlResult"],[4,"DiskControlCommand"],[4,"BatControlCommand"],[4,"BalloonControlResult"],[4,"BalloonTubeResult"],[3,"BatControl"],[3,"GpuMemoryPlaneDesc"],[3,"GpuMemoryDesc"],[3,"BalloonStats"],[3,"UsbControlAttachedDevice"],[13,"Adjust"],[13,"Stats"],[13,"Stats"],[13,"Adjust"],[13,"Stats"],[13,"SetStatus"],[13,"SetHealth"],[13,"SetPresent"],[13,"SetCapacity"],[13,"SetACOnline"],[13,"Resize"],[13,"Err"],[13,"AllocateSharedMemoryRegion"],[13,"CreateMemoryMapping"],[13,"RemoveMemoryMapping"],[13,"Event"],[13,"Route"],[13,"UnRegister"],[13,"AttachDevice"],[13,"DetachDevice"],[13,"ListDevice"],[13,"Devices"],[13,"Ok"],[13,"Debug"],[13,"RunState"],[13,"AddMsiRoute"],[13,"ReleaseOneIrq"],[13,"AllocateOneMsi"],[13,"Err"],[13,"AllocateOneMsi"],[13,"RegisterMemory"],[13,"RegisterFdAtPciBarOffset"],[13,"RegisterHostPointerAtPciBarOffset"],[13,"UnregisterMemory"],[13,"RegisterVulkanMemoryAtPciBarOffset"],[13,"RegisterMmapMemory"],[13,"AllocateAndRegisterGpuMemory"],[13,"Err"],[13,"AllocateAndRegisterGpuMemory"],[13,"RegisterMemory"],[13,"MsyncArena"],[13,"Err"],[13,"BalloonCommand"],[13,"UsbCommand"],[13,"BatCommand"],[13,"DiskCommand"],[13,"Err"],[13,"UsbResponse"],[13,"BatResponse"],[13,"BalloonStats"],[13,"AllocateAndRegisterGpuMemory"],[13,"RegisterMemory"],[4,"ModifyUsbError"],[13,"ArgMissing"],[13,"ArgParse"],[13,"ArgParseInt"],[13,"FailedDescriptorValidate"],[13,"PathDoesNotExist"],[13,"UnexpectedResponse"],[13,"UnknownCommand"],[13,"UsbControl"],[4,"VcpuDebugStatus"],[4,"VcpuDebug"],[3,"VcpuDebugStatusMessage"],[13,"ReadMem"],[13,"WriteRegs"],[13,"WriteMem"],[13,"SetHwBreakPoint"],[13,"RegValues"],[13,"MemoryRegion"]]},\
"vm_memory":{"doc":"","t":[12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,4,4,13,3,13,13,13,13,13,13,13,13,3,3,13,13,6,13,13,13,13,18,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","GuestAddress","bitand","bitor","borrow","borrow_mut","checked_add","checked_sub","clone","clone_into","cmp","eq","fmt","fmt","from","guest_memory","into","mask","offset","offset_from","partial_cmp","to_owned","to_string","try_from","try_into","type_id","unchecked_add","BackingObject","Error","File","GuestMemory","InvalidGuestAddress","InvalidOffset","InvalidSize","MemoryAccess","MemoryAddSealsFailed","MemoryCreationFailed","MemoryMappingFailed","MemoryNotAligned","MemoryPolicy","MemoryRegion","MemoryRegionOverlap","MemoryRegionTooLarge","Result","Shm","ShortRead","ShortWrite","SplitOutOfBounds","USE_HUGEPAGES","VolatileMemoryAccess","address_in_range","all","as_raw_descriptor","as_raw_descriptors","as_raw_descriptors","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_offset","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","difference","do_in_region","empty","end_addr","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_regions","get_host_address","get_host_address_range","get_ref_at_addr","get_slice_at_addr","get_volatile_slice","hash","insert","intersection","intersects","into","into","into","into","into","is_all","is_empty","memory_size","ne","new","new_from_file","new_from_shm","not","num_regions","offset_from_base","offset_region","partial_cmp","range_overlap","read_at_addr","read_exact_at_addr","read_obj_from_addr","read_to_memory","remove","remove_range","set","set_memory_policy","shm_region","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","with_regions","write_all_at_addr","write_at_addr","write_from_memory","write_obj_at_addr","0","0","0","0","0","0","0","0","0","0","0","0","1","completed","completed","expected","expected"],"q":["vm_memory","","","","","","","","","","","","","","","","","","","","","","","","","","","vm_memory::guest_memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vm_memory::guest_memory::BackingObject","","vm_memory::guest_memory::Error","","","","","","","","","","","","","",""],"d":["","Represents an Address in the guest’s memory.","","","","","Returns the result of the add or None if there is overflow.","Returns the result of the subtraction of None if there is …","","","","","","","","Track memory regions that are mapped to the guest VM.","","Returns the bitwise and of the address with the given mask.","Returns the address as a u64 offset from 0x0. Use this …","Returns the offset from this address to the given base …","","","","","","","Returns the result of the base address + the size. Only …","A file-like object backing <code>MemoryRegion</code>.","","","Tracks memory regions and where they are mapped in the …","","","","","","","","","","A regions of memory mapped memory. Holds the memory …","","","","","","","","","","Returns true if the given address is within the memory …","Returns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","Returns the address plus the offset if it is in range.","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Loops over all guest memory regions of <code>self</code>, and performs …","Returns an empty set of flags.","Returns the end address of memory.","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a <code>GuestMemory</code> from a collection of MemoryRegions.","Convert a GuestAddress into a pointer in the address space …","Convert a GuestAddress into a pointer in the address space …","Returns a <code>VolatileRef</code> to an object at <code>addr</code>. Returns Ok(()) …","Returns a <code>VolatileSlice</code> of <code>len</code> bytes starting at <code>addr</code>. …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the total size of memory in bytes.","","Creates a container for guest memory regions. Valid memory …","Creates a new MemoryRegion using the given file to get …","Creates a new MemoryRegion using the given SharedMemory …","Returns the complement of this set of flags.","Returns the size of the memory region in bytes.","Convert a GuestAddress into an offset within the …","Returns the region that contains the memory at <code>offset</code> from …","","Returns true if the given range (start, end) is overlap …","Reads to a slice from guest memory at the specified guest …","Reads from guest memory at the specified address to fill …","Reads an object from guest memory at the given guest …","Reads data from a file descriptor and writes it to guest …","Removes the specified flags in-place.","Madvise away the address range in the host that is …","Inserts or removes the specified flags depending on the …","Handles guest memory policy hints/advices.","Returns a reference to the region that backs the given …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Perform the specified action on each region’s addresses.","Writes the entire contents of a slice to guest memory at …","Writes a slice to guest memory at the specified guest …","Writes data from memory to a file descriptor.","Writes an object to the memory region at the specified …","","","","","","","","","","","","","","","","",""],"i":[1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,2,0,3,3,3,3,3,3,3,3,0,0,3,3,0,2,3,3,3,4,3,5,4,2,2,5,2,4,4,4,4,4,4,4,6,3,4,2,5,6,3,4,2,5,5,4,2,5,4,2,5,4,4,4,4,5,4,5,4,4,3,3,4,4,4,4,4,6,3,4,2,5,4,4,4,4,5,5,5,5,5,5,4,4,4,4,6,3,4,2,5,4,4,5,4,5,6,6,4,5,5,5,4,5,5,5,5,5,4,5,4,5,5,4,4,4,4,2,5,3,4,6,3,4,2,5,6,3,4,2,5,6,3,4,2,5,4,5,5,5,5,5,7,8,9,10,11,12,13,14,15,16,17,18,12,19,20,19,20],"f":[null,null,[[["u64",15]],["guestaddress",3]],[[["u64",15]],["guestaddress",3]],[[]],[[]],[[["u64",15]],[["guestaddress",3],["option",4,["guestaddress"]]]],[[["u64",15]],[["guestaddress",3],["option",4,["guestaddress"]]]],[[],["guestaddress",3]],[[]],[[["guestaddress",3]],["ordering",4]],[[["guestaddress",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[["u64",15]],["guestaddress",3]],[[],["u64",15]],[[["guestaddress",3]],["u64",15]],[[["guestaddress",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u64",15]],["guestaddress",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["guestaddress",3]],["bool",15]],[[]],[[],["rawdescriptor",6]],[[],[["i32",15],["global",3],["vec",3,["i32","global"]]]],[[],[["rawdescriptor",6],["vec",3,["rawdescriptor"]]]],[[],["asrawdescriptor",8]],[[]],[[]],[[["memorypolicy",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15],["guestaddress",3]],[["guestaddress",3],["option",4,["guestaddress"]]]],[[],["memorypolicy",3]],[[],["backingobject",4]],[[],["guestmemory",3]],[[]],[[]],[[]],[[["memorypolicy",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[["guestaddress",3]],["result",6]],[[]],[[],["guestaddress",3]],[[["memorypolicy",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["memoryregion",3],["vec",3,["memoryregion"]]],["result",6]],[[["guestaddress",3]],["result",6]],[[["usize",15],["guestaddress",3]],["result",6]],[[["guestaddress",3]],[["result",6,["volatileref"]],["volatileref",3]]],[[["usize",15],["guestaddress",3]],[["result",6,["volatileslice"]],["volatileslice",3]]],[[["memregion",3]],[["result",6,["volatileslice"]],["volatileslice",3]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[["memorypolicy",3]],["bool",15]],[[],[["guestmemory",3],["result",6,["guestmemory"]]]],[[["u64",15],["file",3],["arc",3,["file"]],["guestaddress",3]],["result",6]],[[["u64",15],["arc",3,["sharedmemory"]],["sharedmemory",3],["guestaddress",3]],["result",6]],[[]],[[],["u64",15]],[[["guestaddress",3]],[["u64",15],["result",6,["u64"]]]],[[["u64",15]],[["asrawdescriptor",8],["result",6,["asrawdescriptor"]]]],[[["memorypolicy",3]],[["option",4,["ordering"]],["ordering",4]]],[[["guestaddress",3]],["bool",15]],[[["guestaddress",3]],[["result",6,["usize"]],["usize",15]]],[[["guestaddress",3]],["result",6]],[[["guestaddress",3]],[["datainit",8],["result",6]]],[[["usize",15],["guestaddress",3],["asrawdescriptor",8]],["result",6]],[[]],[[["u64",15],["guestaddress",3]],["result",6]],[[["bool",15]]],[[["memorypolicy",3]]],[[["guestaddress",3]],[["asrawdescriptor",8],["result",6,["asrawdescriptor"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["result",4]],[[["guestaddress",3]],["result",6]],[[["guestaddress",3]],[["result",6,["usize"]],["usize",15]]],[[["usize",15],["guestaddress",3],["asrawdescriptor",8]],["result",6]],[[["datainit",8],["guestaddress",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"GuestAddress"],[4,"BackingObject"],[4,"Error"],[3,"MemoryPolicy"],[3,"GuestMemory"],[3,"MemoryRegion"],[13,"Shm"],[13,"File"],[13,"InvalidGuestAddress"],[13,"InvalidOffset"],[13,"InvalidSize"],[13,"MemoryAccess"],[13,"MemoryAddSealsFailed"],[13,"MemoryCreationFailed"],[13,"MemoryMappingFailed"],[13,"MemoryRegionTooLarge"],[13,"SplitOutOfBounds"],[13,"VolatileMemoryAccess"],[13,"ShortRead"],[13,"ShortWrite"]]},\
"vmm_vhost":{"doc":"Virtio Vhost Backend Drivers","t":[4,13,6,13,13,13,13,3,13,3,13,13,4,13,13,6,3,13,3,3,3,13,13,13,13,17,13,8,8,8,8,8,3,8,8,13,3,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,10,10,10,10,11,10,10,10,11,11,10,10,10,11,10,10,10,11,10,10,10,11,11,10,10,10,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,11,11,11,10,11,11,12,12,10,10,10,11,10,10,10,10,11,11,10,10,10,11,11,11,11,10,10,10,10,11,11,10,10,10,11,10,10,11,10,10,11,10,10,10,10,11,11,10,10,10,10,11,10,10,10,11,11,11,11,11,11,11,10,11,10,10,10,10,11,10,10,10,10,11,10,10,10,10,11,10,10,10,11,10,10,10,10,11,10,10,10,10,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,16,8,8,8,16,10,10,10,11,11,11,10,11,11,11,10,11,11,11,10,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,18,13,18,18,13,13,18,18,3,3,18,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,13,13,18,18,18,18,17,13,13,17,18,18,4,18,13,13,13,18,13,13,13,18,3,3,18,13,18,18,18,13,18,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,4,18,17,17,17,17,18,13,13,13,13,3,3,6,3,3,3,3,3,6,3,3,8,3,3,3,3,3,3,3,18,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["Error","FeatureMismatch","HandlerResult","IncorrectFds","InvalidMessage","InvalidOperation","InvalidParam","Master","MasterInternalError","MasterReqHandler","OversizedMsg","PartialMessage","Protocol","Regular","ReqHandlerError","Result","SlaveFsCacheReq","SlaveInternalError","SlaveListener","SlaveReqHandler","SlaveReqHelper","SocketBroken","SocketConnect","SocketError","SocketRetry","VHOST_MAX_MEMORY_REGIONS","VfioDeviceError","VhostBackend","VhostBackendMut","VhostUserMaster","VhostUserMasterReqHandler","VhostUserMasterReqHandlerMut","VhostUserMemoryRegionInfo","VhostUserSlaveReqHandler","VhostUserSlaveReqHandlerMut","Virtio","VringConfigData","accept","add_mem_region","add_mem_region","add_mem_region","add_mem_region","as_mut","as_raw_descriptor","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fds","as_raw_fds","as_raw_fds","as_raw_fds","as_ref","avail_ring_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","connect","connect","connection","default","desc_table_addr","eq","flags","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_stream","from_stream","from_stream","fs_slave_io","fs_slave_io","fs_slave_io","fs_slave_io","fs_slave_map","fs_slave_map","fs_slave_map","fs_slave_map","fs_slave_map","fs_slave_sync","fs_slave_sync","fs_slave_sync","fs_slave_sync","fs_slave_unmap","fs_slave_unmap","fs_slave_unmap","fs_slave_unmap","fs_slave_unmap","get_config","get_config","get_config","get_config","get_features","get_features","get_features","get_features","get_features","get_inflight_fd","get_inflight_fd","get_inflight_fd","get_inflight_fd","get_log_addr","get_max_mem_slots","get_max_mem_slots","get_max_mem_slots","get_max_mem_slots","get_protocol_features","get_protocol_features","get_protocol_features","get_protocol_features","get_queue_num","get_queue_num","get_queue_num","get_queue_num","get_tx_raw_fd","get_vring_base","get_vring_base","get_vring_base","get_vring_base","get_vring_base","guest_phys_addr","handle_config_change","handle_config_change","handle_config_change","handle_config_change","handle_request","handle_request","handle_vring_fd_request","into","into","into","into","into","into","into","into","into","into","is_log_addr_valid","log_addr","memory_size","message","mmap_handle","mmap_offset","new","new","new","protocol","protocol","protocol","queue_max_size","queue_size","remove_mem_region","remove_mem_region","remove_mem_region","remove_mem_region","reset_owner","reset_owner","reset_owner","reset_owner","reset_owner","send_ack_message","set_config","set_config","set_config","set_config","set_failed","set_failed","set_failed","set_features","set_features","set_features","set_features","set_features","set_hdr_flags","set_inflight_fd","set_inflight_fd","set_inflight_fd","set_inflight_fd","set_log_base","set_log_base","set_log_base","set_log_fd","set_log_fd","set_log_fd","set_mem_table","set_mem_table","set_mem_table","set_mem_table","set_mem_table","set_nonblocking","set_owner","set_owner","set_owner","set_owner","set_owner","set_protocol_features","set_protocol_features","set_protocol_features","set_protocol_features","set_reply_ack_flag","set_reply_ack_flag","set_slave_req_fd","set_slave_req_fd","set_slave_req_fd","set_slave_req_fd","set_slave_request_fd","set_slave_request_fd","set_vring_addr","set_vring_addr","set_vring_addr","set_vring_addr","set_vring_addr","set_vring_base","set_vring_base","set_vring_base","set_vring_base","set_vring_base","set_vring_call","set_vring_call","set_vring_call","set_vring_call","set_vring_call","set_vring_enable","set_vring_enable","set_vring_enable","set_vring_enable","set_vring_err","set_vring_err","set_vring_err","set_vring_err","set_vring_err","set_vring_kick","set_vring_kick","set_vring_kick","set_vring_kick","set_vring_kick","set_vring_num","set_vring_num","set_vring_num","set_vring_num","set_vring_num","should_reconnect","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","used_ring_addr","userspace_addr","0","0","0","0","0","0","Connection","Endpoint","EndpointExt","Listener","Listener","accept","connect","from_connection","recv_body","recv_data","recv_header","recv_into_bufs","recv_into_bufs_all","recv_payload_into_buf","send_header","send_iovec","send_iovec_all","send_message","send_message_with_payload","set_nonblocking","socket","Endpoint","Listener","accept","as_mut","as_raw_descriptor","as_raw_fd","as_raw_fd","as_raw_fds","as_raw_fds","borrow","borrow","borrow_mut","borrow_mut","connect","drop","from","from","from","from_connection","into","into","new","recv_into_bufs","send_iovec","set_nonblocking","try_from","try_from","try_into","try_into","type_id","type_id","ADD_MEM_REG","ALL_FLAGS","CLOSE_CRYPTO_SESSION","CONFIG","CONFIGURE_MEM_SLOTS","CONFIG_CHANGE_MSG","CREATE_CRYPTO_SESSION","CROSS_ENDIAN","CRYPTO_SESSION","DescStatePacked","DescStateSplit","EMPTY","FS_IO","FS_MAP","FS_SYNC","FS_UNMAP","GET_CONFIG","GET_FEATURES","GET_INFLIGHT_FD","GET_MAX_MEM_SLOTS","GET_PROTOCOL_FEATURES","GET_QUEUE_NUM","GET_STATUS","GET_VRING_BASE","GPU_SET_SOCKET","HOST_NOTIFIER","INBAND_NOTIFICATIONS","INFLIGHT_SHMFD","IOTLB_MSG","IOTLB_MSG","LIVE_MIGRATION","LOG_SHMFD","MAP_R","MAP_W","MAX_ATTACHED_FD_ENTRIES","MAX_CMD","MAX_CMD","MAX_MSG_SIZE","MQ","MTU","MasterReq","NEED_REPLY","NET_SET_MTU","NOOP","NOOP","PAGEFAULT","POSTCOPY_ADVISE","POSTCOPY_END","POSTCOPY_LISTEN","PROTOCOL_FEATURES","QueueRegionPacked","QueueRegionSplit","RARP","REM_MEM_REG","REPLY","REPLY_ACK","RESERVED_BITS","RESET_DEVICE","RESET_DEVICE","RESET_OWNER","Req","SEND_RARP","SET_CONFIG","SET_FEATURES","SET_INFLIGHT_FD","SET_LOG_BASE","SET_LOG_FD","SET_MEM_TABLE","SET_OWNER","SET_PROTOCOL_FEATURES","SET_SLAVE_REQ_FD","SET_STATUS","SET_VRING_ADDR","SET_VRING_BASE","SET_VRING_CALL","SET_VRING_ENABLE","SET_VRING_ENDIAN","SET_VRING_ERR","SET_VRING_KICK","SET_VRING_NUM","SLAVE_REQ","SLAVE_SEND_FD","STATUS","SlaveReq","VERSION","VHOST_USER_CONFIG_OFFSET","VHOST_USER_CONFIG_SIZE","VHOST_USER_FS_SLAVE_ENTRIES","VHOST_USER_MAX_VRINGS","VHOST_VRING_F_LOG","VRING_CALL","VRING_ERR","VRING_HOST_NOTIFIER_MSG","VRING_KICK","VhostUserConfig","VhostUserConfigFlags","VhostUserConfigPayload","VhostUserFSSlaveMsg","VhostUserFSSlaveMsgFlags","VhostUserHeaderFlag","VhostUserInflight","VhostUserMemory","VhostUserMemoryPayload","VhostUserMemoryRegion","VhostUserMsgHeader","VhostUserMsgValidator","VhostUserProtocolFeatures","VhostUserSingleMemoryRegion","VhostUserU64","VhostUserVirtioFeatures","VhostUserVringAddr","VhostUserVringAddrFlags","VhostUserVringState","WRITABLE","addr","all","all","all","all","all","all","available","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_offset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","counter","counter","default","default","default","default","default","default","default","default","default","default","default","default","default","desc","desc","desc_num","desc_num","descriptor","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","fd_offset","features","features","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_head","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_config_data","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","get_code","get_size","get_version","guest_phys_addr","guest_phys_addr","hash","hash","hash","hash","hash","hash","id","index","index","inflight","inflight","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_need_reply","is_reply","is_reply_for","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","last","last_batch_head","len","len","log","memory_size","memory_size","mmap_offset","mmap_offset","mmap_offset","mmap_size","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","next","next","not","not","not","not","not","not","num","num","num_queues","num_regions","offset","old_free_head","old_used_idx","old_used_wrap_counter","padding1","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","queue_size","remove","remove","remove","remove","remove","remove","set","set","set","set","set","set","set_code","set_need_reply","set_reply","set_size","set_version","size","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","used","used_idx","used_idx","used_wrap_counter","user_addr","user_addr","value","version","version"],"q":["vmm_vhostvmm_vhost::Error","","","","","","vmm_vhost::connection","","","","","","","","","","","","","","","","","","","","","vmm_vhost::connection::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vmm_vhost::messaged":["Errors for vhost-user operations","Virtio/protocol features mismatch.","Result of request handler.","Fd array in question is too big or too small","Invalid message format, flag or content.","Unsupported operations due to that the protocol feature …","Invalid parameters.","Struct for the vhost-user master endpoint.","Failure from the master side.","Server to handle service requests from slaves from the …","Message is too large","Only part of a message have been sent or received …","Vhost-user protocol variants used for the communication.","Use the regular vhost-user protocol.","Error from request handler","Result of vhost-user operations","Request proxy to send vhost-user-fs slave requests to the …","Failure from the slave side.","Vhost-user slave side connection listener.","Server to handle service requests from masters from the …","Abstracts |Endpoint| related operations for vhost-user …","The socket is broken or has been closed.","Can’t connect to peer.","Generic socket errors.","Should retry the socket operation again.","Maximum number of memory regions supported.","Error from VFIO device.","An interface for setting up vhost-based backend drivers …","An interface for setting up vhost-based backend drivers.","Trait for vhost-user master to provide extra methods not …","Define services provided by masters for the slave …","A helper trait mirroring VhostUserMasterReqHandler but …","Memory region configuration data.","Services provided to the master by the slave with interior …","Services provided to the master by the slave without …","Use the virtio-vhost-user protocol, which is proxied …","Vring configuration data.","Accept an incoming connection from the master, returning …","Add a new guest memory mapping for vhost to use.","","","","","","","","","","","","","","","Available ring buffer address.","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new vhost-user slave endpoint.","Create a new vhost-user master endpoint.","Common data structures for listener and endpoint.","","Descriptor table address.","","Bitmask of vring flags.","","","","","","","","","","","","","","Convert raw socket errors into meaningful vhost-user …","Create a vhost-user slave endpoint from a connected socket.","Create a new instance from a Unix stream socket.","Create a new instance from a <code>UnixStream</code> object.","Handle virtio-fs file IO requests.","Handle virtio-fs file IO requests.","Handle virtio-fs file IO requests.","Handle virtio-fs file IO requests.","Handle virtio-fs map file requests.","Handle virtio-fs map file requests.","Handle virtio-fs map file requests.","Handle virtio-fs map file requests.","Forward vhost-user-fs map file requests to the slave.","Handle virtio-fs sync file requests.","Handle virtio-fs sync file requests.","Handle virtio-fs sync file requests.","Handle virtio-fs sync file requests.","Handle virtio-fs unmap file requests.","Handle virtio-fs unmap file requests.","Handle virtio-fs unmap file requests.","Handle virtio-fs unmap file requests.","Forward vhost-user-fs unmap file requests to the master.","Fetch the contents of the virtio device configuration …","","","","Get a bitmask of supported virtio/vhost features.","Get a bitmask of supported virtio/vhost features.","","","Get from the underlying vhost implementation the feature …","Retrieve shared buffer for inflight I/O tracking.","","","","Get the log address, default to zero if not available.","Query the maximum amount of memory slots supported by the …","","","","Get the protocol feature bitmask from the underlying vhost …","","","","Query how many queues the backend supports.","","","","Get the socket fd for the slave to communication with the …","Get the available vring base offset.","Get the available vring base offset.","","","","Guest physical address of the memory region.","Handle device configuration change notifications.","Handle device configuration change notifications.","Handle device configuration change notifications.","Handle device configuration change notifications.","Main entrance to server slave request from the slave …","Main entrance to server slave request from the slave …","Parses an incoming |SET_VRING_KICK| or |SET_VRING_CALL| …","","","","","","","","","","","Check whether the log (flag, address) pair is valid.","Optional address for logging.","Size of the memory region.","Define communication messages for the vhost-user protocol.","Optional file descriptor for mmap.","Optional offset where region starts in the mapped memory.","Create a server to handle service requests from slaves on …","Create a unix domain socket for incoming master …","Creates a new |SlaveReqHelper| instance with an |Endpoint| …","Returns the type of vhost-user protocol that the handler …","Returns the type of vhost-user protocol that the handler …","Returns the type of vhost-user protocol that the handler …","Maximum queue size supported by the driver.","Actual queue size negotiated by the driver.","Remove a guest memory mapping from vhost.","","","","Used to be sent to request disabling all rings This is no …","Used to be sent to request disabling all rings This is no …","","","","Sends reply back to Vhost Master in response to a message.","Change the virtio device configuration space. It also can …","","","","Mark endpoint as failed or in normal state.","Mark endpoint as failed with specified error code.","Mark endpoint as failed with specified error code.","Inform the vhost subsystem which features to enable. This …","Inform the vhost subsystem which features to enable. This …","","","Enable features in the underlying vhost implementation …","Set the header flags that should be applied to all …","Set shared buffer for inflight I/O tracking.","","","","Set base address for page modification logging.","Set base address for page modification logging.","","Specify an eventfd file descriptor to signal on log write.","Specify an eventfd file descriptor to signal on log write.","","Set the guest memory mappings for vhost to use.","Set the guest memory mappings for vhost to use.","","","Set the memory map regions on the slave so it can …","Change blocking status on the listener.","Set the current process as the owner of the vhost backend. …","Set the current process as the owner of the vhost backend. …","","","Set the current Master as an owner of the session.","Enable protocol features in the underlying vhost …","","","","Set the negotiation state of the …","Set the negotiation state of the …","","","","","Setup slave communication channel.","","Set the addresses for a given vring.","Set the addresses for a given vring.","","","Sets the addresses of the different aspects of the vring.","Set the first index to look for available descriptors.","Set the first index to look for available descriptors.","","","Sets the base offset in the available vring.","Set the eventfd to trigger when buffers have been used by …","Set the eventfd to trigger when buffers have been used by …","","","Set the event file descriptor to signal when buffers are …","Signal slave to enable or disable corresponding vring.","","","","Set the eventfd that will be signaled by the guest when …","Set the eventfd that will be signaled by the guest when …","","","Set the event file descriptor to signal when error occurs. …","Set the eventfd that will be signaled by the guest when …","Set the eventfd that will be signaled by the guest when …","","","Set the event file descriptor for adding buffers to the …","Set the number of descriptors in the vring.","Set the number of descriptors in the vring.","","","Set the size of the queue.","Determine whether to rebuild the underline communication …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used ring buffer address.","Virtual address in the current process.","","","","","","","Type of an object created when a connection is accepted.","Abstracts a vhost-user connection and related operations.","Abstracts VVU message parsing, sending and receiving.","Listener for accepting connections.","Type of an object that Endpoint is created from.","Accept an incoming connection.","Create a new stream by connecting to server at <code>str</code>.","Create an endpoint from a stream object.","Receive a message with optional attached file descriptors. …","Reads <code>len</code> bytes at most.","Receive a header-only message with optional attached files.","Reads bytes into the given scatter/gather vectors with …","Reads all bytes into the given scatter/gather vectors with …","Receive a message with optional payload and attached file …","Sends a header-only message with optional attached file …","Sends bytes from scatter-gather vectors with optional …","Sends all bytes from scatter-gather vectors with optional …","Send a message with header and body. Optional file …","Send a message with header, body and payload. Optional …","Change blocking status on the listener.","Structs for Unix Domain Socket listener and endpoint.","Unix domain socket endpoint for vhost-user connection.","Unix domain socket listener for accepting incoming …","Accept an incoming connection.","","","","","","","","","","","Create a new stream by connecting to server at <code>str</code>.","","","","","Create an endpoint from a stream object.","","","Create a unix domain socket listener.","Reads bytes from the socket into the given scatter/gather …","Sends bytes from scatter-gather vectors over the socket …","Change blocking status on the listener.","","","","","","","Update the memory tables by adding the region described.","All valid bits.","Close a session for crypto operation.","Support Virtio device configuration.","Support configuring memory slots.","Notify that the virtio device’s configuration space has …","Create a session for crypto operation.","Support setting slave endian by SET_VRING_ENDIAN.","Support crypto operations.","Inflight I/O descriptor state for packed virtqueues","Inflight I/O descriptor state for split virtqueues","Empty permission.","Virtio-fs draft: perform a read/write from an fd directly …","Virtio-fs draft: map file content into the window.","Virtio-fs draft: sync file content.","Virtio-fs draft: unmap file content from the window.","Fetch the contents of the virtio device configuration …","Get from the underlying vhost implementation the features …","Get a shared buffer from slave.","Return a u64 payload containing the maximum number of …","Get the protocol feature bit mask from the underlying …","Query how many queues the backend supports.","Query the backend for its device status as defined in the …","Get the available vring base offset.","Sets the GPU protocol socket file descriptor.","Allow the slave to register a host notifier.","Support inband notifications.","Support inflight shmfd.","Send IOTLB messages with struct vhost_iotlb_msg as payload.","Send IOTLB messages with struct vhost_iotlb_msg as payload.","Vhost master messages used for live migration.","Support logging through shared memory fd.","Read permission.","Write permission.","The VhostUserMemory message has variable message size and …","Upper bound of valid commands.","Upper bound of valid commands.","The vhost-user specification uses a field of u32 to store …","Support multiple queues.","Support setting MTU for virtio-net devices.","Type of requests sending from masters to slaves.","Sender anticipates a reply message from the peer.","Set host MTU value exposed to the guest.","Null operation.","Null operation.","Support sending userfault_fd from slaves to masters.","Advise slave that a migration with postcopy enabled is …","Advise that postcopy migration has now completed.","Advise slave that a transition to postcopy mode has …","Feature flag for the protocol feature.","Inflight I/O queue region for packed virtqueues","Inflight I/O queue region for split virtqueues","Support broadcasting fake RARP packet.","Update the memory tables by removing the region described.","Mark message as reply.","Support sending reply messages for requests with …","All reserved bits.","Ask the vhost user backend to disable all rings and reset …","Support resetting the device.","No longer used.","Used for the payload in Vhost Master messages.","Ask vhost user backend to broadcast a fake RARP to notify …","Change the contents of the virtio device configuration …","Enable features in the underlying vhost implementation …","Send the shared inflight buffer back to slave.","Set logging shared memory space.","Set the logging file descriptor, which is passed as …","Set the memory map regions on the slave so it can …","Set the current Master as an owner of the session.","Enable protocol features in the underlying vhost …","Set the socket file descriptor for slave initiated …","Notify the backend with updated device status as defined …","Set the addresses of the different aspects of the vring.","Set the base offset in the available vring.","Set the event file descriptor to signal when buffers are …","Signal slave to enable or disable corresponding vring.","Set the endianness of a VQ for legacy devices.","Set the event file descriptor to signal when error occurs.","Set the event file descriptor for adding buffers to the …","Set the size of the queue.","Allow the slave to send requests to the master by an …","Allow the slave to send fds (at most 8 descriptors in each …","Support reporting status.","Type of requests sending from slaves to masters.","Bits[0..2] is message version number.","Starting position (inclusion) of the device configuration …","Ending position (exclusion) of the device configuration …","Max entries in one virtio-fs slave request.","Maximum number of vrings supported.","Support log of vring operations. Modifications to “used…","Indicate that a buffer was used from the vring.","Indicate that an error occurred on the specific vring.","Set host notifier for a specified queue.","Indicate that a buffer was added to the vring instead of …","Message to read/write device configuration space.","Flags for the device configuration message.","Payload for the VhostUserConfig message.","Slave request message to update the MMIO window.","Flags for virtio-fs slave messages.","Common message flags for vhost-user requests and replies.","Single memory region descriptor as payload for ADD_MEM_REG …","Memory region descriptor for the SET_MEM_TABLE request.","Payload of the VhostUserMemory message.","Memory region descriptors as payload for the SET_MEM_TABLE …","Common message header for vhost-user requests and replies. …","Vhost message Validator.","Vhost-user protocol feature flags.","Single memory region descriptor as payload for ADD_MEM_REG …","A generic message to encapsulate a 64-bit value.","Transport specific flags in VirtIO feature set defined by …","Vring address descriptor.","Flags for vring address.","Vring state descriptor.","Vhost master messages used for writeable fields.","Buffer address","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Ring address of the vring available ring.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Offset into the DAX window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Preserve order of fetching available descriptors, only for …","Preserve order of fetching avail descriptors, only for head","","","","","","","","","","","","","","Pointer to an array of DescStateSplit entries","Pointer to array tracking state of each descriptor from …","Number of DescStateSplit entries","size of descriptor state array","Ring address of the vring descriptor table.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","File offset.","Features flags of this region","Features flags of this region","Vring flags defined by VhostUserVringAddrFlags.","Flags for the device configuration operation.","Flags for the mmap operation","Descriptor flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","head of free DescStatePacked entry list","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Create a new instance from <code>VringConfigData</code>.","","","","","","","Get message type.","Get message size.","Get message version number.","Guest physical address of the memory region.","Guest physical address of the memory region.","","","","","","","Buffer ID","Vring index.","Vring index.","Indicate whether this descriptor (only head) is inflight …","Indicate whether this descriptor (only head) is inflight …","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Check whether reply for this message is requested.","Check whether it’s a reply message.","Check whether it’s the reply message for the request <code>req</code>.","Is the entity valid.","Validate message syntax only. It doesn’t validate …","","","","","","","","","","","Link to last entry of descriptor list, only for head","List to track last batch of used descriptors","Size of region to map.","Buffer length","Guest address for logging.","Size of the memory region.","Size of the memory region.","Offset where region starts in the mapped memory.","Offset where region starts in the mapped memory.","Offset of this area from the start of the supplied file …","Size of the area to track inflight I/O.","","","","","","","New instance of QueueRegionSplit struct","New instance of QueueRegionPacked struct","Create a new instance of <code>VhostUserMsgHeader</code>.","Create a new instance.","Create a new instance.","Create a new instance.","Create a new instance.","Create a new instance.","Create a new instance.","Create a new instance.","Create a new instance.","New instance of DescStateSplit struct","New instance of DescStatePacked struct","List of last batch of used descriptors, only when batching …","Link to next free entry","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","A common 32bit value to encapsulate vring state etc.","Length of descriptor list, only for head","Number of virtqueues.","Number of memory regions in the payload.","Offset of virtio device’s configuration space.","old head of free DescStatePacked entry list","old used idx of descriptor ring","old device ring wrap counter","Padding for alignment.","","","","","","","","","Size of virtqueues.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set message type.","Mark that reply for this message is needed.","Mark message as reply.","Set message size.","Set message version number.","Configuration space access size in bytes.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Ring address of the vring used ring.","Idx value of used ring","used idx of descriptor ring","device ring wrap counter","Virtual address in the current process.","Virtual address in the current process.","The encapsulated 64-bit common value.","Version of this region","version of this region"],"i":[0,1,0,1,1,1,1,0,1,0,1,1,0,2,1,0,0,1,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,3,4,5,6,7,8,8,9,8,10,7,9,8,10,7,8,11,11,9,3,8,10,12,7,2,13,1,11,9,3,8,10,12,7,2,13,1,12,7,13,12,7,13,10,7,0,12,11,2,11,2,1,1,11,9,3,8,10,12,7,2,13,1,1,10,7,13,14,14,15,15,14,14,15,15,13,14,14,15,15,14,14,15,15,13,4,5,6,7,16,17,5,6,7,4,5,6,7,11,4,5,6,7,4,5,6,7,4,5,6,7,9,16,17,5,6,7,12,14,14,15,15,9,10,8,11,9,3,8,10,12,7,2,13,1,11,11,12,0,12,12,9,3,8,5,6,6,11,11,4,5,6,7,16,17,5,6,7,8,4,5,6,7,9,10,13,16,17,5,6,7,7,4,5,6,7,16,17,7,16,17,7,16,17,5,6,7,3,16,17,5,6,7,4,5,6,7,9,13,5,5,6,6,4,7,16,17,5,6,7,16,17,5,6,7,16,17,5,6,7,4,5,6,7,16,17,5,6,7,16,17,5,6,7,16,17,5,6,7,1,12,7,13,1,11,9,3,8,10,12,7,2,13,1,11,9,3,8,10,12,7,2,13,1,11,9,3,8,10,12,7,2,13,1,11,12,18,19,20,21,22,23,24,0,0,0,25,24,25,25,26,26,26,25,26,26,26,25,26,26,26,24,0,0,0,27,28,28,27,28,27,28,27,28,27,28,28,27,27,28,28,28,27,28,27,28,28,27,27,28,27,28,27,28,29,30,29,31,31,32,29,31,31,0,0,33,32,32,32,32,29,29,29,29,29,29,29,29,29,31,31,31,29,32,34,31,33,33,0,29,32,0,31,31,0,30,29,29,32,31,29,29,29,35,0,0,31,29,30,31,30,29,31,29,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,31,31,31,0,30,0,0,0,0,36,32,32,32,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,37,30,35,31,36,34,33,38,30,35,31,36,34,33,30,35,31,36,34,33,30,35,31,36,34,33,30,35,31,36,34,33,30,35,31,36,34,33,30,35,31,36,34,33,30,35,31,36,34,33,39,40,29,32,30,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,39,40,29,32,30,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,49,29,32,30,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,29,32,30,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,29,32,30,35,31,36,34,33,30,35,31,36,34,33,30,35,31,36,34,33,50,37,41,42,43,44,45,46,38,47,48,33,49,50,37,39,40,39,40,38,30,35,31,36,34,33,30,35,31,36,34,33,29,32,30,41,35,31,36,34,33,30,35,31,36,34,33,49,39,40,38,47,49,37,29,32,30,30,30,30,30,41,35,35,35,35,35,31,31,31,31,31,36,36,36,36,36,34,34,34,34,34,33,33,33,33,33,40,39,40,29,32,30,41,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,30,35,31,36,34,33,30,35,31,36,34,33,30,35,31,36,34,33,38,30,35,31,36,34,33,41,41,41,44,45,30,35,31,36,34,33,37,46,38,50,37,30,35,31,36,34,33,30,35,31,36,34,33,30,35,31,36,34,33,39,40,29,32,30,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,30,35,31,36,34,33,30,35,31,36,34,33,41,41,41,51,52,29,32,41,43,44,45,38,47,48,49,37,39,49,37,38,44,45,44,45,48,48,30,35,31,36,34,33,39,40,41,42,43,44,45,46,38,47,48,50,37,50,37,30,35,31,36,34,33,46,37,48,43,47,40,40,40,43,29,32,30,35,31,36,34,33,48,30,35,31,36,34,33,30,35,31,36,34,33,41,41,41,41,41,47,30,35,31,36,34,33,30,35,31,36,34,33,30,35,31,36,34,33,29,32,30,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,30,35,31,36,34,33,39,40,29,32,30,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,39,40,29,32,30,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,39,40,29,32,30,41,35,31,42,43,44,45,46,36,38,34,47,48,33,49,50,37,30,35,31,36,34,33,38,39,40,40,44,45,42,39,40],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",6,["option"]],["option",4,["slavereqhandler"]]]],[[["vhostusermemoryregioninfo",3]],["result",6]],[[["vhostusersinglememoryregion",3],["file",3]],["result",6]],[[["vhostusersinglememoryregion",3],["file",3]],["result",6]],[[["vhostusermemoryregioninfo",3]],["result",6]],[[]],[[],["rawdescriptor",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vhostusermemoryregioninfo",3]],[[],["master",3]],[[],["slavefscachereq",3]],[[]],[[]],[[]],[[["str",15],["arc",3]],["result",6]],[[["asref",8,["path"]],["u64",15],["path",3]],["result",6]],null,[[],["vhostusermemoryregioninfo",3]],null,[[["protocol",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[["unixstream",3],["arc",3]]],[[["unixstream",3],["u64",15]]],[[["unixstream",3]]],[[["vhostuserfsslavemsg",3],["asrawfd",8]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3],["asrawfd",8]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3],["asrawfd",8]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3],["asrawfd",8]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3],["asrawfd",8]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3],["asrawfd",8]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3],["asrawfd",8]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3],["asrawfd",8]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3],["asrawfd",8]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3]],[["handlerresult",6,["u64"]],["u64",15]]],[[["vhostuserfsslavemsg",3]],[["handlerresult",6,["u64"]],["u64",15]]],[[["u32",15],["vhostuserconfigflags",3]],["result",6]],[[["u32",15],["vhostuserconfigflags",3]],[["vec",3,["u8"]],["result",6,["vec"]]]],[[["u32",15],["vhostuserconfigflags",3]],[["vec",3,["u8"]],["result",6,["vec"]]]],[[["u32",15],["vhostuserconfigflags",3]],["result",6]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[["vhostuserinflight",3]],["result",6]],[[["vhostuserinflight",3]],["result",6]],[[["vhostuserinflight",3]],["result",6]],[[["vhostuserinflight",3]],["result",6]],[[],["u64",15]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["vhostuserprotocolfeatures"]],["vhostuserprotocolfeatures",3]]],[[],[["result",6,["vhostuserprotocolfeatures"]],["vhostuserprotocolfeatures",3]]],[[],[["result",6,["vhostuserprotocolfeatures"]],["vhostuserprotocolfeatures",3]]],[[],[["result",6,["vhostuserprotocolfeatures"]],["vhostuserprotocolfeatures",3]]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],["rawfd",6]],[[["usize",15]],[["result",6,["u32"]],["u32",15]]],[[["usize",15]],[["result",6,["u32"]],["u32",15]]],[[["u32",15]],[["result",6,["vhostuservringstate"]],["vhostuservringstate",3]]],[[["u32",15]],[["result",6,["vhostuservringstate"]],["vhostuservringstate",3]]],[[["usize",15]],[["result",6,["u32"]],["u32",15]]],null,[[],[["handlerresult",6,["u64"]],["u64",15]]],[[],[["handlerresult",6,["u64"]],["u64",15]]],[[],[["handlerresult",6,["u64"]],["u64",15]]],[[],[["handlerresult",6,["u64"]],["u64",15]]],[[],[["result",6,["u64"]],["u64",15]]],[[],["result",6]],[[["vec",3,["file"]],["option",4,["vec"]]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,null,null,null,null,[[["arc",3]],["result",6]],[[["arc",3]],["result",6]],[[["protocol",4]]],[[],["protocol",4]],[[],["protocol",4]],[[],["protocol",4]],null,null,[[["vhostusermemoryregioninfo",3]],["result",6]],[[["vhostusersinglememoryregion",3]],["result",6]],[[["vhostusersinglememoryregion",3]],["result",6]],[[["vhostusermemoryregioninfo",3]],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["vhostusermsgheader",3],["bool",15]],["result",6]],[[["u32",15],["vhostuserconfigflags",3]],["result",6]],[[["u32",15],["vhostuserconfigflags",3]],["result",6]],[[["u32",15],["vhostuserconfigflags",3]],["result",6]],[[["u32",15],["vhostuserconfigflags",3]],["result",6]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],[[["vhostuserheaderflag",3]]],[[["vhostuserinflight",3],["rawfd",6]],["result",6]],[[["vhostuserinflight",3],["file",3]],["result",6]],[[["vhostuserinflight",3],["file",3]],["result",6]],[[["vhostuserinflight",3],["rawfd",6]],["result",6]],[[["u64",15],["option",4,["rawfd"]],["rawfd",6]],["result",6]],[[["u64",15],["option",4,["rawfd"]],["rawfd",6]],["result",6]],[[["u64",15],["option",4,["rawfd"]],["rawfd",6]],["result",6]],[[["rawfd",6]],["result",6]],[[["rawfd",6]],["result",6]],[[["rawfd",6]],["result",6]],[[],["result",6]],[[],["result",6]],[[["vec",3,["file"]],["file",3]],["result",6]],[[["vec",3,["file"]],["file",3]],["result",6]],[[],["result",6]],[[["bool",15]],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["vhostuserprotocolfeatures",3]],["result",6]],[[["u64",15]],["result",6]],[[["u64",15]],["result",6]],[[["vhostuserprotocolfeatures",3]],["result",6]],[[["bool",15]]],[[["bool",15]]],[[["file",3]]],[[["file",3]]],[[["file",3]]],[[["file",3]]],[[["asrawfd",8]],["result",6]],[[["asrawfd",8]],["result",6]],[[["usize",15],["vringconfigdata",3]],["result",6]],[[["usize",15],["vringconfigdata",3]],["result",6]],[[["u64",15],["u32",15],["vhostuservringaddrflags",3]],["result",6]],[[["u64",15],["u32",15],["vhostuservringaddrflags",3]],["result",6]],[[["usize",15],["vringconfigdata",3]],["result",6]],[[["usize",15],["u16",15]],["result",6]],[[["usize",15],["u16",15]],["result",6]],[[["u32",15]],["result",6]],[[["u32",15]],["result",6]],[[["usize",15],["u16",15]],["result",6]],[[["usize",15],["eventfd",3]],["result",6]],[[["usize",15],["eventfd",3]],["result",6]],[[["u8",15],["option",4,["file"]],["file",3]],["result",6]],[[["u8",15],["option",4,["file"]],["file",3]],["result",6]],[[["usize",15],["eventfd",3]],["result",6]],[[["usize",15],["bool",15]],["result",6]],[[["u32",15],["bool",15]],["result",6]],[[["u32",15],["bool",15]],["result",6]],[[["usize",15],["bool",15]],["result",6]],[[["usize",15],["eventfd",3]],["result",6]],[[["usize",15],["eventfd",3]],["result",6]],[[["u8",15],["option",4,["file"]],["file",3]],["result",6]],[[["u8",15],["option",4,["file"]],["file",3]],["result",6]],[[["usize",15],["eventfd",3]],["result",6]],[[["usize",15],["eventfd",3]],["result",6]],[[["usize",15],["eventfd",3]],["result",6]],[[["u8",15],["option",4,["file"]],["file",3]],["result",6]],[[["u8",15],["option",4,["file"]],["file",3]],["result",6]],[[["usize",15],["eventfd",3]],["result",6]],[[["usize",15],["u16",15]],["result",6]],[[["usize",15],["u16",15]],["result",6]],[[["u32",15]],["result",6]],[[["u32",15]],["result",6]],[[["usize",15],["u16",15]],["result",6]],[[],["bool",15]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",6,["option"]],["option",4]]],[[["asref",8,["path"]],["path",3]],["result",6]],[[]],[[],["result",6]],[[["usize",15]],[["vec",3,["u8"]],["result",6,["vec"]]]],[[],["result",6]],[[["bool",15]],["result",6]],[[],["result",6]],[[],["result",6]],[[["option",4],["vhostusermsgheader",3]],["result",6]],[[["option",4]],[["result",6,["usize"]],["usize",15]]],[[["option",4]],[["result",6,["usize"]],["usize",15]]],[[["option",4],["vhostusermsgheader",3]],["result",6]],[[["vhostusermsgheader",3],["option",4]],["result",6]],[[["bool",15]],["result",6]],null,null,null,[[],[["result",6,["option"]],["option",4]]],[[],["unixstream",3]],[[],["rawdescriptor",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[],[["vec",3,["i32","global"]],["i32",15],["global",3]]],[[]],[[]],[[]],[[]],[[["asref",8,["path"]],["path",3]],["result",6]],[[]],[[]],[[["unixstream",3]]],[[]],[[]],[[]],[[]],[[["asref",8,["path"]],["path",3],["bool",15]],["result",6]],[[["bool",15]],["result",6]],[[["option",4]],[["result",6,["usize"]],["usize",15]]],[[["bool",15]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vhostuserheaderflag",3]]],[[["vhostuservirtiofeatures",3]]],[[["vhostuserprotocolfeatures",3]]],[[["vhostuservringaddrflags",3]]],[[["vhostuserconfigflags",3]]],[[["vhostuserfsslavemsgflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["masterreq",4]],[[],["slavereq",4]],[[],["vhostuserheaderflag",3]],[[],["vhostusermsgheader",3]],[[],["vhostuservirtiofeatures",3]],[[],["vhostuserprotocolfeatures",3]],[[],["vhostuseru64",3]],[[],["vhostusermemory",3]],[[],["vhostusermemoryregion",3]],[[],["vhostusersinglememoryregion",3]],[[],["vhostuservringstate",3]],[[],["vhostuservringaddrflags",3]],[[],["vhostuservringaddr",3]],[[],["vhostuserconfigflags",3]],[[],["vhostuserconfig",3]],[[],["vhostuserinflight",3]],[[],["vhostuserfsslavemsgflags",3]],[[],["vhostuserfsslavemsg",3]],[[],["descstatesplit",3]],[[],["descstatepacked",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["masterreq",4]],["ordering",4]],[[["slavereq",4]],["ordering",4]],[[["vhostuserheaderflag",3]],["ordering",4]],[[["vhostuservirtiofeatures",3]],["ordering",4]],[[["vhostuserprotocolfeatures",3]],["ordering",4]],[[["vhostuservringaddrflags",3]],["ordering",4]],[[["vhostuserconfigflags",3]],["ordering",4]],[[["vhostuserfsslavemsgflags",3]],["ordering",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[]],[[],["vhostuseru64",3]],[[],["vhostusermemory",3]],[[],["vhostusermemoryregion",3]],[[],["vhostusersinglememoryregion",3]],[[],["vhostuservringstate",3]],[[],["vhostuservringaddr",3]],[[],["vhostuserconfig",3]],[[],["vhostuserinflight",3]],[[],["vhostuserfsslavemsgflags",3]],[[],["vhostuserfsslavemsg",3]],[[],["descstatesplit",3]],[[],["descstatepacked",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["masterreq",4]],["bool",15]],[[["slavereq",4]],["bool",15]],[[["vhostuserheaderflag",3]],["bool",15]],[[],["bool",15]],[[["vhostuservirtiofeatures",3]],["bool",15]],[[["vhostuserprotocolfeatures",3]],["bool",15]],[[["vhostuservringaddrflags",3]],["bool",15]],[[["vhostuserconfigflags",3]],["bool",15]],[[["vhostuserfsslavemsgflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u32",15],["vringconfigdata",3]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[],["u32",15]],[[],["u32",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["vhostusermsgheader",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[["vhostuserheaderflag",3]],["bool",15]],[[["vhostuservirtiofeatures",3]],["bool",15]],[[["vhostuserprotocolfeatures",3]],["bool",15]],[[["vhostuservringaddrflags",3]],["bool",15]],[[["vhostuserconfigflags",3]],["bool",15]],[[["vhostuserfsslavemsgflags",3]],["bool",15]],[[["u64",15],["u16",15]]],[[["u64",15],["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["u64",15],["u32",15],["vhostuservringaddrflags",3]]],[[["u32",15],["vhostuserconfigflags",3]]],[[["u64",15],["u16",15]]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["masterreq",4]],[["option",4,["ordering"]],["ordering",4]]],[[["slavereq",4]],[["option",4,["ordering"]],["ordering",4]]],[[["vhostuserheaderflag",3]],[["option",4,["ordering"]],["ordering",4]]],[[["vhostuservirtiofeatures",3]],[["option",4,["ordering"]],["ordering",4]]],[[["vhostuserprotocolfeatures",3]],[["option",4,["ordering"]],["ordering",4]]],[[["vhostuservringaddrflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["vhostuserconfigflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["vhostuserfsslavemsgflags",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[["bool",15]]],[[["bool",15]]],[[["u32",15]]],[[["u32",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null],"p":[[4,"Error"],[4,"Protocol"],[3,"SlaveListener"],[8,"VhostUserMaster"],[8,"VhostUserSlaveReqHandler"],[8,"VhostUserSlaveReqHandlerMut"],[3,"Master"],[3,"SlaveReqHelper"],[3,"MasterReqHandler"],[3,"SlaveReqHandler"],[3,"VringConfigData"],[3,"VhostUserMemoryRegionInfo"],[3,"SlaveFsCacheReq"],[8,"VhostUserMasterReqHandler"],[8,"VhostUserMasterReqHandlerMut"],[8,"VhostBackend"],[8,"VhostBackendMut"],[13,"ReqHandlerError"],[13,"SocketBroken"],[13,"SocketConnect"],[13,"SocketError"],[13,"SocketRetry"],[13,"VfioDeviceError"],[8,"Listener"],[8,"Endpoint"],[8,"EndpointExt"],[3,"Listener"],[3,"Endpoint"],[4,"MasterReq"],[3,"VhostUserHeaderFlag"],[3,"VhostUserProtocolFeatures"],[4,"SlaveReq"],[3,"VhostUserFSSlaveMsgFlags"],[3,"VhostUserConfigFlags"],[3,"VhostUserVirtioFeatures"],[3,"VhostUserVringAddrFlags"],[3,"DescStatePacked"],[3,"VhostUserVringAddr"],[3,"QueueRegionSplit"],[3,"QueueRegionPacked"],[3,"VhostUserMsgHeader"],[3,"VhostUserU64"],[3,"VhostUserMemory"],[3,"VhostUserMemoryRegion"],[3,"VhostUserSingleMemoryRegion"],[3,"VhostUserVringState"],[3,"VhostUserConfig"],[3,"VhostUserInflight"],[3,"VhostUserFSSlaveMsg"],[3,"DescStateSplit"],[8,"Req"],[8,"VhostUserMsgValidator"]]},\
"wire_format_derive":{"doc":"Derives a 9P wire format encoding for a struct by …","t":[24],"n":["P9WireFormat"],"q":["wire_format_derive"],"d":["The function that derives the actual implementation."],"i":[0],"f":[null],"p":[]},\
"x86_64":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,17,17,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AllocateIOResouce","AllocateIrq","CloneEvent","CloneIrqChip","Cmdline","ConfigurePciDevice","ConfigureSystem","CreateAcpi","CreateBatDevices","CreateEvent","CreateFdt","CreateIoapicDevice","CreatePciRoot","CreatePit","CreatePitDevice","CreateSerialDevices","CreateSocket","CreateVcpu","E820Configuration","EnableSinglestep","EnableSplitIrqchip","Error","GetSerialCmdline","KernelOffsetPastEnd","LoadBios","LoadBzImage","LoadCmdline","LoadInitrd","LoadKernel","PageNotPresent","Pstore","ReadRegs","ReadingGuestMemory","RegisterIrqfd","RegisterVsock","Result","SetHwBreakpoint","SetLint","SetTssAddr","SetupCpuid","SetupFpu","SetupGuestMemory","SetupMptable","SetupMsrs","SetupRegs","SetupSmbios","SetupSregs","TranslatingVirtAddr","UnsupportedProtectionType","WriteRegs","WritingGuestMemory","X8664arch","X86_64_IRQ_BASE","X86_64_SCI_IRQ","ZeroPagePastRamEnd","ZeroPageSetup","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build_vm","configure_vcpu","create_system_allocator","debug_enable_singlestep","debug_read_memory","debug_read_registers","debug_set_hw_breakpoints","debug_write_memory","debug_write_registers","fmt","fmt","from","from","guest_memory_layout","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","register_pci_device","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["x86_64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::Error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,2,1,2,1,2,1,2,1,2,2,2,2,2,2,2,2,2,1,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["option",4,["minijail"]],["option",4,["ramoopsregion"]],["ramoopsregion",3],["vmcomponents",3],["systemallocator",3],["event",3],["minijail",3],["btreemap",3],["vec",3],["irqchipx86_64",8],["vec",3]],[["runnablelinuxvm",3],["result",4,["runnablelinuxvm"]]]],[[["vcpux86_64",8],["hypervisorx86_64",8],["usize",15],["bool",15],["irqchipx86_64",8]],["result",6]],[[],["systemallocator",3]],[[],["result",6]],[[["usize",15],["guestmemory",3],["guestaddress",3]],[["result",6,["vec"]],["vec",3,["u8"]]]],[[],[["x86_64coreregs",3],["result",6,["x86_64coreregs"]]]],[[],["result",6]],[[["guestmemory",3],["guestaddress",3]],["result",6]],[[["x86_64coreregs",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["vmcomponents",3]],[["vec",3],["result",4,["vec"]]]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["box",3,["global"]],["global",3]],[["global",3],["box",3,["any","global"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["runnablelinuxvm",3],["box",3,["pcidevice"]],["option",4,["minijail"]],["pcidevice",8],["systemallocator",3],["minijail",3]],[["pciaddress",3],["result",6,["pciaddress"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Error"],[3,"X8664arch"],[13,"AllocateIOResouce"],[13,"CloneEvent"],[13,"CloneIrqChip"],[13,"Cmdline"],[13,"ConfigurePciDevice"],[13,"CreateBatDevices"],[13,"CreateEvent"],[13,"CreateFdt"],[13,"CreateIoapicDevice"],[13,"CreatePciRoot"],[13,"CreatePit"],[13,"CreatePitDevice"],[13,"CreateSerialDevices"],[13,"CreateSocket"],[13,"CreateVcpu"],[13,"EnableSinglestep"],[13,"EnableSplitIrqchip"],[13,"GetSerialCmdline"],[13,"LoadBios"],[13,"LoadBzImage"],[13,"LoadCmdline"],[13,"LoadInitrd"],[13,"LoadKernel"],[13,"Pstore"],[13,"ReadingGuestMemory"],[13,"ReadRegs"],[13,"RegisterIrqfd"],[13,"RegisterVsock"],[13,"SetHwBreakpoint"],[13,"SetLint"],[13,"SetTssAddr"],[13,"SetupCpuid"],[13,"SetupFpu"],[13,"SetupGuestMemory"],[13,"SetupMptable"],[13,"SetupMsrs"],[13,"SetupRegs"],[13,"SetupSmbios"],[13,"SetupSregs"],[13,"WriteRegs"],[13,"WritingGuestMemory"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};