# Disable clippy lints project-wide.
# This allows ./tools/clippy and IDE integrations to use the same configuration.
# This should be replaced with a proper clippy config once available:
# https://github.com/rust-lang/cargo/issues/5034
[target.'cfg(all())']
rustflags = [
    # TODO(b/181763000): Fail builds on warnings
    # "-Dwarnings",

    # TODO(crbug/908640): To be resolved.
    "-Aclippy::needless_return",
    "-Aclippy::needless_doctest_main",
    "-Aclippy::blocks_in_if_conditions",
    "-Aclippy::missing_safety_doc", # 26 errors

    # We don't care about these lints. Okay to remain suppressed globally.
    "-Aclippy::bool_assert_comparison",
    "-Aclippy::cast_lossless",
    "-Aclippy::cognitive_complexity",
    "-Aclippy::collapsible_if",
    "-Aclippy::enum_variant_names",
    "-Aclippy::identity_op",
    "-Aclippy::len_without_is_empty",
    "-Aclippy::len_zero",
    "-Aclippy::match_bool",
    "-Aclippy::match_wild_err_arm",
    "-Aclippy::module_inception",
    "-Aclippy::needless_bool",
    "-Aclippy::new_without_default",
    "-Aclippy::new-ret-no-self",
    "-Aclippy::or_fun_call",
    "-Aclippy::result-unit-err",
    "-Aclippy::should_implement_trait",
    "-Aclippy::single_char_pattern",
    "-Aclippy::too_many_arguments",
    "-Aclippy::trivially_copy_pass_by_ref",
    "-Aclippy::type_complexity",
    "-Aclippy::unreadable_literal",
    "-Aclippy::useless_let_if_seq",
    "-Aclippy::useless_transmute",
]

[target.armv7-unknown-linux-gnueabihf]
linker = "arm-linux-gnueabihf-gcc"

[target.aarch64-unknown-linux-gnu]
linker = "aarch64-linux-gnu-gcc"

[target.riscv64gc-unknown-linux-gnu]
linker = "riscv64-linux-gnu-gcc"

[target.x86_64-pc-windows-gnu]
runner = "wine64"

[env]
PKG_CONFIG_SYSROOT_DIR_armv7-unknown-linux-gnueabihf = "/usr/arm-linux-gnueabihf"
PKG_CONFIG_SYSROOT_DIR_aarch64-unknown-linux-gnu = "/usr/aarch64_linux_gnu"
PKG_CONFIG_SYSROOT_DIR_x86_64-pc-windows-gnu = "/usr/x86_64-w64-mingw32"
